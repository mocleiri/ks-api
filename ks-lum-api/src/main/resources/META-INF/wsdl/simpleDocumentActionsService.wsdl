<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="simpleDocumentActionsService" targetNamespace="RICE" xmlns:ns1="http://cxf.apache.org/bindings/xformat" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="RICE" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
<xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://webservice.kew.rice.kuali.org" xmlns:tns="http://webservice.kew.rice.kuali.org" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
<xsd:complexType name="NoteResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="author" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="errorMessage" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="noteId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="noteText" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="timestamp" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="DocumentResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="actionRequested" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="appDocId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="createDate" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docContent" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docStatus" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="errorMessage" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="initiatorName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="initiatorPrincipalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="notes" nillable="true" type="tns:ArrayOfNoteDetail"/>
<xsd:element minOccurs="0" name="routedByPrincipalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="routedByUserName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="title" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ErrorResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="errorMessage" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="UserInRouteLogResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="errorMessage" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="isUserInRouteLog" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfNoteDetail">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="NoteDetail" nillable="true" type="tns:NoteDetail"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="StandardResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="appDocId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="createDate" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docStatus" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="errorMessage" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="initiatorName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="initiatorPrincipalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="routedByPrincipalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="routedByUserName" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="NoteDetail">
<xsd:sequence>
<xsd:element minOccurs="0" name="author" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="id" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="noteText" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="timestamp" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
</xsd:schema>
<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="RICE" xmlns:ns0="http://webservice.kew.rice.kuali.org" xmlns:tns="RICE" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
<xsd:import namespace="http://webservice.kew.rice.kuali.org"/>
<xsd:element name="requestAdHocFyiToPrincipal" type="tns:requestAdHocFyiToPrincipal"/>
<xsd:complexType name="requestAdHocFyiToPrincipal">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg3" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="requestAdHocFyiToPrincipalResponse" type="tns:requestAdHocFyiToPrincipalResponse"/>
<xsd:complexType name="requestAdHocFyiToPrincipalResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="requestAdHocFyiToGroup" type="tns:requestAdHocFyiToGroup"/>
<xsd:complexType name="requestAdHocFyiToGroup">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg3" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="requestAdHocFyiToGroupResponse" type="tns:requestAdHocFyiToGroupResponse"/>
<xsd:complexType name="requestAdHocFyiToGroupResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="updateNote" type="tns:updateNote"/>
<xsd:complexType name="updateNote">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg3" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="updateNoteResponse" type="tns:updateNoteResponse"/>
<xsd:complexType name="updateNoteResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:NoteResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="requestAdHocAckToGroup" type="tns:requestAdHocAckToGroup"/>
<xsd:complexType name="requestAdHocAckToGroup">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg3" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="requestAdHocAckToGroupResponse" type="tns:requestAdHocAckToGroupResponse"/>
<xsd:complexType name="requestAdHocAckToGroupResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="save" type="tns:save"/>
<xsd:complexType name="save">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg3" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="saveResponse" type="tns:saveResponse"/>
<xsd:complexType name="saveResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="returnToPreviousNode" type="tns:returnToPreviousNode"/>
<xsd:complexType name="returnToPreviousNode">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg3" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="returnToPreviousNodeResponse" type="tns:returnToPreviousNodeResponse"/>
<xsd:complexType name="returnToPreviousNodeResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="cancel" type="tns:cancel"/>
<xsd:complexType name="cancel">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="cancelResponse" type="tns:cancelResponse"/>
<xsd:complexType name="cancelResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="addNote" type="tns:addNote"/>
<xsd:complexType name="addNote">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="addNoteResponse" type="tns:addNoteResponse"/>
<xsd:complexType name="addNoteResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:NoteResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="approve" type="tns:approve"/>
<xsd:complexType name="approve">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg3" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg4" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="approveResponse" type="tns:approveResponse"/>
<xsd:complexType name="approveResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="requestAdHocAckToPrincipal" type="tns:requestAdHocAckToPrincipal"/>
<xsd:complexType name="requestAdHocAckToPrincipal">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg3" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="requestAdHocAckToPrincipalResponse" type="tns:requestAdHocAckToPrincipalResponse"/>
<xsd:complexType name="requestAdHocAckToPrincipalResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="route" type="tns:route"/>
<xsd:complexType name="route">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg3" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg4" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="routeResponse" type="tns:routeResponse"/>
<xsd:complexType name="routeResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="disapprove" type="tns:disapprove"/>
<xsd:complexType name="disapprove">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="disapproveResponse" type="tns:disapproveResponse"/>
<xsd:complexType name="disapproveResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="requestAdHocApproveToGroup" type="tns:requestAdHocApproveToGroup"/>
<xsd:complexType name="requestAdHocApproveToGroup">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg3" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="requestAdHocApproveToGroupResponse" type="tns:requestAdHocApproveToGroupResponse"/>
<xsd:complexType name="requestAdHocApproveToGroupResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="create" type="tns:create"/>
<xsd:complexType name="create">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg3" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="createResponse" type="tns:createResponse"/>
<xsd:complexType name="createResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:DocumentResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="blanketApprove" type="tns:blanketApprove"/>
<xsd:complexType name="blanketApprove">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg3" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg4" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="blanketApproveResponse" type="tns:blanketApproveResponse"/>
<xsd:complexType name="blanketApproveResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="requestAdHocApproveToPrincipal" type="tns:requestAdHocApproveToPrincipal"/>
<xsd:complexType name="requestAdHocApproveToPrincipal">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg3" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="requestAdHocApproveToPrincipalResponse" type="tns:requestAdHocApproveToPrincipalResponse"/>
<xsd:complexType name="requestAdHocApproveToPrincipalResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocument" type="tns:getDocument"/>
<xsd:complexType name="getDocument">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentResponse" type="tns:getDocumentResponse"/>
<xsd:complexType name="getDocumentResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:DocumentResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isUserInRouteLog" type="tns:isUserInRouteLog"/>
<xsd:complexType name="isUserInRouteLog">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isUserInRouteLogResponse" type="tns:isUserInRouteLogResponse"/>
<xsd:complexType name="isUserInRouteLogResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:UserInRouteLogResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="fyi" type="tns:fyi"/>
<xsd:complexType name="fyi">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="fyiResponse" type="tns:fyiResponse"/>
<xsd:complexType name="fyiResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="deleteNote" type="tns:deleteNote"/>
<xsd:complexType name="deleteNote">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="deleteNoteResponse" type="tns:deleteNoteResponse"/>
<xsd:complexType name="deleteNoteResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:ErrorResponse"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="acknowledge" type="tns:acknowledge"/>
<xsd:complexType name="acknowledge">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="acknowledgeResponse" type="tns:acknowledgeResponse"/>
<xsd:complexType name="acknowledgeResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:StandardResponse"/>
</xsd:sequence>
</xsd:complexType>
</xsd:schema>
  </wsdl:types>
  <wsdl:message name="deleteNote">
    <wsdl:part element="tns:deleteNote" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="approveResponse">
    <wsdl:part element="tns:approveResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelResponse">
    <wsdl:part element="tns:cancelResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserInRouteLogResponse">
    <wsdl:part element="tns:isUserInRouteLogResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestAdHocFyiToGroup">
    <wsdl:part element="tns:requestAdHocFyiToGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="saveResponse">
    <wsdl:part element="tns:saveResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserInRouteLog">
    <wsdl:part element="tns:isUserInRouteLog" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestAdHocAckToPrincipalResponse">
    <wsdl:part element="tns:requestAdHocAckToPrincipalResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateNoteResponse">
    <wsdl:part element="tns:updateNoteResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestAdHocAckToPrincipal">
    <wsdl:part element="tns:requestAdHocAckToPrincipal" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestAdHocApproveToGroup">
    <wsdl:part element="tns:requestAdHocApproveToGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestAdHocApproveToPrincipalResponse">
    <wsdl:part element="tns:requestAdHocApproveToPrincipalResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createResponse">
    <wsdl:part element="tns:createResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="acknowledge">
    <wsdl:part element="tns:acknowledge" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addNoteResponse">
    <wsdl:part element="tns:addNoteResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentResponse">
    <wsdl:part element="tns:getDocumentResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="returnToPreviousNode">
    <wsdl:part element="tns:returnToPreviousNode" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestAdHocApproveToPrincipal">
    <wsdl:part element="tns:requestAdHocApproveToPrincipal" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="routeResponse">
    <wsdl:part element="tns:routeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="save">
    <wsdl:part element="tns:save" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancel">
    <wsdl:part element="tns:cancel" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="blanketApprove">
    <wsdl:part element="tns:blanketApprove" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestAdHocApproveToGroupResponse">
    <wsdl:part element="tns:requestAdHocApproveToGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestAdHocAckToGroup">
    <wsdl:part element="tns:requestAdHocAckToGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocument">
    <wsdl:part element="tns:getDocument" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestAdHocAckToGroupResponse">
    <wsdl:part element="tns:requestAdHocAckToGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestAdHocFyiToPrincipalResponse">
    <wsdl:part element="tns:requestAdHocFyiToPrincipalResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="disapproveResponse">
    <wsdl:part element="tns:disapproveResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="route">
    <wsdl:part element="tns:route" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestAdHocFyiToGroupResponse">
    <wsdl:part element="tns:requestAdHocFyiToGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="approve">
    <wsdl:part element="tns:approve" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fyiResponse">
    <wsdl:part element="tns:fyiResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateNote">
    <wsdl:part element="tns:updateNote" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="disapprove">
    <wsdl:part element="tns:disapprove" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteNoteResponse">
    <wsdl:part element="tns:deleteNoteResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestAdHocFyiToPrincipal">
    <wsdl:part element="tns:requestAdHocFyiToPrincipal" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fyi">
    <wsdl:part element="tns:fyi" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="blanketApproveResponse">
    <wsdl:part element="tns:blanketApproveResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="returnToPreviousNodeResponse">
    <wsdl:part element="tns:returnToPreviousNodeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="acknowledgeResponse">
    <wsdl:part element="tns:acknowledgeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="create">
    <wsdl:part element="tns:create" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addNote">
    <wsdl:part element="tns:addNote" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="SimpleDocumentActionsWebServicePortType">
    <wsdl:operation name="requestAdHocFyiToPrincipal">
      <wsdl:input message="tns:requestAdHocFyiToPrincipal" name="requestAdHocFyiToPrincipal">
    </wsdl:input>
      <wsdl:output message="tns:requestAdHocFyiToPrincipalResponse" name="requestAdHocFyiToPrincipalResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="requestAdHocFyiToGroup">
      <wsdl:input message="tns:requestAdHocFyiToGroup" name="requestAdHocFyiToGroup">
    </wsdl:input>
      <wsdl:output message="tns:requestAdHocFyiToGroupResponse" name="requestAdHocFyiToGroupResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateNote">
      <wsdl:input message="tns:updateNote" name="updateNote">
    </wsdl:input>
      <wsdl:output message="tns:updateNoteResponse" name="updateNoteResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="requestAdHocAckToGroup">
      <wsdl:input message="tns:requestAdHocAckToGroup" name="requestAdHocAckToGroup">
    </wsdl:input>
      <wsdl:output message="tns:requestAdHocAckToGroupResponse" name="requestAdHocAckToGroupResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="save">
      <wsdl:input message="tns:save" name="save">
    </wsdl:input>
      <wsdl:output message="tns:saveResponse" name="saveResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="returnToPreviousNode">
      <wsdl:input message="tns:returnToPreviousNode" name="returnToPreviousNode">
    </wsdl:input>
      <wsdl:output message="tns:returnToPreviousNodeResponse" name="returnToPreviousNodeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="cancel">
      <wsdl:input message="tns:cancel" name="cancel">
    </wsdl:input>
      <wsdl:output message="tns:cancelResponse" name="cancelResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addNote">
      <wsdl:input message="tns:addNote" name="addNote">
    </wsdl:input>
      <wsdl:output message="tns:addNoteResponse" name="addNoteResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="approve">
      <wsdl:input message="tns:approve" name="approve">
    </wsdl:input>
      <wsdl:output message="tns:approveResponse" name="approveResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="requestAdHocAckToPrincipal">
      <wsdl:input message="tns:requestAdHocAckToPrincipal" name="requestAdHocAckToPrincipal">
    </wsdl:input>
      <wsdl:output message="tns:requestAdHocAckToPrincipalResponse" name="requestAdHocAckToPrincipalResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="route">
      <wsdl:input message="tns:route" name="route">
    </wsdl:input>
      <wsdl:output message="tns:routeResponse" name="routeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="disapprove">
      <wsdl:input message="tns:disapprove" name="disapprove">
    </wsdl:input>
      <wsdl:output message="tns:disapproveResponse" name="disapproveResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="requestAdHocApproveToGroup">
      <wsdl:input message="tns:requestAdHocApproveToGroup" name="requestAdHocApproveToGroup">
    </wsdl:input>
      <wsdl:output message="tns:requestAdHocApproveToGroupResponse" name="requestAdHocApproveToGroupResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="create">
      <wsdl:input message="tns:create" name="create">
    </wsdl:input>
      <wsdl:output message="tns:createResponse" name="createResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="blanketApprove">
      <wsdl:input message="tns:blanketApprove" name="blanketApprove">
    </wsdl:input>
      <wsdl:output message="tns:blanketApproveResponse" name="blanketApproveResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="requestAdHocApproveToPrincipal">
      <wsdl:input message="tns:requestAdHocApproveToPrincipal" name="requestAdHocApproveToPrincipal">
    </wsdl:input>
      <wsdl:output message="tns:requestAdHocApproveToPrincipalResponse" name="requestAdHocApproveToPrincipalResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDocument">
      <wsdl:input message="tns:getDocument" name="getDocument">
    </wsdl:input>
      <wsdl:output message="tns:getDocumentResponse" name="getDocumentResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isUserInRouteLog">
      <wsdl:input message="tns:isUserInRouteLog" name="isUserInRouteLog">
    </wsdl:input>
      <wsdl:output message="tns:isUserInRouteLogResponse" name="isUserInRouteLogResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fyi">
      <wsdl:input message="tns:fyi" name="fyi">
    </wsdl:input>
      <wsdl:output message="tns:fyiResponse" name="fyiResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteNote">
      <wsdl:input message="tns:deleteNote" name="deleteNote">
    </wsdl:input>
      <wsdl:output message="tns:deleteNoteResponse" name="deleteNoteResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="acknowledge">
      <wsdl:input message="tns:acknowledge" name="acknowledge">
    </wsdl:input>
      <wsdl:output message="tns:acknowledgeResponse" name="acknowledgeResponse">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="simpleDocumentActionsServiceSoapBinding" type="tns:SimpleDocumentActionsWebServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="requestAdHocFyiToPrincipal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="requestAdHocFyiToPrincipal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="requestAdHocFyiToPrincipalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="requestAdHocFyiToGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="requestAdHocFyiToGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="requestAdHocFyiToGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateNote">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateNote">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateNoteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="requestAdHocAckToGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="requestAdHocAckToGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="requestAdHocAckToGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="cancel">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="cancel">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="cancelResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="returnToPreviousNode">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="returnToPreviousNode">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="returnToPreviousNodeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="save">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="save">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="saveResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addNote">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addNote">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addNoteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="approve">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="approve">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="approveResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="requestAdHocAckToPrincipal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="requestAdHocAckToPrincipal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="requestAdHocAckToPrincipalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="route">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="route">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="routeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="disapprove">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="disapprove">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="disapproveResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="requestAdHocApproveToGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="requestAdHocApproveToGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="requestAdHocApproveToGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="create">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="create">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="blanketApprove">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="blanketApprove">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="blanketApproveResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="requestAdHocApproveToPrincipal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="requestAdHocApproveToPrincipal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="requestAdHocApproveToPrincipalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fyi">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fyi">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fyiResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isUserInRouteLog">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isUserInRouteLog">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isUserInRouteLogResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="acknowledge">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="acknowledge">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="acknowledgeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteNote">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteNote">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteNoteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="simpleDocumentActionsService">
    <wsdl:port binding="tns:simpleDocumentActionsServiceSoapBinding" name="SimpleDocumentActionsWebServicePort">
      <soap:address location="http://localhost:8081/kr-dev/remoting/simpleDocumentActionsService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>