<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="WorkflowUtilityServiceSOAP" targetNamespace="RICE" xmlns:ns1="http://cxf.apache.org/bindings/xformat" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="RICE" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
<xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.kew.rice.kuali.org" xmlns:tns="http://exception.kew.rice.kuali.org" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
<xsd:complexType name="WorkflowException"/>
</xsd:schema>
<xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="RICE" xmlns:ns0="http://dto.kew.rice.kuali.org" xmlns:ns1="http://exception.kew.rice.kuali.org" xmlns:tns="RICE" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
<xsd:import namespace="http://dto.kew.rice.kuali.org"/>
<xsd:complexType name="ArrayOfString">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="string" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfLong">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="long" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfDecimal">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="decimal" nillable="true" type="xsd:decimal"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="anyType2anyTypeMap">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="entry">
<xsd:complexType>
<xsd:sequence>
<xsd:element minOccurs="0" name="key" type="xsd:anyType"/>
<xsd:element minOccurs="0" name="value" type="xsd:anyType"/>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfDateTime">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="dateTime" nillable="true" type="xsd:dateTime"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getPrincipalIdsInRouteLog" type="tns:getPrincipalIdsInRouteLog"/>
<xsd:complexType name="getPrincipalIdsInRouteLog">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
<xsd:element name="arg1" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getPrincipalIdsInRouteLogResponse" type="tns:getPrincipalIdsInRouteLogResponse"/>
<xsd:complexType name="getPrincipalIdsInRouteLogResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="tns:ArrayOfString"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getTerminalNodeInstances" type="tns:getTerminalNodeInstances"/>
<xsd:complexType name="getTerminalNodeInstances">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getTerminalNodeInstancesResponse" type="tns:getTerminalNodeInstancesResponse"/>
<xsd:complexType name="getTerminalNodeInstancesResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="ns0:ArrayOfRouteNodeInstanceDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getNodeInstance" type="tns:getNodeInstance"/>
<xsd:complexType name="getNodeInstance">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getNodeInstanceResponse" type="tns:getNodeInstanceResponse"/>
<xsd:complexType name="getNodeInstanceResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:RouteNodeInstanceDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="reResolveRole" type="tns:reResolveRole"/>
<xsd:complexType name="reResolveRole">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="reResolveRoleResponse" type="tns:reResolveRoleResponse"/>
<xsd:complexType name="reResolveRoleResponse">
<xsd:sequence/>
</xsd:complexType>
<xsd:element name="getActionsTaken" type="tns:getActionsTaken"/>
<xsd:complexType name="getActionsTaken">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getActionsTakenResponse" type="tns:getActionsTakenResponse"/>
<xsd:complexType name="getActionsTakenResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="ns0:ArrayOfActionTakenDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="performDocumentSearchWithPrincipal" type="tns:performDocumentSearchWithPrincipal"/>
<xsd:complexType name="performDocumentSearchWithPrincipal">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="ns0:criteriaVO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="performDocumentSearchWithPrincipalResponse" type="tns:performDocumentSearchWithPrincipalResponse"/>
<xsd:complexType name="performDocumentSearchWithPrincipalResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:DocumentSearchResultDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentRoutedByPrincipalId" type="tns:getDocumentRoutedByPrincipalId"/>
<xsd:complexType name="getDocumentRoutedByPrincipalId">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentRoutedByPrincipalIdResponse" type="tns:getDocumentRoutedByPrincipalIdResponse"/>
<xsd:complexType name="getDocumentRoutedByPrincipalIdResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getActionItemsForPrincipal" type="tns:getActionItemsForPrincipal"/>
<xsd:complexType name="getActionItemsForPrincipal">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getActionItemsForPrincipalResponse" type="tns:getActionItemsForPrincipalResponse"/>
<xsd:complexType name="getActionItemsForPrincipalResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="ns0:ArrayOfActionItemDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getFutureRequestsKey" type="tns:getFutureRequestsKey"/>
<xsd:complexType name="getFutureRequestsKey">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getFutureRequestsKeyResponse" type="tns:getFutureRequestsKeyResponse"/>
<xsd:complexType name="getFutureRequestsKeyResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="performDocumentSearch" type="tns:performDocumentSearch"/>
<xsd:complexType name="performDocumentSearch">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="ns0:criteriaVO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="performDocumentSearchResponse" type="tns:performDocumentSearchResponse"/>
<xsd:complexType name="performDocumentSearchResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:DocumentSearchResultDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentTypeByName" type="tns:getDocumentTypeByName"/>
<xsd:complexType name="getDocumentTypeByName">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentTypeByNameResponse" type="tns:getDocumentTypeByNameResponse"/>
<xsd:complexType name="getDocumentTypeByNameResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:DocumentTypeDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getAllActionRequests" type="tns:getAllActionRequests"/>
<xsd:complexType name="getAllActionRequests">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getAllActionRequestsResponse" type="tns:getAllActionRequestsResponse"/>
<xsd:complexType name="getAllActionRequestsResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="ns0:ArrayOfActionRequestDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getAllActionItems" type="tns:getAllActionItems"/>
<xsd:complexType name="getAllActionItems">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getAllActionItemsResponse" type="tns:getAllActionItemsResponse"/>
<xsd:complexType name="getAllActionItemsResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="ns0:ArrayOfActionItemDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getRouteHeaderWithPrincipal" type="tns:getRouteHeaderWithPrincipal"/>
<xsd:complexType name="getRouteHeaderWithPrincipal">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getRouteHeaderWithPrincipalResponse" type="tns:getRouteHeaderWithPrincipalResponse"/>
<xsd:complexType name="getRouteHeaderWithPrincipalResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:RouteHeaderDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentDetailFromAppId" type="tns:getDocumentDetailFromAppId"/>
<xsd:complexType name="getDocumentDetailFromAppId">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentDetailFromAppIdResponse" type="tns:getDocumentDetailFromAppIdResponse"/>
<xsd:complexType name="getDocumentDetailFromAppIdResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:DocumentDetailDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getActionsRequested" type="tns:getActionsRequested"/>
<xsd:complexType name="getActionsRequested">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getActionsRequestedResponse" type="tns:getActionsRequestedResponse"/>
<xsd:complexType name="getActionsRequestedResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="tns:anyType2anyTypeMap"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDoNotReceiveFutureRequestsValue" type="tns:getDoNotReceiveFutureRequestsValue"/>
<xsd:complexType name="getDoNotReceiveFutureRequestsValue">
<xsd:sequence/>
</xsd:complexType>
<xsd:element name="getDoNotReceiveFutureRequestsValueResponse" type="tns:getDoNotReceiveFutureRequestsValueResponse"/>
<xsd:complexType name="getDoNotReceiveFutureRequestsValueResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isLastApproverAtNode" type="tns:isLastApproverAtNode"/>
<xsd:complexType name="isLastApproverAtNode">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isLastApproverAtNodeResponse" type="tns:isLastApproverAtNodeResponse"/>
<xsd:complexType name="isLastApproverAtNodeResponse">
<xsd:sequence>
<xsd:element name="return" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentType" type="tns:getDocumentType"/>
<xsd:complexType name="getDocumentType">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentTypeResponse" type="tns:getDocumentTypeResponse"/>
<xsd:complexType name="getDocumentTypeResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:DocumentTypeDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getCurrentNodeInstances" type="tns:getCurrentNodeInstances"/>
<xsd:complexType name="getCurrentNodeInstances">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getCurrentNodeInstancesResponse" type="tns:getCurrentNodeInstancesResponse"/>
<xsd:complexType name="getCurrentNodeInstancesResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="ns0:ArrayOfRouteNodeInstanceDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="reResolveRoleByDocumentId" type="tns:reResolveRoleByDocumentId"/>
<xsd:complexType name="reResolveRoleByDocumentId">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="reResolveRoleByDocumentIdResponse" type="tns:reResolveRoleByDocumentIdResponse"/>
<xsd:complexType name="reResolveRoleByDocumentIdResponse">
<xsd:sequence/>
</xsd:complexType>
<xsd:element name="getActionRequests" type="tns:getActionRequests"/>
<xsd:complexType name="getActionRequests">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getActionRequestsResponse" type="tns:getActionRequestsResponse"/>
<xsd:complexType name="getActionRequestsResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="ns0:ArrayOfActionRequestDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isCurrentActiveDocumentType" type="tns:isCurrentActiveDocumentType"/>
<xsd:complexType name="isCurrentActiveDocumentType">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isCurrentActiveDocumentTypeResponse" type="tns:isCurrentActiveDocumentTypeResponse"/>
<xsd:complexType name="isCurrentActiveDocumentTypeResponse">
<xsd:sequence>
<xsd:element name="return" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocId" type="tns:getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocId"/>
<xsd:complexType name="getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocId">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocIdResponse" type="tns:getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocIdResponse"/>
<xsd:complexType name="getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocIdResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="tns:ArrayOfString"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentDetail" type="tns:getDocumentDetail"/>
<xsd:complexType name="getDocumentDetail">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentDetailResponse" type="tns:getDocumentDetailResponse"/>
<xsd:complexType name="getDocumentDetailResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:DocumentDetailDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getSearchableAttributeFloatValuesByKey" type="tns:getSearchableAttributeFloatValuesByKey"/>
<xsd:complexType name="getSearchableAttributeFloatValuesByKey">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getSearchableAttributeFloatValuesByKeyResponse" type="tns:getSearchableAttributeFloatValuesByKeyResponse"/>
<xsd:complexType name="getSearchableAttributeFloatValuesByKeyResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="tns:ArrayOfDecimal"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="hasRouteNode" type="tns:hasRouteNode"/>
<xsd:complexType name="hasRouteNode">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="hasRouteNodeResponse" type="tns:hasRouteNodeResponse"/>
<xsd:complexType name="hasRouteNodeResponse">
<xsd:sequence>
<xsd:element name="return" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="documentWillHaveAtLeastOneActionRequest" type="tns:documentWillHaveAtLeastOneActionRequest"/>
<xsd:complexType name="documentWillHaveAtLeastOneActionRequest">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="ns0:reportCriteriaDTO"/>
<xsd:element name="arg1" nillable="true" type="tns:ArrayOfString"/>
<xsd:element name="arg2" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="documentWillHaveAtLeastOneActionRequestResponse" type="tns:documentWillHaveAtLeastOneActionRequestResponse"/>
<xsd:complexType name="documentWillHaveAtLeastOneActionRequestResponse">
<xsd:sequence>
<xsd:element name="return" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getRouteHeader" type="tns:getRouteHeader"/>
<xsd:complexType name="getRouteHeader">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getRouteHeaderResponse" type="tns:getRouteHeaderResponse"/>
<xsd:complexType name="getRouteHeaderResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:RouteHeaderDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentContent" type="tns:getDocumentContent"/>
<xsd:complexType name="getDocumentContent">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentContentResponse" type="tns:getDocumentContentResponse"/>
<xsd:complexType name="getDocumentContentResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:DocumentContentDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentInitiatorPrincipalId" type="tns:getDocumentInitiatorPrincipalId"/>
<xsd:complexType name="getDocumentInitiatorPrincipalId">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentInitiatorPrincipalIdResponse" type="tns:getDocumentInitiatorPrincipalIdResponse"/>
<xsd:complexType name="getDocumentInitiatorPrincipalIdResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isFinalApprover" type="tns:isFinalApprover"/>
<xsd:complexType name="isFinalApprover">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isFinalApproverResponse" type="tns:isFinalApproverResponse"/>
<xsd:complexType name="isFinalApproverResponse">
<xsd:sequence>
<xsd:element name="return" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentStatus" type="tns:getDocumentStatus"/>
<xsd:complexType name="getDocumentStatus">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentStatusResponse" type="tns:getDocumentStatusResponse"/>
<xsd:complexType name="getDocumentStatusResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getActionItems" type="tns:getActionItems"/>
<xsd:complexType name="getActionItems">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
<xsd:element name="arg1" nillable="true" type="tns:ArrayOfString"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getActionItemsResponse" type="tns:getActionItemsResponse"/>
<xsd:complexType name="getActionItemsResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="ns0:ArrayOfActionItemDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="routingReport" type="tns:routingReport"/>
<xsd:complexType name="routingReport">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="ns0:reportCriteria"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="routingReportResponse" type="tns:routingReportResponse"/>
<xsd:complexType name="routingReportResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="ns0:DocumentDetailDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentRouteNodeInstances" type="tns:getDocumentRouteNodeInstances"/>
<xsd:complexType name="getDocumentRouteNodeInstances">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getDocumentRouteNodeInstancesResponse" type="tns:getDocumentRouteNodeInstancesResponse"/>
<xsd:complexType name="getDocumentRouteNodeInstancesResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="ns0:ArrayOfRouteNodeInstanceDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isSuperUserForDocumentType" type="tns:isSuperUserForDocumentType"/>
<xsd:complexType name="isSuperUserForDocumentType">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isSuperUserForDocumentTypeResponse" type="tns:isSuperUserForDocumentTypeResponse"/>
<xsd:complexType name="isSuperUserForDocumentTypeResponse">
<xsd:sequence>
<xsd:element name="return" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="routeLevelHasApproverActionRequest" type="tns:routeLevelHasApproverActionRequest"/>
<xsd:complexType name="routeLevelHasApproverActionRequest">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:int"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="routeLevelHasApproverActionRequestResponse" type="tns:routeLevelHasApproverActionRequestResponse"/>
<xsd:complexType name="routeLevelHasApproverActionRequestResponse">
<xsd:sequence>
<xsd:element name="return" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isUserInRouteLogWithOptionalFlattening" type="tns:isUserInRouteLogWithOptionalFlattening"/>
<xsd:complexType name="isUserInRouteLogWithOptionalFlattening">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element name="arg2" type="xsd:boolean"/>
<xsd:element name="arg3" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isUserInRouteLogWithOptionalFlatteningResponse" type="tns:isUserInRouteLogWithOptionalFlatteningResponse"/>
<xsd:complexType name="isUserInRouteLogWithOptionalFlatteningResponse">
<xsd:sequence>
<xsd:element name="return" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isLastApproverInRouteLevel" type="tns:isLastApproverInRouteLevel"/>
<xsd:complexType name="isLastApproverInRouteLevel">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:int"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isLastApproverInRouteLevelResponse" type="tns:isLastApproverInRouteLevelResponse"/>
<xsd:complexType name="isLastApproverInRouteLevelResponse">
<xsd:sequence>
<xsd:element name="return" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getClearFutureRequestsValue" type="tns:getClearFutureRequestsValue"/>
<xsd:complexType name="getClearFutureRequestsValue">
<xsd:sequence/>
</xsd:complexType>
<xsd:element name="getClearFutureRequestsValueResponse" type="tns:getClearFutureRequestsValueResponse"/>
<xsd:complexType name="getClearFutureRequestsValueResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getNewResponsibilityId" type="tns:getNewResponsibilityId"/>
<xsd:complexType name="getNewResponsibilityId">
<xsd:sequence/>
</xsd:complexType>
<xsd:element name="getNewResponsibilityIdResponse" type="tns:getNewResponsibilityIdResponse"/>
<xsd:complexType name="getNewResponsibilityIdResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getSearchableAttributeDateTimeValuesByKey" type="tns:getSearchableAttributeDateTimeValuesByKey"/>
<xsd:complexType name="getSearchableAttributeDateTimeValuesByKey">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getSearchableAttributeDateTimeValuesByKeyResponse" type="tns:getSearchableAttributeDateTimeValuesByKeyResponse"/>
<xsd:complexType name="getSearchableAttributeDateTimeValuesByKeyResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="tns:ArrayOfDateTime"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getReceiveFutureRequestsValue" type="tns:getReceiveFutureRequestsValue"/>
<xsd:complexType name="getReceiveFutureRequestsValue">
<xsd:sequence/>
</xsd:complexType>
<xsd:element name="getReceiveFutureRequestsValueResponse" type="tns:getReceiveFutureRequestsValueResponse"/>
<xsd:complexType name="getReceiveFutureRequestsValueResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="routeNodeHasApproverActionRequest" type="tns:routeNodeHasApproverActionRequest"/>
<xsd:complexType name="routeNodeHasApproverActionRequest">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="arg2" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="routeNodeHasApproverActionRequestResponse" type="tns:routeNodeHasApproverActionRequestResponse"/>
<xsd:complexType name="routeNodeHasApproverActionRequestResponse">
<xsd:sequence>
<xsd:element name="return" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isUserInRouteLog" type="tns:isUserInRouteLog"/>
<xsd:complexType name="isUserInRouteLog">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
<xsd:element name="arg2" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="isUserInRouteLogResponse" type="tns:isUserInRouteLogResponse"/>
<xsd:complexType name="isUserInRouteLogResponse">
<xsd:sequence>
<xsd:element name="return" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="validateWorkflowAttributeDefinitionVO" type="tns:validateWorkflowAttributeDefinitionVO"/>
<xsd:complexType name="validateWorkflowAttributeDefinitionVO">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="ns0:WorkflowAttributeDefinitionDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="validateWorkflowAttributeDefinitionVOResponse" type="tns:validateWorkflowAttributeDefinitionVOResponse"/>
<xsd:complexType name="validateWorkflowAttributeDefinitionVOResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="ns0:ArrayOfWorkflowAttributeValidationErrorDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getPreviousRouteNodeNames" type="tns:getPreviousRouteNodeNames"/>
<xsd:complexType name="getPreviousRouteNodeNames">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getPreviousRouteNodeNamesResponse" type="tns:getPreviousRouteNodeNamesResponse"/>
<xsd:complexType name="getPreviousRouteNodeNamesResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="tns:ArrayOfString"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="ruleReport" type="tns:ruleReport"/>
<xsd:complexType name="ruleReport">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="ns0:ruleReportCriteria"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="ruleReportResponse" type="tns:ruleReportResponse"/>
<xsd:complexType name="ruleReportResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="ns0:ArrayOfRuleDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getActiveNodeInstances" type="tns:getActiveNodeInstances"/>
<xsd:complexType name="getActiveNodeInstances">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getActiveNodeInstancesResponse" type="tns:getActiveNodeInstancesResponse"/>
<xsd:complexType name="getActiveNodeInstancesResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="ns0:ArrayOfRouteNodeInstanceDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getUserActionItemCount" type="tns:getUserActionItemCount"/>
<xsd:complexType name="getUserActionItemCount">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getUserActionItemCountResponse" type="tns:getUserActionItemCountResponse"/>
<xsd:complexType name="getUserActionItemCountResponse">
<xsd:sequence>
<xsd:element minOccurs="0" name="return" nillable="true" type="xsd:int"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getSearchableAttributeStringValuesByKey" type="tns:getSearchableAttributeStringValuesByKey"/>
<xsd:complexType name="getSearchableAttributeStringValuesByKey">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getSearchableAttributeStringValuesByKeyResponse" type="tns:getSearchableAttributeStringValuesByKeyResponse"/>
<xsd:complexType name="getSearchableAttributeStringValuesByKeyResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="tns:ArrayOfString"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getSearchableAttributeLongValuesByKey" type="tns:getSearchableAttributeLongValuesByKey"/>
<xsd:complexType name="getSearchableAttributeLongValuesByKey">
<xsd:sequence>
<xsd:element minOccurs="0" name="arg0" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="arg1" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="getSearchableAttributeLongValuesByKeyResponse" type="tns:getSearchableAttributeLongValuesByKeyResponse"/>
<xsd:complexType name="getSearchableAttributeLongValuesByKeyResponse">
<xsd:sequence>
<xsd:element name="return" nillable="true" type="tns:ArrayOfLong"/>
</xsd:sequence>
</xsd:complexType>
<xsd:element name="WorkflowException" nillable="true" type="ns1:WorkflowException"/>
</xsd:schema>
<xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.kew.rice.kuali.org" xmlns:ns1="RICE" xmlns:tns="http://dto.kew.rice.kuali.org" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
<xsd:import namespace="RICE"/>
<xsd:complexType name="ArrayOfNoteDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="NoteDTO" nillable="true" type="tns:NoteDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="StateDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="key" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="stateId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="userDisplayValue" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="value" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="RuleDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="activeInd" nillable="true" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTypeName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="forceAction" nillable="true" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="fromDate" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="ruleExtensions" nillable="true" type="tns:ArrayOfRuleExtensionDTO"/>
<xsd:element minOccurs="0" name="ruleResponsibilities" nillable="true" type="tns:ArrayOfRuleResponsibilityDTO"/>
<xsd:element minOccurs="0" name="ruleTemplateId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="ruleTemplateName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="toDate" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfKeyValueDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="KeyValueDTO" nillable="true" type="tns:KeyValueDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfActionRequestDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="ActionRequestDTO" nillable="true" type="tns:ActionRequestDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="KeyValueDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="key" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="userDisplayValue" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="value" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="WorkflowAttributeDefinitionDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="attributeName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="constructorParameters" nillable="true" type="ns1:ArrayOfString"/>
<xsd:element minOccurs="0" name="properties" nillable="true" type="tns:ArrayOfPropertyDefinitionDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfProcessDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="ProcessDTO" nillable="true" type="tns:ProcessDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfWorkflowAttributeDefinitionDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="WorkflowAttributeDefinitionDTO" nillable="true" type="tns:WorkflowAttributeDefinitionDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="NoteDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="lockVerNbr" nillable="true" type="xsd:int"/>
<xsd:element minOccurs="0" name="noteAuthorWorkflowId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="noteCreateDate" nillable="true" type="xsd:dateTime"/>
<xsd:element minOccurs="0" name="noteId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="noteText" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="routeHeaderId" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="RouteNodeDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="activationType" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="branchName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="documentTypeId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="exceptionGroupId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="finalApprovalInd" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="mandatoryRouteInd" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="nextNodeIds" nillable="true" type="ns1:ArrayOfLong"/>
<xsd:element minOccurs="0" name="nodeType" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="previousNodeIds" nillable="true" type="ns1:ArrayOfLong"/>
<xsd:element minOccurs="0" name="routeMethodCode" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="routeMethodName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="routeNodeId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="routeNodeName" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ActionItemDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="actionItemId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="actionItemIndex" nillable="true" type="xsd:int"/>
<xsd:element minOccurs="0" name="actionRequestCd" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="actionRequestId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="actionToTake" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="dateAssigned" nillable="true" type="xsd:dateTime"/>
<xsd:element minOccurs="0" name="dateAssignedString" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="delegationType" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="delegatorGroupId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="delegatorPrincipalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docHandlerURL" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docLabel" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTitle" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="groupId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="principalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="responsibilityId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="roleName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="routeHeaderId" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="DocumentContentDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="applicationContent" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="attributeContent" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="attributeDefinitions" nillable="true" type="tns:ArrayOfWorkflowAttributeDefinitionDTO"/>
<xsd:element minOccurs="0" name="fullContent" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="routeHeaderId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="searchableContent" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="searchableDefinitions" nillable="true" type="tns:ArrayOfWorkflowAttributeDefinitionDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfRuleDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="RuleDTO" nillable="true" type="tns:RuleDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ruleReportCriteria">
<xsd:sequence>
<xsd:element minOccurs="0" name="actionRequestCodes" nillable="true" type="ns1:ArrayOfString"/>
<xsd:element minOccurs="0" name="documentTypeName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="responsibleGroupId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="responsiblePrincipalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="responsibleRoleName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="ruleDescription" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="ruleExtensionVOs" nillable="true" type="tns:ArrayOfRuleExtensionDTO"/>
<xsd:element minOccurs="0" name="ruleTemplateName" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ValidActionsDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="validActionCodesAllowed" nillable="true" type="ns1:ArrayOfString"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="reportCriteria">
<xsd:sequence>
<xsd:element minOccurs="0" name="actionsToTake" nillable="true" type="tns:ArrayOfReportActionToTakeDTO"/>
<xsd:element minOccurs="0" name="activateRequests" nillable="true" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="documentTypeName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="flattenNodes" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="nodeNames" nillable="true" type="ns1:ArrayOfString"/>
<xsd:element minOccurs="0" name="routeHeaderId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="routingPrincipalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="ruleTemplateNames" nillable="true" type="ns1:ArrayOfString"/>
<xsd:element minOccurs="0" name="targetNodeName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="targetPrincipalIds" nillable="true" type="ns1:ArrayOfString"/>
<xsd:element minOccurs="0" name="xmlContent" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="DocumentDetailDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="ackRequested" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="actionRequests" nillable="true" type="tns:ArrayOfActionRequestDTO"/>
<xsd:element minOccurs="0" name="actionsTaken" nillable="true" type="tns:ArrayOfActionTakenDTO"/>
<xsd:element minOccurs="0" name="appDocId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="approveRequested" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="completeRequested" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="currentRouteNodeNames" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="dateApproved" nillable="true" type="xsd:dateTime"/>
<xsd:element minOccurs="0" name="dateCreated" nillable="true" type="xsd:dateTime"/>
<xsd:element minOccurs="0" name="dateFinalized" nillable="true" type="xsd:dateTime"/>
<xsd:element minOccurs="0" name="dateLastModified" nillable="true" type="xsd:dateTime"/>
<xsd:element minOccurs="0" name="docRouteLevel" nillable="true" type="xsd:int"/>
<xsd:element minOccurs="0" name="docRouteStatus" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTitle" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTypeId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="docTypeName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docVersion" nillable="true" type="xsd:int"/>
<xsd:element minOccurs="0" name="documentUrl" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="fyiRequested" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="initiatorPrincipalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="nodeInstances" nillable="true" type="tns:ArrayOfRouteNodeInstanceDTO"/>
<xsd:element minOccurs="0" name="notes" nillable="true" type="tns:ArrayOfNoteDTO"/>
<xsd:element minOccurs="0" name="notesToDelete" nillable="true" type="tns:ArrayOfNoteDTO"/>
<xsd:element minOccurs="0" name="routeHeaderId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="routedByPrincipalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="userBlanketApprover" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="validActions" nillable="true" type="tns:ValidActionsDTO"/>
<xsd:element minOccurs="0" name="variables" nillable="true" type="tns:ArrayOfKeyValueDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ActionTakenDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="actionDate" nillable="true" type="xsd:dateTime"/>
<xsd:element minOccurs="0" name="actionRequests" nillable="true" type="tns:ArrayOfActionRequestDTO"/>
<xsd:element minOccurs="0" name="actionTaken" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="actionTakenId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="annotation" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="delegatorGroupId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="delegatorPrincpalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docVersion" nillable="true" type="xsd:int"/>
<xsd:element minOccurs="0" name="principalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="routeHeaderId" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="criteriaVO">
<xsd:sequence>
<xsd:element minOccurs="0" name="advancedSearch" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="appDocId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="approver" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docRouteNodeLogic" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docRouteNodeName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docRouteStatus" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTitle" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTypeFullName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docVersion" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="fromDateApproved" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="fromDateCreated" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="fromDateFinalized" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="fromDateLastModified" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="groupViewerName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="initiator" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="routeHeaderId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="saveSearchForUser" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="searchAttributeValues" nillable="true" type="tns:ArrayOfKeyValueDTO"/>
<xsd:element minOccurs="0" name="superUserSearch" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="threshold" nillable="true" type="xsd:int"/>
<xsd:element minOccurs="0" name="toDateApproved" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="toDateCreated" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="toDateFinalized" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="toDateLastModified" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="viewer" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="RuleResponsibilityDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="actionRequestedCd" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="approvePolicy" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="delegationRules" nillable="true" type="tns:ArrayOfRuleDelegationDTO"/>
<xsd:element minOccurs="0" name="groupId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="principalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="priority" nillable="true" type="xsd:int"/>
<xsd:element minOccurs="0" name="responsibilityId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="roleName" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="reportCriteriaDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="actionsToTake" nillable="true" type="tns:ArrayOfReportActionToTakeDTO"/>
<xsd:element minOccurs="0" name="activateRequests" nillable="true" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="documentTypeName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="flattenNodes" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="nodeNames" nillable="true" type="ns1:ArrayOfString"/>
<xsd:element minOccurs="0" name="routeHeaderId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="routingPrincipalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="ruleTemplateNames" nillable="true" type="ns1:ArrayOfString"/>
<xsd:element minOccurs="0" name="targetNodeName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="targetPrincipalIds" nillable="true" type="ns1:ArrayOfString"/>
<xsd:element minOccurs="0" name="xmlContent" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfRuleDelegationDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="RuleDelegationDTO" nillable="true" type="tns:RuleDelegationDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfDocumentSearchResultRowDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="DocumentSearchResultRowDTO" nillable="true" type="tns:DocumentSearchResultRowDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="DocumentSearchResultRowDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="fieldValues" nillable="true" type="tns:ArrayOfKeyValueDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ReportActionToTakeDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="actionToPerform" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="nodeName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="principalId" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ProcessDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="initial" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="initialRouteNode" nillable="true" type="tns:RouteNodeDTO"/>
<xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="processId" nillable="true" type="xsd:long"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="DocumentTypeDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="blanketApproveGroupId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="blanketApprovePolicy" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="defaultApprovePolicy" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="docTypeActiveInd" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="docTypeActiveInherited" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="docTypeCurrentInd" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTypeDefaultApprovePolicy" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="docTypeDefaultApprovePolicyInherited" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="docTypeDescription" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTypeHandlerUrl" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTypeId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="docTypeJndiFactoryClass" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTypeJndiUrl" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTypeLabel" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTypeName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTypeParentId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="docTypeParentName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTypeVersion" nillable="true" type="xsd:int"/>
<xsd:element minOccurs="0" name="helpDefinitionUrl" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="postProcessorName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="routePath" nillable="true" type="tns:RoutePathDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfRuleExtensionDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="RuleExtensionDTO" nillable="true" type="tns:RuleExtensionDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfRouteNodeInstanceDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="RouteNodeInstanceDTO" nillable="true" type="tns:RouteNodeInstanceDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="RuleExtensionDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="key" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="value" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="RuleDelegationDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="delegationRule" nillable="true" type="tns:RuleDTO"/>
<xsd:element minOccurs="0" name="delegationType" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="RoutePathDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="primaryProcess" nillable="true" type="tns:ProcessDTO"/>
<xsd:element minOccurs="0" name="processes" nillable="true" type="tns:ArrayOfProcessDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfActionTakenDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="ActionTakenDTO" nillable="true" type="tns:ActionTakenDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="RouteNodeInstanceDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="active" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="branchId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="complete" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="documentId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="initial" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="nextNodes" nillable="true" type="tns:ArrayOfRouteNodeInstanceDTO"/>
<xsd:element minOccurs="0" name="processId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="routeNodeId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="routeNodeInstanceId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="state" nillable="true" type="tns:ArrayOfStateDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="PropertyDefinitionDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="value" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfStateDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="StateDTO" nillable="true" type="tns:StateDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfPropertyDefinitionDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="PropertyDefinitionDTO" nillable="true" type="tns:PropertyDefinitionDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="RouteHeaderDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="ackRequested" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="appDocId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="approveRequested" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="completeRequested" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="currentRouteNodeNames" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="dateApproved" nillable="true" type="xsd:dateTime"/>
<xsd:element minOccurs="0" name="dateCreated" nillable="true" type="xsd:dateTime"/>
<xsd:element minOccurs="0" name="dateFinalized" nillable="true" type="xsd:dateTime"/>
<xsd:element minOccurs="0" name="dateLastModified" nillable="true" type="xsd:dateTime"/>
<xsd:element minOccurs="0" name="docRouteLevel" nillable="true" type="xsd:int"/>
<xsd:element minOccurs="0" name="docRouteStatus" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTitle" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docTypeId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="docTypeName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docVersion" nillable="true" type="xsd:int"/>
<xsd:element minOccurs="0" name="documentUrl" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="fyiRequested" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="initiatorPrincipalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="notes" nillable="true" type="tns:ArrayOfNoteDTO"/>
<xsd:element minOccurs="0" name="notesToDelete" nillable="true" type="tns:ArrayOfNoteDTO"/>
<xsd:element minOccurs="0" name="routeHeaderId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="routedByPrincipalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="userBlanketApprover" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="validActions" nillable="true" type="tns:ValidActionsDTO"/>
<xsd:element minOccurs="0" name="variables" nillable="true" type="tns:ArrayOfKeyValueDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="WorkflowAttributeValidationErrorDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="key" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="message" nillable="true" type="xsd:string"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ActionRequestDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="acknowledgeRequest" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="actionRequestId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="actionRequested" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="actionTaken" nillable="true" type="tns:ActionTakenDTO"/>
<xsd:element minOccurs="0" name="actionTakenId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="activated" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="adHocRequest" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="annotation" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="approvalRequest" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="approvePolicy" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="childrenRequests" nillable="true" type="tns:ArrayOfActionRequestDTO"/>
<xsd:element minOccurs="0" name="completeRequest" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="currentIndicator" nillable="true" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="dateCreated" nillable="true" type="xsd:dateTime"/>
<xsd:element minOccurs="0" name="delegationType" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="docVersion" nillable="true" type="xsd:int"/>
<xsd:element minOccurs="0" name="done" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="exceptionRequest" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="forceAction" nillable="true" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="fyiRequest" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="generatedRequest" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="groupId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="groupRequest" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="initialized" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="nodeInstanceId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="nodeName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="notificationRequest" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="parentActionRequestId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="pending" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="principalId" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="priority" nillable="true" type="xsd:int"/>
<xsd:element minOccurs="0" name="qualifiedRoleName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="qualifiedRoleNameLabel" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="recipientTypeCd" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="requestLabel" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="responsibilityDesc" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="responsibilityId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="roleName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="roleRequest" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="routeHeaderId" nillable="true" type="xsd:long"/>
<xsd:element minOccurs="0" name="routeLevel" nillable="true" type="xsd:int"/>
<xsd:element minOccurs="0" name="routeMethodName" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="routeModuleRequest" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="status" nillable="true" type="xsd:string"/>
<xsd:element minOccurs="0" name="userRequest" type="xsd:boolean"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="DocumentSearchResultDTO">
<xsd:sequence>
<xsd:element minOccurs="0" name="overThreshold" type="xsd:boolean"/>
<xsd:element minOccurs="0" name="searchResults" nillable="true" type="tns:ArrayOfDocumentSearchResultRowDTO"/>
<xsd:element minOccurs="0" name="securityFilteredRows" nillable="true" type="xsd:int"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfActionItemDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="ActionItemDTO" nillable="true" type="tns:ActionItemDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfRuleResponsibilityDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="RuleResponsibilityDTO" nillable="true" type="tns:RuleResponsibilityDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfWorkflowAttributeValidationErrorDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="WorkflowAttributeValidationErrorDTO" nillable="true" type="tns:WorkflowAttributeValidationErrorDTO"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="ArrayOfReportActionToTakeDTO">
<xsd:sequence>
<xsd:element maxOccurs="unbounded" minOccurs="0" name="ReportActionToTakeDTO" nillable="true" type="tns:ReportActionToTakeDTO"/>
</xsd:sequence>
</xsd:complexType>
</xsd:schema>
  </wsdl:types>
  <wsdl:message name="validateWorkflowAttributeDefinitionVOResponse">
    <wsdl:part element="tns:validateWorkflowAttributeDefinitionVOResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNodeInstanceResponse">
    <wsdl:part element="tns:getNodeInstanceResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFutureRequestsKey">
    <wsdl:part element="tns:getFutureRequestsKey" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="WorkflowException">
    <wsdl:part element="tns:WorkflowException" name="WorkflowException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionsRequestedResponse">
    <wsdl:part element="tns:getActionsRequestedResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserInRouteLog">
    <wsdl:part element="tns:isUserInRouteLog" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isFinalApproverResponse">
    <wsdl:part element="tns:isFinalApproverResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="routeLevelHasApproverActionRequest">
    <wsdl:part element="tns:routeLevelHasApproverActionRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFutureRequestsKeyResponse">
    <wsdl:part element="tns:getFutureRequestsKeyResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoNotReceiveFutureRequestsValueResponse">
    <wsdl:part element="tns:getDoNotReceiveFutureRequestsValueResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllActionItems">
    <wsdl:part element="tns:getAllActionItems" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="documentWillHaveAtLeastOneActionRequestResponse">
    <wsdl:part element="tns:documentWillHaveAtLeastOneActionRequestResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserInRouteLogWithOptionalFlatteningResponse">
    <wsdl:part element="tns:isUserInRouteLogWithOptionalFlatteningResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRouteHeader">
    <wsdl:part element="tns:getRouteHeader" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPreviousRouteNodeNames">
    <wsdl:part element="tns:getPreviousRouteNodeNames" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="routingReport">
    <wsdl:part element="tns:routingReport" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRouteHeaderWithPrincipalResponse">
    <wsdl:part element="tns:getRouteHeaderWithPrincipalResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPrincipalIdsInRouteLogResponse">
    <wsdl:part element="tns:getPrincipalIdsInRouteLogResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateWorkflowAttributeDefinitionVO">
    <wsdl:part element="tns:validateWorkflowAttributeDefinitionVO" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="performDocumentSearchResponse">
    <wsdl:part element="tns:performDocumentSearchResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionItems">
    <wsdl:part element="tns:getActionItems" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTerminalNodeInstances">
    <wsdl:part element="tns:getTerminalNodeInstances" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isCurrentActiveDocumentTypeResponse">
    <wsdl:part element="tns:isCurrentActiveDocumentTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentRouteNodeInstances">
    <wsdl:part element="tns:getDocumentRouteNodeInstances" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="hasRouteNodeResponse">
    <wsdl:part element="tns:hasRouteNodeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="performDocumentSearchWithPrincipal">
    <wsdl:part element="tns:performDocumentSearchWithPrincipal" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentRouteNodeInstancesResponse">
    <wsdl:part element="tns:getDocumentRouteNodeInstancesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentStatus">
    <wsdl:part element="tns:getDocumentStatus" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReceiveFutureRequestsValueResponse">
    <wsdl:part element="tns:getReceiveFutureRequestsValueResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPreviousRouteNodeNamesResponse">
    <wsdl:part element="tns:getPreviousRouteNodeNamesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableAttributeStringValuesByKey">
    <wsdl:part element="tns:getSearchableAttributeStringValuesByKey" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentDetailFromAppId">
    <wsdl:part element="tns:getDocumentDetailFromAppId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isLastApproverInRouteLevelResponse">
    <wsdl:part element="tns:isLastApproverInRouteLevelResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrentNodeInstances">
    <wsdl:part element="tns:getCurrentNodeInstances" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNodeInstance">
    <wsdl:part element="tns:getNodeInstance" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserInRouteLogResponse">
    <wsdl:part element="tns:isUserInRouteLogResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentType">
    <wsdl:part element="tns:getDocumentType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionItemsForPrincipal">
    <wsdl:part element="tns:getActionItemsForPrincipal" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentContent">
    <wsdl:part element="tns:getDocumentContent" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserActionItemCountResponse">
    <wsdl:part element="tns:getUserActionItemCountResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveNodeInstances">
    <wsdl:part element="tns:getActiveNodeInstances" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableAttributeLongValuesByKey">
    <wsdl:part element="tns:getSearchableAttributeLongValuesByKey" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isLastApproverInRouteLevel">
    <wsdl:part element="tns:isLastApproverInRouteLevel" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentInitiatorPrincipalIdResponse">
    <wsdl:part element="tns:getDocumentInitiatorPrincipalIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReceiveFutureRequestsValue">
    <wsdl:part element="tns:getReceiveFutureRequestsValue" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllActionItemsResponse">
    <wsdl:part element="tns:getAllActionItemsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClearFutureRequestsValue">
    <wsdl:part element="tns:getClearFutureRequestsValue" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRouteHeaderWithPrincipal">
    <wsdl:part element="tns:getRouteHeaderWithPrincipal" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableAttributeLongValuesByKeyResponse">
    <wsdl:part element="tns:getSearchableAttributeLongValuesByKeyResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isLastApproverAtNode">
    <wsdl:part element="tns:isLastApproverAtNode" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSuperUserForDocumentTypeResponse">
    <wsdl:part element="tns:isSuperUserForDocumentTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionItemsResponse">
    <wsdl:part element="tns:getActionItemsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isCurrentActiveDocumentType">
    <wsdl:part element="tns:isCurrentActiveDocumentType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNewResponsibilityIdResponse">
    <wsdl:part element="tns:getNewResponsibilityIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="reResolveRole">
    <wsdl:part element="tns:reResolveRole" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="routingReportResponse">
    <wsdl:part element="tns:routingReportResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentTypeByNameResponse">
    <wsdl:part element="tns:getDocumentTypeByNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentStatusResponse">
    <wsdl:part element="tns:getDocumentStatusResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isLastApproverAtNodeResponse">
    <wsdl:part element="tns:isLastApproverAtNodeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionItemsForPrincipalResponse">
    <wsdl:part element="tns:getActionItemsForPrincipalResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="routeNodeHasApproverActionRequestResponse">
    <wsdl:part element="tns:routeNodeHasApproverActionRequestResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNewResponsibilityId">
    <wsdl:part element="tns:getNewResponsibilityId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionsTaken">
    <wsdl:part element="tns:getActionsTaken" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentRoutedByPrincipalId">
    <wsdl:part element="tns:getDocumentRoutedByPrincipalId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="hasRouteNode">
    <wsdl:part element="tns:hasRouteNode" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocIdResponse">
    <wsdl:part element="tns:getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableAttributeStringValuesByKeyResponse">
    <wsdl:part element="tns:getSearchableAttributeStringValuesByKeyResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableAttributeFloatValuesByKeyResponse">
    <wsdl:part element="tns:getSearchableAttributeFloatValuesByKeyResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRouteHeaderResponse">
    <wsdl:part element="tns:getRouteHeaderResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionsRequested">
    <wsdl:part element="tns:getActionsRequested" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrentNodeInstancesResponse">
    <wsdl:part element="tns:getCurrentNodeInstancesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDoNotReceiveFutureRequestsValue">
    <wsdl:part element="tns:getDoNotReceiveFutureRequestsValue" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserInRouteLogWithOptionalFlattening">
    <wsdl:part element="tns:isUserInRouteLogWithOptionalFlattening" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="reResolveRoleResponse">
    <wsdl:part element="tns:reResolveRoleResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="documentWillHaveAtLeastOneActionRequest">
    <wsdl:part element="tns:documentWillHaveAtLeastOneActionRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableAttributeDateTimeValuesByKeyResponse">
    <wsdl:part element="tns:getSearchableAttributeDateTimeValuesByKeyResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentDetail">
    <wsdl:part element="tns:getDocumentDetail" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentInitiatorPrincipalId">
    <wsdl:part element="tns:getDocumentInitiatorPrincipalId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocId">
    <wsdl:part element="tns:getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ruleReport">
    <wsdl:part element="tns:ruleReport" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentContentResponse">
    <wsdl:part element="tns:getDocumentContentResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="routeNodeHasApproverActionRequest">
    <wsdl:part element="tns:routeNodeHasApproverActionRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ruleReportResponse">
    <wsdl:part element="tns:ruleReportResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionRequestsResponse">
    <wsdl:part element="tns:getActionRequestsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentDetailResponse">
    <wsdl:part element="tns:getDocumentDetailResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserActionItemCount">
    <wsdl:part element="tns:getUserActionItemCount" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableAttributeFloatValuesByKey">
    <wsdl:part element="tns:getSearchableAttributeFloatValuesByKey" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchableAttributeDateTimeValuesByKey">
    <wsdl:part element="tns:getSearchableAttributeDateTimeValuesByKey" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllActionRequestsResponse">
    <wsdl:part element="tns:getAllActionRequestsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentRoutedByPrincipalIdResponse">
    <wsdl:part element="tns:getDocumentRoutedByPrincipalIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentTypeByName">
    <wsdl:part element="tns:getDocumentTypeByName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionRequests">
    <wsdl:part element="tns:getActionRequests" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="performDocumentSearchWithPrincipalResponse">
    <wsdl:part element="tns:performDocumentSearchWithPrincipalResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getTerminalNodeInstancesResponse">
    <wsdl:part element="tns:getTerminalNodeInstancesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentDetailFromAppIdResponse">
    <wsdl:part element="tns:getDocumentDetailFromAppIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveNodeInstancesResponse">
    <wsdl:part element="tns:getActiveNodeInstancesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="routeLevelHasApproverActionRequestResponse">
    <wsdl:part element="tns:routeLevelHasApproverActionRequestResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isFinalApprover">
    <wsdl:part element="tns:isFinalApprover" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="reResolveRoleByDocumentId">
    <wsdl:part element="tns:reResolveRoleByDocumentId" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPrincipalIdsInRouteLog">
    <wsdl:part element="tns:getPrincipalIdsInRouteLog" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllActionRequests">
    <wsdl:part element="tns:getAllActionRequests" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSuperUserForDocumentType">
    <wsdl:part element="tns:isSuperUserForDocumentType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDocumentTypeResponse">
    <wsdl:part element="tns:getDocumentTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActionsTakenResponse">
    <wsdl:part element="tns:getActionsTakenResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="reResolveRoleByDocumentIdResponse">
    <wsdl:part element="tns:reResolveRoleByDocumentIdResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="performDocumentSearch">
    <wsdl:part element="tns:performDocumentSearch" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClearFutureRequestsValueResponse">
    <wsdl:part element="tns:getClearFutureRequestsValueResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="WorkflowUtilityPortType">
    <wsdl:operation name="getPrincipalIdsInRouteLog">
      <wsdl:input message="tns:getPrincipalIdsInRouteLog" name="getPrincipalIdsInRouteLog">
    </wsdl:input>
      <wsdl:output message="tns:getPrincipalIdsInRouteLogResponse" name="getPrincipalIdsInRouteLogResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTerminalNodeInstances">
      <wsdl:input message="tns:getTerminalNodeInstances" name="getTerminalNodeInstances">
    </wsdl:input>
      <wsdl:output message="tns:getTerminalNodeInstancesResponse" name="getTerminalNodeInstancesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNodeInstance">
      <wsdl:input message="tns:getNodeInstance" name="getNodeInstance">
    </wsdl:input>
      <wsdl:output message="tns:getNodeInstanceResponse" name="getNodeInstanceResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reResolveRole">
      <wsdl:input message="tns:reResolveRole" name="reResolveRole">
    </wsdl:input>
      <wsdl:output message="tns:reResolveRoleResponse" name="reResolveRoleResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActionsTaken">
      <wsdl:input message="tns:getActionsTaken" name="getActionsTaken">
    </wsdl:input>
      <wsdl:output message="tns:getActionsTakenResponse" name="getActionsTakenResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="performDocumentSearchWithPrincipal">
      <wsdl:input message="tns:performDocumentSearchWithPrincipal" name="performDocumentSearchWithPrincipal">
    </wsdl:input>
      <wsdl:output message="tns:performDocumentSearchWithPrincipalResponse" name="performDocumentSearchWithPrincipalResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentRoutedByPrincipalId">
      <wsdl:input message="tns:getDocumentRoutedByPrincipalId" name="getDocumentRoutedByPrincipalId">
    </wsdl:input>
      <wsdl:output message="tns:getDocumentRoutedByPrincipalIdResponse" name="getDocumentRoutedByPrincipalIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActionItemsForPrincipal">
      <wsdl:input message="tns:getActionItemsForPrincipal" name="getActionItemsForPrincipal">
    </wsdl:input>
      <wsdl:output message="tns:getActionItemsForPrincipalResponse" name="getActionItemsForPrincipalResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFutureRequestsKey">
      <wsdl:input message="tns:getFutureRequestsKey" name="getFutureRequestsKey">
    </wsdl:input>
      <wsdl:output message="tns:getFutureRequestsKeyResponse" name="getFutureRequestsKeyResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="performDocumentSearch">
      <wsdl:input message="tns:performDocumentSearch" name="performDocumentSearch">
    </wsdl:input>
      <wsdl:output message="tns:performDocumentSearchResponse" name="performDocumentSearchResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentTypeByName">
      <wsdl:input message="tns:getDocumentTypeByName" name="getDocumentTypeByName">
    </wsdl:input>
      <wsdl:output message="tns:getDocumentTypeByNameResponse" name="getDocumentTypeByNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllActionRequests">
      <wsdl:input message="tns:getAllActionRequests" name="getAllActionRequests">
    </wsdl:input>
      <wsdl:output message="tns:getAllActionRequestsResponse" name="getAllActionRequestsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllActionItems">
      <wsdl:input message="tns:getAllActionItems" name="getAllActionItems">
    </wsdl:input>
      <wsdl:output message="tns:getAllActionItemsResponse" name="getAllActionItemsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRouteHeaderWithPrincipal">
      <wsdl:input message="tns:getRouteHeaderWithPrincipal" name="getRouteHeaderWithPrincipal">
    </wsdl:input>
      <wsdl:output message="tns:getRouteHeaderWithPrincipalResponse" name="getRouteHeaderWithPrincipalResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentDetailFromAppId">
      <wsdl:input message="tns:getDocumentDetailFromAppId" name="getDocumentDetailFromAppId">
    </wsdl:input>
      <wsdl:output message="tns:getDocumentDetailFromAppIdResponse" name="getDocumentDetailFromAppIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActionsRequested">
      <wsdl:input message="tns:getActionsRequested" name="getActionsRequested">
    </wsdl:input>
      <wsdl:output message="tns:getActionsRequestedResponse" name="getActionsRequestedResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDoNotReceiveFutureRequestsValue">
      <wsdl:input message="tns:getDoNotReceiveFutureRequestsValue" name="getDoNotReceiveFutureRequestsValue">
    </wsdl:input>
      <wsdl:output message="tns:getDoNotReceiveFutureRequestsValueResponse" name="getDoNotReceiveFutureRequestsValueResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isLastApproverAtNode">
      <wsdl:input message="tns:isLastApproverAtNode" name="isLastApproverAtNode">
    </wsdl:input>
      <wsdl:output message="tns:isLastApproverAtNodeResponse" name="isLastApproverAtNodeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentType">
      <wsdl:input message="tns:getDocumentType" name="getDocumentType">
    </wsdl:input>
      <wsdl:output message="tns:getDocumentTypeResponse" name="getDocumentTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCurrentNodeInstances">
      <wsdl:input message="tns:getCurrentNodeInstances" name="getCurrentNodeInstances">
    </wsdl:input>
      <wsdl:output message="tns:getCurrentNodeInstancesResponse" name="getCurrentNodeInstancesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reResolveRoleByDocumentId">
      <wsdl:input message="tns:reResolveRoleByDocumentId" name="reResolveRoleByDocumentId">
    </wsdl:input>
      <wsdl:output message="tns:reResolveRoleByDocumentIdResponse" name="reResolveRoleByDocumentIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActionRequests">
      <wsdl:input message="tns:getActionRequests" name="getActionRequests">
    </wsdl:input>
      <wsdl:output message="tns:getActionRequestsResponse" name="getActionRequestsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isCurrentActiveDocumentType">
      <wsdl:input message="tns:isCurrentActiveDocumentType" name="isCurrentActiveDocumentType">
    </wsdl:input>
      <wsdl:output message="tns:isCurrentActiveDocumentTypeResponse" name="isCurrentActiveDocumentTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocId">
      <wsdl:input message="tns:getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocId" name="getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocId">
    </wsdl:input>
      <wsdl:output message="tns:getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocIdResponse" name="getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentDetail">
      <wsdl:input message="tns:getDocumentDetail" name="getDocumentDetail">
    </wsdl:input>
      <wsdl:output message="tns:getDocumentDetailResponse" name="getDocumentDetailResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchableAttributeFloatValuesByKey">
      <wsdl:input message="tns:getSearchableAttributeFloatValuesByKey" name="getSearchableAttributeFloatValuesByKey">
    </wsdl:input>
      <wsdl:output message="tns:getSearchableAttributeFloatValuesByKeyResponse" name="getSearchableAttributeFloatValuesByKeyResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="hasRouteNode">
      <wsdl:input message="tns:hasRouteNode" name="hasRouteNode">
    </wsdl:input>
      <wsdl:output message="tns:hasRouteNodeResponse" name="hasRouteNodeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="documentWillHaveAtLeastOneActionRequest">
      <wsdl:input message="tns:documentWillHaveAtLeastOneActionRequest" name="documentWillHaveAtLeastOneActionRequest">
    </wsdl:input>
      <wsdl:output message="tns:documentWillHaveAtLeastOneActionRequestResponse" name="documentWillHaveAtLeastOneActionRequestResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRouteHeader">
      <wsdl:input message="tns:getRouteHeader" name="getRouteHeader">
    </wsdl:input>
      <wsdl:output message="tns:getRouteHeaderResponse" name="getRouteHeaderResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentContent">
      <wsdl:input message="tns:getDocumentContent" name="getDocumentContent">
    </wsdl:input>
      <wsdl:output message="tns:getDocumentContentResponse" name="getDocumentContentResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentInitiatorPrincipalId">
      <wsdl:input message="tns:getDocumentInitiatorPrincipalId" name="getDocumentInitiatorPrincipalId">
    </wsdl:input>
      <wsdl:output message="tns:getDocumentInitiatorPrincipalIdResponse" name="getDocumentInitiatorPrincipalIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isFinalApprover">
      <wsdl:input message="tns:isFinalApprover" name="isFinalApprover">
    </wsdl:input>
      <wsdl:output message="tns:isFinalApproverResponse" name="isFinalApproverResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentStatus">
      <wsdl:input message="tns:getDocumentStatus" name="getDocumentStatus">
    </wsdl:input>
      <wsdl:output message="tns:getDocumentStatusResponse" name="getDocumentStatusResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActionItems">
      <wsdl:input message="tns:getActionItems" name="getActionItems">
    </wsdl:input>
      <wsdl:output message="tns:getActionItemsResponse" name="getActionItemsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="routingReport">
      <wsdl:input message="tns:routingReport" name="routingReport">
    </wsdl:input>
      <wsdl:output message="tns:routingReportResponse" name="routingReportResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentRouteNodeInstances">
      <wsdl:input message="tns:getDocumentRouteNodeInstances" name="getDocumentRouteNodeInstances">
    </wsdl:input>
      <wsdl:output message="tns:getDocumentRouteNodeInstancesResponse" name="getDocumentRouteNodeInstancesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSuperUserForDocumentType">
      <wsdl:input message="tns:isSuperUserForDocumentType" name="isSuperUserForDocumentType">
    </wsdl:input>
      <wsdl:output message="tns:isSuperUserForDocumentTypeResponse" name="isSuperUserForDocumentTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="routeLevelHasApproverActionRequest">
      <wsdl:input message="tns:routeLevelHasApproverActionRequest" name="routeLevelHasApproverActionRequest">
    </wsdl:input>
      <wsdl:output message="tns:routeLevelHasApproverActionRequestResponse" name="routeLevelHasApproverActionRequestResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserInRouteLogWithOptionalFlattening">
      <wsdl:input message="tns:isUserInRouteLogWithOptionalFlattening" name="isUserInRouteLogWithOptionalFlattening">
    </wsdl:input>
      <wsdl:output message="tns:isUserInRouteLogWithOptionalFlatteningResponse" name="isUserInRouteLogWithOptionalFlatteningResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isLastApproverInRouteLevel">
      <wsdl:input message="tns:isLastApproverInRouteLevel" name="isLastApproverInRouteLevel">
    </wsdl:input>
      <wsdl:output message="tns:isLastApproverInRouteLevelResponse" name="isLastApproverInRouteLevelResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClearFutureRequestsValue">
      <wsdl:input message="tns:getClearFutureRequestsValue" name="getClearFutureRequestsValue">
    </wsdl:input>
      <wsdl:output message="tns:getClearFutureRequestsValueResponse" name="getClearFutureRequestsValueResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getNewResponsibilityId">
      <wsdl:input message="tns:getNewResponsibilityId" name="getNewResponsibilityId">
    </wsdl:input>
      <wsdl:output message="tns:getNewResponsibilityIdResponse" name="getNewResponsibilityIdResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchableAttributeDateTimeValuesByKey">
      <wsdl:input message="tns:getSearchableAttributeDateTimeValuesByKey" name="getSearchableAttributeDateTimeValuesByKey">
    </wsdl:input>
      <wsdl:output message="tns:getSearchableAttributeDateTimeValuesByKeyResponse" name="getSearchableAttributeDateTimeValuesByKeyResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getReceiveFutureRequestsValue">
      <wsdl:input message="tns:getReceiveFutureRequestsValue" name="getReceiveFutureRequestsValue">
    </wsdl:input>
      <wsdl:output message="tns:getReceiveFutureRequestsValueResponse" name="getReceiveFutureRequestsValueResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="routeNodeHasApproverActionRequest">
      <wsdl:input message="tns:routeNodeHasApproverActionRequest" name="routeNodeHasApproverActionRequest">
    </wsdl:input>
      <wsdl:output message="tns:routeNodeHasApproverActionRequestResponse" name="routeNodeHasApproverActionRequestResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserInRouteLog">
      <wsdl:input message="tns:isUserInRouteLog" name="isUserInRouteLog">
    </wsdl:input>
      <wsdl:output message="tns:isUserInRouteLogResponse" name="isUserInRouteLogResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateWorkflowAttributeDefinitionVO">
      <wsdl:input message="tns:validateWorkflowAttributeDefinitionVO" name="validateWorkflowAttributeDefinitionVO">
    </wsdl:input>
      <wsdl:output message="tns:validateWorkflowAttributeDefinitionVOResponse" name="validateWorkflowAttributeDefinitionVOResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPreviousRouteNodeNames">
      <wsdl:input message="tns:getPreviousRouteNodeNames" name="getPreviousRouteNodeNames">
    </wsdl:input>
      <wsdl:output message="tns:getPreviousRouteNodeNamesResponse" name="getPreviousRouteNodeNamesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ruleReport">
      <wsdl:input message="tns:ruleReport" name="ruleReport">
    </wsdl:input>
      <wsdl:output message="tns:ruleReportResponse" name="ruleReportResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveNodeInstances">
      <wsdl:input message="tns:getActiveNodeInstances" name="getActiveNodeInstances">
    </wsdl:input>
      <wsdl:output message="tns:getActiveNodeInstancesResponse" name="getActiveNodeInstancesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserActionItemCount">
      <wsdl:input message="tns:getUserActionItemCount" name="getUserActionItemCount">
    </wsdl:input>
      <wsdl:output message="tns:getUserActionItemCountResponse" name="getUserActionItemCountResponse">
    </wsdl:output>
      <wsdl:fault message="tns:WorkflowException" name="WorkflowException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchableAttributeStringValuesByKey">
      <wsdl:input message="tns:getSearchableAttributeStringValuesByKey" name="getSearchableAttributeStringValuesByKey">
    </wsdl:input>
      <wsdl:output message="tns:getSearchableAttributeStringValuesByKeyResponse" name="getSearchableAttributeStringValuesByKeyResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSearchableAttributeLongValuesByKey">
      <wsdl:input message="tns:getSearchableAttributeLongValuesByKey" name="getSearchableAttributeLongValuesByKey">
    </wsdl:input>
      <wsdl:output message="tns:getSearchableAttributeLongValuesByKeyResponse" name="getSearchableAttributeLongValuesByKeyResponse">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="WorkflowUtilityServiceSOAPSoapBinding" type="tns:WorkflowUtilityPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getPrincipalIdsInRouteLog">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPrincipalIdsInRouteLog">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPrincipalIdsInRouteLogResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNodeInstance">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNodeInstance">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNodeInstanceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTerminalNodeInstances">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getTerminalNodeInstances">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getTerminalNodeInstancesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActionsTaken">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActionsTaken">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActionsTakenResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reResolveRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="reResolveRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="reResolveRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="performDocumentSearchWithPrincipal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="performDocumentSearchWithPrincipal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="performDocumentSearchWithPrincipalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActionItemsForPrincipal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActionItemsForPrincipal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActionItemsForPrincipalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentRoutedByPrincipalId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentRoutedByPrincipalId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentRoutedByPrincipalIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFutureRequestsKey">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getFutureRequestsKey">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getFutureRequestsKeyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="performDocumentSearch">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="performDocumentSearch">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="performDocumentSearchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllActionItems">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllActionItems">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllActionItemsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllActionRequests">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllActionRequests">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllActionRequestsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentTypeByName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentTypeByName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentTypeByNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRouteHeaderWithPrincipal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRouteHeaderWithPrincipal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRouteHeaderWithPrincipalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentDetailFromAppId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentDetailFromAppId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentDetailFromAppIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActionsRequested">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActionsRequested">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActionsRequestedResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDoNotReceiveFutureRequestsValue">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDoNotReceiveFutureRequestsValue">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDoNotReceiveFutureRequestsValueResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getDocumentType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isLastApproverAtNode">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isLastApproverAtNode">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isLastApproverAtNodeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCurrentNodeInstances">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCurrentNodeInstances">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCurrentNodeInstancesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActionRequests">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActionRequests">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActionRequestsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reResolveRoleByDocumentId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="reResolveRoleByDocumentId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="reResolveRoleByDocumentIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentDetail">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentDetail">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentDetailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPrincipalIdsWithPendingActionRequestByActionRequestedAndDocIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isCurrentActiveDocumentType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isCurrentActiveDocumentType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isCurrentActiveDocumentTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchableAttributeFloatValuesByKey">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchableAttributeFloatValuesByKey">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchableAttributeFloatValuesByKeyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="documentWillHaveAtLeastOneActionRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="documentWillHaveAtLeastOneActionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="documentWillHaveAtLeastOneActionRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="hasRouteNode">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="hasRouteNode">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="hasRouteNodeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentContent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentContent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentContentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRouteHeader">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRouteHeader">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRouteHeaderResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentInitiatorPrincipalId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentInitiatorPrincipalId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentInitiatorPrincipalIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentStatus">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentStatus">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentStatusResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isFinalApprover">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isFinalApprover">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isFinalApproverResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActionItems">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActionItems">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActionItemsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDocumentRouteNodeInstances">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDocumentRouteNodeInstances">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDocumentRouteNodeInstancesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="routingReport">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="routingReport">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="routingReportResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSuperUserForDocumentType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isSuperUserForDocumentType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isSuperUserForDocumentTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserInRouteLogWithOptionalFlattening">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isUserInRouteLogWithOptionalFlattening">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isUserInRouteLogWithOptionalFlatteningResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="routeLevelHasApproverActionRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="routeLevelHasApproverActionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="routeLevelHasApproverActionRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClearFutureRequestsValue">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getClearFutureRequestsValue">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getClearFutureRequestsValueResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isLastApproverInRouteLevel">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isLastApproverInRouteLevel">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isLastApproverInRouteLevelResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNewResponsibilityId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNewResponsibilityId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNewResponsibilityIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchableAttributeDateTimeValuesByKey">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchableAttributeDateTimeValuesByKey">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchableAttributeDateTimeValuesByKeyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getReceiveFutureRequestsValue">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getReceiveFutureRequestsValue">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReceiveFutureRequestsValueResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="routeNodeHasApproverActionRequest">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="routeNodeHasApproverActionRequest">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="routeNodeHasApproverActionRequestResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isUserInRouteLog">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isUserInRouteLog">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isUserInRouteLogResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateWorkflowAttributeDefinitionVO">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateWorkflowAttributeDefinitionVO">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateWorkflowAttributeDefinitionVOResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPreviousRouteNodeNames">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPreviousRouteNodeNames">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPreviousRouteNodeNamesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveNodeInstances">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getActiveNodeInstances">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActiveNodeInstancesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ruleReport">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="ruleReport">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ruleReportResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserActionItemCount">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserActionItemCount">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserActionItemCountResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="WorkflowException">
        <soap:fault name="WorkflowException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchableAttributeLongValuesByKey">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchableAttributeLongValuesByKey">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchableAttributeLongValuesByKeyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSearchableAttributeStringValuesByKey">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchableAttributeStringValuesByKey">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchableAttributeStringValuesByKeyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="WorkflowUtilityServiceSOAP">
    <wsdl:port binding="tns:WorkflowUtilityServiceSOAPSoapBinding" name="WorkflowUtilityPort">
      <soap:address location="http://localhost:8081/ks-rice-dev/remoting/WorkflowUtilityServiceSOAP"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>