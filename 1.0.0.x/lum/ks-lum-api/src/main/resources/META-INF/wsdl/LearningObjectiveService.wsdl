<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="LoService" targetNamespace="http://student.kuali.org/wsdl/lo" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://student.kuali.org/wsdl/lo" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://student.kuali.org/wsdl/dictionary" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/dictionary">
    <xs:element name="fieldDescriptor" type="tns:fieldDescriptor"/>
    <xs:element name="getObjectStructure" type="tns:getObjectStructure"/>
    <xs:element name="getObjectStructureResponse" type="tns:getObjectStructureResponse"/>
    <xs:element name="getObjectTypes" type="tns:getObjectTypes"/>
    <xs:element name="getObjectTypesResponse" type="tns:getObjectTypesResponse"/>
    <xs:element name="validateObject" type="tns:validateObject"/>
    <xs:element name="validateObjectResponse" type="tns:validateObjectResponse"/>
    <xs:element name="validateStructureData" type="tns:validateStructureData"/>
    <xs:element name="validateStructureDataResponse" type="tns:validateStructureDataResponse"/>
    <xs:complexType name="fieldDescriptor">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="desc" type="xs:string"/>
            <xs:element name="readOnly" type="xs:boolean"/>
            <xs:element name="dataType" type="xs:string"/>
            <xs:element minOccurs="0" name="search" type="tns:searchSelector"/>
            <xs:element minOccurs="0" name="objectStructure" type="tns:objectStructure"/>
            <xs:element minOccurs="0" name="objectStructureRef" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="searchSelector">
        <xs:sequence/>
        <xs:attribute name="key" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="objectStructure">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="type" type="tns:type"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="type">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="state" type="tns:state"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="state">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="field" type="tns:field"/>
            <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="field">
        <xs:sequence>
            <xs:element minOccurs="0" name="fieldDescriptor" type="tns:fieldDescriptor"/>
            <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
            <xs:element name="selector" type="xs:boolean"/>
            <xs:element name="dynamic" type="xs:boolean"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="constraintDescriptor">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="constraintSelector">
        <xs:sequence>
            <xs:element minOccurs="0" name="minValue" type="xs:string"/>
            <xs:element minOccurs="0" name="maxValue" type="xs:string"/>
            <xs:element minOccurs="0" name="minLength" type="xs:int"/>
            <xs:element minOccurs="0" name="maxLength" type="xs:string"/>
            <xs:element minOccurs="0" name="validChars" type="tns:validCharsConstraint"/>
            <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="case" type="tns:caseConstraint"/>
            <xs:element minOccurs="0" name="typeStateCase" type="tns:typeStateCaseConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="lookup" type="tns:lookupConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="className" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="serverSide" type="xs:boolean" use="required"/>
        <xs:attribute name="locale" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="validCharsConstraint">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="fields" type="xs:string"/>
        <xs:attribute name="separator" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="requireConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="caseConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="when" type="tns:whenConstraint"/>
        </xs:sequence>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="operator" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="whenConstraint">
        <xs:sequence>
            <xs:element minOccurs="0" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="value" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="typeStateCaseConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="typeStateWhen" type="tns:typeStateWhenConstraint"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="typeStateWhenConstraint">
        <xs:sequence>
            <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="lookupConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="lookupKey" type="tns:lookupKeyConstraint"/>
        </xs:sequence>
        <xs:attribute name="search" type="xs:string"/>
        <xs:attribute name="searchField" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="lookupKeyConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="mapsTo" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="occursConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="min" type="xs:int"/>
        <xs:attribute name="max" type="xs:int"/>
    </xs:complexType>
    <xs:complexType name="getObjectTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getObjectTypesResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateStructureData">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
            <xs:element form="unqualified" minOccurs="0" name="stateKey" type="xs:string"/>
            <xs:element form="unqualified" minOccurs="0" name="info" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateStructureDataResponse">
        <xs:sequence>
            <xs:element form="unqualified" name="return" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="context">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="type" type="xs:string" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="validateObject">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
            <xs:element form="unqualified" minOccurs="0" name="stateKey" type="xs:string"/>
            <xs:element form="unqualified" minOccurs="0" name="info" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateObjectResponse">
        <xs:sequence>
            <xs:element form="unqualified" name="return" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getObjectStructure">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getObjectStructureResponse">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="return" type="tns:objectStructure"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://student.kuali.org/wsdl/search" xmlns:ns1="http://student.kuali.org/wsdl/dictionary" xmlns:ns2="http://student.kuali.org/wsdl/exceptions" xmlns:ns3="http://student.kuali.org/wsdl/enumerable" xmlns:tns="http://student.kuali.org/wsdl/lo" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/lo">
    <xs:import namespace="http://student.kuali.org/wsdl/dictionary"/>
    <xs:element name="addChildLoToLo" type="tns:addChildLoToLo"/>
    <xs:element name="addChildLoToLoResponse" type="tns:addChildLoToLoResponse"/>
    <xs:element name="addEquivalentLoToLo" type="tns:addEquivalentLoToLo"/>
    <xs:element name="addEquivalentLoToLoResponse" type="tns:addEquivalentLoToLoResponse"/>
    <xs:element name="addLoCategoryToLo" type="tns:addLoCategoryToLo"/>
    <xs:element name="addLoCategoryToLoResponse" type="tns:addLoCategoryToLoResponse"/>
    <xs:element name="createLo" type="tns:createLo"/>
    <xs:element name="createLoCategory" type="tns:createLoCategory"/>
    <xs:element name="createLoCategoryResponse" type="tns:createLoCategoryResponse"/>
    <xs:element name="createLoResponse" type="tns:createLoResponse"/>
    <xs:element name="deleteLo" type="tns:deleteLo"/>
    <xs:element name="deleteLoCategory" type="tns:deleteLoCategory"/>
    <xs:element name="deleteLoCategoryResponse" type="tns:deleteLoCategoryResponse"/>
    <xs:element name="deleteLoResponse" type="tns:deleteLoResponse"/>
    <xs:element name="enumeratedValue">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="code" type="xs:string"/>
                <xs:element name="abbrevValue" type="xs:string"/>
                <xs:element name="effectiveDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
                <xs:element minOccurs="0" name="sortKey" type="xs:int"/>
                <xs:element maxOccurs="unbounded" name="contexts" type="ns1:context"/>
                <xs:element name="value" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="getAllDescendants" type="tns:getAllDescendants"/>
    <xs:element name="getAllDescendantsResponse" type="tns:getAllDescendantsResponse"/>
    <xs:element name="getAncestors" type="tns:getAncestors"/>
    <xs:element name="getAncestorsResponse" type="tns:getAncestorsResponse"/>
    <xs:element name="getEquivalentLos" type="tns:getEquivalentLos"/>
    <xs:element name="getEquivalentLosResponse" type="tns:getEquivalentLosResponse"/>
    <xs:element name="getLo" type="tns:getLo"/>
    <xs:element name="getLoByIdList" type="tns:getLoByIdList"/>
    <xs:element name="getLoByIdListResponse" type="tns:getLoByIdListResponse"/>
    <xs:element name="getLoCategories" type="tns:getLoCategories"/>
    <xs:element name="getLoCategoriesForLo" type="tns:getLoCategoriesForLo"/>
    <xs:element name="getLoCategoriesForLoResponse" type="tns:getLoCategoriesForLoResponse"/>
    <xs:element name="getLoCategoriesResponse" type="tns:getLoCategoriesResponse"/>
    <xs:element name="getLoCategory" type="tns:getLoCategory"/>
    <xs:element name="getLoCategoryResponse" type="tns:getLoCategoryResponse"/>
    <xs:element name="getLoChildren" type="tns:getLoChildren"/>
    <xs:element name="getLoChildrenResponse" type="tns:getLoChildrenResponse"/>
    <xs:element name="getLoEquivalents" type="tns:getLoEquivalents"/>
    <xs:element name="getLoEquivalentsResponse" type="tns:getLoEquivalentsResponse"/>
    <xs:element name="getLoHierarchies" type="tns:getLoHierarchies"/>
    <xs:element name="getLoHierarchiesResponse" type="tns:getLoHierarchiesResponse"/>
    <xs:element name="getLoHierarchy" type="tns:getLoHierarchy"/>
    <xs:element name="getLoHierarchyResponse" type="tns:getLoHierarchyResponse"/>
    <xs:element name="getLoParents" type="tns:getLoParents"/>
    <xs:element name="getLoParentsResponse" type="tns:getLoParentsResponse"/>
    <xs:element name="getLoResponse" type="tns:getLoResponse"/>
    <xs:element name="getLoType" type="tns:getLoType"/>
    <xs:element name="getLoTypeResponse" type="tns:getLoTypeResponse"/>
    <xs:element name="getLoTypes" type="tns:getLoTypes"/>
    <xs:element name="getLoTypesResponse" type="tns:getLoTypesResponse"/>
    <xs:element name="getLosByLoCategory" type="tns:getLosByLoCategory"/>
    <xs:element name="getLosByLoCategoryResponse" type="tns:getLosByLoCategoryResponse"/>
    <xs:element name="isDescendant" type="tns:isDescendant"/>
    <xs:element name="isDescendantResponse" type="tns:isDescendantResponse"/>
    <xs:element name="isEquivalent" type="tns:isEquivalent"/>
    <xs:element name="isEquivalentResponse" type="tns:isEquivalentResponse"/>
    <xs:element name="removeChildLoFromLo" type="tns:removeChildLoFromLo"/>
    <xs:element name="removeChildLoFromLoResponse" type="tns:removeChildLoFromLoResponse"/>
    <xs:element name="removeEquivalentLoFromLo" type="tns:removeEquivalentLoFromLo"/>
    <xs:element name="removeEquivalentLoFromLoResponse" type="tns:removeEquivalentLoFromLoResponse"/>
    <xs:element name="removeLoCategoryFromLo" type="tns:removeLoCategoryFromLo"/>
    <xs:element name="removeLoCategoryFromLoResponse" type="tns:removeLoCategoryFromLoResponse"/>
    <xs:element name="updateLo" type="tns:updateLo"/>
    <xs:element name="updateLoCategory" type="tns:updateLoCategory"/>
    <xs:element name="updateLoCategoryResponse" type="tns:updateLoCategoryResponse"/>
    <xs:element name="updateLoResponse" type="tns:updateLoResponse"/>
    <xs:element name="validateLo" type="tns:validateLo"/>
    <xs:element name="validateLoCategory" type="tns:validateLoCategory"/>
    <xs:element name="validateLoCategoryResponse" type="tns:validateLoCategoryResponse"/>
    <xs:element name="validateLoResponse" type="tns:validateLoResponse"/>
    <xs:complexType name="getLoTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getLoTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:loTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="loTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="Attribute">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getLoType">
        <xs:sequence>
            <xs:element minOccurs="0" name="loTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:loTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateLoCategory">
        <xs:sequence>
            <xs:element minOccurs="0" name="loCategoryId" type="xs:string"/>
            <xs:element minOccurs="0" name="loCategoryInfo" type="tns:loCategoryInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="loCategoryInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="tns:richTextInfo"/>
            <xs:element minOccurs="0" name="loHierarchy" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="richTextInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="plain" type="xs:string"/>
            <xs:element minOccurs="0" name="formatted" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="metaInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="versionInd" type="xs:string"/>
            <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="createId" type="xs:string"/>
            <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="updateId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateLoCategoryResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:loCategoryInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="isEquivalent">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
            <xs:element minOccurs="0" name="equivalentLoId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="isEquivalentResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteLoCategory">
        <xs:sequence>
            <xs:element minOccurs="0" name="loCategoryId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteLoCategoryResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="statusInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="success" type="xs:boolean"/>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeEquivalentLoFromLo">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
            <xs:element minOccurs="0" name="equivalentLoId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeEquivalentLoFromLoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoParents">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoParentsResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:loInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="loInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="tns:richTextInfo"/>
            <xs:element minOccurs="0" name="loHierarchy" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getEquivalentLos">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getEquivalentLosResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:loInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoCategories">
        <xs:sequence>
            <xs:element minOccurs="0" name="loHierarchyKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoCategoriesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:loCategoryInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoCategoriesForLo">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoCategoriesForLoResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:loCategoryInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateLo">
        <xs:sequence>
            <xs:element minOccurs="0" name="validationType" type="xs:string"/>
            <xs:element minOccurs="0" name="loInfo" type="tns:loInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateLoResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultContainer"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validationResultContainer">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="validationResults" type="tns:validationResultInfo"/>
            <xs:element minOccurs="0" name="errorLevel" type="tns:errorLevel"/>
            <xs:element minOccurs="0" name="element" type="xs:string"/>
            <xs:element minOccurs="0" name="derivedMinOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="derivedMaxOccurs" type="xs:string"/>
            <xs:element minOccurs="0" name="derivedMinLength" type="xs:int"/>
            <xs:element minOccurs="0" name="derivedMaxLength" type="xs:string"/>
            <xs:element minOccurs="0" name="dataType" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validationResultInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="level" type="tns:errorLevel"/>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAllDescendants">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAllDescendantsResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeLoCategoryFromLo">
        <xs:sequence>
            <xs:element minOccurs="0" name="loCategoryId" type="xs:string"/>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeLoCategoryFromLoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoByIdList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="loId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoByIdListResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:loInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createLoCategory">
        <xs:sequence>
            <xs:element minOccurs="0" name="loHierarchyKey" type="xs:string"/>
            <xs:element minOccurs="0" name="loCategoryInfo" type="tns:loCategoryInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createLoCategoryResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:loCategoryInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="addLoCategoryToLo">
        <xs:sequence>
            <xs:element minOccurs="0" name="loCategoryId" type="xs:string"/>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="addLoCategoryToLoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLo">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:loInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoChildren">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoChildrenResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:loInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateLoCategory">
        <xs:sequence>
            <xs:element minOccurs="0" name="validationType" type="xs:string"/>
            <xs:element minOccurs="0" name="loCategoryInfo" type="tns:loCategoryInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateLoCategoryResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultContainer"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeChildLoFromLo">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
            <xs:element minOccurs="0" name="parentLoId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeChildLoFromLoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createLo">
        <xs:sequence>
            <xs:element minOccurs="0" name="parentLoId" type="xs:string"/>
            <xs:element minOccurs="0" name="loType" type="xs:string"/>
            <xs:element minOccurs="0" name="loInfo" type="tns:loInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createLoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:loInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="addEquivalentLoToLo">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
            <xs:element minOccurs="0" name="equivalentLoId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="addEquivalentLoToLoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAncestors">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getAncestorsResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="isDescendant">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
            <xs:element minOccurs="0" name="descendantLoId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="isDescendantResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoHierarchies">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getLoHierarchiesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:loHierarchyInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="loHierarchyInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="tns:richTextInfo"/>
            <xs:element minOccurs="0" name="rootLoId" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getLoHierarchy">
        <xs:sequence>
            <xs:element minOccurs="0" name="loHierarchyKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoHierarchyResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:loHierarchyInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLosByLoCategory">
        <xs:sequence>
            <xs:element minOccurs="0" name="loCategoryId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLosByLoCategoryResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:loInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateLo">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
            <xs:element minOccurs="0" name="loInfo" type="tns:loInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateLoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:loInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="addChildLoToLo">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
            <xs:element minOccurs="0" name="parentLoId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="addChildLoToLoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteLo">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteLoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoCategory">
        <xs:sequence>
            <xs:element minOccurs="0" name="loCategoryId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoCategoryResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:loCategoryInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoEquivalents">
        <xs:sequence>
            <xs:element minOccurs="0" name="loId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getLoEquivalentsResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:loInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="errorLevel">
        <xs:restriction base="xs:string">
            <xs:enumeration value="OK"/>
            <xs:enumeration value="WARN"/>
            <xs:enumeration value="ERROR"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="getSearchCriteriaTypes" nillable="true" type="ns0:getSearchCriteriaTypes"/>
    <xs:element name="getSearchCriteriaTypesResponse" nillable="true" type="ns0:getSearchCriteriaTypesResponse"/>
    <xs:element name="OperationFailedException" nillable="true" type="ns2:OperationFailedException"/>
    <xs:element name="DoesNotExistException" nillable="true" type="ns2:DoesNotExistException"/>
    <xs:element name="InvalidParameterException" nillable="true" type="ns2:InvalidParameterException"/>
    <xs:element name="MissingParameterException" nillable="true" type="ns2:MissingParameterException"/>
    <xs:element name="DataValidationErrorException" nillable="true" type="ns2:DataValidationErrorException"/>
    <xs:element name="PermissionDeniedException" nillable="true" type="ns2:PermissionDeniedException"/>
    <xs:element name="VersionMismatchException" nillable="true" type="ns2:VersionMismatchException"/>
    <xs:element name="DependentObjectsExistException" nillable="true" type="ns2:DependentObjectsExistException"/>
    <xs:element name="getObjectTypes" nillable="true" type="ns1:getObjectTypes"/>
    <xs:element name="getObjectTypesResponse" nillable="true" type="ns1:getObjectTypesResponse"/>
    <xs:element name="validateStructureData" nillable="true" type="ns1:validateStructureData"/>
    <xs:element name="validateStructureDataResponse" nillable="true" type="ns1:validateStructureDataResponse"/>
    <xs:element name="getSearchResultTypes" nillable="true" type="ns0:getSearchResultTypes"/>
    <xs:element name="getSearchResultTypesResponse" nillable="true" type="ns0:getSearchResultTypesResponse"/>
    <xs:element name="getSearchResultType" nillable="true" type="ns0:getSearchResultType"/>
    <xs:element name="getSearchResultTypeResponse" nillable="true" type="ns0:getSearchResultTypeResponse"/>
    <xs:element name="getEnumeration" nillable="true" type="ns3:getEnumeration"/>
    <xs:element name="getEnumerationResponse" nillable="true" type="ns3:getEnumerationResponse"/>
    <xs:element name="searchForResults" nillable="true" type="ns0:searchForResults"/>
    <xs:element name="searchForResultsResponse" nillable="true" type="ns0:searchForResultsResponse"/>
    <xs:element name="UnsupportedActionException" nillable="true" type="ns2:UnsupportedActionException"/>
    <xs:element name="getSearchCriteriaType" nillable="true" type="ns0:getSearchCriteriaType"/>
    <xs:element name="getSearchCriteriaTypeResponse" nillable="true" type="ns0:getSearchCriteriaTypeResponse"/>
    <xs:element name="validateObject" nillable="true" type="ns1:validateObject"/>
    <xs:element name="validateObjectResponse" nillable="true" type="ns1:validateObjectResponse"/>
    <xs:element name="getSearchType" nillable="true" type="ns0:getSearchType"/>
    <xs:element name="getSearchTypeResponse" nillable="true" type="ns0:getSearchTypeResponse"/>
    <xs:element name="AlreadyExistsException" nillable="true" type="ns2:AlreadyExistsException"/>
    <xs:element name="getObjectStructure" nillable="true" type="ns1:getObjectStructure"/>
    <xs:element name="getObjectStructureResponse" nillable="true" type="ns1:getObjectStructureResponse"/>
    <xs:element name="getSearchTypes" nillable="true" type="ns0:getSearchTypes"/>
    <xs:element name="getSearchTypesResponse" nillable="true" type="ns0:getSearchTypesResponse"/>
    <xs:element name="getSearchTypesByResult" nillable="true" type="ns0:getSearchTypesByResult"/>
    <xs:element name="getSearchTypesByResultResponse" nillable="true" type="ns0:getSearchTypesByResultResponse"/>
    <xs:element name="CircularReferenceException" nillable="true" type="ns2:CircularReferenceException"/>
    <xs:element name="getSearchTypesByCriteria" nillable="true" type="ns0:getSearchTypesByCriteria"/>
    <xs:element name="getSearchTypesByCriteriaResponse" nillable="true" type="ns0:getSearchTypesByCriteriaResponse"/>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://student.kuali.org/wsdl/dictionary" xmlns:ns1="http://student.kuali.org/wsdl/lo" xmlns:tns="http://student.kuali.org/wsdl/enumerable" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/enumerable">
    <xs:import namespace="http://student.kuali.org/wsdl/lo"/>
    <xs:element name="getEnumeration" type="tns:getEnumeration"/>
    <xs:element name="getEnumerationResponse" type="tns:getEnumerationResponse"/>
    <xs:complexType name="getEnumeration">
        <xs:sequence>
            <xs:element minOccurs="0" name="enumerationKey" type="xs:string"/>
            <xs:element minOccurs="0" name="enumContextKey" type="xs:string"/>
            <xs:element minOccurs="0" name="contextValue" type="xs:string"/>
            <xs:element minOccurs="0" name="contextDate" type="xs:dateTime"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getEnumerationResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="code" type="xs:string"/>
                        <xs:element name="abbrevValue" type="xs:string"/>
                        <xs:element name="effectiveDate" type="xs:dateTime"/>
                        <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
                        <xs:element minOccurs="0" name="sortKey" type="xs:int"/>
                        <xs:element maxOccurs="unbounded" name="contexts" type="ns0:context"/>
                        <xs:element name="value" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://student.kuali.org/wsdl/dictionary" xmlns:tns="http://student.kuali.org/wsdl/search" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/search">
    <xs:import namespace="http://student.kuali.org/wsdl/dictionary"/>
    <xs:element name="getSearchCriteriaType" type="tns:getSearchCriteriaType"/>
    <xs:element name="getSearchCriteriaTypeResponse" type="tns:getSearchCriteriaTypeResponse"/>
    <xs:element name="getSearchCriteriaTypes" type="tns:getSearchCriteriaTypes"/>
    <xs:element name="getSearchCriteriaTypesResponse" type="tns:getSearchCriteriaTypesResponse"/>
    <xs:element name="getSearchResultType" type="tns:getSearchResultType"/>
    <xs:element name="getSearchResultTypeResponse" type="tns:getSearchResultTypeResponse"/>
    <xs:element name="getSearchResultTypes" type="tns:getSearchResultTypes"/>
    <xs:element name="getSearchResultTypesResponse" type="tns:getSearchResultTypesResponse"/>
    <xs:element name="getSearchType" type="tns:getSearchType"/>
    <xs:element name="getSearchTypeResponse" type="tns:getSearchTypeResponse"/>
    <xs:element name="getSearchTypes" type="tns:getSearchTypes"/>
    <xs:element name="getSearchTypesByCriteria" type="tns:getSearchTypesByCriteria"/>
    <xs:element name="getSearchTypesByCriteriaResponse" type="tns:getSearchTypesByCriteriaResponse"/>
    <xs:element name="getSearchTypesByResult" type="tns:getSearchTypesByResult"/>
    <xs:element name="getSearchTypesByResultResponse" type="tns:getSearchTypesByResultResponse"/>
    <xs:element name="getSearchTypesResponse" type="tns:getSearchTypesResponse"/>
    <xs:element name="searchForResults" type="tns:searchForResults"/>
    <xs:element name="searchForResultsResponse" type="tns:searchForResultsResponse"/>
    <xs:complexType name="getSearchCriteriaTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getSearchCriteriaTypesResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchCriteriaTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="queryParams">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="queryParam" type="tns:queryParamInfo"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="queryParamInfo">
        <xs:sequence>
            <xs:element minOccurs="0" ref="ns1:fieldDescriptor"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getSearchResultTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getSearchResultTypesResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchResultTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="resultColumns">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="resultColumn" type="tns:resultColumnInfo"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="resultColumnInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="dataType" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getSearchResultType">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchResultTypeResponse">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchForResults">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchTypeKey" type="xs:string"/>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="queryParamValues" type="tns:queryParamValue"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="queryParamValue">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="listValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="searchForResultsResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:result"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="result">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="resultCells" type="tns:resultCell"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="resultCell">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getSearchCriteriaType">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchCriteriaTypeResponse">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchType">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchTypeResponse">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="searchResultTypeInfo" type="tns:searchResultTypeInfo"/>
            <xs:element minOccurs="0" name="searchCriteriaTypeInfo" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getSearchTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="getSearchTypesResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchTypesByResult">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchTypesByResultResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchTypesByCriteria">
        <xs:sequence>
            <xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getSearchTypesByCriteriaResponse">
        <xs:sequence>
            <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchRelationship">
        <xs:sequence>
            <xs:element minOccurs="0" name="lhs" type="tns:typeAttribute"/>
            <xs:element minOccurs="0" name="rhs" type="tns:typeAttribute"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="typeAttribute">
        <xs:sequence>
            <xs:element minOccurs="0" name="parentType" type="xs:string"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="alias" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://student.kuali.org/wsdl/exceptions" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/exceptions">
    <xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
    <xs:element name="CircularReferenceException" type="tns:CircularReferenceException"/>
    <xs:element name="DataValidationErrorException" type="tns:DataValidationErrorException"/>
    <xs:element name="DependentObjectsExistException" type="tns:DependentObjectsExistException"/>
    <xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
    <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
    <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
    <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
    <xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
    <xs:element name="UnsupportedActionException" type="tns:UnsupportedActionException"/>
    <xs:element name="VersionMismatchException" type="tns:VersionMismatchException"/>
    <xs:complexType name="OperationFailedException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DoesNotExistException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="InvalidParameterException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="MissingParameterException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DataValidationErrorException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="PermissionDeniedException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="VersionMismatchException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DependentObjectsExistException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="UnsupportedActionException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="AlreadyExistsException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="CircularReferenceException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="getLoHierarchy">
    <wsdl:part name="parameters" element="tns:getLoHierarchy">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part name="MissingParameterException" element="tns:MissingParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateObjectResponse">
    <wsdl:part name="parameters" element="tns:validateObjectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypeResponse">
    <wsdl:part name="parameters" element="tns:getSearchResultTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEnumerationResponse">
    <wsdl:part name="parameters" element="tns:getEnumerationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypesResponse">
    <wsdl:part name="parameters" element="tns:getSearchCriteriaTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoCategoriesForLoResponse">
    <wsdl:part name="parameters" element="tns:getLoCategoriesForLoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateLo">
    <wsdl:part name="parameters" element="tns:validateLo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addLoCategoryToLo">
    <wsdl:part name="parameters" element="tns:addLoCategoryToLo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="CircularReferenceException">
    <wsdl:part name="CircularReferenceException" element="tns:CircularReferenceException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createLoCategoryResponse">
    <wsdl:part name="parameters" element="tns:createLoCategoryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoTypeResponse">
    <wsdl:part name="parameters" element="tns:getLoTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoHierarchies">
    <wsdl:part name="parameters" element="tns:getLoHierarchies">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isDescendant">
    <wsdl:part name="parameters" element="tns:isDescendant">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypes">
    <wsdl:part name="parameters" element="tns:getObjectTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLoCategoryResponse">
    <wsdl:part name="parameters" element="tns:updateLoCategoryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isEquivalent">
    <wsdl:part name="parameters" element="tns:isEquivalent">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoEquivalentsResponse">
    <wsdl:part name="parameters" element="tns:getLoEquivalentsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEquivalentLos">
    <wsdl:part name="parameters" element="tns:getEquivalentLos">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part name="InvalidParameterException" element="tns:InvalidParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypeResponse">
    <wsdl:part name="parameters" element="tns:getSearchTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoChildren">
    <wsdl:part name="parameters" element="tns:getLoChildren">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoCategories">
    <wsdl:part name="parameters" element="tns:getLoCategories">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DataValidationErrorException">
    <wsdl:part name="DataValidationErrorException" element="tns:DataValidationErrorException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLoResponse">
    <wsdl:part name="parameters" element="tns:deleteLoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchType">
    <wsdl:part name="parameters" element="tns:getSearchType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part name="PermissionDeniedException" element="tns:PermissionDeniedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoHierarchyResponse">
    <wsdl:part name="parameters" element="tns:getLoHierarchyResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForResultsResponse">
    <wsdl:part name="parameters" element="tns:searchForResultsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLoResponse">
    <wsdl:part name="parameters" element="tns:updateLoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DependentObjectsExistException">
    <wsdl:part name="DependentObjectsExistException" element="tns:DependentObjectsExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAncestorsResponse">
    <wsdl:part name="parameters" element="tns:getAncestorsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypesResponse">
    <wsdl:part name="parameters" element="tns:getObjectTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeEquivalentLoFromLoResponse">
    <wsdl:part name="parameters" element="tns:removeEquivalentLoFromLoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addEquivalentLoToLoResponse">
    <wsdl:part name="parameters" element="tns:addEquivalentLoToLoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoCategoryResponse">
    <wsdl:part name="parameters" element="tns:getLoCategoryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLo">
    <wsdl:part name="parameters" element="tns:updateLo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoTypes">
    <wsdl:part name="parameters" element="tns:getLoTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLosByLoCategoryResponse">
    <wsdl:part name="parameters" element="tns:getLosByLoCategoryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isEquivalentResponse">
    <wsdl:part name="parameters" element="tns:isEquivalentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteriaResponse">
    <wsdl:part name="parameters" element="tns:getSearchTypesByCriteriaResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypes">
    <wsdl:part name="parameters" element="tns:getSearchTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAncestors">
    <wsdl:part name="parameters" element="tns:getAncestors">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoByIdListResponse">
    <wsdl:part name="parameters" element="tns:getLoByIdListResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllDescendants">
    <wsdl:part name="parameters" element="tns:getAllDescendants">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addLoCategoryToLoResponse">
    <wsdl:part name="parameters" element="tns:addLoCategoryToLoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEnumeration">
    <wsdl:part name="parameters" element="tns:getEnumeration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLoCategoryResponse">
    <wsdl:part name="parameters" element="tns:deleteLoCategoryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypesResponse">
    <wsdl:part name="parameters" element="tns:getSearchResultTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoTypesResponse">
    <wsdl:part name="parameters" element="tns:getLoTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypeResponse">
    <wsdl:part name="parameters" element="tns:getSearchCriteriaTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultType">
    <wsdl:part name="parameters" element="tns:getSearchResultType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateStructureDataResponse">
    <wsdl:part name="parameters" element="tns:validateStructureDataResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part name="DoesNotExistException" element="tns:DoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addChildLoToLoResponse">
    <wsdl:part name="parameters" element="tns:addChildLoToLoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoByIdList">
    <wsdl:part name="parameters" element="tns:getLoByIdList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoEquivalents">
    <wsdl:part name="parameters" element="tns:getLoEquivalents">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypes">
    <wsdl:part name="parameters" element="tns:getSearchResultTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEquivalentLosResponse">
    <wsdl:part name="parameters" element="tns:getEquivalentLosResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeLoCategoryFromLo">
    <wsdl:part name="parameters" element="tns:removeLoCategoryFromLo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeChildLoFromLo">
    <wsdl:part name="parameters" element="tns:removeChildLoFromLo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createLoResponse">
    <wsdl:part name="parameters" element="tns:createLoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLosByLoCategory">
    <wsdl:part name="parameters" element="tns:getLosByLoCategory">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoParents">
    <wsdl:part name="parameters" element="tns:getLoParents">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateLoResponse">
    <wsdl:part name="parameters" element="tns:validateLoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createLoCategory">
    <wsdl:part name="parameters" element="tns:createLoCategory">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addEquivalentLoToLo">
    <wsdl:part name="parameters" element="tns:addEquivalentLoToLo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateLoCategory">
    <wsdl:part name="parameters" element="tns:validateLoCategory">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createLo">
    <wsdl:part name="parameters" element="tns:createLo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoChildrenResponse">
    <wsdl:part name="parameters" element="tns:getLoChildrenResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoType">
    <wsdl:part name="parameters" element="tns:getLoType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoCategoriesForLo">
    <wsdl:part name="parameters" element="tns:getLoCategoriesForLo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateStructureData">
    <wsdl:part name="parameters" element="tns:validateStructureData">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoResponse">
    <wsdl:part name="parameters" element="tns:getLoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoParentsResponse">
    <wsdl:part name="parameters" element="tns:getLoParentsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResultResponse">
    <wsdl:part name="parameters" element="tns:getSearchTypesByResultResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteria">
    <wsdl:part name="parameters" element="tns:getSearchTypesByCriteria">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResult">
    <wsdl:part name="parameters" element="tns:getSearchTypesByResult">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypes">
    <wsdl:part name="parameters" element="tns:getSearchCriteriaTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructure">
    <wsdl:part name="parameters" element="tns:getObjectStructure">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeChildLoFromLoResponse">
    <wsdl:part name="parameters" element="tns:removeChildLoFromLoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllDescendantsResponse">
    <wsdl:part name="parameters" element="tns:getAllDescendantsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaType">
    <wsdl:part name="parameters" element="tns:getSearchCriteriaType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="VersionMismatchException">
    <wsdl:part name="VersionMismatchException" element="tns:VersionMismatchException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part name="OperationFailedException" element="tns:OperationFailedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLoCategory">
    <wsdl:part name="parameters" element="tns:updateLoCategory">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateObject">
    <wsdl:part name="parameters" element="tns:validateObject">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part name="AlreadyExistsException" element="tns:AlreadyExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateLoCategoryResponse">
    <wsdl:part name="parameters" element="tns:validateLoCategoryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addChildLoToLo">
    <wsdl:part name="parameters" element="tns:addChildLoToLo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoCategoriesResponse">
    <wsdl:part name="parameters" element="tns:getLoCategoriesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UnsupportedActionException">
    <wsdl:part name="UnsupportedActionException" element="tns:UnsupportedActionException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoHierarchiesResponse">
    <wsdl:part name="parameters" element="tns:getLoHierarchiesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForResults">
    <wsdl:part name="parameters" element="tns:searchForResults">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructureResponse">
    <wsdl:part name="parameters" element="tns:getObjectStructureResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoCategory">
    <wsdl:part name="parameters" element="tns:getLoCategory">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeLoCategoryFromLoResponse">
    <wsdl:part name="parameters" element="tns:removeLoCategoryFromLoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLoCategory">
    <wsdl:part name="parameters" element="tns:deleteLoCategory">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLo">
    <wsdl:part name="parameters" element="tns:getLo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesResponse">
    <wsdl:part name="parameters" element="tns:getSearchTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLo">
    <wsdl:part name="parameters" element="tns:deleteLo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeEquivalentLoFromLo">
    <wsdl:part name="parameters" element="tns:removeEquivalentLoFromLo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isDescendantResponse">
    <wsdl:part name="parameters" element="tns:isDescendantResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="LearningObjectiveService">
    <wsdl:operation name="getSearchCriteriaTypes">
      <wsdl:input name="getSearchCriteriaTypes" message="tns:getSearchCriteriaTypes">
    </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypesResponse" message="tns:getSearchCriteriaTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoTypes">
      <wsdl:input name="getLoTypes" message="tns:getLoTypes">
    </wsdl:input>
      <wsdl:output name="getLoTypesResponse" message="tns:getLoTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoType">
      <wsdl:input name="getLoType" message="tns:getLoType">
    </wsdl:input>
      <wsdl:output name="getLoTypeResponse" message="tns:getLoTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLoCategory">
      <wsdl:input name="updateLoCategory" message="tns:updateLoCategory">
    </wsdl:input>
      <wsdl:output name="updateLoCategoryResponse" message="tns:updateLoCategoryResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isEquivalent">
      <wsdl:input name="isEquivalent" message="tns:isEquivalent">
    </wsdl:input>
      <wsdl:output name="isEquivalentResponse" message="tns:isEquivalentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteLoCategory">
      <wsdl:input name="deleteLoCategory" message="tns:deleteLoCategory">
    </wsdl:input>
      <wsdl:output name="deleteLoCategoryResponse" message="tns:deleteLoCategoryResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException" message="tns:DependentObjectsExistException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeEquivalentLoFromLo">
      <wsdl:input name="removeEquivalentLoFromLo" message="tns:removeEquivalentLoFromLo">
    </wsdl:input>
      <wsdl:output name="removeEquivalentLoFromLoResponse" message="tns:removeEquivalentLoFromLoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <wsdl:input name="getObjectTypes" message="tns:getObjectTypes">
    </wsdl:input>
      <wsdl:output name="getObjectTypesResponse" message="tns:getObjectTypesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="validateStructureData">
      <wsdl:input name="validateStructureData" message="tns:validateStructureData">
    </wsdl:input>
      <wsdl:output name="validateStructureDataResponse" message="tns:validateStructureDataResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLoParents">
      <wsdl:input name="getLoParents" message="tns:getLoParents">
    </wsdl:input>
      <wsdl:output name="getLoParentsResponse" message="tns:getLoParentsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEquivalentLos">
      <wsdl:input name="getEquivalentLos" message="tns:getEquivalentLos">
    </wsdl:input>
      <wsdl:output name="getEquivalentLosResponse" message="tns:getEquivalentLosResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoCategories">
      <wsdl:input name="getLoCategories" message="tns:getLoCategories">
    </wsdl:input>
      <wsdl:output name="getLoCategoriesResponse" message="tns:getLoCategoriesResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoCategoriesForLo">
      <wsdl:input name="getLoCategoriesForLo" message="tns:getLoCategoriesForLo">
    </wsdl:input>
      <wsdl:output name="getLoCategoriesForLoResponse" message="tns:getLoCategoriesForLoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateLo">
      <wsdl:input name="validateLo" message="tns:validateLo">
    </wsdl:input>
      <wsdl:output name="validateLoResponse" message="tns:validateLoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <wsdl:input name="getSearchResultTypes" message="tns:getSearchResultTypes">
    </wsdl:input>
      <wsdl:output name="getSearchResultTypesResponse" message="tns:getSearchResultTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <wsdl:input name="getSearchResultType" message="tns:getSearchResultType">
    </wsdl:input>
      <wsdl:output name="getSearchResultTypeResponse" message="tns:getSearchResultTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEnumeration">
      <wsdl:input name="getEnumeration" message="tns:getEnumeration">
    </wsdl:input>
      <wsdl:output name="getEnumerationResponse" message="tns:getEnumerationResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchForResults">
      <wsdl:input name="searchForResults" message="tns:searchForResults">
    </wsdl:input>
      <wsdl:output name="searchForResultsResponse" message="tns:searchForResultsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllDescendants">
      <wsdl:input name="getAllDescendants" message="tns:getAllDescendants">
    </wsdl:input>
      <wsdl:output name="getAllDescendantsResponse" message="tns:getAllDescendantsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeLoCategoryFromLo">
      <wsdl:input name="removeLoCategoryFromLo" message="tns:removeLoCategoryFromLo">
    </wsdl:input>
      <wsdl:output name="removeLoCategoryFromLoResponse" message="tns:removeLoCategoryFromLoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="UnsupportedActionException" message="tns:UnsupportedActionException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <wsdl:input name="getSearchCriteriaType" message="tns:getSearchCriteriaType">
    </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypeResponse" message="tns:getSearchCriteriaTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateObject">
      <wsdl:input name="validateObject" message="tns:validateObject">
    </wsdl:input>
      <wsdl:output name="validateObjectResponse" message="tns:validateObjectResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLoByIdList">
      <wsdl:input name="getLoByIdList" message="tns:getLoByIdList">
    </wsdl:input>
      <wsdl:output name="getLoByIdListResponse" message="tns:getLoByIdListResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createLoCategory">
      <wsdl:input name="createLoCategory" message="tns:createLoCategory">
    </wsdl:input>
      <wsdl:output name="createLoCategoryResponse" message="tns:createLoCategoryResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <wsdl:input name="getSearchType" message="tns:getSearchType">
    </wsdl:input>
      <wsdl:output name="getSearchTypeResponse" message="tns:getSearchTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addLoCategoryToLo">
      <wsdl:input name="addLoCategoryToLo" message="tns:addLoCategoryToLo">
    </wsdl:input>
      <wsdl:output name="addLoCategoryToLoResponse" message="tns:addLoCategoryToLoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="UnsupportedActionException" message="tns:UnsupportedActionException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectStructure">
      <wsdl:input name="getObjectStructure" message="tns:getObjectStructure">
    </wsdl:input>
      <wsdl:output name="getObjectStructureResponse" message="tns:getObjectStructureResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLo">
      <wsdl:input name="getLo" message="tns:getLo">
    </wsdl:input>
      <wsdl:output name="getLoResponse" message="tns:getLoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoChildren">
      <wsdl:input name="getLoChildren" message="tns:getLoChildren">
    </wsdl:input>
      <wsdl:output name="getLoChildrenResponse" message="tns:getLoChildrenResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateLoCategory">
      <wsdl:input name="validateLoCategory" message="tns:validateLoCategory">
    </wsdl:input>
      <wsdl:output name="validateLoCategoryResponse" message="tns:validateLoCategoryResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeChildLoFromLo">
      <wsdl:input name="removeChildLoFromLo" message="tns:removeChildLoFromLo">
    </wsdl:input>
      <wsdl:output name="removeChildLoFromLoResponse" message="tns:removeChildLoFromLoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException" message="tns:DependentObjectsExistException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <wsdl:input name="getSearchTypes" message="tns:getSearchTypes">
    </wsdl:input>
      <wsdl:output name="getSearchTypesResponse" message="tns:getSearchTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createLo">
      <wsdl:input name="createLo" message="tns:createLo">
    </wsdl:input>
      <wsdl:output name="createLoResponse" message="tns:createLoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addEquivalentLoToLo">
      <wsdl:input name="addEquivalentLoToLo" message="tns:addEquivalentLoToLo">
    </wsdl:input>
      <wsdl:output name="addEquivalentLoToLoResponse" message="tns:addEquivalentLoToLoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAncestors">
      <wsdl:input name="getAncestors" message="tns:getAncestors">
    </wsdl:input>
      <wsdl:output name="getAncestorsResponse" message="tns:getAncestorsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isDescendant">
      <wsdl:input name="isDescendant" message="tns:isDescendant">
    </wsdl:input>
      <wsdl:output name="isDescendantResponse" message="tns:isDescendantResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <wsdl:input name="getSearchTypesByResult" message="tns:getSearchTypesByResult">
    </wsdl:input>
      <wsdl:output name="getSearchTypesByResultResponse" message="tns:getSearchTypesByResultResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoHierarchies">
      <wsdl:input name="getLoHierarchies" message="tns:getLoHierarchies">
    </wsdl:input>
      <wsdl:output name="getLoHierarchiesResponse" message="tns:getLoHierarchiesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoHierarchy">
      <wsdl:input name="getLoHierarchy" message="tns:getLoHierarchy">
    </wsdl:input>
      <wsdl:output name="getLoHierarchyResponse" message="tns:getLoHierarchyResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLosByLoCategory">
      <wsdl:input name="getLosByLoCategory" message="tns:getLosByLoCategory">
    </wsdl:input>
      <wsdl:output name="getLosByLoCategoryResponse" message="tns:getLosByLoCategoryResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLo">
      <wsdl:input name="updateLo" message="tns:updateLo">
    </wsdl:input>
      <wsdl:output name="updateLoResponse" message="tns:updateLoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addChildLoToLo">
      <wsdl:input name="addChildLoToLo" message="tns:addChildLoToLo">
    </wsdl:input>
      <wsdl:output name="addChildLoToLoResponse" message="tns:addChildLoToLoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="UnsupportedActionException" message="tns:UnsupportedActionException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="CircularReferenceException" message="tns:CircularReferenceException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteLo">
      <wsdl:input name="deleteLo" message="tns:deleteLo">
    </wsdl:input>
      <wsdl:output name="deleteLoResponse" message="tns:deleteLoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException" message="tns:DependentObjectsExistException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoCategory">
      <wsdl:input name="getLoCategory" message="tns:getLoCategory">
    </wsdl:input>
      <wsdl:output name="getLoCategoryResponse" message="tns:getLoCategoryResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <wsdl:input name="getSearchTypesByCriteria" message="tns:getSearchTypesByCriteria">
    </wsdl:input>
      <wsdl:output name="getSearchTypesByCriteriaResponse" message="tns:getSearchTypesByCriteriaResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoEquivalents">
      <wsdl:input name="getLoEquivalents" message="tns:getLoEquivalents">
    </wsdl:input>
      <wsdl:output name="getLoEquivalentsResponse" message="tns:getLoEquivalentsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LearningObjectiveServiceServiceSoapBinding" type="tns:LearningObjectiveService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getSearchCriteriaTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLoType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLoTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLoTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLoTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLoCategory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateLoCategory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateLoCategoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isEquivalent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isEquivalent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isEquivalentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteLoCategory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteLoCategory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteLoCategoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeEquivalentLoFromLo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeEquivalentLoFromLo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeEquivalentLoFromLoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoParents">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLoParents">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLoParentsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateStructureData">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateStructureData">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateStructureDataResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getEquivalentLos">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getEquivalentLos">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEquivalentLosResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoCategories">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLoCategories">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLoCategoriesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoCategoriesForLo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLoCategoriesForLo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLoCategoriesForLoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateLo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateLo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateLoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEnumeration">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getEnumeration">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEnumerationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllDescendants">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllDescendants">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllDescendantsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForResults">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForResults">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForResultsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeLoCategoryFromLo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeLoCategoryFromLo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeLoCategoryFromLoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnsupportedActionException">
        <soap:fault name="UnsupportedActionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateObject">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateObject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateObjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLoByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLoByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLoByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createLoCategory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createLoCategory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createLoCategoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addLoCategoryToLo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addLoCategoryToLo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addLoCategoryToLoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnsupportedActionException">
        <soap:fault name="UnsupportedActionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectStructure">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectStructure">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectStructureResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoChildren">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLoChildren">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLoChildrenResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeChildLoFromLo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeChildLoFromLo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeChildLoFromLoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateLoCategory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateLoCategory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateLoCategoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addEquivalentLoToLo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addEquivalentLoToLo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addEquivalentLoToLoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createLo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createLo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createLoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAncestors">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAncestors">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAncestorsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByResult">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByResultResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isDescendant">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isDescendant">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isDescendantResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoHierarchy">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLoHierarchy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLoHierarchyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoHierarchies">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLoHierarchies">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLoHierarchiesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLosByLoCategory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLosByLoCategory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLosByLoCategoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addChildLoToLo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addChildLoToLo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addChildLoToLoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnsupportedActionException">
        <soap:fault name="UnsupportedActionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="CircularReferenceException">
        <soap:fault name="CircularReferenceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateLo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateLoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteLo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteLo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteLoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoCategory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLoCategory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLoCategoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoEquivalents">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLoEquivalents">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLoEquivalentsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByCriteria">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByCriteriaResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LoService">
    <wsdl:port name="LearningObjectiveServicePort" binding="tns:LearningObjectiveServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/LearningObjectiveServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
