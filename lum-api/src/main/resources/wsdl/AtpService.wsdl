<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="AtpService" targetNamespace="http://org.kuali.student/lum/atp" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://org.kuali.student/lum/atp" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://org.kuali.student/lum/atp" xmlns:tns="http://org.kuali.student/core/search" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://org.kuali.student/core/search">
    <xs:import namespace="http://org.kuali.student/lum/atp"/>
    <xs:element name="fetchSearchCriteriaType" type="tns:fetchSearchCriteriaType"/>
    <xs:element name="fetchSearchCriteriaTypeResponse" type="tns:fetchSearchCriteriaTypeResponse"/>
    <xs:element name="fetchSearchResultType" type="tns:fetchSearchResultType"/>
    <xs:element name="fetchSearchResultTypeResponse" type="tns:fetchSearchResultTypeResponse"/>
    <xs:element name="fetchSearchType" type="tns:fetchSearchType"/>
    <xs:element name="fetchSearchTypeResponse" type="tns:fetchSearchTypeResponse"/>
    <xs:element name="findSearchCriteriaTypes" type="tns:findSearchCriteriaTypes"/>
    <xs:element name="findSearchCriteriaTypesResponse" type="tns:findSearchCriteriaTypesResponse"/>
    <xs:element name="findSearchResultTypes" type="tns:findSearchResultTypes"/>
    <xs:element name="findSearchResultTypesResponse" type="tns:findSearchResultTypesResponse"/>
    <xs:element name="findSearchTypes" type="tns:findSearchTypes"/>
    <xs:element name="findSearchTypesByCriteria" type="tns:findSearchTypesByCriteria"/>
    <xs:element name="findSearchTypesByCriteriaResponse" type="tns:findSearchTypesByCriteriaResponse"/>
    <xs:element name="findSearchTypesByResult" type="tns:findSearchTypesByResult"/>
    <xs:element name="findSearchTypesByResultResponse" type="tns:findSearchTypesByResultResponse"/>
    <xs:element name="findSearchTypesResponse" type="tns:findSearchTypesResponse"/>
    <xs:element name="searchForResults" type="tns:searchForResults"/>
    <xs:element name="searchForResultsResponse" type="tns:searchForResultsResponse"/>
    <xs:complexType name="findSearchTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="findSearchTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="ns1:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchSearchType">
        <xs:sequence>
            <xs:element minOccurs="0" name="searchTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchSearchTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findSearchTypesByCriteria">
        <xs:sequence>
            <xs:element minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findSearchTypesByCriteriaResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="ns1:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchSearchResultType">
        <xs:sequence>
            <xs:element minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchSearchResultTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:searchResultTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findSearchResultTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="findSearchResultTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="ns1:searchResultTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchForResults">
        <xs:sequence>
            <xs:element minOccurs="0" name="searchTypeKey" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="queryParamValues" type="ns1:queryParamValue"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchForResultsResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="ns1:result"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findSearchCriteriaTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="findSearchCriteriaTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="ns1:searchCriteriaTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findSearchTypesByResult">
        <xs:sequence>
            <xs:element minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findSearchTypesByResultResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="ns1:searchTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchSearchCriteriaType">
        <xs:sequence>
            <xs:element minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchSearchCriteriaTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:searchCriteriaTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://org.kuali.student/lum/atp" xmlns:tns="http://org.kuali.student/core/dictionary" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://org.kuali.student/core/dictionary">
    <xs:import namespace="http://org.kuali.student/lum/atp"/>
    <xs:element name="fetchEnumeration" type="tns:fetchEnumeration"/>
    <xs:element name="fetchEnumerationResponse" type="tns:fetchEnumerationResponse"/>
    <xs:element name="fetchObjectStructure" type="tns:fetchObjectStructure"/>
    <xs:element name="fetchObjectStructureResponse" type="tns:fetchObjectStructureResponse"/>
    <xs:element name="findObjectTypes" type="tns:findObjectTypes"/>
    <xs:element name="findObjectTypesResponse" type="tns:findObjectTypesResponse"/>
    <xs:complexType name="fetchEnumeration">
        <xs:sequence>
            <xs:element minOccurs="0" name="enumerationKey" type="xs:string"/>
            <xs:element minOccurs="0" name="contextType" type="xs:string"/>
            <xs:element minOccurs="0" name="contextValue" type="xs:string"/>
            <xs:element minOccurs="0" name="contextDate" type="xs:dateTime"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchEnumerationResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="ns1:enumeratedValue"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findObjectTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="findObjectTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchObjectStructure">
        <xs:sequence>
            <xs:element minOccurs="0" name="objectTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchObjectStructureResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:objectStructure"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://org.kuali.student/core/search" xmlns:ns1="http://org.kuali.student/core/dictionary" xmlns:tns="http://org.kuali.student/lum/atp" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://org.kuali.student/lum/atp">
    <xs:element name="addDateRange" type="tns:addDateRange"/>
    <xs:element name="addDateRangeResponse" type="tns:addDateRangeResponse"/>
    <xs:element name="addMilestone" type="tns:addMilestone"/>
    <xs:element name="addMilestoneResponse" type="tns:addMilestoneResponse"/>
    <xs:element name="createAtp" type="tns:createAtp"/>
    <xs:element name="createAtpResponse" type="tns:createAtpResponse"/>
    <xs:element name="deleteAtp" type="tns:deleteAtp"/>
    <xs:element name="deleteAtpResponse" type="tns:deleteAtpResponse"/>
    <xs:element name="fetchAtp" type="tns:fetchAtp"/>
    <xs:element name="fetchAtpDurationType" type="tns:fetchAtpDurationType"/>
    <xs:element name="fetchAtpDurationTypeResponse" type="tns:fetchAtpDurationTypeResponse"/>
    <xs:element name="fetchAtpResponse" type="tns:fetchAtpResponse"/>
    <xs:element name="fetchAtpSeasonalType" type="tns:fetchAtpSeasonalType"/>
    <xs:element name="fetchAtpSeasonalTypeResponse" type="tns:fetchAtpSeasonalTypeResponse"/>
    <xs:element name="fetchAtpType" type="tns:fetchAtpType"/>
    <xs:element name="fetchAtpTypeResponse" type="tns:fetchAtpTypeResponse"/>
    <xs:element name="fetchDateRange" type="tns:fetchDateRange"/>
    <xs:element name="fetchDateRangeResponse" type="tns:fetchDateRangeResponse"/>
    <xs:element name="fetchDateRangeType" type="tns:fetchDateRangeType"/>
    <xs:element name="fetchDateRangeTypeResponse" type="tns:fetchDateRangeTypeResponse"/>
    <xs:element name="fetchMilestone" type="tns:fetchMilestone"/>
    <xs:element name="fetchMilestoneResponse" type="tns:fetchMilestoneResponse"/>
    <xs:element name="fetchMilestoneType" type="tns:fetchMilestoneType"/>
    <xs:element name="fetchMilestoneTypeResponse" type="tns:fetchMilestoneTypeResponse"/>
    <xs:element name="findAtpDurationTypes" type="tns:findAtpDurationTypes"/>
    <xs:element name="findAtpDurationTypesResponse" type="tns:findAtpDurationTypesResponse"/>
    <xs:element name="findAtpSeasonalTypes" type="tns:findAtpSeasonalTypes"/>
    <xs:element name="findAtpSeasonalTypesResponse" type="tns:findAtpSeasonalTypesResponse"/>
    <xs:element name="findAtpTypes" type="tns:findAtpTypes"/>
    <xs:element name="findAtpTypesResponse" type="tns:findAtpTypesResponse"/>
    <xs:element name="findAtpsByAtpType" type="tns:findAtpsByAtpType"/>
    <xs:element name="findAtpsByAtpTypeResponse" type="tns:findAtpsByAtpTypeResponse"/>
    <xs:element name="findAtpsByDate" type="tns:findAtpsByDate"/>
    <xs:element name="findAtpsByDateResponse" type="tns:findAtpsByDateResponse"/>
    <xs:element name="findAtpsByDates" type="tns:findAtpsByDates"/>
    <xs:element name="findAtpsByDatesResponse" type="tns:findAtpsByDatesResponse"/>
    <xs:element name="findDateRangeTypes" type="tns:findDateRangeTypes"/>
    <xs:element name="findDateRangeTypesForAtpType" type="tns:findDateRangeTypesForAtpType"/>
    <xs:element name="findDateRangeTypesForAtpTypeResponse" type="tns:findDateRangeTypesForAtpTypeResponse"/>
    <xs:element name="findDateRangeTypesResponse" type="tns:findDateRangeTypesResponse"/>
    <xs:element name="findDateRangesByAtp" type="tns:findDateRangesByAtp"/>
    <xs:element name="findDateRangesByAtpResponse" type="tns:findDateRangesByAtpResponse"/>
    <xs:element name="findDateRangesByDate" type="tns:findDateRangesByDate"/>
    <xs:element name="findDateRangesByDateResponse" type="tns:findDateRangesByDateResponse"/>
    <xs:element name="findMilestoneTypes" type="tns:findMilestoneTypes"/>
    <xs:element name="findMilestoneTypesForAtpType" type="tns:findMilestoneTypesForAtpType"/>
    <xs:element name="findMilestoneTypesForAtpTypeResponse" type="tns:findMilestoneTypesForAtpTypeResponse"/>
    <xs:element name="findMilestoneTypesResponse" type="tns:findMilestoneTypesResponse"/>
    <xs:element name="findMilestonesByAtp" type="tns:findMilestonesByAtp"/>
    <xs:element name="findMilestonesByAtpResponse" type="tns:findMilestonesByAtpResponse"/>
    <xs:element name="findMilestonesByDates" type="tns:findMilestonesByDates"/>
    <xs:element name="findMilestonesByDatesAndType" type="tns:findMilestonesByDatesAndType"/>
    <xs:element name="findMilestonesByDatesAndTypeResponse" type="tns:findMilestonesByDatesAndTypeResponse"/>
    <xs:element name="findMilestonesByDatesResponse" type="tns:findMilestonesByDatesResponse"/>
    <xs:element name="removeDateRange" type="tns:removeDateRange"/>
    <xs:element name="removeDateRangeResponse" type="tns:removeDateRangeResponse"/>
    <xs:element name="removeMilestone" type="tns:removeMilestone"/>
    <xs:element name="removeMilestoneResponse" type="tns:removeMilestoneResponse"/>
    <xs:element name="updateAtp" type="tns:updateAtp"/>
    <xs:element name="updateAtpResponse" type="tns:updateAtpResponse"/>
    <xs:element name="updateDateRange" type="tns:updateDateRange"/>
    <xs:element name="updateDateRangeResponse" type="tns:updateDateRangeResponse"/>
    <xs:element name="updateMilestone" type="tns:updateMilestone"/>
    <xs:element name="updateMilestoneResponse" type="tns:updateMilestoneResponse"/>
    <xs:element name="validateAtp" type="tns:validateAtp"/>
    <xs:element name="validateAtpResponse" type="tns:validateAtpResponse"/>
    <xs:element name="validateDateRange" type="tns:validateDateRange"/>
    <xs:element name="validateDateRangeResponse" type="tns:validateDateRangeResponse"/>
    <xs:element name="validateMilestone" type="tns:validateMilestone"/>
    <xs:element name="validateMilestoneResponse" type="tns:validateMilestoneResponse"/>
    <xs:complexType name="validateDateRange">
        <xs:sequence>
            <xs:element minOccurs="0" name="validationType" type="xs:string"/>
            <xs:element minOccurs="0" name="dateRangeInfo" type="tns:dateRangeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="dateRangeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="atpKey" type="xs:string"/>
            <xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:attributeInfo"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="attributeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="metaInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="versionInd" type="xs:string"/>
            <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="createId" type="xs:string"/>
            <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="updateId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateDateRangeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="searchTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="searchResultTypeInfo" type="tns:searchResultTypeInfo"/>
            <xs:element minOccurs="0" name="searchCriteriaTypeInfo" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="searchResultTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="resultColumns" type="tns:resultColumnInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="resultColumnInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="dataType" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="searchCriteriaTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="queryParams" type="tns:queryParamInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="queryParamInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="fieldDescriptor" type="tns:fieldDescriptor"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="fieldDescriptor">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="dataType" type="xs:string"/>
            <xs:element minOccurs="0" name="minLength" type="xs:int"/>
            <xs:element minOccurs="0" name="maxLength" type="xs:string"/>
            <xs:element minOccurs="0" name="validChars" type="xs:string"/>
            <xs:element minOccurs="0" name="invalidChars" type="xs:string"/>
            <xs:element minOccurs="0" name="minValue" type="xs:string"/>
            <xs:element minOccurs="0" name="maxValue" type="xs:string"/>
            <xs:element minOccurs="0" name="enum" type="tns:enumFieldView"/>
            <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
            <xs:element minOccurs="0" name="readOnly" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="enumFieldView">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="contextDescriptors" type="tns:enumContextInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="enumContextInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="contextValueDescriptor" type="tns:fieldDescriptor"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="validateAtp">
        <xs:sequence>
            <xs:element minOccurs="0" name="validationType" type="xs:string"/>
            <xs:element minOccurs="0" name="atpInfo" type="tns:atpInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="atpInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="name" type="xs:string"/>
                    <xs:element minOccurs="0" name="desc" type="xs:string"/>
                    <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:attributeInfo"/>
                    <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
                </xs:sequence>
                <xs:attribute name="type" type="xs:string"/>
                <xs:attribute name="state" type="xs:string"/>
                <xs:attribute name="key" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType abstract="true" name="typeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:attributeInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="validateAtpResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="addDateRange">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpKey" type="xs:string"/>
            <xs:element minOccurs="0" name="dateRangeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="dateRangeInfo" type="tns:dateRangeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="addDateRangeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:dateRangeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findAtpsByDate">
        <xs:sequence>
            <xs:element minOccurs="0" name="searchDate" type="xs:dateTime"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findAtpsByDateResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="enumeratedValue">
        <xs:sequence>
            <xs:element minOccurs="0" name="code" type="xs:string"/>
            <xs:element minOccurs="0" name="abbrevValue" type="xs:string"/>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="sortKey" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="contexts" type="tns:enumContextValue"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="enumContextValue">
        <xs:sequence>
            <xs:element minOccurs="0" name="type" type="xs:string"/>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchDateRange">
        <xs:sequence>
            <xs:element minOccurs="0" name="dateRangeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchDateRangeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:dateRangeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findDateRangesByDate">
        <xs:sequence>
            <xs:element minOccurs="0" name="searchDate" type="xs:dateTime"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findDateRangesByDateResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findDateRangesByAtp">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findDateRangesByAtpResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findAtpDurationTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="findAtpDurationTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchMilestone">
        <xs:sequence>
            <xs:element minOccurs="0" name="milestoneKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchMilestoneResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:milestoneInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="milestoneInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="atpKey" type="xs:string"/>
            <xs:element minOccurs="0" name="milestoneDate" type="xs:dateTime"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:attributeInfo"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="fetchMilestoneType">
        <xs:sequence>
            <xs:element minOccurs="0" name="milestoneTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchMilestoneTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:milestoneTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="milestoneTypeInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="validateMilestone">
        <xs:sequence>
            <xs:element minOccurs="0" name="validationType" type="xs:string"/>
            <xs:element minOccurs="0" name="milestoneInfo" type="tns:milestoneInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateMilestoneResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findDateRangeTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="findDateRangeTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findAtpsByDates">
        <xs:sequence>
            <xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findAtpsByDatesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchAtpSeasonalType">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpSeasonalTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchAtpSeasonalTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:atpSeasonalTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="atpSeasonalTypeInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="createAtp">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="atpKey" type="xs:string"/>
            <xs:element minOccurs="0" name="atpInfo" type="tns:atpInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createAtpResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:atpInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findMilestonesByAtp">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findMilestonesByAtpResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findMilestoneTypesForAtpType">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findMilestoneTypesForAtpTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="queryParamValue">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="result">
        <xs:sequence>
            <xs:element minOccurs="0" name="resultCell" type="tns:resultCell"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="resultCell">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="findAtpSeasonalTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="findAtpSeasonalTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteAtp">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteAtpResponse">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="findAtpTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="findAtpTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchAtp">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchAtpResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:atpInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findMilestoneTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="findMilestoneTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="addMilestone">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpKey" type="xs:string"/>
            <xs:element minOccurs="0" name="milestoneKey" type="xs:string"/>
            <xs:element minOccurs="0" name="milestoneInfo" type="tns:milestoneInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="addMilestoneResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:milestoneInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findMilestonesByDates">
        <xs:sequence>
            <xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findMilestonesByDatesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="objectStructure">
        <xs:sequence>
            <xs:element minOccurs="0" name="type" type="tns:typeSelector"/>
        </xs:sequence>
        <xs:attribute name="objectTypeKey" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="typeSelector">
        <xs:sequence>
            <xs:element minOccurs="0" name="state" type="tns:stateSelector"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="stateSelector">
        <xs:sequence>
            <xs:element minOccurs="0" name="field" type="tns:fieldSelector"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="fieldSelector">
        <xs:sequence>
            <xs:element minOccurs="0" name="fieldDescriptor" type="tns:fieldDescriptor"/>
            <xs:element minOccurs="0" name="isSelector" type="xs:boolean"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="findMilestonesByDatesAndType">
        <xs:sequence>
            <xs:element minOccurs="0" name="milestoneTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findMilestonesByDatesAndTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateAtp">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpKey" type="xs:string"/>
            <xs:element minOccurs="0" name="atpInfo" type="tns:atpInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateAtpResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:atpInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchDateRangeType">
        <xs:sequence>
            <xs:element minOccurs="0" name="dateRangeTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchDateRangeTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:dateRangeTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="dateRangeTypeInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="updateDateRange">
        <xs:sequence>
            <xs:element minOccurs="0" name="dateRangeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="dateRangeInfo" type="tns:dateRangeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateDateRangeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:dateRangeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchAtpDurationType">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpDurationTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchAtpDurationTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:atpDurationTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="atpDurationTypeInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="findAtpsByAtpType">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findAtpsByAtpTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeDateRange">
        <xs:sequence>
            <xs:element minOccurs="0" name="dateRangeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeDateRangeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="statusInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="success" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeMilestone">
        <xs:sequence>
            <xs:element minOccurs="0" name="milestoneKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeMilestoneResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchAtpType">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchAtpTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:atpTypeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="atpTypeInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="durationType" type="xs:string"/>
                    <xs:element minOccurs="0" name="seasonalType" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="findDateRangeTypesForAtpType">
        <xs:sequence>
            <xs:element minOccurs="0" name="atpTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findDateRangeTypesForAtpTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateMilestone">
        <xs:sequence>
            <xs:element minOccurs="0" name="milestoneKey" type="xs:string"/>
            <xs:element minOccurs="0" name="milestoneInfo" type="tns:milestoneInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateMilestoneResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:milestoneInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
    <xs:complexType name="InvalidParameterException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
    <xs:complexType name="DoesNotExistException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
    <xs:complexType name="OperationFailedException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
    <xs:complexType name="MissingParameterException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="findSearchTypes" nillable="true" type="ns0:findSearchTypes"/>
    <xs:element name="findSearchTypesResponse" nillable="true" type="ns0:findSearchTypesResponse"/>
    <xs:element name="DataValidationErrorException" type="tns:DataValidationErrorException"/>
    <xs:complexType name="DataValidationErrorException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
    <xs:complexType name="AlreadyExistsException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
    <xs:complexType name="PermissionDeniedException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="fetchSearchType" nillable="true" type="ns0:fetchSearchType"/>
    <xs:element name="fetchSearchTypeResponse" nillable="true" type="ns0:fetchSearchTypeResponse"/>
    <xs:element name="findSearchTypesByCriteria" nillable="true" type="ns0:findSearchTypesByCriteria"/>
    <xs:element name="findSearchTypesByCriteriaResponse" nillable="true" type="ns0:findSearchTypesByCriteriaResponse"/>
    <xs:element name="fetchEnumeration" nillable="true" type="ns1:fetchEnumeration"/>
    <xs:element name="fetchEnumerationResponse" nillable="true" type="ns1:fetchEnumerationResponse"/>
    <xs:element name="fetchSearchResultType" nillable="true" type="ns0:fetchSearchResultType"/>
    <xs:element name="fetchSearchResultTypeResponse" nillable="true" type="ns0:fetchSearchResultTypeResponse"/>
    <xs:element name="findSearchResultTypes" nillable="true" type="ns0:findSearchResultTypes"/>
    <xs:element name="findSearchResultTypesResponse" nillable="true" type="ns0:findSearchResultTypesResponse"/>
    <xs:element name="searchForResults" nillable="true" type="ns0:searchForResults"/>
    <xs:element name="searchForResultsResponse" nillable="true" type="ns0:searchForResultsResponse"/>
    <xs:element name="findObjectTypes" nillable="true" type="ns1:findObjectTypes"/>
    <xs:element name="findObjectTypesResponse" nillable="true" type="ns1:findObjectTypesResponse"/>
    <xs:element name="fetchObjectStructure" nillable="true" type="ns1:fetchObjectStructure"/>
    <xs:element name="fetchObjectStructureResponse" nillable="true" type="ns1:fetchObjectStructureResponse"/>
    <xs:element name="VersionMismatchException" type="tns:VersionMismatchException"/>
    <xs:complexType name="VersionMismatchException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="findSearchCriteriaTypes" nillable="true" type="ns0:findSearchCriteriaTypes"/>
    <xs:element name="findSearchCriteriaTypesResponse" nillable="true" type="ns0:findSearchCriteriaTypesResponse"/>
    <xs:element name="findSearchTypesByResult" nillable="true" type="ns0:findSearchTypesByResult"/>
    <xs:element name="findSearchTypesByResultResponse" nillable="true" type="ns0:findSearchTypesByResultResponse"/>
    <xs:element name="fetchSearchCriteriaType" nillable="true" type="ns0:fetchSearchCriteriaType"/>
    <xs:element name="fetchSearchCriteriaTypeResponse" nillable="true" type="ns0:fetchSearchCriteriaTypeResponse"/>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="fetchAtpType">
    <wsdl:part name="parameters" element="tns:fetchAtpType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchObjectStructureResponse">
    <wsdl:part name="parameters" element="tns:fetchObjectStructureResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findSearchResultTypesResponse">
    <wsdl:part name="parameters" element="tns:findSearchResultTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAtpTypesResponse">
    <wsdl:part name="parameters" element="tns:findAtpTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findSearchCriteriaTypesResponse">
    <wsdl:part name="parameters" element="tns:findSearchCriteriaTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAtpSeasonalType">
    <wsdl:part name="parameters" element="tns:fetchAtpSeasonalType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchDateRange">
    <wsdl:part name="parameters" element="tns:fetchDateRange">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findDateRangeTypesForAtpTypeResponse">
    <wsdl:part name="parameters" element="tns:findDateRangeTypesForAtpTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findSearchTypesByCriteriaResponse">
    <wsdl:part name="parameters" element="tns:findSearchTypesByCriteriaResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateMilestoneResponse">
    <wsdl:part name="parameters" element="tns:updateMilestoneResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findObjectTypes">
    <wsdl:part name="parameters" element="tns:findObjectTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchMilestoneType">
    <wsdl:part name="parameters" element="tns:fetchMilestoneType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateAtpResponse">
    <wsdl:part name="parameters" element="tns:updateAtpResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateMilestone">
    <wsdl:part name="parameters" element="tns:validateMilestone">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findDateRangesByAtp">
    <wsdl:part name="parameters" element="tns:findDateRangesByAtp">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateMilestoneResponse">
    <wsdl:part name="parameters" element="tns:validateMilestoneResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findMilestoneTypesResponse">
    <wsdl:part name="parameters" element="tns:findMilestoneTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateAtpResponse">
    <wsdl:part name="parameters" element="tns:validateAtpResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DataValidationErrorException">
    <wsdl:part name="DataValidationErrorException" element="tns:DataValidationErrorException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForResultsResponse">
    <wsdl:part name="parameters" element="tns:searchForResultsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchDateRangeType">
    <wsdl:part name="parameters" element="tns:fetchDateRangeType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAtpsByAtpType">
    <wsdl:part name="parameters" element="tns:findAtpsByAtpType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part name="PermissionDeniedException" element="tns:PermissionDeniedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part name="InvalidParameterException" element="tns:InvalidParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAtpDurationTypes">
    <wsdl:part name="parameters" element="tns:findAtpDurationTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findMilestoneTypesForAtpTypeResponse">
    <wsdl:part name="parameters" element="tns:findMilestoneTypesForAtpTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findSearchTypesByResultResponse">
    <wsdl:part name="parameters" element="tns:findSearchTypesByResultResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchMilestoneResponse">
    <wsdl:part name="parameters" element="tns:fetchMilestoneResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAtpDurationTypesResponse">
    <wsdl:part name="parameters" element="tns:findAtpDurationTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAtp">
    <wsdl:part name="parameters" element="tns:fetchAtp">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAtpDurationTypeResponse">
    <wsdl:part name="parameters" element="tns:fetchAtpDurationTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeDateRange">
    <wsdl:part name="parameters" element="tns:removeDateRange">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateDateRangeResponse">
    <wsdl:part name="parameters" element="tns:updateDateRangeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addMilestoneResponse">
    <wsdl:part name="parameters" element="tns:addMilestoneResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAtpTypeResponse">
    <wsdl:part name="parameters" element="tns:fetchAtpTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAtpSeasonalTypeResponse">
    <wsdl:part name="parameters" element="tns:fetchAtpSeasonalTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findMilestonesByDates">
    <wsdl:part name="parameters" element="tns:findMilestonesByDates">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchSearchType">
    <wsdl:part name="parameters" element="tns:fetchSearchType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAtp">
    <wsdl:part name="parameters" element="tns:createAtp">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchEnumerationResponse">
    <wsdl:part name="parameters" element="tns:fetchEnumerationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchObjectStructure">
    <wsdl:part name="parameters" element="tns:fetchObjectStructure">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateAtp">
    <wsdl:part name="parameters" element="tns:validateAtp">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findDateRangeTypes">
    <wsdl:part name="parameters" element="tns:findDateRangeTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addMilestone">
    <wsdl:part name="parameters" element="tns:addMilestone">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeMilestoneResponse">
    <wsdl:part name="parameters" element="tns:removeMilestoneResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchEnumeration">
    <wsdl:part name="parameters" element="tns:fetchEnumeration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchDateRangeTypeResponse">
    <wsdl:part name="parameters" element="tns:fetchDateRangeTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateDateRange">
    <wsdl:part name="parameters" element="tns:validateDateRange">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part name="MissingParameterException" element="tns:MissingParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findSearchCriteriaTypes">
    <wsdl:part name="parameters" element="tns:findSearchCriteriaTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addDateRangeResponse">
    <wsdl:part name="parameters" element="tns:addDateRangeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchSearchCriteriaTypeResponse">
    <wsdl:part name="parameters" element="tns:fetchSearchCriteriaTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateDateRange">
    <wsdl:part name="parameters" element="tns:updateDateRange">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createAtpResponse">
    <wsdl:part name="parameters" element="tns:createAtpResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAtpsByAtpTypeResponse">
    <wsdl:part name="parameters" element="tns:findAtpsByAtpTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAtpsByDate">
    <wsdl:part name="parameters" element="tns:findAtpsByDate">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findDateRangesByDateResponse">
    <wsdl:part name="parameters" element="tns:findDateRangesByDateResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAtpsByDatesResponse">
    <wsdl:part name="parameters" element="tns:findAtpsByDatesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findSearchTypesByCriteria">
    <wsdl:part name="parameters" element="tns:findSearchTypesByCriteria">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteAtpResponse">
    <wsdl:part name="parameters" element="tns:deleteAtpResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeDateRangeResponse">
    <wsdl:part name="parameters" element="tns:removeDateRangeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAtpDurationType">
    <wsdl:part name="parameters" element="tns:fetchAtpDurationType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchDateRangeResponse">
    <wsdl:part name="parameters" element="tns:fetchDateRangeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findMilestonesByAtpResponse">
    <wsdl:part name="parameters" element="tns:findMilestonesByAtpResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateAtp">
    <wsdl:part name="parameters" element="tns:updateAtp">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findDateRangeTypesResponse">
    <wsdl:part name="parameters" element="tns:findDateRangeTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeMilestone">
    <wsdl:part name="parameters" element="tns:removeMilestone">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAtpResponse">
    <wsdl:part name="parameters" element="tns:fetchAtpResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchMilestoneTypeResponse">
    <wsdl:part name="parameters" element="tns:fetchMilestoneTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addDateRange">
    <wsdl:part name="parameters" element="tns:addDateRange">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForResults">
    <wsdl:part name="parameters" element="tns:searchForResults">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findDateRangesByDate">
    <wsdl:part name="parameters" element="tns:findDateRangesByDate">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAtpsByDateResponse">
    <wsdl:part name="parameters" element="tns:findAtpsByDateResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part name="AlreadyExistsException" element="tns:AlreadyExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part name="OperationFailedException" element="tns:OperationFailedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findMilestonesByDatesAndTypeResponse">
    <wsdl:part name="parameters" element="tns:findMilestonesByDatesAndTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="VersionMismatchException">
    <wsdl:part name="VersionMismatchException" element="tns:VersionMismatchException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findSearchTypesResponse">
    <wsdl:part name="parameters" element="tns:findSearchTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findMilestonesByAtp">
    <wsdl:part name="parameters" element="tns:findMilestonesByAtp">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findDateRangesByAtpResponse">
    <wsdl:part name="parameters" element="tns:findDateRangesByAtpResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateDateRangeResponse">
    <wsdl:part name="parameters" element="tns:validateDateRangeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAtpsByDates">
    <wsdl:part name="parameters" element="tns:findAtpsByDates">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findObjectTypesResponse">
    <wsdl:part name="parameters" element="tns:findObjectTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findMilestoneTypes">
    <wsdl:part name="parameters" element="tns:findMilestoneTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchSearchCriteriaType">
    <wsdl:part name="parameters" element="tns:fetchSearchCriteriaType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findMilestoneTypesForAtpType">
    <wsdl:part name="parameters" element="tns:findMilestoneTypesForAtpType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findMilestonesByDatesResponse">
    <wsdl:part name="parameters" element="tns:findMilestonesByDatesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchSearchResultType">
    <wsdl:part name="parameters" element="tns:fetchSearchResultType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteAtp">
    <wsdl:part name="parameters" element="tns:deleteAtp">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAtpSeasonalTypes">
    <wsdl:part name="parameters" element="tns:findAtpSeasonalTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findSearchTypesByResult">
    <wsdl:part name="parameters" element="tns:findSearchTypesByResult">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchSearchTypeResponse">
    <wsdl:part name="parameters" element="tns:fetchSearchTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchSearchResultTypeResponse">
    <wsdl:part name="parameters" element="tns:fetchSearchResultTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAtpSeasonalTypesResponse">
    <wsdl:part name="parameters" element="tns:findAtpSeasonalTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findSearchTypes">
    <wsdl:part name="parameters" element="tns:findSearchTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findDateRangeTypesForAtpType">
    <wsdl:part name="parameters" element="tns:findDateRangeTypesForAtpType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findMilestonesByDatesAndType">
    <wsdl:part name="parameters" element="tns:findMilestonesByDatesAndType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findSearchResultTypes">
    <wsdl:part name="parameters" element="tns:findSearchResultTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAtpTypes">
    <wsdl:part name="parameters" element="tns:findAtpTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchMilestone">
    <wsdl:part name="parameters" element="tns:fetchMilestone">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part name="DoesNotExistException" element="tns:DoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateMilestone">
    <wsdl:part name="parameters" element="tns:updateMilestone">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="AtpService">
    <wsdl:operation name="validateDateRange">
      <wsdl:input name="validateDateRange" message="tns:validateDateRange">
    </wsdl:input>
      <wsdl:output name="validateDateRangeResponse" message="tns:validateDateRangeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findSearchTypes">
      <wsdl:input name="findSearchTypes" message="tns:findSearchTypes">
    </wsdl:input>
      <wsdl:output name="findSearchTypesResponse" message="tns:findSearchTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateAtp">
      <wsdl:input name="validateAtp" message="tns:validateAtp">
    </wsdl:input>
      <wsdl:output name="validateAtpResponse" message="tns:validateAtpResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDateRange">
      <wsdl:input name="addDateRange" message="tns:addDateRange">
    </wsdl:input>
      <wsdl:output name="addDateRangeResponse" message="tns:addDateRangeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchSearchType">
      <wsdl:input name="fetchSearchType" message="tns:fetchSearchType">
    </wsdl:input>
      <wsdl:output name="fetchSearchTypeResponse" message="tns:fetchSearchTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findSearchTypesByCriteria">
      <wsdl:input name="findSearchTypesByCriteria" message="tns:findSearchTypesByCriteria">
    </wsdl:input>
      <wsdl:output name="findSearchTypesByCriteriaResponse" message="tns:findSearchTypesByCriteriaResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAtpsByDate">
      <wsdl:input name="findAtpsByDate" message="tns:findAtpsByDate">
    </wsdl:input>
      <wsdl:output name="findAtpsByDateResponse" message="tns:findAtpsByDateResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchEnumeration">
      <wsdl:input name="fetchEnumeration" message="tns:fetchEnumeration">
    </wsdl:input>
      <wsdl:output name="fetchEnumerationResponse" message="tns:fetchEnumerationResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchDateRange">
      <wsdl:input name="fetchDateRange" message="tns:fetchDateRange">
    </wsdl:input>
      <wsdl:output name="fetchDateRangeResponse" message="tns:fetchDateRangeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findDateRangesByDate">
      <wsdl:input name="findDateRangesByDate" message="tns:findDateRangesByDate">
    </wsdl:input>
      <wsdl:output name="findDateRangesByDateResponse" message="tns:findDateRangesByDateResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findDateRangesByAtp">
      <wsdl:input name="findDateRangesByAtp" message="tns:findDateRangesByAtp">
    </wsdl:input>
      <wsdl:output name="findDateRangesByAtpResponse" message="tns:findDateRangesByAtpResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAtpDurationTypes">
      <wsdl:input name="findAtpDurationTypes" message="tns:findAtpDurationTypes">
    </wsdl:input>
      <wsdl:output name="findAtpDurationTypesResponse" message="tns:findAtpDurationTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchMilestone">
      <wsdl:input name="fetchMilestone" message="tns:fetchMilestone">
    </wsdl:input>
      <wsdl:output name="fetchMilestoneResponse" message="tns:fetchMilestoneResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchSearchResultType">
      <wsdl:input name="fetchSearchResultType" message="tns:fetchSearchResultType">
    </wsdl:input>
      <wsdl:output name="fetchSearchResultTypeResponse" message="tns:fetchSearchResultTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchMilestoneType">
      <wsdl:input name="fetchMilestoneType" message="tns:fetchMilestoneType">
    </wsdl:input>
      <wsdl:output name="fetchMilestoneTypeResponse" message="tns:fetchMilestoneTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateMilestone">
      <wsdl:input name="validateMilestone" message="tns:validateMilestone">
    </wsdl:input>
      <wsdl:output name="validateMilestoneResponse" message="tns:validateMilestoneResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findDateRangeTypes">
      <wsdl:input name="findDateRangeTypes" message="tns:findDateRangeTypes">
    </wsdl:input>
      <wsdl:output name="findDateRangeTypesResponse" message="tns:findDateRangeTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findSearchResultTypes">
      <wsdl:input name="findSearchResultTypes" message="tns:findSearchResultTypes">
    </wsdl:input>
      <wsdl:output name="findSearchResultTypesResponse" message="tns:findSearchResultTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAtpsByDates">
      <wsdl:input name="findAtpsByDates" message="tns:findAtpsByDates">
    </wsdl:input>
      <wsdl:output name="findAtpsByDatesResponse" message="tns:findAtpsByDatesResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAtpSeasonalType">
      <wsdl:input name="fetchAtpSeasonalType" message="tns:fetchAtpSeasonalType">
    </wsdl:input>
      <wsdl:output name="fetchAtpSeasonalTypeResponse" message="tns:fetchAtpSeasonalTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAtp">
      <wsdl:input name="createAtp" message="tns:createAtp">
    </wsdl:input>
      <wsdl:output name="createAtpResponse" message="tns:createAtpResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findMilestonesByAtp">
      <wsdl:input name="findMilestonesByAtp" message="tns:findMilestonesByAtp">
    </wsdl:input>
      <wsdl:output name="findMilestonesByAtpResponse" message="tns:findMilestonesByAtpResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findMilestoneTypesForAtpType">
      <wsdl:input name="findMilestoneTypesForAtpType" message="tns:findMilestoneTypesForAtpType">
    </wsdl:input>
      <wsdl:output name="findMilestoneTypesForAtpTypeResponse" message="tns:findMilestoneTypesForAtpTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForResults">
      <wsdl:input name="searchForResults" message="tns:searchForResults">
    </wsdl:input>
      <wsdl:output name="searchForResultsResponse" message="tns:searchForResultsResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAtpSeasonalTypes">
      <wsdl:input name="findAtpSeasonalTypes" message="tns:findAtpSeasonalTypes">
    </wsdl:input>
      <wsdl:output name="findAtpSeasonalTypesResponse" message="tns:findAtpSeasonalTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findObjectTypes">
      <wsdl:input name="findObjectTypes" message="tns:findObjectTypes">
    </wsdl:input>
      <wsdl:output name="findObjectTypesResponse" message="tns:findObjectTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAtp">
      <wsdl:input name="deleteAtp" message="tns:deleteAtp">
    </wsdl:input>
      <wsdl:output name="deleteAtpResponse" message="tns:deleteAtpResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAtpTypes">
      <wsdl:input name="findAtpTypes" message="tns:findAtpTypes">
    </wsdl:input>
      <wsdl:output name="findAtpTypesResponse" message="tns:findAtpTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAtp">
      <wsdl:input name="fetchAtp" message="tns:fetchAtp">
    </wsdl:input>
      <wsdl:output name="fetchAtpResponse" message="tns:fetchAtpResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findMilestoneTypes">
      <wsdl:input name="findMilestoneTypes" message="tns:findMilestoneTypes">
    </wsdl:input>
      <wsdl:output name="findMilestoneTypesResponse" message="tns:findMilestoneTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addMilestone">
      <wsdl:input name="addMilestone" message="tns:addMilestone">
    </wsdl:input>
      <wsdl:output name="addMilestoneResponse" message="tns:addMilestoneResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findMilestonesByDates">
      <wsdl:input name="findMilestonesByDates" message="tns:findMilestonesByDates">
    </wsdl:input>
      <wsdl:output name="findMilestonesByDatesResponse" message="tns:findMilestonesByDatesResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchObjectStructure">
      <wsdl:input name="fetchObjectStructure" message="tns:fetchObjectStructure">
    </wsdl:input>
      <wsdl:output name="fetchObjectStructureResponse" message="tns:fetchObjectStructureResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findMilestonesByDatesAndType">
      <wsdl:input name="findMilestonesByDatesAndType" message="tns:findMilestonesByDatesAndType">
    </wsdl:input>
      <wsdl:output name="findMilestonesByDatesAndTypeResponse" message="tns:findMilestonesByDatesAndTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateAtp">
      <wsdl:input name="updateAtp" message="tns:updateAtp">
    </wsdl:input>
      <wsdl:output name="updateAtpResponse" message="tns:updateAtpResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchDateRangeType">
      <wsdl:input name="fetchDateRangeType" message="tns:fetchDateRangeType">
    </wsdl:input>
      <wsdl:output name="fetchDateRangeTypeResponse" message="tns:fetchDateRangeTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateDateRange">
      <wsdl:input name="updateDateRange" message="tns:updateDateRange">
    </wsdl:input>
      <wsdl:output name="updateDateRangeResponse" message="tns:updateDateRangeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAtpDurationType">
      <wsdl:input name="fetchAtpDurationType" message="tns:fetchAtpDurationType">
    </wsdl:input>
      <wsdl:output name="fetchAtpDurationTypeResponse" message="tns:fetchAtpDurationTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findSearchCriteriaTypes">
      <wsdl:input name="findSearchCriteriaTypes" message="tns:findSearchCriteriaTypes">
    </wsdl:input>
      <wsdl:output name="findSearchCriteriaTypesResponse" message="tns:findSearchCriteriaTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAtpsByAtpType">
      <wsdl:input name="findAtpsByAtpType" message="tns:findAtpsByAtpType">
    </wsdl:input>
      <wsdl:output name="findAtpsByAtpTypeResponse" message="tns:findAtpsByAtpTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeDateRange">
      <wsdl:input name="removeDateRange" message="tns:removeDateRange">
    </wsdl:input>
      <wsdl:output name="removeDateRangeResponse" message="tns:removeDateRangeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findSearchTypesByResult">
      <wsdl:input name="findSearchTypesByResult" message="tns:findSearchTypesByResult">
    </wsdl:input>
      <wsdl:output name="findSearchTypesByResultResponse" message="tns:findSearchTypesByResultResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeMilestone">
      <wsdl:input name="removeMilestone" message="tns:removeMilestone">
    </wsdl:input>
      <wsdl:output name="removeMilestoneResponse" message="tns:removeMilestoneResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchSearchCriteriaType">
      <wsdl:input name="fetchSearchCriteriaType" message="tns:fetchSearchCriteriaType">
    </wsdl:input>
      <wsdl:output name="fetchSearchCriteriaTypeResponse" message="tns:fetchSearchCriteriaTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAtpType">
      <wsdl:input name="fetchAtpType" message="tns:fetchAtpType">
    </wsdl:input>
      <wsdl:output name="fetchAtpTypeResponse" message="tns:fetchAtpTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findDateRangeTypesForAtpType">
      <wsdl:input name="findDateRangeTypesForAtpType" message="tns:findDateRangeTypesForAtpType">
    </wsdl:input>
      <wsdl:output name="findDateRangeTypesForAtpTypeResponse" message="tns:findDateRangeTypesForAtpTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateMilestone">
      <wsdl:input name="updateMilestone" message="tns:updateMilestone">
    </wsdl:input>
      <wsdl:output name="updateMilestoneResponse" message="tns:updateMilestoneResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException" message="tns:DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="AtpServiceServiceSoapBinding" type="tns:AtpService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="findSearchTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findSearchTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findSearchTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateDateRange">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateDateRange">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateDateRangeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateAtp">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateAtp">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateAtpResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addDateRange">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addDateRange">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addDateRangeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchSearchType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchSearchType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchSearchTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findSearchTypesByCriteria">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findSearchTypesByCriteria">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findSearchTypesByCriteriaResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAtpsByDate">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findAtpsByDate">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAtpsByDateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchEnumeration">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchEnumeration">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchEnumerationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchDateRange">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchDateRange">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchDateRangeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findDateRangesByDate">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findDateRangesByDate">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findDateRangesByDateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchMilestone">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchMilestone">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchMilestoneResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAtpDurationTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findAtpDurationTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAtpDurationTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findDateRangesByAtp">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findDateRangesByAtp">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findDateRangesByAtpResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchSearchResultType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchSearchResultType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchSearchResultTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchMilestoneType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchMilestoneType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchMilestoneTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateMilestone">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateMilestone">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateMilestoneResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findDateRangeTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findDateRangeTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findDateRangeTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAtpsByDates">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findAtpsByDates">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAtpsByDatesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findSearchResultTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findSearchResultTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findSearchResultTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createAtp">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createAtp">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createAtpResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAtpSeasonalType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchAtpSeasonalType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchAtpSeasonalTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findMilestoneTypesForAtpType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findMilestoneTypesForAtpType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findMilestoneTypesForAtpTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findMilestonesByAtp">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findMilestonesByAtp">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findMilestonesByAtpResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAtpSeasonalTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findAtpSeasonalTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAtpSeasonalTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForResults">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForResults">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForResultsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteAtp">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteAtp">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteAtpResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findObjectTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findObjectTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findObjectTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAtpTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findAtpTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAtpTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAtp">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchAtp">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchAtpResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findMilestoneTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findMilestoneTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findMilestoneTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addMilestone">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addMilestone">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addMilestoneResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchObjectStructure">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchObjectStructure">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchObjectStructureResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findMilestonesByDates">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findMilestonesByDates">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findMilestonesByDatesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findMilestonesByDatesAndType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findMilestonesByDatesAndType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findMilestonesByDatesAndTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateAtp">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateAtp">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateAtpResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchDateRangeType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchDateRangeType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchDateRangeTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAtpDurationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchAtpDurationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchAtpDurationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateDateRange">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateDateRange">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateDateRangeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAtpsByAtpType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findAtpsByAtpType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAtpsByAtpTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findSearchCriteriaTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findSearchCriteriaTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findSearchCriteriaTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findSearchTypesByResult">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findSearchTypesByResult">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findSearchTypesByResultResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeDateRange">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeDateRange">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeDateRangeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeMilestone">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeMilestone">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeMilestoneResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAtpType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchAtpType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchAtpTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchSearchCriteriaType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchSearchCriteriaType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchSearchCriteriaTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findDateRangeTypesForAtpType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findDateRangeTypesForAtpType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findDateRangeTypesForAtpTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateMilestone">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateMilestone">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateMilestoneResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="AtpService">
    <wsdl:port name="AtpServicePort" binding="tns:AtpServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/AtpServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
