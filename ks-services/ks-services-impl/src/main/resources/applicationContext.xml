<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
  
 
  
  <!-- Infrastructure code which handles invocation for all service impls -->
  <bean id = "layeringAspects" class="org.kuali.student.enrollment.lpr.service.aspect.ServiceAspectLayering">
    <!-- Declare various impls here, put them in the order that you want them invoked -->
    <property name="serviceImpls">
      <list>
        <ref bean="lprServiceAuthorizer" />
        <ref bean="lprServiceValidator" />
      </list>
    </property>
    <property name="includeThrowableClassList">
      <list>
       <ref bean="kualiInvalidParamException"/>
       <ref bean="kualiReadOnlyException"/>
       <ref bean="kualiOperationFailedException"/>
      </list>
   </property>
   <property name ="servicePostProcessClasses">
      <list>
        <ref bean="lprServicePostProcessingBean"/>    
      </list>
   </property>
   </bean>
  
    <!-- declare beans here -->
    <bean id ="lprService" class="org.kuali.student.enrollment.lpr.service.impl.LuiPersonRelationServiceImpl" />
    <bean id="lprUtility" class="org.kuali.student.enrollment.lpr.service.util.ConcreteLPRUtility" />
    
    <!-- declare impls here -->
    <bean id="lprServiceValidator" class="org.kuali.student.enrollment.lpr.service.impl.LuiPersonRelationServiceValidationImpl">
     <property name="lprUtility" ref="lprUtility"/>
    </bean>
    <bean id="lprServiceAuthorizer" class="org.kuali.student.enrollment.lpr.service.impl.LuiPersonRelationServiceAuthorizationImpl" />
     
    <!-- declaring post processing impls here -->
    <bean id="lprServicePostProcessingBean" class="org.kuali.student.enrollment.lpr.service.impl.LuiPersonRelationServiceImplPostProcessing" /> 
     
    <!--  declare all service exceptions here or in KS core -->
    <bean id="kualiInvalidParamException" class="org.kuali.student.core.exceptions.InvalidParameterException" />
    <bean id="kualiOperationFailedException" class="org.kuali.student.core.exceptions.OperationFailedException" />
    <bean id="kualiReadOnlyException" class="org.kuali.student.core.exceptions.ReadOnlyException" />
        
    <aop:config>

     
     <aop:aspect id="serviceLayeringAspect" ref="layeringAspects">
       <aop:pointcut id="lprLayeringPointcut" expression="bean(lprService)"/>
       <aop:around pointcut-ref="lprLayeringPointcut" method="performLayeringCalls"/>
       
       <aop:pointcut id="lprExceptionPointCut" expression="execution(* org.kuali.student.enrollment.lpr.service.impl..*.*(..))"/>
       <aop:after-throwing pointcut-ref="lprExceptionPointCut" throwing="ex" method="handleExceptions"/>
   
       <aop:pointcut id="lprMaskingPointcut" expression="execution(* org.kuali.student.enrollment.lpr.service.impl.LuiPersonRelationServiceImpl.*(..))"  />
       <aop:after-returning pointcut-ref="lprMaskingPointcut" returning="returnValue" arg-names="returnValue" method="afterReturning"/>
     </aop:aspect>
    </aop:config>
   
    <!--TODO create a luiStacker and configure it too-->
    <bean id = "luiMockImpl" class="org.kuali.student.enrollment.lui.mock.LuiServiceMockPersistenceImpl" />
    <bean id = "mockPermissionService" class="org.kuali.student.kim.mock.PermissionServiceMockImpl" />
    <bean id = "mockIdentityService" class="org.kuali.student.kim.mock.IdentityServiceMockImpl" />
    <bean id = "lprAdapterStackerService" class="org.kuali.student.enrollment.lpr.service.adapter.config.LuiPersonRelationAdapterStacker"
      init-method="init">
    <!--
	// Default support services to use if not otherwise configured
    -->
	<property name="luiService" ref="luiMockImpl" />
	<property name="identityService" ref="mockIdentityService" />
	<property name="permissionService" ref="mockPermissionService" />

    <!--
	// Implementation Stack
    -->
	<property name="cleanupImpls" >
		<list>
			<bean class="org.kuali.student.enrollment.lpr.service.adapter.cleanup.LuiPersonRelationRuntimeExceptionCatcherAdapter" />
		</list>
	</property>
	<property name="calculationImpls" >
		<list>
		</list>
	</property>	
	<property name="authorizationImpls" >
		<list>
			<bean class="org.kuali.student.enrollment.lpr.service.adapter.authorization.LuiPersonRelationAuthorizationAdapter" />
		</list>
	</property>	
	<property name="validaitonImpls" >
		<list>
			<bean class="org.kuali.student.enrollment.lpr.service.adapter.validation.LuiPersonRelationMissingParameterCheckerAdapter" />
			<bean class="org.kuali.student.enrollment.lpr.service.adapter.validation.LuiPersonRelationReadOnlyFieldUpdatesCheckerAdapter" />
		</list>
	</property>
	<property name="sideEffectImpls" >
		<list>
		</list>
	</property>
	<property name="persistenceImpls" >
		<list>
			<bean class="org.kuali.student.enrollment.lpr.mock.LuiPersonRelationServiceMockPersistenceImpl" />
		</list>
	</property>
</bean>

</beans>