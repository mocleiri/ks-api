ID,ATTR_NAME,ATTR_VALUE,LANGUAGE,NL_USUAGE_TYPE_KEY,TEMPLATE,OWNER,OBJ_ID,VER_NBR
"1","${mpx.null}","${mpx.null}","en","KUALI.RULE","#if($courseCluSet.getCluList().size() <= 1)Must not have completed $courseCluSet.getCluSetAsCode()#{else}Must not have completed #if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}any courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range $courseCluSet.getCluSetAsCode()#end#end","kuali.reqComponent.type.course.courseset.completed.none","${mpx.null}","0"
"1001","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have successfully completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}program${mpx.quote}) from $programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.completed.nof","${mpx.null}","0"
"1002","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must not have successfully completed #if($programCluSet.getCluList().size() > 1)any of #end$programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.notcompleted.nof","${mpx.null}","0"
"1003","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have successfully completed #if($programCluSet.getCluList().size() != 1)all of #end$programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.completed.all","${mpx.null}","0"
"1004","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have successfully completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from $programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.coursecompleted.nof","${mpx.null}","0"
"1005","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must be admitted to program prior to earning $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.program.admitted.credits","${mpx.null}","0"
"1006","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have earned a minimum of $intValue total $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.program.credits.min","${mpx.null}","0"
"1007","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must not have earned more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.program.credits.max","${mpx.null}","0"
"1008","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must not exceed $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase() without completing program","kuali.reqComponent.type.program.completion.duration","${mpx.null}","0"
"1009","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must attain candidate status within $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase() after program entry term","kuali.reqComponent.type.program.candidate.status.duration","${mpx.null}","0"
"101","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","#if($courseCluSet.getCluList().size() <= 1)Must not have completed#{else}Must not have completed #if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}any courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.completed.none","${mpx.null}","0"
"1010","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must complete program within $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase() after program entry term","kuali.reqComponent.type.program.completion.duration.afterentry","${mpx.null}","0"
"1011","${mpx.null}","${mpx.null}","en","KUALI.RULE","$programClu.getOfficialIdentifier().getLongName() students must take their final $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) in residence","kuali.reqComponent.type.program.residence.credits.final","${mpx.null}","0"
"1012","${mpx.null}","${mpx.null}","en","KUALI.RULE","$programClu.getOfficialIdentifier().getLongName() students must be enrolled in their graduation major for the final $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) taken","kuali.reqComponent.type.program.enrolled.credits.final","${mpx.null}","0"
"1013","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must earn no more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}minor${mpx.quote}) as part of a program","kuali.reqComponent.type.program.minors.nof","${mpx.null}","0"
"1014","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must be admitted to a minor program only if they have junior or senior class standing","kuali.reqComponent.type.program.minor.admitted.classstanding","${mpx.null}","0"
"1015","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have successfully completed no more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from $courseCluSet.getCluSetAsCode()","kuali.reqComponent.type.course.courseset.completed.max","${mpx.null}","0"
"1016","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have earned a minimum cumulative GPA of $gpa","kuali.reqComponent.type.program.cumulative.gpa.min","${mpx.null}","0"
"1017","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have earned a minimum $durationType.getName().toLowerCase() GPA of $gpa","kuali.reqComponent.type.program.duration.gpa.min","${mpx.null}","0"
"102","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","#if($courseCluSet.getCluList().size() <= 1)Must have completed $courseCluSet.getCluSetAsCode()#{else}Must have completed #if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}all courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.completed.all","${mpx.null}","0"
"103","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","#if(($intValue == 1 && $courseCluSet.getCluList().size() == 1) || ($courseCluSet.getCluList().size() <= 1))Must have completed $courseCluSet.getCluSetAsCode()#{else}Must have completed #if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end#if($intValue > 1)a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from #end$courses#{else}a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.completed.nof","${mpx.null}","0"
"104","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must be concurrently enrolled in #if(($intValue == 1 && $courseCluSet.getCluList().size() == 1) || ($courseCluSet.getCluList().size() <= 1))$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end#if($intValue > 1)a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from #end$courses#{else}a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.enrolled.nof","${mpx.null}","0"
"105","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) from #if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})$courseCluSet.getCluSetAsCode()#{else}#set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end","kuali.reqComponent.type.course.courseset.credits.completed.nof","${mpx.null}","0"
"109","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","#if($courseCluSet.getCluList().size() <= 1)Must be concurrently enrolled in $courseCluSet.getCluSetAsCode()#{else}Must be concurrently enrolled in #if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}all courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.enrolled.all","${mpx.null}","0"
"1101","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have successfully completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}program${mpx.quote}) from $programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.completed.nof","${mpx.null}","0"
"1102","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must not have successfully completed #if($programCluSet.getCluList().size() > 1)any of #end$programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.notcompleted.nof","${mpx.null}","0"
"1103","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have successfully completed #if($programCluSet.getCluList().size() != 1)all of #end$programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.completed.all","${mpx.null}","0"
"1104","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have successfully completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from $programCluSet.getCluSetAsLongName() $NLHelper.getProperGrammar($programCluSet.getCluList().size(), ${mpx.quote}program${mpx.quote})","kuali.reqComponent.type.program.programset.coursecompleted.nof","${mpx.null}","0"
"1105","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must be admitted to program prior to earning $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.program.admitted.credits","${mpx.null}","0"
"1106","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have earned a minimum of $intValue total $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.program.credits.min","${mpx.null}","0"
"1107","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must not have earned more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.program.credits.max","${mpx.null}","0"
"1108","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must not exceed $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase() without completing program","kuali.reqComponent.type.program.completion.duration","${mpx.null}","0"
"1109","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must attain candidate status within $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase() after program entry term","kuali.reqComponent.type.program.candidate.status.duration","${mpx.null}","0"
"1110","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must complete program within $duration $NLHelper.getProperGrammar($duration, $durationType.getName()).toLowerCase() after program entry term","kuali.reqComponent.type.program.completion.duration.afterentry","${mpx.null}","0"
"1111","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","$programClu.getOfficialIdentifier().getLongName() students must take their final $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) in residence","kuali.reqComponent.type.program.residence.credits.final","${mpx.null}","0"
"1112","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","$programClu.getOfficialIdentifier().getLongName() students must be enrolled in their graduation major for the final $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) taken","kuali.reqComponent.type.program.enrolled.credits.final","${mpx.null}","0"
"1113","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must earn no more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}minor${mpx.quote}) as part of a program","kuali.reqComponent.type.program.minors.nof","${mpx.null}","0"
"1114","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must be admitted to a minor program only if they have junior or senior class standing","kuali.reqComponent.type.program.minor.admitted.classstanding","${mpx.null}","0"
"1115","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have successfully completed no more than $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from ","kuali.reqComponent.type.course.courseset.completed.max","${mpx.null}","0"
"1116","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have earned a minimum cumulative GPA of $gpa","kuali.reqComponent.type.program.cumulative.gpa.min","${mpx.null}","0"
"1117","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have earned a minimum $durationType.getName().toLowerCase() GPA of $gpa","kuali.reqComponent.type.program.duration.gpa.min","${mpx.null}","0"
"1118","${mpx.null}","${mpx.null}","en","KUALI.RULE","Completion of $courseClu.getOfficialIdentifier().getCode() recommended","kuali.reqComponent.type.course.recommended.completed","${mpx.null}","0"
"1119","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Completion of $courseClu.getOfficialIdentifier().getCode() recommended","kuali.reqComponent.type.course.recommended.completed","${mpx.null}","0"
"1120","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.clu.id;reqCompFieldLabel=Course>","kuali.reqComponent.type.course.recommended.completed","${mpx.null}","0"
"1121","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Completion of MATH115 recommended","kuali.reqComponent.type.course.recommended.completed","${mpx.null}","0"
"1122","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","$courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.recommended.completed","${mpx.null}","0"
"1124","${mpx.null}","${mpx.null}","en","KUALI.RULE","Completion of #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}all courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range $courseCluSet.getCluSetAsCode()#end#end recommended","kuali.reqComponent.type.course.courseset.recommended.completed.all","${mpx.null}","0"
"1125","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Completion of #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}all courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end recommended","kuali.reqComponent.type.course.courseset.recommended.completed.all","${mpx.null}","0"
"1126","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.recommended.completed.all","${mpx.null}","0"
"1127","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Completion of MATH115, MATH220, and MATH140 recommended","kuali.reqComponent.type.course.courseset.recommended.completed.all","${mpx.null}","0"
"1128","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","#if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(0,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(0,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c))#end$courses#{else}all courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.recommended.completed.all","${mpx.null}","0"
"113","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have earned a minimum grade of $grade in #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}#set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.grade.min","${mpx.null}","0"
"1136","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have $fields.get(${mpx.quote}kuali.reqComponent.field.type.classStanding${mpx.quote}) standing#if($fields.get(${mpx.quote}kuali.reqComponent.field.type.operatorOption${mpx.quote}) != ${mpx.quote}equal to${mpx.quote}) $fields.get(${mpx.quote}kuali.reqComponent.field.type.operatorOption${mpx.quote})#end","kuali.reqComponent.type.course.standing","${mpx.null}","0"
"1137","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have $fields.get(${mpx.quote}kuali.reqComponent.field.type.classStanding${mpx.quote}) standing#if($fields.get(${mpx.quote}kuali.reqComponent.field.type.operatorOption${mpx.quote}) != ${mpx.quote}equal to${mpx.quote}) $fields.get(${mpx.quote}kuali.reqComponent.field.type.operatorOption${mpx.quote})#end","kuali.reqComponent.type.course.standing","${mpx.null}","0"
"1138","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.classStanding;reqCompFieldLabel=Class Standing Values> <reqCompFieldType=kuali.reqComponent.field.type.operatorOption;reqCompFieldLabel=Operator options>","kuali.reqComponent.type.course.standing","${mpx.null}","0"
"1139","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have Junior standing or higher","kuali.reqComponent.type.course.standing","${mpx.null}","0"
"114","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must not have earned a grade of $grade or higher in #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}#set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.grade.max","${mpx.null}","0"
"1140","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","$fields.get(${mpx.quote}kuali.reqComponent.field.type.classStanding${mpx.quote}) standing#if($fields.get(${mpx.quote}kuali.reqComponent.field.type.operatorOption${mpx.quote}) != ${mpx.quote}equal to${mpx.quote}) $fields.get(${mpx.quote}kuali.reqComponent.field.type.operatorOption${mpx.quote})#end","kuali.reqComponent.type.course.standing","${mpx.null}","0"
"1142","${mpx.null}","${mpx.null}","en","KUALI.RULE","Completion of #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}1 course from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range $courseCluSet.getCluSetAsCode()#end#end recommended","kuali.reqComponent.type.course.courseset.recommended.completed.one","${mpx.null}","0"
"1143","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Completion of #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}1 course from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end recommended","kuali.reqComponent.type.course.courseset.recommended.completed.one","${mpx.null}","0"
"1144","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.recommended.completed.one","${mpx.null}","0"
"1145","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Completion of MATH115, MATH220, and MATH140 recommended","kuali.reqComponent.type.course.courseset.recommended.completed.one","${mpx.null}","0"
"1146","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","#if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(0,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(0,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c))#end$courses#{else}1 course from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.recommended.completed.one","${mpx.null}","0"
"1148","${mpx.null}","${mpx.null}","en","KUALI.RULE","#if($programCluSet.getCluList().size() == 1)Must be in $NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet,${mpx.quote};${mpx.quote}) program#{else}Must be in 1 of the following programs: $NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet,${mpx.quote};${mpx.quote})#end","kuali.regComponent.type.course.program.completed.one","${mpx.null}","0"
"1149","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","#if($programCluSet.getCluList().size() == 1)Must be in $NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet,${mpx.quote};${mpx.quote}) program#{else}Must be in 1 of the following programs: $NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet,${mpx.quote};${mpx.quote})#end","kuali.regComponent.type.course.program.completed.one","${mpx.null}","0"
"115","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Permission of #if($org.getAttributes().get(${mpx.quote}umType${mpx.quote}) == ${mpx.quote}Academic Department${mpx.quote})$org.getLongName() department#{else}$org.getLongName()#end","kuali.reqComponent.type.course.permission.org.required","${mpx.null}","0"
"1150","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=programs>","kuali.regComponent.type.course.program.completed.one","${mpx.null}","0"
"1151","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must be in 1 of the following programs: Central European; Russian and Euroasian Studies; Measurement; Statistics and Evaluation","kuali.regComponent.type.course.program.completed.one","${mpx.null}","0"
"1152","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have completed $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) in $fields.get(${mpx.quote}kuali.reqComponent.field.type.course.prefix${mpx.quote})","kuali.reqComponent.type.course.prefix.courses.completed.nof","${mpx.null}","0"
"1153","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have completed $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) in $fields.get(${mpx.quote}kuali.reqComponent.field.type.course.prefix${mpx.quote})","kuali.reqComponent.type.course.prefix.courses.completed.nof","${mpx.null}","0"
"1154","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.prefix;reqCompFieldLabel=CoursePrefix> for final courses of <reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.prefix.courses.completed.nof","${mpx.null}","0"
"1155","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have completed 6 courses in Criminology and Criminal Justice","kuali.reqComponent.type.course.prefix.courses.completed.nof","${mpx.null}","0"
"1156","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","$intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) in $fields.get(${mpx.quote}kuali.reqComponent.field.type.course.prefix${mpx.quote})","kuali.reqComponent.type.course.prefix.courses.completed.nof","${mpx.null}","0"
"116","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Permission of instructor","kuali.reqComponent.type.course.permission.instructor.required","${mpx.null}","0"
"117","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have achieved a minimum score of $fields.get('kuali.reqComponent.field.type.test.score') on $testCluSet.getCluSetAsLongName()","kuali.reqComponent.type.course.test.score.min","${mpx.null}","0"
"119","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must complete a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) with a minimum grade of $grade from #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))$courses#{else}#set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.nof.grade.min","${mpx.null}","0"
"123","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must not be in #if($programCluSet.getCluList().size() > 1)any of the following programs #end$NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet,${mpx.quote};${mpx.quote}) #if($programCluSet.getCluList().size() == 1)program#end","kuali.reqComponent.type.course.program.notadmitted","${mpx.null}","0"
"124","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","May be repeated for a maximum of $intValue credits","kuali.reqComponent.type.course.credits.repeat.max","${mpx.null}","0"
"126","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must be in #if($programCluSet.getCluList().size() > 1)one of the following programs #end$NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet,${mpx.quote};${mpx.quote}) #if($programCluSet.getCluList().size() == 1)program#end","kuali.reqComponent.type.course.program.admitted","${mpx.null}","0"
"127","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have completed $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.completed","${mpx.null}","0"
"128","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must be concurrently enrolled in $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.enrolled","${mpx.null}","0"
"129","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must not have completed $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.notcompleted","${mpx.null}","0"
"13","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have earned a minimum grade of $grade in #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}#set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range $courseCluSet.getCluSetAsCode()#end#end","kuali.reqComponent.type.course.courseset.grade.min","${mpx.null}","0"
"14","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must not have earned a grade of $grade or higher in #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}#set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range $courseCluSet.getCluSetAsCode()#end#end","kuali.reqComponent.type.course.courseset.grade.max","${mpx.null}","0"
"15","${mpx.null}","${mpx.null}","en","KUALI.RULE","Permission of #if($org.getAttributes().get(${mpx.quote}umType${mpx.quote}) == ${mpx.quote}Academic Department${mpx.quote})$org.getLongName() department#{else}$org.getLongName()#end","kuali.reqComponent.type.course.permission.org.required","${mpx.null}","0"
"16","${mpx.null}","${mpx.null}","en","KUALI.RULE","Permission of instructor","kuali.reqComponent.type.course.permission.instructor.required","${mpx.null}","0"
"17","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have achieved a minimum score of $fields.get('kuali.reqComponent.field.type.test.score') on $testCluSet.getCluSetAsLongName()","kuali.reqComponent.type.course.test.score.min","${mpx.null}","0"
"19","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must complete a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) with a minimum grade of $grade from #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))$courses#{else}#set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range $courseCluSet.getCluSetAsCode()#end#end","kuali.reqComponent.type.course.courseset.nof.grade.min","${mpx.null}","0"
"2","${mpx.null}","${mpx.null}","en","KUALI.RULE","#if($courseCluSet.getCluList().size() <= 1)Must have completed $courseCluSet.getCluSetAsCode()#{else}Must have completed #if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}all courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range $courseCluSet.getCluSetAsCode()#end#end","kuali.reqComponent.type.course.courseset.completed.all","${mpx.null}","0"
"2001","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have successfully completed a minimum of 1 program from (Geology or  Sociology) programs","kuali.reqComponent.type.program.programset.completed.nof","${mpx.null}","0"
"2002","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not have successfully completed any of (Geology or Sociology) programs","kuali.reqComponent.type.program.programset.notcompleted.nof","${mpx.null}","0"
"2003","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have successfully completed all of (Sociology and CORE Advanced Studies)","kuali.reqComponent.type.program.programset.completed.all","${mpx.null}","0"
"2004","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have successfully completed a minimum of 14 courses from ( Sociology and CORE Advanced Studies) programs","kuali.reqComponent.type.program.programset.coursecompleted.nof","${mpx.null}","0"
"2005","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must be admitted to program prior to earning 60 credits","kuali.reqComponent.type.program.admitted.credits","${mpx.null}","0"
"2006","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have earned a minimum of 120 total credits","kuali.reqComponent.type.program.credits.min","${mpx.null}","0"
"2007","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not have earned more than 130 total credits","kuali.reqComponent.type.program.credits.max","${mpx.null}","0"
"2008","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not exceed 10 semesters without completing program","kuali.reqComponent.type.program.completion.duration","${mpx.null}","0"
"2009","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must attain candidate status within 3 semesters after program entry term","kuali.reqComponent.type.program.candidate.status.duration","${mpx.null}","0"
"201","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not have completed any courses from (MATH110, MATH115, MATH220)","kuali.reqComponent.type.course.courseset.completed.none","${mpx.null}","0"
"2010","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must complete program within 10 semesters after program entry term","kuali.reqComponent.type.program.completion.duration.afterentry","${mpx.null}","0"
"2011","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Undergraduate students must take their final 30 credits in residence","kuali.reqComponent.type.program.residence.credits.final","${mpx.null}","0"
"2012","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Undergraduate students must be enrolled in their graduation major for the final 15 credits taken","kuali.reqComponent.type.program.enrolled.credits.final","${mpx.null}","0"
"2013","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must earn no more than 2 minors as part of a program","kuali.reqComponent.type.program.minors.nof","${mpx.null}","0"
"2014","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must be admitted to a minor program only if they have junior or senior class standing","kuali.reqComponent.type.program.minor.admitted.classstanding","${mpx.null}","0"
"2015","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have successfully completed no more than 2 courses from (MATH111, 140, 220, and STAT100)","kuali.reqComponent.type.course.courseset.completed.max","${mpx.null}","0"
"2016","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have earned a minimum cumulative GPA of 2.5","kuali.reqComponent.type.program.cumulative.gpa.min","${mpx.null}","0"
"2017","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have earned a minimum semester GPA of 3.0","kuali.reqComponent.type.program.duration.gpa.min","${mpx.null}","0"
"202","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have completed all courses from (MATH113, MATH220, MATH140)","kuali.reqComponent.type.course.courseset.completed.all","${mpx.null}","0"
"203","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have completed a minimum of 2 courses from (MATH113, MATH220, MATH140)","kuali.reqComponent.type.course.courseset.completed.nof","${mpx.null}","0"
"204","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must be concurrently enrolled in a minimum of 1 course from (MATH111, 140, 220, or STAT100)","kuali.reqComponent.type.course.courseset.enrolled.nof","${mpx.null}","0"
"205","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have completed a minimum of 6 credits from (MATH113, MATH220, MATH140)","kuali.reqComponent.type.course.courseset.credits.completed.nof","${mpx.null}","0"
"209","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must be concurrently enrolled in all courses from (MATH111, 140, 220, and STAT100)","kuali.reqComponent.type.course.courseset.enrolled.all","${mpx.null}","0"
"213","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have earned a minimum grade of letter B in (MATH111, 140, 220, and STAT100)","kuali.reqComponent.type.course.courseset.grade.min","${mpx.null}","0"
"214","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not have earned a grade of C or higher in (MATH140, MATH115, MATH220)","kuali.reqComponent.type.course.courseset.grade.max","${mpx.null}","0"
"215","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Permission of English Department Required","kuali.reqComponent.type.course.permission.org.required","${mpx.null}","0"
"216","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Permission of instructor required","kuali.reqComponent.type.course.permission.instructor.required","${mpx.null}","0"
"217","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have achieved a minimum score of 600 on SAT Critical Reading Exam","kuali.reqComponent.type.course.test.score.min","${mpx.null}","0"
"219","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must complete a minimum of 2 courses with a minimum grade of C from (MATH140, MATH115, MATH220)","kuali.reqComponent.type.course.courseset.nof.grade.min","${mpx.null}","0"
"223","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not be in the Hearing and Speech Sciences program","kuali.reqComponent.type.course.program.notadmitted","${mpx.null}","0"
"224","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","May be repeated for a maximum of $intValue credits","kuali.reqComponent.type.course.credits.repeat.max","${mpx.null}","0"
"226","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must be in the Hearing and Speech Sciences program","kuali.reqComponent.type.course.program.admitted","${mpx.null}","0"
"227","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have completed MATH115","kuali.reqComponent.type.course.completed","${mpx.null}","0"
"228","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must be concurrently enrolled in MATH111","kuali.reqComponent.type.course.enrolled","${mpx.null}","0"
"229","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must not have completed MATH113","kuali.reqComponent.type.course.notcompleted","${mpx.null}","0"
"23","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must not be in #if($programCluSet.getCluList().size() > 1)any of the following programs #end$NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet,${mpx.quote};${mpx.quote}) #if($programCluSet.getCluList().size() == 1)program#end","kuali.reqComponent.type.course.program.notadmitted","${mpx.null}","0"
"24","${mpx.null}","${mpx.null}","en","KUALI.RULE","May be repeated for a maximum of $intValue credits","kuali.reqComponent.type.course.credits.repeat.max","${mpx.null}","0"
"26","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must be in #if($programCluSet.getCluList().size() > 1)one of the following programs #end$NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet,${mpx.quote};${mpx.quote}) #if($programCluSet.getCluList().size() == 1)program#end","kuali.reqComponent.type.course.program.admitted","${mpx.null}","0"
"27","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have completed $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.completed","${mpx.null}","0"
"28","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must be concurrently enrolled in $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.enrolled","${mpx.null}","0"
"29","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must not have completed $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.notcompleted","${mpx.null}","0"
"3","${mpx.null}","${mpx.null}","en","KUALI.RULE","#if(($intValue == 1 && $courseCluSet.getCluList().size() == 1) || ($courseCluSet.getCluList().size() <= 1))Must have completed $courseCluSet.getCluSetAsCode()#{else}Must have completed #if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end#if($intValue > 1)a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from #end$courses#{else}a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range $courseCluSet.getCluSetAsCode()#end#end","kuali.reqComponent.type.course.courseset.completed.nof","${mpx.null}","0"
"3001","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Number of Programs> from <reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=Programs>","kuali.reqComponent.type.program.programset.completed.nof","${mpx.null}","0"
"3002","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=Programs>","kuali.reqComponent.type.program.programset.notcompleted.nof","${mpx.null}","0"
"3003","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=Programs>","kuali.reqComponent.type.program.programset.completed.all","${mpx.null}","0"
"3004","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Number of Courses> from <reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=Programs>","kuali.reqComponent.type.program.programset.coursecompleted.nof","${mpx.null}","0"
"3005","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Credits>","kuali.reqComponent.type.program.admitted.credits","${mpx.null}","0"
"3006","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Minimum Number of Credits>","kuali.reqComponent.type.program.credits.min","${mpx.null}","0"
"3007","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Maximum Number of Credits>","kuali.reqComponent.type.program.credits.max","${mpx.null}","0"
"3008","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.duration;reqCompFieldLabel=Duration Count> of type <reqCompFieldType=kuali.reqComponent.field.type.durationType.id;reqCompFieldLabel=Duration Type>","kuali.reqComponent.type.program.completion.duration","${mpx.null}","0"
"3009","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.duration;reqCompFieldLabel=Duration Count> of type <reqCompFieldType=kuali.reqComponent.field.type.durationType.id;reqCompFieldLabel=Duration Type>","kuali.reqComponent.type.program.candidate.status.duration","${mpx.null}","0"
"301","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.completed.none","${mpx.null}","0"
"3010","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.duration;reqCompFieldLabel=Duration Count> of type <reqCompFieldType=kuali.reqComponent.field.type.durationType.id;reqCompFieldLabel=Duration Type>","kuali.reqComponent.type.program.completion.duration.afterentry","${mpx.null}","0"
"3011","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.clu.id;reqCompFieldLabel=Program> for final credits of <reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Credits>","kuali.reqComponent.type.program.residence.credits.final","${mpx.null}","0"
"3012","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.clu.id;reqCompFieldLabel=Program> for final credits of <reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Credits>","kuali.reqComponent.type.program.enrolled.credits.final","${mpx.null}","0"
"3013","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Minors>","kuali.reqComponent.type.program.minors.nof","${mpx.null}","0"
"3014","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","${mpx.null}","kuali.reqComponent.type.program.minor.admitted.classstanding","${mpx.null}","0"
"3015","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Number of Courses> from <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.completed.max","${mpx.null}","0"
"3016","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.gpa;reqCompFieldLabel=GPA>","kuali.reqComponent.type.program.cumulative.gpa.min","${mpx.null}","0"
"3017","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.durationType.id;reqCompFieldLabel=Duration Type> <reqCompFieldType=kuali.reqComponent.field.type.gpa;reqCompFieldLabel=GPA>","kuali.reqComponent.type.program.duration.gpa.min","${mpx.null}","0"
"302","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.completed.all","${mpx.null}","0"
"303","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Number of Courses> from <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.completed.nof","${mpx.null}","0"
"304","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Number of Courses> from <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.enrolled.nof","${mpx.null}","0"
"305","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Credits> from <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.credits.completed.nof","${mpx.null}","0"
"309","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.enrolled.all","${mpx.null}","0"
"313","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.gradeType.id;reqCompFieldLabel=Grade Type> of <reqCompFieldType=kuali.reqComponent.field.type.grade.id;reqCompFieldLabel=Grade> in <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.grade.min","${mpx.null}","0"
"314","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.gradeType.id;reqCompFieldLabel=Grade Type> of <reqCompFieldType=kuali.reqComponent.field.type.grade.id;reqCompFieldLabel=Grade> in <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.grade.max","${mpx.null}","0"
"315","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.org.id;reqCompFieldLabel=Organization>","kuali.reqComponent.type.course.permission.org.required","${mpx.null}","0"
"316","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.person.id;reqCompFieldLabel=Instructor>","kuali.reqComponent.type.course.permission.instructor.required","${mpx.null}","0"
"317","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.test.score;reqCompFieldLabel=Test Score> from <reqCompFieldType=kuali.reqComponent.field.type.test.cluSet.id;reqCompFieldLabel=Tests>","kuali.reqComponent.type.course.test.score.min","${mpx.null}","0"
"319","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Number of Courses> from <reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses> with <reqCompFieldType=kuali.reqComponent.field.type.gradeType.id;reqCompFieldLabel=Grade Type> of <reqCompFieldType=kuali.reqComponent.field.type.grade.id;reqCompFieldLabel=Grade>","kuali.reqComponent.type.course.courseset.nof.grade.min","${mpx.null}","0"
"323","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=Program(s)>","kuali.reqComponent.type.course.program.notadmitted","${mpx.null}","0"
"324","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Credits>","kuali.reqComponent.type.course.credits.repeat.max","${mpx.null}","0"
"326","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.program.cluSet.id;reqCompFieldLabel=Program(s)>","kuali.reqComponent.type.course.program.admitted","${mpx.null}","0"
"327","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.clu.id;reqCompFieldLabel=Course>","kuali.reqComponent.type.course.completed","${mpx.null}","0"
"328","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.clu.id;reqCompFieldLabel=Course>","kuali.reqComponent.type.course.enrolled","${mpx.null}","0"
"329","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.clu.id;reqCompFieldLabel=Course>","kuali.reqComponent.type.course.notcompleted","${mpx.null}","0"
"4","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must be concurrently enrolled in #if(($intValue == 1 && $courseCluSet.getCluList().size() == 1) || ($courseCluSet.getCluList().size() <= 1))$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end#if($intValue > 1)a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from #end$courses#{else}a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range $courseCluSet.getCluSetAsCode()#end#end","kuali.reqComponent.type.course.courseset.enrolled.nof","${mpx.null}","0"
"4001","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have earned a minimum cumulative GPA of 2.5","kuali.reqComponent.type.course.cumulative.gpa.min","${mpx.null}","${mpx.null}"
"4002","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have earned a minimum of 120 credits","kuali.reqComponent.type.course.credits.min","${mpx.null}","${mpx.null}"
"4003","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Students must be proficient in Excel","kuali.reqComponent.type.course.freeform.text","${mpx.null}","${mpx.null}"
"4008","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have completed or be concurrently enrolled in MATH220","kuali.reqComponent.type.course.completed.enrolled","${mpx.null}","${mpx.null}"
"4009","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have completed or be concurrently enrolled in MATH220, MATH140, and MATH110","kuali.reqComponent.type.course.courseset.completed.enrolled.all","${mpx.null}","${mpx.null}"
"401","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","must not have completed #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}any courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.completed.none","${mpx.null}","0"
"4010","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have completed or be concurrently enrolled in MATH220, MATH140, or MATH110","kuali.reqComponent.type.course.courseset.completed.enrolled.one","${mpx.null}","${mpx.null}"
"4011","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have completed MATH220, MATH140, or MATH110","kuali.reqComponent.type.course.courseset.completed.one","${mpx.null}","${mpx.null}"
"4012","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must be in a major in College of Behavioral and Social Sciences","kuali.reqComponent.type.major.org","${mpx.null}","${mpx.null}"
"4014","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Students who have taken courses with similar or comparable course content may contact the department","kuali.reqComponent.type.course.content.dept.contact","${mpx.null}","${mpx.null}"
"4015","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Permission of English Department Required","kuali.reqComponent.type.course.permission.org.required.preco","${mpx.null}","${mpx.null}"
"4016","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Permission of instructor required","kuali.reqComponent.type.course.permission.instructor.required.preco","${mpx.null}","${mpx.null}"
"402","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","#if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(0,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(0,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c))#end$courses#{else}all courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.completed.all","${mpx.null}","0"
"403","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","#if(($intValue == 1 && $courseCluSet.getCluList().size() == 1) || ($courseCluSet.getCluList().size() <= 1))$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(0,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(0,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c))#end#if($intValue > 1)$intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from #end$courses#{else}$intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.completed.nof","${mpx.null}","0"
"404","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","concurrently enrolled in #if(($intValue == 1 && $courseCluSet.getCluList().size() == 1) || ($courseCluSet.getCluList().size() <= 1))$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#if($intValue > 1)$intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from $courseCluSet.getCluSetAsCode()#{else}#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#end#{else}$intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.enrolled.nof","${mpx.null}","0"
"405","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) from #if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})$courseCluSet.getCluSetAsCode()#{else}#set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end","kuali.reqComponent.type.course.courseset.credits.completed.nof","${mpx.null}","0"
"409","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","concurrently enrolled in #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}all courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.enrolled.all","${mpx.null}","0"
"4101","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.gpa;reqCompFieldLabel=GPA>","kuali.reqComponent.type.course.cumulative.gpa.min","${mpx.null}","${mpx.null}"
"4102","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Minimum Number of Credits>","kuali.reqComponent.type.course.credits.min","${mpx.null}","${mpx.null}"
"4103","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.value.freeform.text;reqCompFieldLabel=Text>","kuali.reqComponent.type.course.freeform.text","${mpx.null}","${mpx.null}"
"4108","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.clu.id;reqCompFieldLabel=Course>","kuali.reqComponent.type.course.completed.enrolled","${mpx.null}","${mpx.null}"
"4109","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.completed.enrolled.all","${mpx.null}","${mpx.null}"
"4110","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.completed.enrolled.one","${mpx.null}","${mpx.null}"
"4111","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.cluSet.id;reqCompFieldLabel=Courses>","kuali.reqComponent.type.course.courseset.completed.one","${mpx.null}","${mpx.null}"
"4112","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.org.id;reqCompFieldLabel=Department>","kuali.reqComponent.type.major.org","${mpx.null}","${mpx.null}"
"4114","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","${mpx.null}","kuali.reqComponent.type.course.content.dept.contact","${mpx.null}","${mpx.null}"
"4115","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.org.id;reqCompFieldLabel=Organization>","kuali.reqComponent.type.course.permission.org.required.preco","${mpx.null}","${mpx.null}"
"4116","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.person.id;reqCompFieldLabel=Instructor>","kuali.reqComponent.type.course.permission.instructor.required.preco","${mpx.null}","${mpx.null}"
"413","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","minimum grade of $grade in #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}#set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.grade.min","${mpx.null}","0"
"414","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","must not have earned a grade of $grade or higher in #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}#set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.grade.max","${mpx.null}","0"
"415","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","permission of #if($org.getAttributes().get(${mpx.quote}umType${mpx.quote}) == ${mpx.quote}Academic Department${mpx.quote})$org.getLongName() department#{else}$org.getLongName()#end","kuali.reqComponent.type.course.permission.org.required","${mpx.null}","0"
"416","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","permission of instructor","kuali.reqComponent.type.course.permission.instructor.required","${mpx.null}","0"
"417","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","minimum score of $fields.get('kuali.reqComponent.field.type.test.score') on $testCluSet.getCluSetAsLongName()","kuali.reqComponent.type.course.test.score.min","${mpx.null}","0"
"419","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","$intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}course${mpx.quote}) with a minimum grade of $grade from #if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})$courseCluSet.getCluSetAsCode()#{else}#set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end","kuali.reqComponent.type.course.courseset.nof.grade.min","${mpx.null}","0"
"4201","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","minimum cumulative GPA of $gpa","kuali.reqComponent.type.course.cumulative.gpa.min","${mpx.null}","${mpx.null}"
"4202","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","must have earned a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.course.credits.min","${mpx.null}","${mpx.null}"
"4203","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","$fields.get(${mpx.quote}kuali.reqComponent.field.type.value.freeform.text${mpx.quote})","kuali.reqComponent.type.course.freeform.text","${mpx.null}","${mpx.null}"
"4208","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","completed or be concurrently enrolled in $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.completed.enrolled","${mpx.null}","${mpx.null}"
"4209","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","completed or be concurrently enrolled in #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}all courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.completed.enrolled.all","${mpx.null}","${mpx.null}"
"4210","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","completed or be concurrently enrolled in #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}1 course from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.completed.enrolled.one","${mpx.null}","${mpx.null}"
"4211","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","#if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(0,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(0,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c))#end$courses#{else}1 course from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.completed.one","${mpx.null}","${mpx.null}"
"4212","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","must be in a major #if($org.getAttributes().get(${mpx.quote}umType${mpx.quote}) == ${mpx.quote}Academic Department${mpx.quote})within $org.getLongName() department#{else}in $org.getLongName()#end","kuali.reqComponent.type.major.org","${mpx.null}","${mpx.null}"
"4214","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","students who have taken courses with similar or comparable course content may contact the department","kuali.reqComponent.type.course.content.dept.contact","${mpx.null}","${mpx.null}"
"4215","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","permission of #if($org.getAttributes().get(${mpx.quote}umType${mpx.quote}) == ${mpx.quote}Academic Department${mpx.quote})$org.getLongName() department#{else}$org.getLongName()#end","kuali.reqComponent.type.course.permission.org.required.preco","${mpx.null}","${mpx.null}"
"4216","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","permission of instructor","kuali.reqComponent.type.course.permission.instructor.required.preco","${mpx.null}","${mpx.null}"
"423","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","must not be in #if($programCluSet.getCluList().size() > 1)any of the following programs #end$NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet,${mpx.quote};${mpx.quote}) #if($programCluSet.getCluList().size() == 1)program#end","kuali.reqComponent.type.course.program.notadmitted","${mpx.null}","0"
"424","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","For a maximum of $intValue credits","kuali.reqComponent.type.course.credits.repeat.max","${mpx.null}","0"
"426","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","must be in #if($programCluSet.getCluList().size() > 1)one of the following programs #end$NLHelper.getCluOrCluSetAsLongNames($programClu,$programCluSet,${mpx.quote};${mpx.quote}) #if($programCluSet.getCluList().size() == 1)program#end","kuali.reqComponent.type.course.program.admitted","${mpx.null}","0"
"427","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","$courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.completed","${mpx.null}","0"
"428","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","concurrently enrolled in $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.enrolled","${mpx.null}","0"
"429","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","must not have completed $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.notcompleted","${mpx.null}","0"
"4301","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have earned a minimum cumulative GPA of $gpa","kuali.reqComponent.type.course.cumulative.gpa.min","${mpx.null}","${mpx.null}"
"4302","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have earned a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.course.credits.min","${mpx.null}","${mpx.null}"
"4303","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","$fields.get(${mpx.quote}kuali.reqComponent.field.type.value.freeform.text${mpx.quote})","kuali.reqComponent.type.course.freeform.text","${mpx.null}","${mpx.null}"
"4308","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have completed or be concurrently enrolled in $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.completed.enrolled","${mpx.null}","${mpx.null}"
"4309","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have completed or be concurrently enrolled in #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}all courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.completed.enrolled.all","${mpx.null}","${mpx.null}"
"4310","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have completed or be concurrently enrolled in #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}1 course from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.completed.enrolled.one","${mpx.null}","${mpx.null}"
"4311","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have completed #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}1 course from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range#end#end","kuali.reqComponent.type.course.courseset.completed.one","${mpx.null}","${mpx.null}"
"4312","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must be in a major #if($org.getAttributes().get(${mpx.quote}umType${mpx.quote}) == ${mpx.quote}Academic Department${mpx.quote})within $org.getLongName() department#{else}in $org.getLongName()#end","kuali.reqComponent.type.major.org","${mpx.null}","${mpx.null}"
"4314","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Students who have taken courses with similar or comparable course content may contact the department","kuali.reqComponent.type.course.content.dept.contact","${mpx.null}","${mpx.null}"
"4315","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Permission of #if($org.getAttributes().get(${mpx.quote}umType${mpx.quote}) == ${mpx.quote}Academic Department${mpx.quote})$org.getLongName() department#{else}$org.getLongName()#end","kuali.reqComponent.type.course.permission.org.required.preco","${mpx.null}","${mpx.null}"
"4316","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Permission of instructor","kuali.reqComponent.type.course.permission.instructor.required.preco","${mpx.null}","${mpx.null}"
"4401","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have earned a minimum cumulative GPA of $gpa","kuali.reqComponent.type.course.cumulative.gpa.min","${mpx.null}","${mpx.null}"
"4402","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have earned a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote})","kuali.reqComponent.type.course.credits.min","${mpx.null}","${mpx.null}"
"4403","${mpx.null}","${mpx.null}","en","KUALI.RULE","$fields.get(${mpx.quote}kuali.reqComponent.field.type.value.freeform.text${mpx.quote})","kuali.reqComponent.type.course.freeform.text","${mpx.null}","${mpx.null}"
"4408","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have completed or be concurrently enrolled in $courseClu.getOfficialIdentifier().getCode()","kuali.reqComponent.type.course.completed.enrolled","${mpx.null}","${mpx.null}"
"4409","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have completed or be concurrently enrolled in #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}all courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range $courseCluSet.getCluSetAsCode()#end#end","kuali.reqComponent.type.course.courseset.completed.enrolled.all","${mpx.null}","${mpx.null}"
"4410","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have completed or be concurrently enrolled in #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}1 course from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range $courseCluSet.getCluSetAsCode()#end#end","kuali.reqComponent.type.course.courseset.completed.enrolled.one","${mpx.null}","${mpx.null}"
"4411","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have completed #if($courseCluSet.getCluList().size() <= 1)$courseCluSet.getCluSetAsCode()#{else}#if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} or${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}1 course from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range $courseCluSet.getCluSetAsCode()#end#end","kuali.reqComponent.type.course.courseset.completed.one","${mpx.null}","${mpx.null}"
"4412","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must be in a major #if($org.getAttributes().get(${mpx.quote}umType${mpx.quote}) == ${mpx.quote}Academic Department${mpx.quote})within $org.getLongName() department#{else}in $org.getLongName()#end","kuali.reqComponent.type.major.org","${mpx.null}","${mpx.null}"
"4414","${mpx.null}","${mpx.null}","en","KUALI.RULE","Students who have taken courses with similar or comparable course content may contact the department","kuali.reqComponent.type.course.content.dept.contact","${mpx.null}","${mpx.null}"
"4415","${mpx.null}","${mpx.null}","en","KUALI.RULE","Permission of #if($org.getAttributes().get(${mpx.quote}umType${mpx.quote}) == ${mpx.quote}Academic Department${mpx.quote})$org.getLongName() department#{else}$org.getLongName()#end","kuali.reqComponent.type.course.permission.org.required.preco","${mpx.null}","${mpx.null}"
"4416","${mpx.null}","${mpx.null}","en","KUALI.RULE","Permission of instructor","kuali.reqComponent.type.course.permission.instructor.required.preco","${mpx.null}","${mpx.null}"
"5","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have completed a minimum of $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) from #if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) != ${mpx.quote}${mpx.quote})#set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range #end$courseCluSet.getCluSetAsCode()","kuali.reqComponent.type.course.courseset.credits.completed.nof","${mpx.null}","0"
"5000","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have completed $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) in $fields.get(${mpx.quote}kuali.reqComponent.field.type.course.prefix${mpx.quote}) courses","kuali.reqComponent.type.course.prefix.credits.completed.nof","${mpx.null}","0"
"5001","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have completed $intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) in $fields.get(${mpx.quote}kuali.reqComponent.field.type.course.prefix${mpx.quote}) courses","kuali.reqComponent.type.course.prefix.credits.completed.nof","${mpx.null}","0"
"5002","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.course.prefix;reqCompFieldLabel=CoursePrefix> for final credits of <reqCompFieldType=kuali.reqComponent.field.type.value.positive.integer;reqCompFieldLabel=Credits>","kuali.reqComponent.type.course.prefix.credits.completed.nof","${mpx.null}","0"
"5003","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have completed 6 credits in Criminology and Criminal Justice courses","kuali.reqComponent.type.course.prefix.credits.completed.nof","${mpx.null}","0"
"5004","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","$intValue $NLHelper.getProperGrammar($intValue, ${mpx.quote}credit${mpx.quote}) in $fields.get(${mpx.quote}kuali.reqComponent.field.type.course.prefix${mpx.quote}) courses","kuali.reqComponent.type.course.prefix.credits.completed.nof","${mpx.null}","0"
"5200","${mpx.null}","${mpx.null}","en","KUALI.RULE","Must have math eligibility of $fields.get(${mpx.quote}kuali.reqComponent.field.type.math.elig.codes${mpx.quote}) or higher","kuali.reqComponent.type.math.elig","${mpx.null}","0"
"5201","${mpx.null}","${mpx.null}","en","KUALI.RULE.PREVIEW","Must have math eligibility of $fields.get(${mpx.quote}kuali.reqComponent.field.type.math.elig.codes${mpx.quote}) or higher","kuali.reqComponent.type.math.elig","${mpx.null}","0"
"5202","${mpx.null}","${mpx.null}","en","KUALI.RULE.COMPOSITION","<reqCompFieldType=kuali.reqComponent.field.type.math.elig.codes;reqCompFieldLabel=Math Codes>","kuali.reqComponent.type.math.elig","${mpx.null}","0"
"5203","${mpx.null}","${mpx.null}","en","KUALI.RULE.EXAMPLE","Must have math eligibility of MATH001 or higher","kuali.reqComponent.type.math.elig","${mpx.null}","0"
"5204","${mpx.null}","${mpx.null}","en","KUALI.RULE.CATALOG","must have math eligibility of $fields.get(${mpx.quote}kuali.reqComponent.field.type.math.elig.codes${mpx.quote}) or higher","kuali.reqComponent.type.math.elig","${mpx.null}","0"
"9","${mpx.null}","${mpx.null}","en","KUALI.RULE","#if($courseCluSet.getCluList().size() <= 1)Must be concurrently enrolled in $courseCluSet.getCluSetAsCode()#{else}Must be concurrently enrolled in #if($courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}) == ${mpx.quote}${mpx.quote})#set($a=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote},${mpx.quote}))#set($b=1)#set($c=$a+$b)#set($d=$courseCluSet.getCluSetAsCode().lastIndexOf(${mpx.quote})${mpx.quote}))#if($courseCluSet.getCluList().size() > 2)#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote}, and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#{else}#set($courses=$courseCluSet.getCluSetAsCode().substring(1,$a)+${mpx.quote} and${mpx.quote}+$courseCluSet.getCluSetAsCode().substring($c, $d))#end$courses#{else}all courses from #set($prefix=${courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalDivision${mpx.quote}).toUpperCase()})$prefix$courseCluSet.getQueryValueFromParam(${mpx.quote}lu.queryParam.luOptionalCrsNoRange${mpx.quote}) course range $courseCluSet.getCluSetAsCode()#end#end","kuali.reqComponent.type.course.courseset.enrolled.all","${mpx.null}","0"
