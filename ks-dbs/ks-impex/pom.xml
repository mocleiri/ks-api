<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.kuali.student.db</groupId>
    <artifactId>ks-dbs</artifactId>
    <version>2.0.0-spring-db-SNAPSHOT</version>
  </parent>
  <groupId>org.kuali.student.db</groupId>
  <artifactId>ks-impex</artifactId>
  <version>2.0.0-spring-db-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>KS DB Config</name>
  <description>Kuali Student Impex</description>
  <modules>
    <module>ks-impex-app-db</module>
    <module>ks-impex-rice-db</module>
    <module>ks-impex-bundled-db</module>
  </modules>
  <properties>
    <jdbc.source.db.username>KS_SOURCE_DB${db.branch.qualifier}</jdbc.source.db.username>

    <jdbc.password>${jdbc.username}</jdbc.password>

    <spring.maven.includeParentLoadConfig>true</spring.maven.includeParentLoadConfig>

    <!-- Impex properties with the prefix 'impex.xml' are used in the xml generation step of impex -->
    <impex.xml.password>${jdbc.source.db.username}</impex.xml.password>
    <impex.xml.username>${jdbc.source.db.username}</impex.xml.username>
    <impex.xml.schema>${jdbc.source.db.username}</impex.xml.schema>
    <impex.xml.url>${oracle.dba.url}</impex.xml.url>
    <impex.xml.dateFormat>yyyyMMddHHmmss</impex.xml.dateFormat>

    <!-- The name of the module that generates the data xml used by all other modules.
      ks-impex-app-db and ks-impex-rice-db copy matching data xml files from this source module.
    -->
    <impex.xml.sourceDataModule>ks-impex-bundled-db</impex.xml.sourceDataModule>

    <!--
      The sql generation step of impex requires the schema file generated by impex to be in this location
      and all the xml files are expected in src/main/resources, rather than the default of src/main/impex
    -->
    <impex.xml.schemaXMLFile>${project.basedir}/src/main/resources/schema.xml</impex.xml.schemaXMLFile>
    <impex.xml.dataXMLDir>${project.basedir}/src/main/resources</impex.xml.dataXMLDir>
  </properties>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.kuali.maven.plugins</groupId>
          <artifactId>maven-impex-plugin</artifactId>
          <dependencies>
            <dependency>
              <groupId>com.oracle</groupId>
              <artifactId>${oracle.artifactId}</artifactId>
              <version>${oracle.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <username>${impex.xml.username}</username>
            <password>${impex.xml.password}</password>
            <url>${impex.xml.url}</url>
            <schema>${impex.xml.schema}</schema>
            <schemaXMLFile>${impex.xml.schemaXMLFile}</schemaXMLFile>
            <dataXMLDir>${impex.xml.dataXMLDir}</dataXMLDir>
            <!-- Location of the data.dtd file generated by the datadtd goal -->
            <copyToFile>${project.basedir}/src/main/resources/data.dtd</copyToFile>
            <antCompatibilityMode>${impex.antCompatibilityMode}</antCompatibilityMode>
            <includes>${impex.xml.includedTables}</includes>
            <dateFormat>${impex.xml.dateFormat}</dateFormat>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <phase>initialize</phase>
              <configuration>
                <outputDirectory>${project.basedir}/src/main/resources</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.parent.basedir}/${impex.xml.sourceDataModule}/src/main/resources</directory>
                    <include>${impex.xml.xmlfFileFilter}</include>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>impex-export-xml</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.kuali.maven.plugins</groupId>
            <artifactId>maven-impex-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- This profile builds the full KS database from the "system of record" set of Oracle sql files checked into SCM -->
      <id>source-db</id>
      <properties>
        <db.populate.phase>initialize</db.populate.phase>
        <spring.forceMojoExecution>true</spring.forceMojoExecution>
        <db.vendor>oracle</db.vendor>
        <jdbc.username>${jdbc.source.db.username}</jdbc.username>
        <oracle.dba.username>master</oracle.dba.username>
        <oracle.dba.password.encrypted>eEFVZmL4+y/5KlzDMCt6dGlBKQzXevFp</oracle.dba.password.encrypted>
        <oracle.dba.url>jdbc:oracle:thin:@oracle.ks.kuali.org:1521:ORACLE</oracle.dba.url>

        <!-- Schemas -->
        <db.rice.baseline.schema>rice-impex-server-bootstrap</db.rice.baseline.schema>
        <db.ks.core.schema>ks-core-sql</db.ks.core.schema>
        <db.ks.lum.schema>ks-lum-sql</db.ks.lum.schema>
        <db.ks.enroll.schema>ks-enroll-sql</db.ks.enroll.schema>
        <db.ks.rice.schema>ks-rice-sql</db.ks.rice.schema>

        <!-- SQL resource path fragments -->
        <sql.meta.base>classpath:META-INF/sql/oracle</sql.meta.base>
        <sql.suffix.schema>schema.resources</sql.suffix.schema>
        <sql.suffix.data>data.resources</sql.suffix.data>
        <sql.suffix.constraints>constraints.resources</sql.suffix.constraints>
        <sql.suffix.upgrades>upgrades.resources</sql.suffix.upgrades>

        <!-- SQL resources -->
        <sql.schema.1>classpath:sql/${db.vendor}/${db.rice.baseline.schema}.sql</sql.schema.1>
        <sql.schema.2.list>${sql.meta.base}/${db.ks.core.schema}-${sql.suffix.schema}</sql.schema.2.list>
        <sql.schema.3.list>${sql.meta.base}/${db.ks.lum.schema}-${sql.suffix.schema}</sql.schema.3.list>
        <sql.schema.4.list>${sql.meta.base}/${db.ks.enroll.schema}-${sql.suffix.schema}</sql.schema.4.list>
        <sql.schema.5.list>${sql.meta.base}/${db.ks.rice.schema}-${sql.suffix.schema}</sql.schema.5.list>

        <!-- The "ks-" prefix here should get removed after the next Rice upgrade since the Rice jar will contain the -data.resources file natively -->
        <!-- The dependency of the spring-maven-plugin to ks-deployment-resources should also then get removed -->
        <sql.data.1.list>${sql.meta.base}/ks-${db.rice.baseline.schema}-${sql.suffix.data}</sql.data.1.list>
        <sql.data.2.list>${sql.meta.base}/${db.ks.core.schema}-${sql.suffix.data}</sql.data.2.list>
        <sql.data.3.list>${sql.meta.base}/${db.ks.lum.schema}-${sql.suffix.data}</sql.data.3.list>
        <sql.data.4.list>${sql.meta.base}/${db.ks.enroll.schema}-${sql.suffix.data}</sql.data.4.list>
        <sql.data.5.list>${sql.meta.base}/${db.ks.rice.schema}-${sql.suffix.data}</sql.data.5.list>

        <sql.constraints.1>classpath:sql/${db.vendor}/${db.rice.baseline.schema}-constraints.sql</sql.constraints.1>
        <sql.constraints.2.list>${sql.meta.base}/${db.ks.core.schema}-${sql.suffix.constraints}</sql.constraints.2.list>
        <sql.constraints.3.list>${sql.meta.base}/${db.ks.lum.schema}-${sql.suffix.constraints}</sql.constraints.3.list>
        <sql.constraints.4.list>${sql.meta.base}/${db.ks.enroll.schema}-${sql.suffix.constraints}</sql.constraints.4.list>
        <sql.constraints.5.list>${sql.meta.base}/${db.ks.rice.schema}-${sql.suffix.constraints}</sql.constraints.5.list>

        <!-- Run upgrade scripts, after all baseline scripts have been applied -->
        <sql.other.1.list>${sql.meta.base}/${db.ks.core.schema}-${sql.suffix.upgrades}</sql.other.1.list>
        <sql.other.2.list>${sql.meta.base}/${db.ks.rice.schema}-${sql.suffix.upgrades}</sql.other.2.list>
        <sql.other.3.list>${sql.meta.base}/${db.ks.lum.schema}-${sql.suffix.upgrades}</sql.other.3.list>
        <sql.other.4.list>${sql.meta.base}/${db.ks.enroll.schema}-${sql.suffix.upgrades}</sql.other.4.list>

        <!-- Controller properties -->
        <sql.schema.concurrent>sql.schema.1,sql.schema.2.list,sql.schema.3.list,sql.schema.4.list,sql.schema.5.list</sql.schema.concurrent>
        <sql.data.concurrent>sql.data.2.list,sql.data.3.list,sql.data.4.list</sql.data.concurrent>
        <sql.data.sequential>sql.data.1.list,sql.data.5.list</sql.data.sequential>
        <sql.constraints.order>concurrent,sequential</sql.constraints.order>
        <sql.constraints.concurrent>sql.constraints.2.list,sql.constraints.3.list,sql.constraints.4.list</sql.constraints.concurrent>
        <sql.constraints.sequential>sql.constraints.1,sql.constraints.5.list</sql.constraints.sequential>
        <sql.other.sequential>sql.other.1.list,sql.other.2.list,sql.other.3.list,sql.other.4.list</sql.other.sequential>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.kuali.maven.plugins</groupId>
            <artifactId>spring-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>