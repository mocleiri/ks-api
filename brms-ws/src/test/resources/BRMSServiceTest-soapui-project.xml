<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="BRMSServiceTest" soapui-version="2.0.2" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="ProjectSettings@projectRoot">C:\util\eclipse\kuali_workspace\kuali_rule_phase3_workspace\brms-impl-dev\brms-ws\src\test\resources</con:setting></con:settings><con:interface name="RuleManagementServiceServiceSoapBinding" bindingName="{http://student.kuali.org/poc/wsdl/brms/rulemanagement}RuleManagementServiceServiceSoapBinding" soapVersion="1_1" definition="file:C:\java_tools\Kuali\brms-api-dev\rule-management-api\target\generated\wsdl\RuleManagementService.wsdl"><con:settings/><con:endpoints><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="createBusinessRule" bindingOperationName="createBusinessRule" inputName="createBusinessRule" outputName="createBusinessRuleResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
   <soapenv:Header>
   </soapenv:Header>
   <soapenv:Body>
      <rul:createBusinessRule>
         <!--Optional:-->
         <businessRuleInfo businessRuleId="">
            <!--Optional:-->
            <businessRuleTypeKey>KUALI_PRE_REQ</businessRuleTypeKey>
            <!--Optional:-->
            <anchorValue>MATH 101</anchorValue>
            <!--Optional:-->
            <anchorTypeKey>KUALI_COURSE</anchorTypeKey>
            <!--Optional:-->
            <name>Freshmen Math TEST123</name>
            <!--Optional:-->
            <description>enrollment pre-requisites for Freshman Math 101</description>
            <!--Optional:-->
            <successMessage></successMessage>
            <!--Optional:-->
            <failureMessage></failureMessage>
            <!--Optional:-->
            <effectiveStartTime>2008-10-26T21:32:52</effectiveStartTime>
            <effectiveEndTime>2009-10-26T21:32:52</effectiveEndTime>
            <status>DRAFT_IN_PROGRESS</status>
            <!--Optional:-->
            <compiledId/>
            <!--Optional:-->
            <compiledVersionNumber/>
            <!--Optional:-->
            <ruleElementList></ruleElementList>
            <!--Optional:-->
            <metaInfo>
               <!--Optional:-->
               <createTime></createTime>
               <!--Optional:-->
               <createID/>
               <!--Optional:-->
               <createComment/>
               <!--Optional:-->
               <updateTime></updateTime>
               <!--Optional:-->
               <updateID/>
               <!--Optional:-->
               <updateComment/>
            </metaInfo>
         </businessRuleInfo>
      </rul:createBusinessRule>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="deleteBusinessRule" bindingOperationName="deleteBusinessRule" inputName="deleteBusinessRule" outputName="deleteBusinessRuleResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:deleteBusinessRule>
         <!--Optional:-->
         <businessRuleId>2</businessRuleId>
      </rul:deleteBusinessRule>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="fetchAgendaInfo" bindingOperationName="fetchAgendaInfo" inputName="fetchAgendaInfo" outputName="fetchAgendaInfoResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:fetchAgendaInfo>
         <!--Optional:-->
         <agendaTypeKey>?</agendaTypeKey>
         <!--Optional:-->
         <agendaInfoDeterminationStructure>
            <!--Optional:-->
            <agendaInfoDeterminationKey>
               <!--Zero or more repetitions:-->
               <attribute type="?" value="?"/>
            </agendaInfoDeterminationKey>
         </agendaInfoDeterminationStructure>
      </rul:fetchAgendaInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="fetchAgendaInfoDeterminationStructure" bindingOperationName="fetchAgendaInfoDeterminationStructure" inputName="fetchAgendaInfoDeterminationStructure" outputName="fetchAgendaInfoDeterminationStructureResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:fetchAgendaInfoDeterminationStructure>
         <!--Optional:-->
         <agendaTypeKey>?</agendaTypeKey>
      </rul:fetchAgendaInfoDeterminationStructure>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="fetchBusinessRuleEnglish" bindingOperationName="fetchBusinessRuleEnglish" inputName="fetchBusinessRuleEnglish" outputName="fetchBusinessRuleEnglishResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:fetchBusinessRuleEnglish>
         <!--Optional:-->
         <businessRuleId>?</businessRuleId>
      </rul:fetchBusinessRuleEnglish>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="fetchBusinessRuleInfo" bindingOperationName="fetchBusinessRuleInfo" inputName="fetchBusinessRuleInfo" outputName="fetchBusinessRuleInfoResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:fetchBusinessRuleInfo>
         <!--Optional:-->
         <businessRuleId>3</businessRuleId>
      </rul:fetchBusinessRuleInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="fetchBusinessRuleInfoByAnchor" bindingOperationName="fetchBusinessRuleInfoByAnchor" inputName="fetchBusinessRuleInfoByAnchor" outputName="fetchBusinessRuleInfoByAnchorResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:fetchBusinessRuleInfoByAnchor>
         <!--Optional:-->
         <arg0>
            <!--Optional:-->
            <businessRuleTypeKey>?</businessRuleTypeKey>
            <!--Optional:-->
            <anchorTypeKey>?</anchorTypeKey>
            <!--Optional:-->
            <anchorValue>?</anchorValue>
         </arg0>
      </rul:fetchBusinessRuleInfoByAnchor>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="fetchBusinessRuleInfoByAnchorList" bindingOperationName="fetchBusinessRuleInfoByAnchorList" inputName="fetchBusinessRuleInfoByAnchorList" outputName="fetchBusinessRuleInfoByAnchorListResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:fetchBusinessRuleInfoByAnchorList>
         <!--Optional:-->
         <businessRuleAnchorInfoList>
            <!--Optional:-->
            <businessRuleTypeKey>?</businessRuleTypeKey>
            <!--Optional:-->
            <anchorTypeKey>?</anchorTypeKey>
            <!--Optional:-->
            <anchorValue>?</anchorValue>
         </businessRuleAnchorInfoList>
      </rul:fetchBusinessRuleInfoByAnchorList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="fetchBusinessRuleType" bindingOperationName="fetchBusinessRuleType" inputName="fetchBusinessRuleType" outputName="fetchBusinessRuleTypeResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:fetchBusinessRuleType>
         <!--Optional:-->
         <arg0>KUALI_PRE_REQ</arg0>
         <!--Optional:-->
         <arg1>KUALI_COURSE</arg1>
      </rul:fetchBusinessRuleType>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="fetchDetailedBusinessRuleInfo" bindingOperationName="fetchDetailedBusinessRuleInfo" inputName="fetchDetailedBusinessRuleInfo" outputName="fetchDetailedBusinessRuleInfoResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:fetchDetailedBusinessRuleInfo>
         <!--Optional:-->
         <businessRuleId>3</businessRuleId>
      </rul:fetchDetailedBusinessRuleInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="findAgendaTypes" bindingOperationName="findAgendaTypes" inputName="findAgendaTypes" outputName="findAgendaTypesResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:findAgendaTypes/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="findAnchorsByAnchorType" bindingOperationName="findAnchorsByAnchorType" inputName="findAnchorsByAnchorType" outputName="findAnchorsByAnchorTypeResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:findAnchorsByAnchorType>
         <!--Optional:-->
         <anchorTypeKey>?</anchorTypeKey>
      </rul:findAnchorsByAnchorType>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="findAnchorTypes" bindingOperationName="findAnchorTypes" inputName="findAnchorTypes" outputName="findAnchorTypesResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:findAnchorTypes/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="findBusinessRuleIdsByBusinessRuleType" bindingOperationName="findBusinessRuleIdsByBusinessRuleType" inputName="findBusinessRuleIdsByBusinessRuleType" outputName="findBusinessRuleIdsByBusinessRuleTypeResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:findBusinessRuleIdsByBusinessRuleType>
         <!--Optional:-->
         <businessRuleTypeKey>?</businessRuleTypeKey>
      </rul:findBusinessRuleIdsByBusinessRuleType>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="findBusinessRuleTypes" bindingOperationName="findBusinessRuleTypes" inputName="findBusinessRuleTypes" outputName="findBusinessRuleTypesResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:findBusinessRuleTypes/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="findBusinessRuleTypesByAgendaType" bindingOperationName="findBusinessRuleTypesByAgendaType" inputName="findBusinessRuleTypesByAgendaType" outputName="findBusinessRuleTypesByAgendaTypeResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:findBusinessRuleTypesByAgendaType>
         <!--Optional:-->
         <agendaTypeKey>KUALI_STUDENT_STUDENT_DROPS_COURSE</agendaTypeKey>
      </rul:findBusinessRuleTypesByAgendaType>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="updateBusinessRule" bindingOperationName="updateBusinessRule" inputName="updateBusinessRule" outputName="updateBusinessRuleResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.0.1-SNAPSHOT/services/RuleManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/poc/wsdl/brms/rulemanagement">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:updateBusinessRule>
         <!--Optional:-->
         <businessRuleId>3</businessRuleId>
         <!--Optional:-->
         <businessRuleInfo businessRuleId="3">
            <businessRuleTypeKey>KUALI_PRE_REQ</businessRuleTypeKey>

            <anchorValue>PSYC 301</anchorValue>

            <anchorTypeKey>KUALI_COURSE</anchorTypeKey>

            <name>Cognitive Psychology Pre Req</name>

            <description> TEST enrollment pre-requisites for Cognitive Psychology PSYC 300</description>

            <successMessage>PSYC 300 pre requirements passed.</successMessage>

            <failureMessage>PSYC 300 pre requirements failed.</failureMessage>

            <effectiveStartTime>2008-11-19T15:27:09.435-05:00</effectiveStartTime>

            <effectiveEndTime>2008-11-19T15:27:09.435-05:00</effectiveEndTime>

            <status>DRAFT_IN_PROGRESS</status>

            <compiledId/>

            <ruleElementList>

               <ruleElement>

                  <operation>LPAREN</operation>

                  <ordinalPosition>1</ordinalPosition>

                  <name>E1</name>

                  <description/>

               </ruleElement>

               <ruleElement>

                  <operation>PROPOSITION</operation>

                  <ordinalPosition>2</ordinalPosition>

                  <name>E2</name>

                  <description/>

                  <ruleProposition>

                     <name>P31</name>

                     <description>pre-req psychology 300 courses is PSYC 200</description>

                     <failureMessage>Pre req of PSYC 200 not met.</failureMessage>

                     <comparisonDataType>java.lang.Number</comparisonDataType>

                     <leftHandSide>

                        <yieldValueFunction>

                           <yieldValueFunctionType>INTERSECTION</yieldValueFunctionType>

                           <factStructureList>

                              <factStructure staticFact="true" factTypeKey="fact.psyc300_prereq_criteria1" factStructureId="311">

                                 <anchorFlag>false</anchorFlag>

                                 <paramValueMap/>

                                 <staticValueDataType>java.lang.String</staticValueDataType>

                                 <staticValue>PSYC 200</staticValue>

                              </factStructure>

                              <factStructure staticFact="false" factTypeKey="fact.completed_course_list" factStructureId="312">

                                 <anchorFlag>false</anchorFlag>

                                 <paramValueMap>

                                    <attribute type="factParam.studentId"/>

                                 </paramValueMap>

                              </factStructure>

                           </factStructureList>

                        </yieldValueFunction>

                     </leftHandSide>

                     <comparisonOperatorType>EQUAL_TO</comparisonOperatorType>

                     <rightHandSide>

                        <expectedValue>1</expectedValue>

                     </rightHandSide>

                  </ruleProposition>

               </ruleElement>

               <ruleElement>

                  <operation>RPAREN</operation>

                  <ordinalPosition>1</ordinalPosition>

                  <name>E3</name>

                  <description/>

               </ruleElement>

               <ruleElement>

                  <operation>OR</operation>

                  <ordinalPosition>2</ordinalPosition>

                  <name>E4</name>

                  <description/>

               </ruleElement>

               <ruleElement>

                  <operation>LPAREN</operation>

                  <ordinalPosition>1</ordinalPosition>

                  <name>E5</name>

                  <description/>

               </ruleElement>

               <ruleElement>

                  <operation>PROPOSITION</operation>

                  <ordinalPosition>3</ordinalPosition>

                  <name>E6</name>

                  <description/>

                  <ruleProposition>

                     <name>P32</name>

                     <description>pre-req psychology 300 courses is PSYC 201 and PSYC 202</description>

                     <failureMessage>Pre req of PSYC 201 and PSYC 202 not met.</failureMessage>

                     <comparisonDataType>java.lang.Number</comparisonDataType>

                     <leftHandSide>

                        <yieldValueFunction>

                           <yieldValueFunctionType>INTERSECTION</yieldValueFunctionType>

                           <factStructureList>

                              <factStructure staticFact="true" factTypeKey="fact.psyc300_prereq_criteria2" factStructureId="321">

                                 <anchorFlag>false</anchorFlag>

                                 <paramValueMap/>

                                 <staticValueDataType>java.lang.String</staticValueDataType>

                                 <staticValue>PSYC 201, PSYC 202</staticValue>

                              </factStructure>

                              <factStructure staticFact="false" factTypeKey="fact.completed_course_list" factStructureId="322">

                                 <anchorFlag>false</anchorFlag>

                                 <paramValueMap>

                                    <attribute type="factParam.studentId"/>

                                 </paramValueMap>

                              </factStructure>

                           </factStructureList>

                        </yieldValueFunction>

                     </leftHandSide>

                     <comparisonOperatorType>EQUAL_TO</comparisonOperatorType>

                     <rightHandSide>

                        <expectedValue>2</expectedValue>

                     </rightHandSide>

                  </ruleProposition>

               </ruleElement>

               <ruleElement>

                  <operation>RPAREN</operation>

                  <ordinalPosition>1</ordinalPosition>

                  <name>E7</name>

                  <description/>

               </ruleElement>

               <ruleElement>

                  <operation>OR</operation>

                  <ordinalPosition>2</ordinalPosition>

                  <name>E8</name>

                  <description/>

               </ruleElement>

               <ruleElement>

                  <operation>LPAREN</operation>

                  <ordinalPosition>1</ordinalPosition>

                  <name>E9</name>

                  <description/>

               </ruleElement>

               <ruleElement>

                  <operation>PROPOSITION</operation>

                  <ordinalPosition>3</ordinalPosition>

                  <name>E10</name>

                  <description/>

                  <ruleProposition>

                     <name>P32</name>

                     <description>6 credits of 200-level Psychology courses (but not 205 or 263)</description>

                     <failureMessage>Did not met requirements for 6 credits from 200-level Psychology courses.</failureMessage>

                     <comparisonDataType>java.lang.Number</comparisonDataType>

                     <leftHandSide>

                        <yieldValueFunction>

                           <yieldValueFunctionType>SUM</yieldValueFunctionType>

                           <factStructureList>

                              <factStructure staticFact="false" factTypeKey="fact.earned_credit_list" factStructureId="331">

                                 <anchorFlag>false</anchorFlag>

                                 <paramValueMap>

                                    <attribute value="PSYC 200, PSYC 201, PSYC 202, PSYC 205, PSYC 218, PSYC 263" type="factParam.clusetId"/>

                                    <attribute type="factParam.studentId"/>

                                    <attribute value="PSYC 205, PSYC 263" type="factParam.excludeCluSet"/>

                                 </paramValueMap>

                                 <staticValueDataType>java.lang.Number</staticValueDataType>

                                 <staticValue/>

                              </factStructure>

                           </factStructureList>

                        </yieldValueFunction>

                     </leftHandSide>

                     <comparisonOperatorType>GREATER_THAN</comparisonOperatorType>

                     <rightHandSide>

                        <expectedValue>6.0</expectedValue>

                     </rightHandSide>

                  </ruleProposition>

               </ruleElement>

               <ruleElement>

                  <operation>RPAREN</operation>

                  <ordinalPosition>1</ordinalPosition>

                  <name>E11</name>

                  <description/>

               </ruleElement>

            </ruleElementList>

            <metaInfo>

               <createTime>2008-11-19T15:27:09.435-05:00</createTime>

               <createID>Kamal</createID>

               <updateTime>2008-11-19T15:27:09.435-05:00</updateTime>

               <updateID>Wil</updateID>

            </metaInfo>
         </businessRuleInfo>
      </rul:updateBusinessRule>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:definitionCache rootPart="file:C:\java_tools\Kuali\brms-api-dev\rule-management-api\target\generated\wsdl\RuleManagementService.wsdl" type="TEXT"><con:part><con:url>file:C:\java_tools\Kuali\brms-api-dev\rule-management-api\target\generated\wsdl\RuleManagementService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="RuleManagementService" targetNamespace="http://student.kuali.org/poc/wsdl/brms/rulemanagement" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://student.kuali.org/poc/wsdl/brms/rulemanagement" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/poc/wsdl/brms/rulemanagement" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="createBusinessRule" type="tns:createBusinessRule"/>
      <xs:element name="createBusinessRuleResponse" type="tns:createBusinessRuleResponse"/>
      <xs:element name="deleteBusinessRule" type="tns:deleteBusinessRule"/>
      <xs:element name="deleteBusinessRuleResponse" type="tns:deleteBusinessRuleResponse"/>
      <xs:element name="fetchAgendaInfo" type="tns:fetchAgendaInfo"/>
      <xs:element name="fetchAgendaInfoDeterminationStructure" type="tns:fetchAgendaInfoDeterminationStructure"/>
      <xs:element name="fetchAgendaInfoDeterminationStructureResponse" type="tns:fetchAgendaInfoDeterminationStructureResponse"/>
      <xs:element name="fetchAgendaInfoResponse" type="tns:fetchAgendaInfoResponse"/>
      <xs:element name="fetchBusinessRuleEnglish" type="tns:fetchBusinessRuleEnglish"/>
      <xs:element name="fetchBusinessRuleEnglishResponse" type="tns:fetchBusinessRuleEnglishResponse"/>
      <xs:element name="fetchBusinessRuleInfo" type="tns:fetchBusinessRuleInfo"/>
      <xs:element name="fetchBusinessRuleInfoByAnchor" type="tns:fetchBusinessRuleInfoByAnchor"/>
      <xs:element name="fetchBusinessRuleInfoByAnchorList" type="tns:fetchBusinessRuleInfoByAnchorList"/>
      <xs:element name="fetchBusinessRuleInfoByAnchorListResponse" type="tns:fetchBusinessRuleInfoByAnchorListResponse"/>
      <xs:element name="fetchBusinessRuleInfoByAnchorResponse" type="tns:fetchBusinessRuleInfoByAnchorResponse"/>
      <xs:element name="fetchBusinessRuleInfoResponse" type="tns:fetchBusinessRuleInfoResponse"/>
      <xs:element name="fetchBusinessRuleType" type="tns:fetchBusinessRuleType"/>
      <xs:element name="fetchBusinessRuleTypeResponse" type="tns:fetchBusinessRuleTypeResponse"/>
      <xs:element name="fetchDetailedBusinessRuleInfo" type="tns:fetchDetailedBusinessRuleInfo"/>
      <xs:element name="fetchDetailedBusinessRuleInfoResponse" type="tns:fetchDetailedBusinessRuleInfoResponse"/>
      <xs:element name="findAgendaTypes" type="tns:findAgendaTypes"/>
      <xs:element name="findAgendaTypesResponse" type="tns:findAgendaTypesResponse"/>
      <xs:element name="findAnchorTypes" type="tns:findAnchorTypes"/>
      <xs:element name="findAnchorTypesResponse" type="tns:findAnchorTypesResponse"/>
      <xs:element name="findAnchorsByAnchorType" type="tns:findAnchorsByAnchorType"/>
      <xs:element name="findAnchorsByAnchorTypeResponse" type="tns:findAnchorsByAnchorTypeResponse"/>
      <xs:element name="findBusinessRuleIdsByBusinessRuleType" type="tns:findBusinessRuleIdsByBusinessRuleType"/>
      <xs:element name="findBusinessRuleIdsByBusinessRuleTypeResponse" type="tns:findBusinessRuleIdsByBusinessRuleTypeResponse"/>
      <xs:element name="findBusinessRuleTypes" type="tns:findBusinessRuleTypes"/>
      <xs:element name="findBusinessRuleTypesByAgendaType" type="tns:findBusinessRuleTypesByAgendaType"/>
      <xs:element name="findBusinessRuleTypesByAgendaTypeResponse" type="tns:findBusinessRuleTypesByAgendaTypeResponse"/>
      <xs:element name="findBusinessRuleTypesResponse" type="tns:findBusinessRuleTypesResponse"/>
      <xs:element name="updateBusinessRule" type="tns:updateBusinessRule"/>
      <xs:element name="updateBusinessRuleResponse" type="tns:updateBusinessRuleResponse"/>
      <xs:complexType name="fetchBusinessRuleInfoByAnchor">
        <xs:sequence>
          <xs:element minOccurs="0" name="arg0" type="tns:businessRuleAnchorDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="businessRuleAnchorDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="businessRuleTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="anchorTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="anchorValue" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchBusinessRuleInfoByAnchorResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchDetailedBusinessRuleInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchDetailedBusinessRuleInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="businessRuleInfoDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="businessRuleTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="anchorValue" type="xs:string"/>
          <xs:element minOccurs="0" name="anchorTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="successMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="failureMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveStartTime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="effectiveEndTime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="status" type="xs:string"/>
          <xs:element minOccurs="0" name="compiledId" type="xs:string"/>
          <xs:element minOccurs="0" name="compiledVersionNumber" type="xs:long"/>
          <xs:element minOccurs="0" name="ruleElementList">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="ruleElement" type="tns:ruleElementDTO"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfoDTO"/>
        </xs:sequence>
        <xs:attribute name="businessRuleId" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="ruleElementDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="operation" type="xs:string"/>
          <xs:element minOccurs="0" name="ordinalPosition" type="xs:int"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="ruleProposition" type="tns:rulePropositionDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="rulePropositionDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="failureMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="comparisonDataType" type="xs:string"/>
          <xs:element minOccurs="0" name="leftHandSide" type="tns:leftHandSideDTO"/>
          <xs:element minOccurs="0" name="comparisonOperatorType" type="xs:string"/>
          <xs:element minOccurs="0" name="rightHandSide" type="tns:rightHandSideDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="leftHandSideDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="yieldValueFunction" type="tns:yieldValueFunctionDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="yieldValueFunctionDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="yieldValueFunctionType" type="xs:string"/>
          <xs:element minOccurs="0" name="factStructureList">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="factStructure" type="tns:factStructureDTO"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="factStructureDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="criteriaTypeInfo" type="tns:factCriteriaTypeInfoDTO"/>
          <xs:element minOccurs="0" name="anchorFlag" type="xs:boolean"/>
          <xs:element minOccurs="0" name="paramValueMap" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="staticValueDataType" type="xs:string"/>
          <xs:element minOccurs="0" name="staticValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="factStructureId" type="xs:string"/>
        <xs:attribute name="factTypeKey" type="xs:string"/>
        <xs:attribute name="staticFact" type="xs:boolean"/>
      </xs:complexType>
      <xs:complexType name="factCriteriaTypeInfoDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="factParamMap" type="tns:factParamList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="factParamList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="tns:factParamMapEntry"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="factParamMapEntry">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="tns:factParamDTO"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="factParamDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="dataType" type="xs:string"/>
          <xs:element minOccurs="0" name="minLength" type="xs:int"/>
          <xs:element minOccurs="0" name="maxLength" type="xs:int"/>
          <xs:element minOccurs="0" name="validCharacters" type="xs:string"/>
          <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
          <xs:element minOccurs="0" name="maxOccurs" type="xs:int"/>
          <xs:element minOccurs="0" name="defTime" type="tns:factParamDefTime"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Attribute">
        <xs:sequence/>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="value" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="rightHandSideDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="expectedValue" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="metaInfoDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="createID" type="xs:string"/>
          <xs:element minOccurs="0" name="createComment" type="xs:string"/>
          <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="updateID" type="xs:string"/>
          <xs:element minOccurs="0" name="updateComment" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchAgendaInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="agendaTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="agendaInfoDeterminationStructure" type="tns:agendaInfoDeterminationStructureDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="agendaInfoDeterminationStructureDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="agendaInfoDeterminationKey" type="tns:jaxbAttributeList"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchAgendaInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:agendaInfoDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="agendaInfoDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="agendaTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="agendaInfoDeterminationStructure" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="businessRuleTypeList">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="businessRuletype" type="tns:businessRuleTypeDTO"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="orchestration" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="businessRuleTypeDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="bussinessRuleTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="anchorTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="factStructureList">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="factStructure" type="xs:string"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchBusinessRuleType">
        <xs:sequence>
          <xs:element minOccurs="0" name="arg0" type="xs:string"/>
          <xs:element minOccurs="0" name="arg1" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchBusinessRuleTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:businessRuleTypeDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchAgendaInfoDeterminationStructure">
        <xs:sequence>
          <xs:element minOccurs="0" name="agendaTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchAgendaInfoDeterminationStructureResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:agendaInfoDeterminationStructureDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchBusinessRuleInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchBusinessRuleInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchBusinessRuleEnglish">
        <xs:sequence>
          <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchBusinessRuleEnglishResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findAnchorsByAnchorType">
        <xs:sequence>
          <xs:element minOccurs="0" name="anchorTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findAnchorsByAnchorTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findBusinessRuleIdsByBusinessRuleType">
        <xs:sequence>
          <xs:element minOccurs="0" name="businessRuleTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findBusinessRuleIdsByBusinessRuleTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteBusinessRule">
        <xs:sequence>
          <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteBusinessRuleResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="statusDTO">
        <xs:sequence>
          <xs:element name="success" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createBusinessRule">
        <xs:sequence>
          <xs:element minOccurs="0" name="businessRuleInfo" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createBusinessRuleResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findAgendaTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="findAgendaTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchBusinessRuleInfoByAnchorList">
        <xs:sequence>
          <xs:element minOccurs="0" name="businessRuleAnchorInfoList" type="tns:businessRuleAnchorDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fetchBusinessRuleInfoByAnchorListResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findAnchorTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="findAnchorTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findBusinessRuleTypesByAgendaType">
        <xs:sequence>
          <xs:element minOccurs="0" name="agendaTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findBusinessRuleTypesByAgendaTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="findBusinessRuleTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="findBusinessRuleTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateBusinessRule">
        <xs:sequence>
          <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
          <xs:element minOccurs="0" name="businessRuleInfo" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateBusinessRuleResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="factParamDefTime">
        <xs:restriction base="xs:string">
          <xs:enumeration value="DEFINITION"/>
          <xs:enumeration value="EXECUTION"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
      <xs:complexType name="OperationFailedException">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
      <xs:complexType name="MissingParameterException">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
      <xs:complexType name="InvalidParameterException">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
      <xs:complexType name="DoesNotExistException">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
      <xs:complexType name="PermissionDeniedException">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="DependentObjectsExistException" type="tns:DependentObjectsExistException"/>
      <xs:complexType name="DependentObjectsExistException">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
      <xs:complexType name="AlreadyExistsException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="fetchBusinessRuleInfo">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part name="InvalidParameterException" element="tns:InvalidParameterException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createBusinessRule">
    <wsdl:part name="parameters" element="tns:createBusinessRule"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleEnglish">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleEnglish"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateBusinessRuleResponse">
    <wsdl:part name="parameters" element="tns:updateBusinessRuleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAgendaInfoResponse">
    <wsdl:part name="parameters" element="tns:fetchAgendaInfoResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findBusinessRuleTypesResponse">
    <wsdl:part name="parameters" element="tns:findBusinessRuleTypesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleType">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleType"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteBusinessRule">
    <wsdl:part name="parameters" element="tns:deleteBusinessRule"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAnchorsByAnchorTypeResponse">
    <wsdl:part name="parameters" element="tns:findAnchorsByAnchorTypeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAgendaInfo">
    <wsdl:part name="parameters" element="tns:fetchAgendaInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleInfoByAnchorResponse">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleInfoByAnchorResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAgendaInfoDeterminationStructureResponse">
    <wsdl:part name="parameters" element="tns:fetchAgendaInfoDeterminationStructureResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAnchorTypesResponse">
    <wsdl:part name="parameters" element="tns:findAnchorTypesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAgendaTypesResponse">
    <wsdl:part name="parameters" element="tns:findAgendaTypesResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchDetailedBusinessRuleInfoResponse">
    <wsdl:part name="parameters" element="tns:fetchDetailedBusinessRuleInfoResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleEnglishResponse">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleEnglishResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAgendaTypes">
    <wsdl:part name="parameters" element="tns:findAgendaTypes"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DependentObjectsExistException">
    <wsdl:part name="DependentObjectsExistException" element="tns:DependentObjectsExistException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAgendaInfoDeterminationStructure">
    <wsdl:part name="parameters" element="tns:fetchAgendaInfoDeterminationStructure"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateBusinessRule">
    <wsdl:part name="parameters" element="tns:updateBusinessRule"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findBusinessRuleIdsByBusinessRuleTypeResponse">
    <wsdl:part name="parameters" element="tns:findBusinessRuleIdsByBusinessRuleTypeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleInfoByAnchorListResponse">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleInfoByAnchorListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchDetailedBusinessRuleInfo">
    <wsdl:part name="parameters" element="tns:fetchDetailedBusinessRuleInfo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part name="MissingParameterException" element="tns:MissingParameterException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteBusinessRuleResponse">
    <wsdl:part name="parameters" element="tns:deleteBusinessRuleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleInfoByAnchor">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleInfoByAnchor"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createBusinessRuleResponse">
    <wsdl:part name="parameters" element="tns:createBusinessRuleResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleInfoResponse">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleInfoResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAnchorTypes">
    <wsdl:part name="parameters" element="tns:findAnchorTypes"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleTypeResponse">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleTypeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part name="DoesNotExistException" element="tns:DoesNotExistException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findBusinessRuleIdsByBusinessRuleType">
    <wsdl:part name="parameters" element="tns:findBusinessRuleIdsByBusinessRuleType"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part name="OperationFailedException" element="tns:OperationFailedException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAnchorsByAnchorType">
    <wsdl:part name="parameters" element="tns:findAnchorsByAnchorType"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part name="PermissionDeniedException" element="tns:PermissionDeniedException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findBusinessRuleTypes">
    <wsdl:part name="parameters" element="tns:findBusinessRuleTypes"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findBusinessRuleTypesByAgendaTypeResponse">
    <wsdl:part name="parameters" element="tns:findBusinessRuleTypesByAgendaTypeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="findBusinessRuleTypesByAgendaType">
    <wsdl:part name="parameters" element="tns:findBusinessRuleTypesByAgendaType"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part name="AlreadyExistsException" element="tns:AlreadyExistsException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleInfoByAnchorList">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleInfoByAnchorList"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="RuleManagementService">
    <wsdl:operation name="fetchBusinessRuleInfoByAnchor">
      <wsdl:input name="fetchBusinessRuleInfoByAnchor" message="tns:fetchBusinessRuleInfoByAnchor"></wsdl:input>
      <wsdl:output name="fetchBusinessRuleInfoByAnchorResponse" message="tns:fetchBusinessRuleInfoByAnchorResponse"></wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException"></wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException"></wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException"></wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchDetailedBusinessRuleInfo">
      <wsdl:input name="fetchDetailedBusinessRuleInfo" message="tns:fetchDetailedBusinessRuleInfo"></wsdl:input>
      <wsdl:output name="fetchDetailedBusinessRuleInfoResponse" message="tns:fetchDetailedBusinessRuleInfoResponse"></wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException"></wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException"></wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException"></wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAgendaInfo">
      <wsdl:input name="fetchAgendaInfo" message="tns:fetchAgendaInfo"></wsdl:input>
      <wsdl:output name="fetchAgendaInfoResponse" message="tns:fetchAgendaInfoResponse"></wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException"></wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException"></wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException"></wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleType">
      <wsdl:input name="fetchBusinessRuleType" message="tns:fetchBusinessRuleType"></wsdl:input>
      <wsdl:output name="fetchBusinessRuleTypeResponse" message="tns:fetchBusinessRuleTypeResponse"></wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException"></wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException"></wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException"></wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAgendaInfoDeterminationStructure">
      <wsdl:input name="fetchAgendaInfoDeterminationStructure" message="tns:fetchAgendaInfoDeterminationStructure"></wsdl:input>
      <wsdl:output name="fetchAgendaInfoDeterminationStructureResponse" message="tns:fetchAgendaInfoDeterminationStructureResponse"></wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException"></wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException"></wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException"></wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleInfo">
      <wsdl:input name="fetchBusinessRuleInfo" message="tns:fetchBusinessRuleInfo"></wsdl:input>
      <wsdl:output name="fetchBusinessRuleInfoResponse" message="tns:fetchBusinessRuleInfoResponse"></wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException"></wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException"></wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException"></wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleEnglish">
      <wsdl:input name="fetchBusinessRuleEnglish" message="tns:fetchBusinessRuleEnglish"></wsdl:input>
      <wsdl:output name="fetchBusinessRuleEnglishResponse" message="tns:fetchBusinessRuleEnglishResponse"></wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException"></wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException"></wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException"></wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAnchorsByAnchorType">
      <wsdl:input name="findAnchorsByAnchorType" message="tns:findAnchorsByAnchorType"></wsdl:input>
      <wsdl:output name="findAnchorsByAnchorTypeResponse" message="tns:findAnchorsByAnchorTypeResponse"></wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException"></wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException"></wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException"></wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findBusinessRuleIdsByBusinessRuleType">
      <wsdl:input name="findBusinessRuleIdsByBusinessRuleType" message="tns:findBusinessRuleIdsByBusinessRuleType"></wsdl:input>
      <wsdl:output name="findBusinessRuleIdsByBusinessRuleTypeResponse" message="tns:findBusinessRuleIdsByBusinessRuleTypeResponse"></wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException"></wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException"></wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException"></wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteBusinessRule">
      <wsdl:input name="deleteBusinessRule" message="tns:deleteBusinessRule"></wsdl:input>
      <wsdl:output name="deleteBusinessRuleResponse" message="tns:deleteBusinessRuleResponse"></wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException"></wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException" message="tns:DependentObjectsExistException"></wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException"></wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException"></wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException"></wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createBusinessRule">
      <wsdl:input name="createBusinessRule" message="tns:createBusinessRule"></wsdl:input>
      <wsdl:output name="createBusinessRuleResponse" message="tns:createBusinessRuleResponse"></wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException"></wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException"></wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException"></wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException"></wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAgendaTypes">
      <wsdl:input name="findAgendaTypes" message="tns:findAgendaTypes"></wsdl:input>
      <wsdl:output name="findAgendaTypesResponse" message="tns:findAgendaTypesResponse"></wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleInfoByAnchorList">
      <wsdl:input name="fetchBusinessRuleInfoByAnchorList" message="tns:fetchBusinessRuleInfoByAnchorList"></wsdl:input>
      <wsdl:output name="fetchBusinessRuleInfoByAnchorListResponse" message="tns:fetchBusinessRuleInfoByAnchorListResponse"></wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException"></wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException"></wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException"></wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAnchorTypes">
      <wsdl:input name="findAnchorTypes" message="tns:findAnchorTypes"></wsdl:input>
      <wsdl:output name="findAnchorTypesResponse" message="tns:findAnchorTypesResponse"></wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findBusinessRuleTypesByAgendaType">
      <wsdl:input name="findBusinessRuleTypesByAgendaType" message="tns:findBusinessRuleTypesByAgendaType"></wsdl:input>
      <wsdl:output name="findBusinessRuleTypesByAgendaTypeResponse" message="tns:findBusinessRuleTypesByAgendaTypeResponse"></wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException"></wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException"></wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException"></wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findBusinessRuleTypes">
      <wsdl:input name="findBusinessRuleTypes" message="tns:findBusinessRuleTypes"></wsdl:input>
      <wsdl:output name="findBusinessRuleTypesResponse" message="tns:findBusinessRuleTypesResponse"></wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBusinessRule">
      <wsdl:input name="updateBusinessRule" message="tns:updateBusinessRule"></wsdl:input>
      <wsdl:output name="updateBusinessRuleResponse" message="tns:updateBusinessRuleResponse"></wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException"></wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException"></wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException"></wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException"></wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RuleManagementServiceServiceSoapBinding" type="tns:RuleManagementService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="fetchBusinessRuleInfoByAnchor">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchBusinessRuleInfoByAnchor">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchBusinessRuleInfoByAnchorResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchDetailedBusinessRuleInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchDetailedBusinessRuleInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchDetailedBusinessRuleInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAgendaInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchAgendaInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchAgendaInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchBusinessRuleType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchBusinessRuleTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAgendaInfoDeterminationStructure">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchAgendaInfoDeterminationStructure">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchAgendaInfoDeterminationStructureResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchBusinessRuleInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchBusinessRuleInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleEnglish">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchBusinessRuleEnglish">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchBusinessRuleEnglishResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAnchorsByAnchorType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findAnchorsByAnchorType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAnchorsByAnchorTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findBusinessRuleIdsByBusinessRuleType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findBusinessRuleIdsByBusinessRuleType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findBusinessRuleIdsByBusinessRuleTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createBusinessRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createBusinessRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createBusinessRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteBusinessRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteBusinessRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteBusinessRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleInfoByAnchorList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchBusinessRuleInfoByAnchorList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchBusinessRuleInfoByAnchorListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAgendaTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findAgendaTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAgendaTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAnchorTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findAnchorTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAnchorTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findBusinessRuleTypesByAgendaType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findBusinessRuleTypesByAgendaType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findBusinessRuleTypesByAgendaTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findBusinessRuleTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findBusinessRuleTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findBusinessRuleTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBusinessRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateBusinessRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateBusinessRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RuleManagementService">
    <wsdl:port name="RuleManagementServicePort" binding="tns:RuleManagementServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/RuleManagementServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache></con:interface><con:interface name="RuleExecutionServiceSoapBinding" bindingName="{http://student.kuali.org/wsdl/brms/RuleExecution}RuleExecutionServiceSoapBinding" soapVersion="1_1" definition="http://localhost:8080/brms-ws-0.1.0-SNAPSHOT/services/RuleExecutionService?wsdl"><con:settings/><con:endpoints><con:endpoint>http://localhost:8080/brms-ws-0.1.0-SNAPSHOT/services/RuleExecutionService</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="executeAgenda" bindingOperationName="executeAgenda" inputName="executeAgenda" outputName="executeAgendaResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.1.0-SNAPSHOT/services/RuleExecutionService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/wsdl/brms/RuleExecution">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:executeAgenda>
         <!--Optional:-->
         <agenda>?</agenda>
         <!--Optional:-->
         <factStructure factStructureId="?" factTypeKey="?" staticFact="?">
            <!--Optional:-->
            <criteriaTypeInfo key="?">
               <!--Optional:-->
               <name>?</name>
               <!--Optional:-->
               <description>?</description>
               <!--Optional:-->
               <factParamMap>
                  <!--Zero or more repetitions:-->
                  <entry key="?">
                     <!--Optional:-->
                     <value key="?">
                        <!--Optional:-->
                        <name>?</name>
                        <!--Optional:-->
                        <description>?</description>
                        <!--Optional:-->
                        <dataType>?</dataType>
                        <!--Optional:-->
                        <minLength>?</minLength>
                        <!--Optional:-->
                        <maxLength>?</maxLength>
                        <!--Optional:-->
                        <validCharacters>?</validCharacters>
                        <!--Optional:-->
                        <minOccurs>?</minOccurs>
                        <!--Optional:-->
                        <maxOccurs>?</maxOccurs>
                        <!--Optional:-->
                        <defTime>?</defTime>
                     </value>
                  </entry>
               </factParamMap>
            </criteriaTypeInfo>
            <!--Optional:-->
            <anchorFlag>?</anchorFlag>
            <!--Optional:-->
            <paramValueMap>
               <!--Zero or more repetitions:-->
               <attribute type="?" value="?"/>
            </paramValueMap>
            <!--Optional:-->
            <staticValueDataType>?</staticValueDataType>
            <!--Optional:-->
            <staticValue>?</staticValue>
         </factStructure>
      </rul:executeAgenda>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="executeBusinessRule" bindingOperationName="executeBusinessRule" inputName="executeBusinessRule" outputName="executeBusinessRuleResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/brms-ws-0.1.0-SNAPSHOT/services/RuleExecutionService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:rul="http://student.kuali.org/wsdl/brms/RuleExecution">
   <soapenv:Header/>
   <soapenv:Body>
      <rul:executeBusinessRule>
         <!--Optional:-->
         <businessRuleId>11223344-1122-1122-1112-100000000001</businessRuleId>
      </rul:executeBusinessRule>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:definitionCache rootPart="http://localhost:8080/brms-ws-0.1.0-SNAPSHOT/services/RuleExecutionService?wsdl" type="TEXT"><con:part><con:url>http://localhost:8080/brms-ws-0.1.0-SNAPSHOT/services/RuleExecutionService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="RuleExecutionService" targetNamespace="http://student.kuali.org/wsdl/brms/RuleExecution" xmlns:ns1="http://cxf.apache.org/bindings/xformat" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://student.kuali.org/wsdl/brms/RuleExecution" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/brms/RuleExecution" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="agendaExecutionResultDTO" type="tns:agendaExecutionResultDTO"/>
      <xs:element name="executeAgenda" type="tns:executeAgenda"/>
      <xs:element name="executeAgendaResponse" type="tns:executeAgendaResponse"/>
      <xs:element name="executeBusinessRule" type="tns:executeBusinessRule"/>
      <xs:element name="executeBusinessRuleResponse" type="tns:executeBusinessRuleResponse"/>
      <xs:element name="executionResultDTO" type="tns:executionResultDTO"/>
      <xs:element name="propositionReportDTO" type="tns:propositionReportDTO"/>
      <xs:complexType name="executeAgenda">
        <xs:sequence>
          <xs:element minOccurs="0" name="agenda" type="xs:string"/>
          <xs:element minOccurs="0" name="factStructure" type="tns:factStructureDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="factStructureDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="criteriaTypeInfo" type="tns:factCriteriaTypeInfoDTO"/>
          <xs:element minOccurs="0" name="anchorFlag" type="xs:boolean"/>
          <xs:element minOccurs="0" name="paramValueMap" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="staticValueDataType" type="xs:string"/>
          <xs:element minOccurs="0" name="staticValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="factStructureId" type="xs:string"/>
        <xs:attribute name="factTypeKey" type="xs:string"/>
        <xs:attribute name="staticFact" type="xs:boolean"/>
      </xs:complexType>
      <xs:complexType name="factCriteriaTypeInfoDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="factParamMap" type="tns:factParamList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="factParamList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="tns:factParamMapEntry"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="factParamMapEntry">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="tns:factParamDTO"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="factParamDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="dataType" type="xs:string"/>
          <xs:element minOccurs="0" name="minLength" type="xs:int"/>
          <xs:element minOccurs="0" name="maxLength" type="xs:int"/>
          <xs:element minOccurs="0" name="validCharacters" type="xs:string"/>
          <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
          <xs:element minOccurs="0" name="maxOccurs" type="xs:int"/>
          <xs:element minOccurs="0" name="defTime" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Attribute">
        <xs:sequence/>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="value" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="executeAgendaResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:agendaExecutionResultDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="agendaExecutionResultDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="executionResult" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="executionResultList" type="tns:executionResultDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="executionResultDTO">
        <xs:sequence>
          <xs:element minOccurs="0" name="executionResult" type="xs:boolean"/>
          <xs:element minOccurs="0" name="propositionReport" type="tns:propositionReportDTO"/>
          <xs:element minOccurs="0" name="executionLog" type="xs:string"/>
          <xs:element minOccurs="0" name="errorMessage" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="propositionReportDTO">
        <xs:sequence>
          <xs:element name="successful" type="xs:boolean"/>
          <xs:element minOccurs="0" name="successMessage" type="xs:string"/>
          <xs:element minOccurs="0" name="failureMessage" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="executeBusinessRule">
        <xs:sequence>
          <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
          <xs:element minOccurs="0" name="factStructure" type="tns:factStructureDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="executeBusinessRuleResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:executionResultDTO"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
      <xs:complexType name="OperationFailedException">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
      <xs:complexType name="MissingParameterException">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
      <xs:complexType name="DoesNotExistException">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
      <xs:complexType name="InvalidParameterException">
        <xs:sequence/>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="executeAgenda">
    <wsdl:part element="tns:executeAgenda" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part element="tns:OperationFailedException" name="OperationFailedException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="executeBusinessRuleResponse">
    <wsdl:part element="tns:executeBusinessRuleResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="executeAgendaResponse">
    <wsdl:part element="tns:executeAgendaResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part element="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part element="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="executeBusinessRule">
    <wsdl:part element="tns:executeBusinessRule" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part element="tns:MissingParameterException" name="MissingParameterException"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="RuleExecutionService">
    <wsdl:operation name="executeAgenda">
      <wsdl:input message="tns:executeAgenda" name="executeAgenda"></wsdl:input>
      <wsdl:output message="tns:executeAgendaResponse" name="executeAgendaResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="executeBusinessRule">
      <wsdl:input message="tns:executeBusinessRule" name="executeBusinessRule"></wsdl:input>
      <wsdl:output message="tns:executeBusinessRuleResponse" name="executeBusinessRuleResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RuleExecutionServiceSoapBinding" type="tns:RuleExecutionService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="executeAgenda">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="executeAgenda">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="executeAgendaResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="executeBusinessRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="executeBusinessRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="executeBusinessRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RuleExecutionService">
    <wsdl:port binding="tns:RuleExecutionServiceSoapBinding" name="RuleExecutionService">
      <soap:address location="http://localhost:8080/brms-ws-0.1.0-SNAPSHOT/services/RuleExecutionService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache></con:interface><con:properties/><con:wssContainer/></con:soapui-project>