package prerequisiterules
import java.util.*;
import org.kuali.student.rules.internal.common.entity.ComparisonOperator;
import org.kuali.student.rules.internal.common.statement.*;
import org.kuali.student.rules.internal.common.facts.FactRequest;
import org.kuali.student.rules.util.FactContainer;
import org.kuali.student.rules.util.FactContainer.State;


rule "CHEM312_1990W_1990W_3370_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM312_1990W_1990W_3370", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH221".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM201,CHEM202".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM312_1990W_1990W_3370"
	when
        FactContainer( id == "CHEM312_1990W_1990W_3370", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM312_1991S_1991W_3370_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM312_1991S_1991W_3370", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "3", new HashSet(Arrays.asList("CHEM201,CHEM202,MATH221".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM312_1991S_1991W_3370"
	when
        FactContainer( id == "CHEM312_1991S_1991W_3370", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM312_1992S_1997S_3370_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM312_1992S_1997S_3370", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0+P1)");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH221".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "3", new HashSet(Arrays.asList("CHEM201,CHEM202,MATH152".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM312_1992S_1997S_3370"
	when
        FactContainer( id == "CHEM312_1992S_1997S_3370", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     )
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM313_1972W_1990W_3374_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM313_1972W_1990W_3374", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM230,CHEM203".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM313_1972W_1990W_3374"
	when
        FactContainer( id == "CHEM313_1972W_1990W_3374", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM313_1991S_1997S_3374_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM313_1991S_1997S_3374", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM203,CHEM213,CHEM230".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM313_1991S_1997S_3374"
	when
        FactContainer( id == "CHEM313_1991S_1997S_3374", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM330_1970W_1990W_3382_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM330_1970W_1990W_3382", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM230,CHEM203".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM330_1970W_1990W_3382"
	when
        FactContainer( id == "CHEM330_1970W_1990W_3382", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM330_1991S_1997S_3382_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM330_1991S_1997S_3382", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM203,CHEM213,CHEM230".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM330_1991S_1997S_3382"
	when
        FactContainer( id == "CHEM330_1991S_1997S_3382", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM335_1970W_1990S_3386_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM335_1970W_1990S_3386", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1*P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM201".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM230,CHEM203".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM202,CHEM205".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM335_1970W_1990S_3386"
	when
        FactContainer( id == "CHEM335_1970W_1990S_3386", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM335_1990W_1990W_3386_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM335_1990W_1990W_3386", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0*P1+P2+P3)");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM201".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM203,CHEM230".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP3 = new SubsetProposition("P3", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM205".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP3.apply();
        prop.addProposition(propositionP3);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM205,CHEM202".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM335_1990W_1990W_3386"
	when
        FactContainer( id == "CHEM335_1990W_1990W_3386", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P3" && result == true ) from prop.propositions
                     )
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM262_1991S_1993W_3335_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM262_1991S_1993W_3335", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM150,CHEM151,CHEM110,CHEM122".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM262_1991S_1993W_3335"
	when
        FactContainer( id == "CHEM262_1991S_1993W_3335", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM262_1994S_1994W_3335_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM262_1994S_1994W_3335", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM150 (1984W),CHEM151 (1988W),CHEM110,CHEM120,CHEM122,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM150 (1984W),CHEM151 (1988W),CHEM110,CHEM120,CHEM121,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM262_1994S_1994W_3335"
	when
        FactContainer( id == "CHEM262_1994S_1994W_3335", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM301_1983W_1990W_3340_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM301_1983W_1990W_3340", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM301_1983W_1990W_3340"
	when
        FactContainer( id == "CHEM301_1983W_1990W_3340", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM301_1991S_1993W_3340_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM301_1991S_1993W_3340", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM151".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM301_1991S_1993W_3340"
	when
        FactContainer( id == "CHEM301_1991S_1993W_3340", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM301_1994S_1997S_3340_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM301_1994S_1997S_3340", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM202,CHEM205,CHEM208".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM201,CHEM205,CHEM208".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM301_1994S_1997S_3340"
	when
        FactContainer( id == "CHEM301_1994S_1997S_3340", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM302_1994S_1997S_3344_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM302_1994S_1997S_3344", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM201,CHEM205,CHEM208".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM302_1994S_1997S_3344"
	when
        FactContainer( id == "CHEM302_1994S_1997S_3344", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM304_1970W_1990W_3350_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM304_1970W_1990W_3350", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM201,CHEM205".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH200".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM304_1970W_1990W_3350"
	when
        FactContainer( id == "CHEM304_1970W_1990W_3350", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM304_1991S_1991W_3350_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM304_1991S_1991W_3350", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM201,CHEM205".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH200".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM304_1991S_1991W_3350"
	when
        FactContainer( id == "CHEM304_1991S_1991W_3350", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM304_1992S_1997S_3350_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM304_1992S_1997S_3350", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM201,CHEM205".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH200,MATH253".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM304_1992S_1997S_3350"
	when
        FactContainer( id == "CHEM304_1992S_1997S_3350", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM305_1970W_1990S_3354_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM305_1970W_1990S_3354", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0+P1)");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM205".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM201,CHEM202".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM305_1970W_1990S_3354"
	when
        FactContainer( id == "CHEM305_1970W_1990S_3354", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     )
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM305_1990W_1990W_3354_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM305_1990W_1990W_3354", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM202,CHEM205".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM201,CHEM205".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM305_1990W_1990W_3354"
	when
        FactContainer( id == "CHEM305_1990W_1990W_3354", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM305_1991S_1997S_3354_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM305_1991S_1997S_3354", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM202,CHEM205".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM201,CHEM205".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM305_1991S_1997S_3354"
	when
        FactContainer( id == "CHEM305_1991S_1997S_3354", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM306_1983W_1990W_3355_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM306_1983W_1990W_3355", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM2**".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM306_1983W_1990W_3355"
	when
        FactContainer( id == "CHEM306_1983W_1990W_3355", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM262_1990W_1990W_3335_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM262_1990W_1990W_3335", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM150 (1984W),CHEM151 (1988W),CHEM110,CHEM120".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM262_1990W_1990W_3335"
	when
        FactContainer( id == "CHEM262_1990W_1990W_3335", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM230_1994S_1995S_3309_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM230_1994S_1995S_3309", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM122,CHEM103,CHEM151,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM121,CHEM103,CHEM151,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM230_1994S_1995S_3309"
	when
        FactContainer( id == "CHEM230_1994S_1995S_3309", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM230_1995W_1997S_3309_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM230_1995W_1997S_3309", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0+P1+P2)");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM111,CHEM112".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM103".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM121,CHEM122".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM230_1995W_1997S_3309"
	when
        FactContainer( id == "CHEM230_1995W_1997S_3309", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
                     )
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM232_1997W_2002S_3311_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM232_1997W_2002S_3311", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM231".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM232_1997W_2002S_3311"
	when
        FactContainer( id == "CHEM232_1997W_2002S_3311", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM250_1991S_1993S_3316_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM250_1991S_1993S_3316", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM251 (1970W)".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM250_1991S_1993S_3316"
	when
        FactContainer( id == "CHEM250_1991S_1993S_3316", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM250_1993W_2002S_3316_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM250_1993W_2002S_3316", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM151".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM250_1993W_2002S_3316"
	when
        FactContainer( id == "CHEM250_1993W_2002S_3316", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM250_1970W_1990W_3316_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM250_1970W_1990W_3316", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM251".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM250_1970W_1990W_3316"
	when
        FactContainer( id == "CHEM250_1970W_1990W_3316", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM251_1985W_1990S_3322_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM251_1985W_1990S_3322", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM150,CHEM120,CHEM110".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM251_1985W_1990S_3322"
	when
        FactContainer( id == "CHEM251_1985W_1990S_3322", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM251_1990W_1990W_3322_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM251_1990W_1990W_3322", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM150 (1984W),CHEM151 (1988W),CHEM120,CHEM110".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM251_1990W_1990W_3322"
	when
        FactContainer( id == "CHEM251_1990W_1990W_3322", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM251_1991S_1993W_3322_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM251_1991S_1993W_3322", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM150,CHEM151,CHEM122,CHEM110".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM251_1991S_1993W_3322"
	when
        FactContainer( id == "CHEM251_1991S_1993W_3322", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM251_1994S_1995S_3322_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM251_1994S_1995S_3322", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM150 (1984W),CHEM151 (1988W),CHEM110,CHEM120,CHEM122,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM150 (1984W),CHEM151 (1988W),CHEM110,CHEM120,CHEM121,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM251_1994S_1995S_3322"
	when
        FactContainer( id == "CHEM251_1994S_1995S_3322", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM252_1985W_1990W_3324_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM252_1985W_1990W_3324", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM251".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM252_1985W_1990W_3324"
	when
        FactContainer( id == "CHEM252_1985W_1990W_3324", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM252_1991S_2001S_3324_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM252_1991S_2001S_3324", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM251".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM252_1991S_2001S_3324"
	when
        FactContainer( id == "CHEM252_1991S_2001S_3324", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM262_1985W_1990S_3335_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM262_1985W_1990S_3335", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM150,CHEM120,CHEM110".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM262_1985W_1990S_3335"
	when
        FactContainer( id == "CHEM262_1985W_1990S_3335", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM230_1991S_1993W_3309_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM230_1991S_1993W_3309", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM103,CHEM110,CHEM122".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM230_1991S_1993W_3309"
	when
        FactContainer( id == "CHEM230_1991S_1993W_3309", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM205_1995W_1997S_3293_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM205_1995W_1997S_3293", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM122,CHEM110,CHEM120,CHEM103,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM121,CHEM110,CHEM120,CHEM103,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM205_1995W_1997S_3293"
	when
        FactContainer( id == "CHEM205_1995W_1997S_3293", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM208_1971W_1990S_3298_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM208_1971W_1990S_3298", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM103".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM208_1971W_1990S_3298"
	when
        FactContainer( id == "CHEM208_1971W_1990S_3298", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM208_1990W_1990W_3298_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM208_1990W_1990W_3298", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM103".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM208_1990W_1990W_3298"
	when
        FactContainer( id == "CHEM208_1990W_1990W_3298", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM208_1991S_1993W_3298_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM208_1991S_1993W_3298", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM122,CHEM103".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM208_1991S_1993W_3298"
	when
        FactContainer( id == "CHEM208_1991S_1993W_3298", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM208_1994S_1995S_3298_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM208_1994S_1995S_3298", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM122,CHEM103,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM121,CHEM103,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM208_1994S_1995S_3298"
	when
        FactContainer( id == "CHEM208_1994S_1995S_3298", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM208_1995W_1997S_3298_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM208_1995W_1997S_3298", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0+P1)");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM121,CHEM122".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM111,CHEM112".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM208_1995W_1997S_3298"
	when
        FactContainer( id == "CHEM208_1995W_1997S_3298", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     )
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM211_1997W_2002S_3300_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM211_1997W_2002S_3300", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0+P1+P2)");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM121,CHEM122".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM111,CHEM112".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM151".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM211_1997W_2002S_3300"
	when
        FactContainer( id == "CHEM211_1997W_2002S_3300", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
                     )
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM213_1991S_1991W_3304_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM213_1991S_1991W_3304", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM213_1991S_1991W_3304"
	when
        FactContainer( id == "CHEM213_1991S_1991W_3304", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM213_1992S_1993W_3304_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM213_1992S_1993W_3304", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM122".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM213_1992S_1993W_3304"
	when
        FactContainer( id == "CHEM213_1992S_1993W_3304", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM213_1994S_1995S_3304_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM213_1994S_1995S_3304", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM122,CHEM103,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM121,CHEM103,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM213_1994S_1995S_3304"
	when
        FactContainer( id == "CHEM213_1994S_1995S_3304", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM213_1995W_1997S_3304_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM213_1995W_1997S_3304", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0+P1)");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM121,CHEM122".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM112".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM213_1995W_1997S_3304"
	when
        FactContainer( id == "CHEM213_1995W_1997S_3304", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     )
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM230_1970W_1990W_3309_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM230_1970W_1990W_3309", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM103,CHEM110,CHEM120".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM230_1970W_1990W_3309"
	when
        FactContainer( id == "CHEM230_1970W_1990W_3309", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM205_1994S_1995S_3293_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM205_1994S_1995S_3293", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM122,CHEM103,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM121,CHEM103,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM205_1994S_1995S_3293"
	when
        FactContainer( id == "CHEM205_1994S_1995S_3293", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM201_1997W_2002S_3271_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM201_1997W_2002S_3271", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0+P1+P2)");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM121,CHEM122".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM111,CHEM112".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM151".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM201_1997W_2002S_3271"
	when
        FactContainer( id == "CHEM201_1997W_2002S_3271", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
                     )
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM202_1991S_1993W_3277_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM202_1991S_1993W_3277", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM122".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM202_1991S_1993W_3277"
	when
        FactContainer( id == "CHEM202_1991S_1993W_3277", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM202_1994S_1995S_3277_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM202_1994S_1995S_3277", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM122,CHEM151,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM121,CHEM151,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM202_1994S_1995S_3277"
	when
        FactContainer( id == "CHEM202_1994S_1995S_3277", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM202_1995W_1997S_3277_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM202_1995W_1997S_3277", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM122,CHEM110,CHEM120,CHEM151,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM121,CHEM110,CHEM120,CHEM151,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM202_1995W_1997S_3277"
	when
        FactContainer( id == "CHEM202_1995W_1997S_3277", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM202_1983W_1990W_3277_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM202_1983W_1990W_3277", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM202_1983W_1990W_3277"
	when
        FactContainer( id == "CHEM202_1983W_1990W_3277", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM203_1970W_1990W_3283_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM203_1970W_1990W_3283", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM203_1970W_1990W_3283"
	when
        FactContainer( id == "CHEM203_1970W_1990W_3283", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM203_1991S_1993W_3283_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM203_1991S_1993W_3283", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM122".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM203_1991S_1993W_3283"
	when
        FactContainer( id == "CHEM203_1991S_1993W_3283", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM203_1994S_1995S_3283_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM203_1994S_1995S_3283", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM122,CHEM151,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM121,CHEM151,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM203_1994S_1995S_3283"
	when
        FactContainer( id == "CHEM203_1994S_1995S_3283", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM203_1995W_1997S_3283_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM203_1995W_1997S_3283", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM122,CHEM110,CHEM120,CHEM151,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM121,CHEM110,CHEM120,CHEM151,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM203_1995W_1997S_3283"
	when
        FactContainer( id == "CHEM203_1995W_1997S_3283", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM205_1970W_1989W_3293_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM205_1970W_1989W_3293", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM103".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM205_1970W_1989W_3293"
	when
        FactContainer( id == "CHEM205_1970W_1989W_3293", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM205_1990S_1990S_3293_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM205_1990S_1990S_3293", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM103".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM205_1990S_1990S_3293"
	when
        FactContainer( id == "CHEM205_1990S_1990S_3293", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM205_1990W_1990W_3293_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM205_1990W_1990W_3293", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM103".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM205_1990W_1990W_3293"
	when
        FactContainer( id == "CHEM205_1990W_1990W_3293", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM205_1991S_1993W_3293_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM205_1991S_1993W_3293", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM122,CHEM103".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM205_1991S_1993W_3293"
	when
        FactContainer( id == "CHEM205_1991S_1993W_3293", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM201_1995W_1997S_3271_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM201_1995W_1997S_3271", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0*P1*P2+P3)");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM122,CHEM110,CHEM120,CHEM151,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM121,CHEM110,CHEM120,CHEM151,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP3 = new SubsetProposition("P3", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("MATH121,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP3.apply();
        prop.addProposition(propositionP3);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH101".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM201_1995W_1997S_3271"
	when
        FactContainer( id == "CHEM201_1995W_1997S_3271", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P3" && result == true ) from prop.propositions
                     )
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM120_1990W_1990W_3247_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM120_1990W_1990W_3247", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("PHYS011,PHYS012".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM012".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM120_1990W_1990W_3247"
	when
        FactContainer( id == "CHEM120_1990W_1990W_3247", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM121_1994S_1995S_3252_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM121_1994S_1995S_3252", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM012".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM121_1994S_1995S_3252"
	when
        FactContainer( id == "CHEM121_1994S_1995S_3252", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM121_1995W_1996W_3252_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM121_1995W_1996W_3252", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM012".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM121_1995W_1996W_3252"
	when
        FactContainer( id == "CHEM121_1995W_1996W_3252", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM121_1997S_1997S_3252_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM121_1997S_1997S_3252", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM012".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM121_1997S_1997S_3252"
	when
        FactContainer( id == "CHEM121_1997S_1997S_3252", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM122_1994S_1995S_3255_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM122_1994S_1995S_3255", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM121 (1994S)".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM122_1994S_1995S_3255"
	when
        FactContainer( id == "CHEM122_1994S_1995S_3255", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM122_1995W_1996W_3255_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM122_1995W_1996W_3255", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM121 (1994S)".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM122_1995W_1996W_3255"
	when
        FactContainer( id == "CHEM122_1995W_1996W_3255", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM150_1984W_1987W_3258_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM150_1984W_1987W_3258", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM012".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM150_1984W_1987W_3258"
	when
        FactContainer( id == "CHEM150_1984W_1987W_3258", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM151_1990W_1990W_3261_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM151_1990W_1990W_3261", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM012".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM151_1990W_1990W_3261"
	when
        FactContainer( id == "CHEM151_1990W_1990W_3261", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM201_1983W_1990W_3271_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM201_1983W_1990W_3271", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1*P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH100,MATH120".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH101,MATH121".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM201_1983W_1990W_3271"
	when
        FactContainer( id == "CHEM201_1983W_1990W_3271", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM201_1991S_1993W_3271_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM201_1991S_1993W_3271", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1*P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH100,MATH120".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM122".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH101,MATH121".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM201_1991S_1993W_3271"
	when
        FactContainer( id == "CHEM201_1991S_1993W_3271", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM201_1994S_1995S_3271_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM201_1994S_1995S_3271", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1*P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM122,CHEM151,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM110,CHEM120,CHEM121,CHEM151,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH101".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM201_1994S_1995S_3271"
	when
        FactContainer( id == "CHEM201_1994S_1995S_3271", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM120_1970W_1990S_3247_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM120_1970W_1990S_3247", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "3", new HashSet(Arrays.asList("CHEM011,CHEM012,PHYS011".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM120_1970W_1990S_3247"
	when
        FactContainer( id == "CHEM120_1970W_1990S_3247", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM103_1990W_1990W_3233_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM103_1990W_1990W_3233", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH012,ALGB012".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM103_1990W_1990W_3233"
	when
        FactContainer( id == "CHEM103_1990W_1990W_3233", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM103_1991S_1994W_3233_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM103_1991S_1994W_3233", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH1*1".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH012,ALGB012".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM103_1991S_1994W_3233"
	when
        FactContainer( id == "CHEM103_1991S_1994W_3233", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM103_1995S_1997S_3233_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM103_1995S_1997S_3233", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH1*1".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH012,ALGB012".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM103_1995S_1997S_3233"
	when
        FactContainer( id == "CHEM103_1995S_1997S_3233", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM110_1970W_1990S_3239_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM110_1970W_1990S_3239", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM011,PHYS011".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM110_1970W_1990S_3239"
	when
        FactContainer( id == "CHEM110_1970W_1990S_3239", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM110_1990W_1990W_3239_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM110_1990W_1990W_3239", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("PHYS011,PHYS012".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM011".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM110_1990W_1990W_3239"
	when
        FactContainer( id == "CHEM110_1990W_1990W_3239", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM110_1991S_1995S_3239_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM110_1991S_1995S_3239", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM011".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM110_1991S_1995S_3239"
	when
        FactContainer( id == "CHEM110_1991S_1995S_3239", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM110_1995W_1996W_3239_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM110_1995W_1996W_3239", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM011,PHYS011".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM110_1995W_1996W_3239"
	when
        FactContainer( id == "CHEM110_1995W_1996W_3239", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM120_1991S_1993W_3247_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM120_1991S_1993W_3247", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("PHYS011,PHYS012".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM012".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM120_1991S_1993W_3247"
	when
        FactContainer( id == "CHEM120_1991S_1993W_3247", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CDSC404_1995S_1998S_3008_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CDSC404_1995S_1998S_3008", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CDSC402".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CDSC404_1995S_1998S_3008"
	when
        FactContainer( id == "CDSC404_1995S_1998S_3008", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CDSC423_1991S_1995S_3028_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CDSC423_1991S_1995S_3028", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("ORBI410".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CDSC423_1991S_1995S_3028"
	when
        FactContainer( id == "CDSC423_1991S_1995S_3028", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BUED401_1991S_1992W_2940_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BUED401_1991S_1992W_2940", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CPSC114,CPSC115,CPSC101,CPSC111,CPSC151,CPSC251,CPSC118,CPSC116".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BUED401_1991S_1992W_2940"
	when
        FactContainer( id == "BUED401_1991S_1992W_2940", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BUSI221_1998W_null_2967_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BUSI221_1998W_null_2967", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BUSI121".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BUSI221_1998W_null_2967"
	when
        FactContainer( id == "BUSI221_1998W_null_2967", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BUSI331_1998W_2001S_2975_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BUSI331_1998W_2001S_2975", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BUSI330".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BUSI331_1998W_2001S_2975"
	when
        FactContainer( id == "BUSI331_1998W_2001S_2975", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BOTA512_1991S_1999W_2871_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BOTA512_1991S_1999W_2871", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("OCGY506".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BOTA512_1991S_1999W_2871"
	when
        FactContainer( id == "BOTA512_1991S_1999W_2871", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BOTA411_1973W_1988S_2833_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BOTA411_1973W_1988S_2833", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BOTA301".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL101,BIOL102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BOTA411_1973W_1988S_2833"
	when
        FactContainer( id == "BOTA411_1973W_1988S_2833", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BOTA412_1973W_1988S_2834_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BOTA412_1973W_1988S_2834", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL101,BIOL102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BOTA412_1973W_1988S_2834"
	when
        FactContainer( id == "BOTA412_1973W_1988S_2834", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BOTA413_1974W_1988S_2835_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BOTA413_1974W_1988S_2835", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BOTA311".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL101,BIOL102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BOTA413_1974W_1988S_2835"
	when
        FactContainer( id == "BOTA413_1974W_1988S_2835", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BOTA414_1975W_1988S_2836_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BOTA414_1975W_1988S_2836", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BOTA311".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL101,BIOL102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BOTA414_1975W_1988S_2836"
	when
        FactContainer( id == "BOTA414_1975W_1988S_2836", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BOTA415_1976W_1988S_2837_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BOTA415_1976W_1988S_2837", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1*P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("BOTA301,BIOL201".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL101,BIOL102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL330,BIOL200,BOTA330".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BOTA415_1976W_1988S_2837"
	when
        FactContainer( id == "BOTA415_1976W_1988S_2837", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BOTA426_1971W_1988S_2841_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BOTA426_1971W_1988S_2841", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1*P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL321".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL101,BIOL102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BOTA311".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BOTA426_1971W_1988S_2841"
	when
        FactContainer( id == "BOTA426_1971W_1988S_2841", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BOTA437_1975W_1988S_2846_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BOTA437_1975W_1988S_2846", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL101,BIOL102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BOTA437_1975W_1988S_2846"
	when
        FactContainer( id == "BOTA437_1975W_1988S_2846", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BOTA441_1974W_1988S_2849_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BOTA441_1974W_1988S_2849", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BOTA210".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL101,BIOL102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BOTA441_1974W_1988S_2849"
	when
        FactContainer( id == "BOTA441_1974W_1988S_2849", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BOTA448_1976W_1988S_2851_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BOTA448_1976W_1988S_2851", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL101,BIOL102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BOTA448_1976W_1988S_2851"
	when
        FactContainer( id == "BOTA448_1976W_1988S_2851", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BOTA449_1970W_1988S_2852_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BOTA449_1970W_1988S_2852", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL101,BIOL102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BOTA449_1970W_1988S_2852"
	when
        FactContainer( id == "BOTA449_1970W_1988S_2852", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		
