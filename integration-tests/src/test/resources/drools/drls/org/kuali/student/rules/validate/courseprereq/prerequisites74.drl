package prerequisiterules
import java.util.*;
import org.kuali.student.rules.internal.common.entity.ComparisonOperator;
import org.kuali.student.rules.internal.common.statement.*;
import org.kuali.student.rules.internal.common.facts.FactRequest;
import org.kuali.student.rules.util.FactContainer;
import org.kuali.student.rules.util.FactContainer.State;


rule "CHIN451_2004W_2006S_23625_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHIN451_2004W_2006S_23625", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHIN331,CHIN332".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHIN451_2004W_2006S_23625"
	when
        FactContainer( id == "CHIN451_2004W_2006S_23625", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHIN452_2004W_null_23626_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHIN452_2004W_null_23626", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHIN331,CHIN332".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHIN452_2004W_null_23626"
	when
        FactContainer( id == "CHIN452_2004W_null_23626", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHIN462_2004W_null_23629_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHIN462_2004W_null_23629", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHIN331,CHIN332".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHIN462_2004W_null_23629"
	when
        FactContainer( id == "CHIN462_2004W_null_23629", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA410_2004W_2005S_25304_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA410_2004W_2005S_25304", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA310".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("FINA387,VISA387".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA410_2004W_2005S_25304"
	when
        FactContainer( id == "VISA410_2004W_2005S_25304", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "JAPN101_2004W_2005S_12890_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "JAPN101_2004W_2005S_12890", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("JAPN100".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "JAPN101_2004W_2005S_12890"
	when
        FactContainer( id == "JAPN101_2004W_2005S_12890", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "JAPN102_2004W_2005S_12892_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "JAPN102_2004W_2005S_12892", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("JAPN101,JAPN150".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "JAPN102_2004W_2005S_12892"
	when
        FactContainer( id == "JAPN102_2004W_2005S_12892", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA411_2004W_2005S_25305_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA411_2004W_2005S_25305", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA310".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("FINA387,VISA387".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA411_2004W_2005S_25305"
	when
        FactContainer( id == "VISA411_2004W_2005S_25305", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "JAPN103_2004W_2005S_12894_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "JAPN103_2004W_2005S_12894", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("JAPN102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "JAPN103_2004W_2005S_12894"
	when
        FactContainer( id == "JAPN103_2004W_2005S_12894", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "JAPN151_2004W_null_23558_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "JAPN151_2004W_null_23558", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("JAPN101,JAPN150".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "JAPN151_2004W_null_23558"
	when
        FactContainer( id == "JAPN151_2004W_null_23558", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "JAPN200_2004W_2006W_12900_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "JAPN200_2004W_2006W_12900", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("JAPN103,JAPN151".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "JAPN200_2004W_2006W_12900"
	when
        FactContainer( id == "JAPN200_2004W_2006W_12900", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "JAPN401_2004W_null_12924_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "JAPN401_2004W_null_12924", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("JAPN311,JAPN312".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "JAPN401_2004W_null_12924"
	when
        FactContainer( id == "JAPN401_2004W_null_12924", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA220_2004W_2006S_25306_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA220_2004W_2006S_25306", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0*P1)+P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA183".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA180,VISA182".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("FINA181".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA220_2004W_2006S_25306"
	when
        FactContainer( id == "VISA220_2004W_2006S_25306", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     )
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHIN210_2002W_2006S_23605_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHIN210_2002W_2006S_23605", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHIN201,CHIN202".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHIN210_2002W_2006S_23605"
	when
        FactContainer( id == "CHIN210_2002W_2006S_23605", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA360_2004W_2005S_25307_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA360_2004W_2005S_25307", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA260".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "3", new HashSet(Arrays.asList("FINA285,VISA285,VISA286".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA360_2004W_2005S_25307"
	when
        FactContainer( id == "VISA360_2004W_2005S_25307", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA320_2004W_2005S_25308_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA320_2004W_2005S_25308", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("FINA281,VISA281,VISA220".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA320_2004W_2005S_25308"
	when
        FactContainer( id == "VISA320_2004W_2005S_25308", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA321_2004W_2005S_25309_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA321_2004W_2005S_25309", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("FINA281,VISA281,VISA220".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA321_2004W_2005S_25309"
	when
        FactContainer( id == "VISA321_2004W_2005S_25309", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA361_2004W_2005S_25310_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA361_2004W_2005S_25310", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA260".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "3", new HashSet(Arrays.asList("FINA285,VISA285,VISA286".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA361_2004W_2005S_25310"
	when
        FactContainer( id == "VISA361_2004W_2005S_25310", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA450_2004W_null_25311_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA450_2004W_null_25311", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA350,VISA351,VISA360,VISA361,VISA383,VISA384,FINA383,FINA384".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA450_2004W_null_25311"
	when
        FactContainer( id == "VISA450_2004W_null_25311", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA230_2004W_2006S_25312_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA230_2004W_2006S_25312", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1+P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("VISA182,VISA183".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA180".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("FINA181".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA230_2004W_2006S_25312"
	when
        FactContainer( id == "VISA230_2004W_2006S_25312", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA452_2004W_2005S_25313_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA452_2004W_2005S_25313", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA350,VISA351,VISA360,VISA361".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA452_2004W_2005S_25313"
	when
        FactContainer( id == "VISA452_2004W_2005S_25313", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA270_2004W_2006S_25314_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA270_2004W_2006S_25314", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0*P1)+P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA183".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA180,VISA182".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("FINA181".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA270_2004W_2006S_25314"
	when
        FactContainer( id == "VISA270_2004W_2006S_25314", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     )
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA330_2004W_2005S_25315_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA330_2004W_2005S_25315", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA282,FINA282,VISA230".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA330_2004W_2005S_25315"
	when
        FactContainer( id == "VISA330_2004W_2005S_25315", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA331_2004W_2005S_25316_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA331_2004W_2005S_25316", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("FINA282,VISA282,VISA230".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA331_2004W_2005S_25316"
	when
        FactContainer( id == "VISA331_2004W_2005S_25316", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHIN410_2004W_2006S_3626_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHIN410_2004W_2006S_3626", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHIN301,CHIN302".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHIN410_2004W_2006S_3626"
	when
        FactContainer( id == "CHIN410_2004W_2006S_3626", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHIN411_2004W_2006S_3628_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHIN411_2004W_2006S_3628", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHIN410".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHIN411_2004W_2006S_3628"
	when
        FactContainer( id == "CHIN411_2004W_2006S_3628", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHIN420_2004W_2006S_23617_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHIN420_2004W_2006S_23617", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHIN321".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHIN420_2004W_2006S_23617"
	when
        FactContainer( id == "CHIN420_2004W_2006S_23617", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA381_2004W_null_24141_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA381_2004W_null_24141", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA380".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA381_2004W_null_24141"
	when
        FactContainer( id == "VISA381_2004W_null_24141", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA480_2004W_2005S_24148_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA480_2004W_2005S_24148", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA380,FINA380,VISA381".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA480_2004W_2005S_24148"
	when
        FactContainer( id == "VISA480_2004W_2005S_24148", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA481_2004W_null_24149_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA481_2004W_null_24149", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA480".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA481_2004W_null_24149"
	when
        FactContainer( id == "VISA481_2004W_null_24149", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA430_2004W_2005S_25327_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA430_2004W_2005S_25327", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1+P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA382,FINA382".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA381,FINA381".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA320,VISA321,VISA330,VISA331".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA430_2004W_2005S_25327"
	when
        FactContainer( id == "VISA430_2004W_2005S_25327", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA431_2004W_2005S_25328_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA431_2004W_2005S_25328", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1+P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA382,FINA382".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA381,FINA381".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA320,VISA321,VISA330,VISA331".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA431_2004W_2005S_25328"
	when
        FactContainer( id == "VISA431_2004W_2005S_25328", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA240_2004W_2006S_25329_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA240_2004W_2006S_25329", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0*P1)+P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA183".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA180,VISA182".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("FINA181".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA240_2004W_2006S_25329"
	when
        FactContainer( id == "VISA240_2004W_2006S_25329", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     )
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA340_2004W_2005S_25330_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA340_2004W_2005S_25330", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA240".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA289,FINA289".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA340_2004W_2005S_25330"
	when
        FactContainer( id == "VISA340_2004W_2005S_25330", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA341_2004W_2005S_25331_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA341_2004W_2005S_25331", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA240".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA289,FINA289".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA341_2004W_2005S_25331"
	when
        FactContainer( id == "VISA341_2004W_2005S_25331", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA440_2004W_2005S_25332_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA440_2004W_2005S_25332", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA340,VISA341".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA386,FINA386".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA440_2004W_2005S_25332"
	when
        FactContainer( id == "VISA440_2004W_2005S_25332", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA250_2004W_2006S_25334_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA250_2004W_2006S_25334", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1+P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA183".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA180,VISA182".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("FINA181".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA250_2004W_2006S_25334"
	when
        FactContainer( id == "VISA250_2004W_2006S_25334", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA350_2004W_2005S_25335_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA350_2004W_2005S_25335", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA283,VISA284,VISA290,FINA283,FINA284,FINA290".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA250".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA350_2004W_2005S_25335"
	when
        FactContainer( id == "VISA350_2004W_2005S_25335", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA351_2004W_null_25336_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA351_2004W_null_25336", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA283,VISA284,VISA290,FINA283,FINA284,FINA290".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA250".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA351_2004W_null_25336"
	when
        FactContainer( id == "VISA351_2004W_null_25336", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA260_2004W_2006S_25337_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA260_2004W_2006S_25337", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0*P1)+P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA183".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA,VISA182".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("FINA181".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA260_2004W_2006S_25337"
	when
        FactContainer( id == "VISA260_2004W_2006S_25337", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     )
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM307_2004W_2006S_3356_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM307_2004W_2006S_3356", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH200,MATH217,MATH226,MATH253,MATH263".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM304".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM307_2004W_2006S_3356"
	when
        FactContainer( id == "CHEM307_2004W_2006S_3356", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "NURS553_2004W_null_25338_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "NURS553_2004W_null_25338", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("NURS550".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "NURS553_2004W_null_25338"
	when
        FactContainer( id == "NURS553_2004W_null_25338", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "COMM295_2004W_2005S_4628_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "COMM295_2004W_2005S_4628", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0*P1+P2)");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("ECON101,ECON102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH105".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("ECON100".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "COMM295_2004W_2005S_4628"
	when
        FactContainer( id == "COMM295_2004W_2005S_4628", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
                     )
            	then
   		prop.setRuleResult(true);
	end		


rule "NURS554_2004W_null_25339_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "NURS554_2004W_null_25339", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("NURS551,EPSE592".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "NURS554_2004W_null_25339"
	when
        FactContainer( id == "NURS554_2004W_null_25339", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "NURS560_2004W_null_17275_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "NURS560_2004W_null_17275", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("NURS502".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "NURS560_2004W_null_17275"
	when
        FactContainer( id == "NURS560_2004W_null_17275", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "COMM396_2004W_2005S_4810_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "COMM396_2004W_2005S_4810", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("COMM295,ECON201,ECON301".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("COMM293".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "COMM396_2004W_2005S_4810"
	when
        FactContainer( id == "COMM396_2004W_2005S_4810", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "NURS580_2004W_2006S_17285_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "NURS580_2004W_2006S_17285", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "3", new HashSet(Arrays.asList("NURS501,NURS503,NURS504".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "NURS580_2004W_2006S_17285"
	when
        FactContainer( id == "NURS580_2004W_2006S_17285", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "NURS581_2004W_null_25340_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "NURS581_2004W_null_25340", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("NURS580".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "NURS581_2004W_null_25340"
	when
        FactContainer( id == "NURS581_2004W_null_25340", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "COMM435_2004W_null_4867_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "COMM435_2004W_null_4867", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("COMM437,CPSC304".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "COMM435_2004W_null_4867"
	when
        FactContainer( id == "COMM435_2004W_null_4867", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "COMM458_2004W_null_4931_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "COMM458_2004W_null_4931", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("COMM293,COMM457".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "COMM458_2004W_null_4931"
	when
        FactContainer( id == "COMM458_2004W_null_4931", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "COMM473_2004W_2006S_4972_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "COMM473_2004W_2006S_4972", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1+P2+P3+P4");
    	    	   		
		SubsetProposition propositionP4 = new SubsetProposition("P4", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("ECON310,ECON102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP4.apply();
        prop.addProposition(propositionP4);      
		   		   		   		   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("ECON100".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("ECON101,ECON102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP3 = new SubsetProposition("P3", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("ECON101,ECON311".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP3.apply();
        prop.addProposition(propositionP3);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("ECON310,ECON311".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "COMM473_2004W_2006S_4972"
	when
        FactContainer( id == "COMM473_2004W_2006S_4972", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P3" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P4" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "COMM465_2004W_null_4952_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "COMM465_2004W_null_4952", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0*P1+P2+P3+P4+P5)");
    	    	   		
		SubsetProposition propositionP5 = new SubsetProposition("P5", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("ECON102,ECON310".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP5.apply();
        prop.addProposition(propositionP5);      
		   		   		   		   		
		SubsetProposition propositionP4 = new SubsetProposition("P4", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("ECON101,ECON311".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP4.apply();
        prop.addProposition(propositionP4);      
		   		   		   		   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("ECON101,ECON102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("COMM293,COMM457".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP3 = new SubsetProposition("P3", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("ECON310,ECON311".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP3.apply();
        prop.addProposition(propositionP3);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("ECON100".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "COMM465_2004W_null_4952"
	when
        FactContainer( id == "COMM465_2004W_null_4952", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P3" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P4" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P5" && result == true ) from prop.propositions
                     )
            	then
   		prop.setRuleResult(true);
	end		


rule "COMM493_2004W_2005S_5003_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "COMM493_2004W_2005S_5003", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("(P0*P1+P2)");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("ECON101,ECON102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("COMM293,COMM457".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("ECON310,ECON311".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "COMM493_2004W_2005S_5003"
	when
        FactContainer( id == "COMM493_2004W_2005S_5003", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
                     )
            	then
   		prop.setRuleResult(true);
	end		


rule "SOCI361_1994S_2004S_21644_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "SOCI361_1994S_2004S_21644", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("SOCI100,SOCI300".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "SOCI361_1994S_2004S_21644"
	when
        FactContainer( id == "SOCI361_1994S_2004S_21644", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "SOCI380_2001S_2004S_21659_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "SOCI380_2001S_2004S_21659", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("SOCI100,SOCI300".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "SOCI380_2001S_2004S_21659"
	when
        FactContainer( id == "SOCI380_2001S_2004S_21659", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "SOCI475_1992W_2004S_21759_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "SOCI475_1992W_2004S_21759", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("SOCI100,SOCI300".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "SOCI475_1992W_2004S_21759"
	when
        FactContainer( id == "SOCI475_1992W_2004S_21759", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "SOCI360_2004W_null_21639_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "SOCI360_2004W_null_21639", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("SOCI100".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "SOCI360_2004W_null_21639"
	when
        FactContainer( id == "SOCI360_2004W_null_21639", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "GEOG406_1991S_2007S_10398_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "GEOG406_1991S_2007S_10398", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("GEOG306".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "GEOG406_1991S_2007S_10398"
	when
        FactContainer( id == "GEOG406_1991S_2007S_10398", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "MEDG420_2003W_null_15331_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "MEDG420_2003W_null_15331", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("BIOL335,BIOC300".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "MEDG420_2003W_null_15331"
	when
        FactContainer( id == "MEDG420_2003W_null_15331", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "MEDG419_2003W_null_15329_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "MEDG419_2003W_null_15329", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("BIOL334,BIOL335".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "MEDG419_2003W_null_15329"
	when
        FactContainer( id == "MEDG419_2003W_null_15329", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "EECE411_2004W_null_25401_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "EECE411_2004W_null_25401", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("EECE310,EECE314".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("EECE315,EECE320".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "EECE411_2004W_null_25401"
	when
        FactContainer( id == "EECE411_2004W_null_25401", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "EECE412_2004W_2006S_7149_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "EECE412_2004W_2006S_7149", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CPSC211,CPSC252".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "EECE412_2004W_2006S_7149"
	when
        FactContainer( id == "EECE412_2004W_2006S_7149", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BIOL140_2004W_null_2441_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BIOL140_2004W_null_2441", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL12,BIOL111,BIOL112".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BIOL140_2004W_null_2441"
	when
        FactContainer( id == "BIOL140_2004W_null_2441", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BIOL141_2004W_null_25403_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BIOL141_2004W_null_25403", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL12,BIOL111,BIOL112".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BIOL141_2004W_null_25403"
	when
        FactContainer( id == "BIOL141_2004W_null_25403", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM250_2004W_null_3316_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM250_2004W_null_3316", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1+P2+P3");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM121,CHEM123".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM111,CHEM113".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP3 = new SubsetProposition("P3", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM154".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP3.apply();
        prop.addProposition(propositionP3);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM250_2004W_null_3316"
	when
        FactContainer( id == "CHEM250_2004W_null_3316", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P3" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM251_2004W_2006S_3322_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM251_2004W_2006S_3322", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1+P2+P3");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM121,CHEM123".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM111,CHEM113".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP3 = new SubsetProposition("P3", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM154".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP3.apply();
        prop.addProposition(propositionP3);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM251_2004W_2006S_3322"
	when
        FactContainer( id == "CHEM251_2004W_2006S_3322", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P3" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM260_2004W_null_3331_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM260_2004W_null_3331", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1+P2+P3");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM121,CHEM123".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM111,CHEM113".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP3 = new SubsetProposition("P3", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM154".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP3.apply();
        prop.addProposition(propositionP3);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM260_2004W_null_3331"
	when
        FactContainer( id == "CHEM260_2004W_null_3331", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P3" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CPSC340_2004W_2005S_25404_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CPSC340_2004W_2005S_25404", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1*P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CPSC216,CPSC221".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH200".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("STAT241,MATH302,STAT302".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CPSC340_2004W_2005S_25404"
	when
        FactContainer( id == "CPSC340_2004W_2005S_25404", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CPSC426_2004W_null_25405_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CPSC426_2004W_null_25405", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CPSC314,CPSC414,EECE478".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CPSC426_2004W_null_25405"
	when
        FactContainer( id == "CPSC426_2004W_null_25405", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "GEOG307_2004W_null_10244_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "GEOG307_2004W_null_10244", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("FRST202".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("GEOG207,BIOL302,BIOL303".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "GEOG307_2004W_null_10244"
	when
        FactContainer( id == "GEOG307_2004W_null_10244", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "SOWK552_2004W_null_22118_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "SOWK552_2004W_null_22118", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("SOWK320".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "SOWK552_2004W_null_22118"
	when
        FactContainer( id == "SOWK552_2004W_null_22118", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "SOWK553_2004W_null_22122_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "SOWK553_2004W_null_22122", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("SOWK320".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "SOWK553_2004W_null_22122"
	when
        FactContainer( id == "SOWK553_2004W_null_22122", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "SOWK554_2004W_null_22125_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "SOWK554_2004W_null_22125", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("SOWK320".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "SOWK554_2004W_null_22125"
	when
        FactContainer( id == "SOWK554_2004W_null_22125", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHIN200_2004W_2006S_3604_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHIN200_2004W_2006S_3604", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHIN111,CHIN112".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHIN200_2004W_2006S_3604"
	when
        FactContainer( id == "CHIN200_2004W_2006S_3604", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "MATH263_2004S_null_25421_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "MATH263_2004S_null_25421", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1*P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("SCIE001,PHYS102,PHYS108,PHYS153".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("SCIE001,PHYS101,PHYS107,PHYS153".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("SCIE001,MATH101,MATH103,MATH105,MATH121".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "MATH263_2004S_null_25421"
	when
        FactContainer( id == "MATH263_2004S_null_25421", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "MATH265_2004S_2005S_25422_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "MATH265_2004S_2005S_25422", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH152,MATH221,MATH223".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH101,MATH103,MATH105,MATH121".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "MATH265_2004S_2005S_25422"
	when
        FactContainer( id == "MATH265_2004S_2005S_25422", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "MATH267_2004S_null_25441_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "MATH267_2004S_null_25441", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH152,MATH221,MATH223".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH215,MATH255,MATH256,MATH265".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "MATH267_2004S_null_25441"
	when
        FactContainer( id == "MATH267_2004S_null_25441", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "MATH440_2004W_null_14772_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "MATH440_2004W_null_14772", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH320".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH300".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "MATH440_2004W_null_14772"
	when
        FactContainer( id == "MATH440_2004W_null_14772", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BIOC300_2004S_2005S_2211_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BIOC300_2004S_2005S_2211", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1+P2");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM233,CHEM205".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM204,CHEM232".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "4", new HashSet(Arrays.asList("CHEM233,PHAR220,PHAR321,PHAR322".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BIOC300_2004S_2005S_2211"
	when
        FactContainer( id == "BIOC300_2004S_2005S_2211", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BIOL201_2004S_2006S_2453_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BIOL201_2004S_2006S_2453", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM203,CHEM233,CHEM260".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL200".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BIOL201_2004S_2006S_2453"
	when
        FactContainer( id == "BIOL201_2004S_2006S_2453", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BIOL204_2004W_2005S_2459_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BIOL204_2004W_2005S_2459", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("BIOL121,BIOL140".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BIOL204_2004W_2005S_2459"
	when
        FactContainer( id == "BIOL204_2004W_2005S_2459", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BIOL205_2004W_2005S_2463_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BIOL205_2004W_2005S_2463", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("BIOL121,BIOL140".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BIOL205_2004W_2005S_2463"
	when
        FactContainer( id == "BIOL205_2004W_2005S_2463", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "BIOL209_2004W_2005S_2468_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "BIOL209_2004W_2005S_2468", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("BIOL121,BIOL140".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "BIOL209_2004W_2005S_2468"
	when
        FactContainer( id == "BIOL209_2004W_2005S_2468", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM304_2004W_2005S_3350_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM304_2004W_2005S_3350", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH200,MATH217,MATH226,MATH253,MATH263".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM201".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM304_2004W_2005S_3350"
	when
        FactContainer( id == "CHEM304_2004W_2005S_3350", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM305_2004W_null_3354_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM305_2004W_null_3354", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH200,MATH217,MATH226,MATH253,MATH263".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM304".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM305_2004W_null_3354"
	when
        FactContainer( id == "CHEM305_2004W_null_3354", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM309_2004W_null_3357_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM309_2004W_null_3357", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM202".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM309_2004W_null_3357"
	when
        FactContainer( id == "CHEM309_2004W_null_3357", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM312_2004W_2005S_3370_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM312_2004W_2005S_3370", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("((P0+P1+P2)*P3)");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM121,CHEM123".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		   		
		SubsetProposition propositionP3 = new SubsetProposition("P3", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH200,MATH217,MATH226,MATH253,MATH263".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP3.apply();
        prop.addProposition(propositionP3);      
		   		   		   		   		
		SubsetProposition propositionP2 = new SubsetProposition("P2", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM111,CHEM113".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP2.apply();
        prop.addProposition(propositionP2);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM312_2004W_2005S_3370"
	when
        FactContainer( id == "CHEM312_2004W_2005S_3370", state == FactContainer.State.DONE, prop : propositionContainer)

             (
                     (
                     Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P2" && result == true ) from prop.propositions
                     )
                     and
                     Proposition( propositionName == "P3" && result == true ) from prop.propositions
                     )
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM320_2004W_null_3377_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM320_2004W_null_3377", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH152,MATH221,MATH223".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CHEM312,PHYS304".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM320_2004W_null_3377"
	when
        FactContainer( id == "CHEM320_2004W_null_3377", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM402_2004W_null_3400_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM402_2004W_null_3400", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM202,CHEM312".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM402_2004W_null_3400"
	when
        FactContainer( id == "CHEM402_2004W_null_3400", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CHEM408_2004W_null_3420_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CHEM408_2004W_null_3420", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("CHEM304,CHEM312".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CHEM408_2004W_null_3420"
	when
        FactContainer( id == "CHEM408_2004W_null_3420", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "CPSC314_2004W_2005S_25461_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "CPSC314_2004W_2005S_25461", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("CPSC216,CPSC221".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("MATH200,MATH221".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "CPSC314_2004W_2005S_25461"
	when
        FactContainer( id == "CPSC314_2004W_2005S_25461", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "EOSC473_2004W_null_8211_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "EOSC473_2004W_null_8211", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("EOSC370".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "EOSC473_2004W_null_8211"
	when
        FactContainer( id == "EOSC473_2004W_null_8211", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "MATH253_2004W_null_14598_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "MATH253_2004W_null_14598", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH101,MATH103,MATH105,MATH121,SCIE001".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "MATH253_2004W_null_14598"
	when
        FactContainer( id == "MATH253_2004W_null_14598", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "MICB300_2004W_2006S_15555_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "MICB300_2004W_2006S_15555", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL112,MICB201".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL201".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "MICB300_2004W_2006S_15555"
	when
        FactContainer( id == "MICB300_2004W_2006S_15555", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "MICB306_2004W_null_15562_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "MICB306_2004W_null_15562", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MICB202".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "MICB306_2004W_null_15562"
	when
        FactContainer( id == "MICB306_2004W_null_15562", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "MICB318_2004S_2006S_15574_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "MICB318_2004S_2006S_15574", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MATH100,MATH102,MATH104,MATH180,MATH184".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL112".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "MICB318_2004S_2006S_15574"
	when
        FactContainer( id == "MICB318_2004S_2006S_15574", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "MICB402_2004S_2007W_15607_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "MICB402_2004S_2007W_15607", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0*P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("BIOL334,BIOL335".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MICB302".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "MICB402_2004S_2007W_15607"
	when
        FactContainer( id == "MICB402_2004S_2007W_15607", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     and
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "MICB407_2004S_null_15617_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "MICB407_2004S_null_15617", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MICB306".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "MICB407_2004S_null_15617"
	when
        FactContainer( id == "MICB407_2004S_null_15617", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "MICB419_2004S_null_15644_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "MICB419_2004S_null_15644", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0");
    	    	   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("MICB318".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "MICB419_2004S_null_15644"
	when
        FactContainer( id == "MICB419_2004S_null_15644", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "PSYC361_2004W_null_20290_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "PSYC361_2004W_null_20290", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("PSYC100,PSYC260,PSYC304,PSYC360".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "2", new HashSet(Arrays.asList("PSYC101,PSYC102".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "PSYC361_2004W_null_20290"
	when
        FactContainer( id == "PSYC361_2004W_null_20290", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		


rule "VISA470_2004W_2005S_25482_INIT"
    no-loop true
    lock-on-active true
    when 
        cont : FactContainer( id == "VISA470_2004W_2005S_25482", state == FactContainer.State.INIT, prop : propositionContainer, req : request )
    then
    	prop.setFunctionalRuleString("P0+P1");
    	    	   		
		SubsetProposition propositionP1 = new SubsetProposition("P1", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA370,VISA371".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP1.apply();
        prop.addProposition(propositionP1);      
		   		   		   		   		
		SubsetProposition propositionP0 = new SubsetProposition("P0", ComparisonOperator.EQUAL_TO, "1", new HashSet(Arrays.asList("VISA381,VISA382,VISA383,VISA384,VISA385,VISA386,FINA381,FINA382,FINA383,FINA384,FINA385,FINA386".split("\\s*,\\s*"))),  req.getLuiIds() ); 
		propositionP0.apply();
        prop.addProposition(propositionP0);      
		   		   		   		    	
        cont.setState(FactContainer.State.DONE);
        
        update(cont);
	end



rule "VISA470_2004W_2005S_25482"
	when
        FactContainer( id == "VISA470_2004W_2005S_25482", state == FactContainer.State.DONE, prop : propositionContainer)

             Proposition( propositionName == "P0" && result == true ) from prop.propositions
                     or
                     Proposition( propositionName == "P1" && result == true ) from prop.propositions
            	then
   		prop.setRuleResult(true);
	end		
