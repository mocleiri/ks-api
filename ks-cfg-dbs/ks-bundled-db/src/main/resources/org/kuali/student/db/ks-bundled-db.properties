# These properties should end up in the ks-db-cfg pom file as properties, if they aren't there already

oracle.dba.username=SYS AS SYSDBA
oracle.dba.password=ydna0518
mysql.dba.username=COOKIE_MONSTER
mysql.dba.password=

jdbc.username=KSMASTER
jdbc.password=KSMASTER
jdbc.dba.username=${${db.vendor}.dba.username}
jdbc.dba.password=${${db.vendor}.dba.password}

schema.1 = rice-impex-server-bootstrap
schema.2 = ks-core-sql
schema.3 = ks-lum-sql
schema.4 = ks-enroll-sql
schema.5 = ks-rice-sql

# Schema SQL gets executed first

# Rice classpath location does not match KS pattern
sql.schema.loc.1=classpath:sql/oracle/${schema.1}.sql
sql.schema.loc.list.2=classpath:META-INF/sql/oracle/${schema.2}-schema.resources
sql.schema.loc.list.3=classpath:META-INF/sql/oracle/${schema.3}-schema.resources
sql.schema.loc.list.4=classpath:META-INF/sql/oracle/${schema.4}-schema.resources
sql.schema.loc.list.5=classpath:META-INF/sql/oracle/${schema.5}-schema.resources


# Then data gets loaded

# Rice classpath location does not match KS pattern
sql.data.loc.list.1=${schema.1}-data.resources
sql.data.loc.list.2=classpath:META-INF/sql/oracle/${schema.2}-data.resources
sql.data.loc.list.3=classpath:META-INF/sql/oracle/${schema.3}-data.resources
sql.data.loc.list.4=classpath:META-INF/sql/oracle/${schema.4}-data.resources
sql.data.loc.list.5=classpath:META-INF/sql/oracle/${schema.5}-data.resources

# Then constraints are applied

# Rice classpath location does not match KS pattern
sql.constraints.loc.1=classpath:sql/oracle/${schema.1}-constraints.sql
sql.constraints.loc.list.2=classpath:META-INF/sql/oracle/${schema.2}-constraints.resources
sql.constraints.loc.list.3=classpath:META-INF/sql/oracle/${schema.3}-constraints.resources
sql.constraints.loc.list.4=classpath:META-INF/sql/oracle/${schema.4}-constraints.resources
sql.constraints.loc.list.5=classpath:META-INF/sql/oracle/${schema.5}-constraints.resources
