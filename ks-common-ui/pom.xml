<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.kuali.student.core</groupId>
	<artifactId>ks-common-ui</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>KS Common UI</name>
	<description>KS common-ui</description>

	<parent>
		<groupId>org.kuali.student.core</groupId>
		<artifactId>ks-core</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<build>
		<plugins>

			<!-- 
			This is only here to exclude javax classes, which are being compiled
			from sources bundled with gwt jars. Issue appears fixed in gwt 1.6.4.			
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<includes>
			            <include>**/org/kuali/student/**/*.class</include>
			            <include>**/org/kuali/student/**/*.xml</include>
					</includes>
           		</configuration>
			</plugin>
			-->
		</plugins>			        	
	</build>
	
	<dependencies>
		<!-- GWT Dependencies - all dependencies here override "provided" scope from ks-parent
		so they will be picked up by any project depending on ks-common-ui. The correct scope
		will be resolved in those projects via dependency management from ks-parent. 
		-->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- When fully switched over to use gwt codehaus plugin, the gwt-dev dependency should be removed -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<classifier>${platform}</classifier>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-visualization</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
		      <groupId>com.google.gwt</groupId>
		      <artifactId>gwt-incubator</artifactId>
		      <scope>compile</scope>
    	</dependency>
		<dependency>
		    <groupId>com.google.code.gwtx</groupId>
		    <artifactId>gwtx</artifactId>
		    <scope>compile</scope>
		</dependency>     	
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<classifier>sources</classifier>
			<scope>compile</scope>
		</dependency>	

		<!-- KS core & common dependencies -->
		<dependency>
			<groupId>org.kuali.student.core</groupId>
			<artifactId>ks-core-api</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<classifier>sources</classifier>
			<scope>provided</scope>			
		</dependency>		
		<dependency>
			<groupId>org.kuali.student.core</groupId>
			<artifactId>ks-core-api</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>		
		<dependency>
			<groupId>org.kuali.student.core</groupId>
			<artifactId>ks-common-util</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<classifier>sources</classifier>			
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.kuali.student.core</groupId>
			<artifactId>ks-common-util</artifactId>
			<version>0.0.1-SNAPSHOT</version>						
		</dependency>
		
		<dependency>
			<groupId>org.kuali.rice</groupId>
			<artifactId>rice-api</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.2.1</version>
		</dependency>
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>1.4</version>
		</dependency>
		<dependency>
	    	<groupId>commons-codec</groupId>
		    <artifactId>commons-codec</artifactId>
		    <version>20041127.091804</version>
		</dependency>
		<dependency>
	      <groupId>org.kuali.rice</groupId>
	      <artifactId>rice-impl</artifactId>
	    </dependency>			      
				
	</dependencies>

	<profiles>
		<!--  This profile can be used build ks-common-ui war for testing in hosted mode -->
		<profile>
			<id>common-gwt</id>
			<build>
				<plugins>
					
					<!-- Build test war for common-ui testing -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>war</goal>
								</goals>	
							</execution>
						</executions>
					</plugin>
					
					<!--  Copy test resources into proper test war dir -->					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										  <copy todir="target/${project.build.finalName}/WEB-INF/classes">
										    <fileset dir="src/test/resources" />
										  </copy>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
					<plugin>
						<groupId>com.totsp.gwt</groupId>
						<artifactId>maven-googlewebtoolkit2-plugin</artifactId>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>gwt</goal>
								</goals>	
							</execution>
						</executions>
						<configuration>
							<!-- defines which page should be launched when run in hosted mode -->
							<startupUrl>org.kuali.student.common.ui.CommonUITest/CommonUI.jsp</startupUrl>
							<runTarget>
								org.kuali.student.common.ui.CommonUITest
							</runTarget>
							<!-- define which GWT modules get compiled during the build process -->
							<compileTargets>
								<param>
									org.kuali.student.common.ui.CommonUITest
								</param>
								<!-- add any other GWT modules in your project that are required -->
							</compileTargets>
						</configuration>
					</plugin>
				</plugins>					
			</build>
			<dependencies>
				<!-- These are required to wire up message service while testing -->
				<dependency>
					<groupId>org.kuali.student.core</groupId>
					<artifactId>ks-core-impl</artifactId>
					<version>0.0.1-SNAPSHOT</version>
				</dependency>
				<dependency>
					<groupId>org.kuali.student.core</groupId>
					<artifactId>ks-hibernate</artifactId>
					<type>pom</type>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>org.kuali.student.core</groupId>
					<artifactId>ks-jta</artifactId>
					<type>pom</type>
					<scope>runtime</scope>
		  		</dependency>		
				<dependency>
					<groupId>org.apache.derby</groupId>
					<artifactId>derby</artifactId>
					<scope>runtime</scope>
				</dependency>
				<dependency>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</dependency>
				<dependency>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aspects</artifactId>
				</dependency>
				<dependency>
					<groupId>org.springframework</groupId>
					<artifactId>spring-jdbc</artifactId>
				</dependency>	
												  				
			</dependencies>
		</profile>
		<profile>
<!-- mvn -P build-codehaus-gwt org.codehaus.mojo:gwt-maven-plugin:1.1:generateAsync
     processes java files that match service pattern and writes GWT *ServuceAsync.java files
     to the default generateDirectory: target/generate-sources/gwt
     generated Async.java files have the same package as the Service.java it's derived from
     You can copy the generated file to the same directory as the Service file.
     Important Note: this only generates files when the Service extends RemoteService. It ignores Services that
     extend BaseRpcService --> 
            <id>build-codehaus-gwt</id>
                <build>
                    <plugins>
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>gwt-maven-plugin</artifactId>
                            <version>1.1</version>
                            <configuration>
                                <failOnError>true</failOnError>
                                <servicePattern>**/common/ui/**/*Service.java</servicePattern> 
                            </configuration> 
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>generateAsync</goal>
                                    </goals>
                                </execution>
                            </executions>
                       </plugin>
                   </plugins>                  
               </build>
		</profile>
	</profiles>

</project>