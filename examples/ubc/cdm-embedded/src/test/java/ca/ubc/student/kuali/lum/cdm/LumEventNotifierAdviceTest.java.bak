package ca.ubc.student.kuali.lum.cdm;

import junit.framework.Assert;

import org.junit.Test;
import org.junit.runner.RunWith;

import org.kuali.student.lum.lu.dto.CluIdentifierInfo;
import org.kuali.student.lum.lu.dto.CluInfo;
import org.kuali.student.lum.lu.service.LuService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations={"classpath:application-context.xml"})
public class LumEventNotifierAdviceTest {

	@Autowired
	public LuService luService;

    private CluInfo createCluInfo() {
	    CluInfo clu = new CluInfo();
	    clu.setId("clu-123");
	
	    CluIdentifierInfo officialIdentifier = new CluIdentifierInfo();
	    officialIdentifier.setId("offId-123");
	    officialIdentifier.setCluId(clu.getId());
	    officialIdentifier.setCode("offId_code");
	    officialIdentifier.setDivision("offId_division");
	    officialIdentifier.setLevel("offId_level");
	    officialIdentifier.setLongName("offId_longName");
	    officialIdentifier.setShortName("offId_shortName");
	    officialIdentifier.setState("offId_state");
	    officialIdentifier.setType("offId_type");
	    officialIdentifier.setVariation("offId_variation");
	    officialIdentifier.setSuffixCode("offId_suffixcode");
	    officialIdentifier.setOrgId("offId_orgid");
	    clu.setOfficialIdentifier(officialIdentifier);
	    
	    return clu;
    }
    
    @Test
    public void testCreateCluInfo_AOPAdvice() throws Exception {
    	//Create clu
    	CluInfo clu = createCluInfo();
    	CluInfo createdClu = luService.createClu("luType.shell.course", clu);
    	//Get clu
	    CluInfo getClu = luService.getClu(createdClu.getId());
	    
	    Assert.assertEquals(createdClu.getId(), getClu.getId());
	    Assert.assertEquals(createdClu.getOfficialIdentifier().getId(), getClu.getOfficialIdentifier().getId());
    }
}
