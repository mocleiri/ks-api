<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="Kuali Student" resourceRoot="" soapui-version="3.5" defaultScriptLanguage="Groovy" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:requirements/><con:properties><con:property><con:name>fff</con:name><con:value>eee</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="LuServiceSoapBinding" type="wsdl" bindingName="{http://student.kuali.org/wsdl/lu}LuServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost/ks-embedded/services/LuService?wsdl" id="f209f522-a60f-4013-8f2f-aef78a231342" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost/ks-embedded/services/LuService?wsdl"><con:part><con:url>http://localhost/ks-embedded/services/LuService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="LuService" targetNamespace="http://student.kuali.org/wsdl/lu" xmlns:ns1="http://cxf.apache.org/bindings/xformat" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://student.kuali.org/wsdl/lu" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/lu" xmlns:ns0="http://student.kuali.org/wsdl/exceptions" xmlns:ns1="http://student.kuali.org/wsdl/search" xmlns:ns2="http://student.kuali.org/wsdl/dictionary" xmlns:ns3="http://student.kuali.org/wsdl/organization" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://student.kuali.org/wsdl/search"/>
      <xs:element name="addCluResourceRequirement" type="tns:addCluResourceRequirement"/>
      <xs:element name="addCluResourceRequirementResponse" type="tns:addCluResourceRequirementResponse"/>
      <xs:element name="addCluSetToCluSet" type="tns:addCluSetToCluSet"/>
      <xs:element name="addCluSetToCluSetResponse" type="tns:addCluSetToCluSetResponse"/>
      <xs:element name="addCluToCluSet" type="tns:addCluToCluSet"/>
      <xs:element name="addCluToCluSetResponse" type="tns:addCluToCluSetResponse"/>
      <xs:element name="createClu" type="tns:createClu"/>
      <xs:element name="createCluCluRelation" type="tns:createCluCluRelation"/>
      <xs:element name="createCluCluRelationResponse" type="tns:createCluCluRelationResponse"/>
      <xs:element name="createCluLoRelation" type="tns:createCluLoRelation"/>
      <xs:element name="createCluLoRelationResponse" type="tns:createCluLoRelationResponse"/>
      <xs:element name="createCluPublication" type="tns:createCluPublication"/>
      <xs:element name="createCluPublicationResponse" type="tns:createCluPublicationResponse"/>
      <xs:element name="createCluResponse" type="tns:createCluResponse"/>
      <xs:element name="createCluResult" type="tns:createCluResult"/>
      <xs:element name="createCluResultResponse" type="tns:createCluResultResponse"/>
      <xs:element name="createCluSet" type="tns:createCluSet"/>
      <xs:element name="createCluSetResponse" type="tns:createCluSetResponse"/>
      <xs:element name="createLui" type="tns:createLui"/>
      <xs:element name="createLuiLuiRelation" type="tns:createLuiLuiRelation"/>
      <xs:element name="createLuiLuiRelationResponse" type="tns:createLuiLuiRelationResponse"/>
      <xs:element name="createLuiResponse" type="tns:createLuiResponse"/>
      <xs:element name="deleteClu" type="tns:deleteClu"/>
      <xs:element name="deleteCluCluRelation" type="tns:deleteCluCluRelation"/>
      <xs:element name="deleteCluCluRelationResponse" type="tns:deleteCluCluRelationResponse"/>
      <xs:element name="deleteCluLoRelation" type="tns:deleteCluLoRelation"/>
      <xs:element name="deleteCluLoRelationResponse" type="tns:deleteCluLoRelationResponse"/>
      <xs:element name="deleteCluPublication" type="tns:deleteCluPublication"/>
      <xs:element name="deleteCluPublicationResponse" type="tns:deleteCluPublicationResponse"/>
      <xs:element name="deleteCluResponse" type="tns:deleteCluResponse"/>
      <xs:element name="deleteCluResult" type="tns:deleteCluResult"/>
      <xs:element name="deleteCluResultResponse" type="tns:deleteCluResultResponse"/>
      <xs:element name="deleteCluSet" type="tns:deleteCluSet"/>
      <xs:element name="deleteCluSetResponse" type="tns:deleteCluSetResponse"/>
      <xs:element name="deleteLui" type="tns:deleteLui"/>
      <xs:element name="deleteLuiLuiRelation" type="tns:deleteLuiLuiRelation"/>
      <xs:element name="deleteLuiLuiRelationResponse" type="tns:deleteLuiLuiRelationResponse"/>
      <xs:element name="deleteLuiResponse" type="tns:deleteLuiResponse"/>
      <xs:element name="getAllCluIdsInCluSet" type="tns:getAllCluIdsInCluSet"/>
      <xs:element name="getAllCluIdsInCluSetResponse" type="tns:getAllCluIdsInCluSetResponse"/>
      <xs:element name="getAllClusInCluSet" type="tns:getAllClusInCluSet"/>
      <xs:element name="getAllClusInCluSetResponse" type="tns:getAllClusInCluSetResponse"/>
      <xs:element name="getAllowedCluLoRelationTypesForLuType" type="tns:getAllowedCluLoRelationTypesForLuType"/>
      <xs:element name="getAllowedCluLoRelationTypesForLuTypeResponse" type="tns:getAllowedCluLoRelationTypesForLuTypeResponse"/>
      <xs:element name="getAllowedLuLuRelationTypesByCluId" type="tns:getAllowedLuLuRelationTypesByCluId"/>
      <xs:element name="getAllowedLuLuRelationTypesByCluIdResponse" type="tns:getAllowedLuLuRelationTypesByCluIdResponse"/>
      <xs:element name="getAllowedLuLuRelationTypesByLuiId" type="tns:getAllowedLuLuRelationTypesByLuiId"/>
      <xs:element name="getAllowedLuLuRelationTypesByLuiIdResponse" type="tns:getAllowedLuLuRelationTypesByLuiIdResponse"/>
      <xs:element name="getAllowedLuLuRelationTypesForLuType" type="tns:getAllowedLuLuRelationTypesForLuType"/>
      <xs:element name="getAllowedLuLuRelationTypesForLuTypeResponse" type="tns:getAllowedLuLuRelationTypesForLuTypeResponse"/>
      <xs:element name="getAllowedResultComponentTypesForResultUsageType" type="tns:getAllowedResultComponentTypesForResultUsageType"/>
      <xs:element name="getAllowedResultComponentTypesForResultUsageTypeResponse" type="tns:getAllowedResultComponentTypesForResultUsageTypeResponse"/>
      <xs:element name="getAllowedResultUsageTypesForLuType" type="tns:getAllowedResultUsageTypesForLuType"/>
      <xs:element name="getAllowedResultUsageTypesForLuTypeResponse" type="tns:getAllowedResultUsageTypesForLuTypeResponse"/>
      <xs:element name="getClu" type="tns:getClu"/>
      <xs:element name="getCluCluRelation" type="tns:getCluCluRelation"/>
      <xs:element name="getCluCluRelationResponse" type="tns:getCluCluRelationResponse"/>
      <xs:element name="getCluCluRelationsByClu" type="tns:getCluCluRelationsByClu"/>
      <xs:element name="getCluCluRelationsByCluResponse" type="tns:getCluCluRelationsByCluResponse"/>
      <xs:element name="getCluIdsByLuType" type="tns:getCluIdsByLuType"/>
      <xs:element name="getCluIdsByLuTypeResponse" type="tns:getCluIdsByLuTypeResponse"/>
      <xs:element name="getCluIdsByRelation" type="tns:getCluIdsByRelation"/>
      <xs:element name="getCluIdsByRelationResponse" type="tns:getCluIdsByRelationResponse"/>
      <xs:element name="getCluIdsByResultComponent" type="tns:getCluIdsByResultComponent"/>
      <xs:element name="getCluIdsByResultComponentResponse" type="tns:getCluIdsByResultComponentResponse"/>
      <xs:element name="getCluIdsByResultUsageType" type="tns:getCluIdsByResultUsageType"/>
      <xs:element name="getCluIdsByResultUsageTypeResponse" type="tns:getCluIdsByResultUsageTypeResponse"/>
      <xs:element name="getCluIdsFromCluSet" type="tns:getCluIdsFromCluSet"/>
      <xs:element name="getCluIdsFromCluSetResponse" type="tns:getCluIdsFromCluSetResponse"/>
      <xs:element name="getCluLoRelation" type="tns:getCluLoRelation"/>
      <xs:element name="getCluLoRelationResponse" type="tns:getCluLoRelationResponse"/>
      <xs:element name="getCluLoRelationType" type="tns:getCluLoRelationType"/>
      <xs:element name="getCluLoRelationTypeResponse" type="tns:getCluLoRelationTypeResponse"/>
      <xs:element name="getCluLoRelationTypes" type="tns:getCluLoRelationTypes"/>
      <xs:element name="getCluLoRelationTypesResponse" type="tns:getCluLoRelationTypesResponse"/>
      <xs:element name="getCluLoRelationsByClu" type="tns:getCluLoRelationsByClu"/>
      <xs:element name="getCluLoRelationsByCluResponse" type="tns:getCluLoRelationsByCluResponse"/>
      <xs:element name="getCluLoRelationsByLo" type="tns:getCluLoRelationsByLo"/>
      <xs:element name="getCluLoRelationsByLoResponse" type="tns:getCluLoRelationsByLoResponse"/>
      <xs:element name="getCluPublication" type="tns:getCluPublication"/>
      <xs:element name="getCluPublicationResponse" type="tns:getCluPublicationResponse"/>
      <xs:element name="getCluPublicationsByCluId" type="tns:getCluPublicationsByCluId"/>
      <xs:element name="getCluPublicationsByCluIdResponse" type="tns:getCluPublicationsByCluIdResponse"/>
      <xs:element name="getCluPublicationsByType" type="tns:getCluPublicationsByType"/>
      <xs:element name="getCluPublicationsByTypeResponse" type="tns:getCluPublicationsByTypeResponse"/>
      <xs:element name="getCluResponse" type="tns:getCluResponse"/>
      <xs:element name="getCluResult" type="tns:getCluResult"/>
      <xs:element name="getCluResultByClu" type="tns:getCluResultByClu"/>
      <xs:element name="getCluResultByCluResponse" type="tns:getCluResultByCluResponse"/>
      <xs:element name="getCluResultResponse" type="tns:getCluResultResponse"/>
      <xs:element name="getCluResultType" type="tns:getCluResultType"/>
      <xs:element name="getCluResultTypeResponse" type="tns:getCluResultTypeResponse"/>
      <xs:element name="getCluResultTypes" type="tns:getCluResultTypes"/>
      <xs:element name="getCluResultTypesForLuType" type="tns:getCluResultTypesForLuType"/>
      <xs:element name="getCluResultTypesForLuTypeResponse" type="tns:getCluResultTypesForLuTypeResponse"/>
      <xs:element name="getCluResultTypesResponse" type="tns:getCluResultTypesResponse"/>
      <xs:element name="getCluSetIdsFromCluSet" type="tns:getCluSetIdsFromCluSet"/>
      <xs:element name="getCluSetIdsFromCluSetResponse" type="tns:getCluSetIdsFromCluSetResponse"/>
      <xs:element name="getCluSetInfo" type="tns:getCluSetInfo"/>
      <xs:element name="getCluSetInfoByIdList" type="tns:getCluSetInfoByIdList"/>
      <xs:element name="getCluSetInfoByIdListResponse" type="tns:getCluSetInfoByIdListResponse"/>
      <xs:element name="getCluSetInfoResponse" type="tns:getCluSetInfoResponse"/>
      <xs:element name="getCluSetType" type="tns:getCluSetType"/>
      <xs:element name="getCluSetTypeResponse" type="tns:getCluSetTypeResponse"/>
      <xs:element name="getCluSetTypes" type="tns:getCluSetTypes"/>
      <xs:element name="getCluSetTypesResponse" type="tns:getCluSetTypesResponse"/>
      <xs:element name="getClusByIdList" type="tns:getClusByIdList"/>
      <xs:element name="getClusByIdListResponse" type="tns:getClusByIdListResponse"/>
      <xs:element name="getClusByLuType" type="tns:getClusByLuType"/>
      <xs:element name="getClusByLuTypeResponse" type="tns:getClusByLuTypeResponse"/>
      <xs:element name="getClusByRelation" type="tns:getClusByRelation"/>
      <xs:element name="getClusByRelationResponse" type="tns:getClusByRelationResponse"/>
      <xs:element name="getClusFromCluSet" type="tns:getClusFromCluSet"/>
      <xs:element name="getClusFromCluSetResponse" type="tns:getClusFromCluSetResponse"/>
      <xs:element name="getDeliveryMethodType" type="tns:getDeliveryMethodType"/>
      <xs:element name="getDeliveryMethodTypeResponse" type="tns:getDeliveryMethodTypeResponse"/>
      <xs:element name="getDeliveryMethodTypes" type="tns:getDeliveryMethodTypes"/>
      <xs:element name="getDeliveryMethodTypesResponse" type="tns:getDeliveryMethodTypesResponse"/>
      <xs:element name="getInstructionalFormatType" type="tns:getInstructionalFormatType"/>
      <xs:element name="getInstructionalFormatTypeResponse" type="tns:getInstructionalFormatTypeResponse"/>
      <xs:element name="getInstructionalFormatTypes" type="tns:getInstructionalFormatTypes"/>
      <xs:element name="getInstructionalFormatTypesResponse" type="tns:getInstructionalFormatTypesResponse"/>
      <xs:element name="getLuCodeType" type="tns:getLuCodeType"/>
      <xs:element name="getLuCodeTypeResponse" type="tns:getLuCodeTypeResponse"/>
      <xs:element name="getLuCodeTypes" type="tns:getLuCodeTypes"/>
      <xs:element name="getLuCodeTypesResponse" type="tns:getLuCodeTypesResponse"/>
      <xs:element name="getLuLuRelationType" type="tns:getLuLuRelationType"/>
      <xs:element name="getLuLuRelationTypeResponse" type="tns:getLuLuRelationTypeResponse"/>
      <xs:element name="getLuLuRelationTypes" type="tns:getLuLuRelationTypes"/>
      <xs:element name="getLuLuRelationTypesResponse" type="tns:getLuLuRelationTypesResponse"/>
      <xs:element name="getLuPublicationType" type="tns:getLuPublicationType"/>
      <xs:element name="getLuPublicationTypeResponse" type="tns:getLuPublicationTypeResponse"/>
      <xs:element name="getLuPublicationTypes" type="tns:getLuPublicationTypes"/>
      <xs:element name="getLuPublicationTypesForLuType" type="tns:getLuPublicationTypesForLuType"/>
      <xs:element name="getLuPublicationTypesForLuTypeResponse" type="tns:getLuPublicationTypesForLuTypeResponse"/>
      <xs:element name="getLuPublicationTypesResponse" type="tns:getLuPublicationTypesResponse"/>
      <xs:element name="getLuType" type="tns:getLuType"/>
      <xs:element name="getLuTypeResponse" type="tns:getLuTypeResponse"/>
      <xs:element name="getLuTypes" type="tns:getLuTypes"/>
      <xs:element name="getLuTypesResponse" type="tns:getLuTypesResponse"/>
      <xs:element name="getLui" type="tns:getLui"/>
      <xs:element name="getLuiIdsByCluId" type="tns:getLuiIdsByCluId"/>
      <xs:element name="getLuiIdsByCluIdResponse" type="tns:getLuiIdsByCluIdResponse"/>
      <xs:element name="getLuiIdsByRelation" type="tns:getLuiIdsByRelation"/>
      <xs:element name="getLuiIdsByRelationResponse" type="tns:getLuiIdsByRelationResponse"/>
      <xs:element name="getLuiIdsInAtpByCluId" type="tns:getLuiIdsInAtpByCluId"/>
      <xs:element name="getLuiIdsInAtpByCluIdResponse" type="tns:getLuiIdsInAtpByCluIdResponse"/>
      <xs:element name="getLuiLuiRelation" type="tns:getLuiLuiRelation"/>
      <xs:element name="getLuiLuiRelationResponse" type="tns:getLuiLuiRelationResponse"/>
      <xs:element name="getLuiLuiRelationsByLui" type="tns:getLuiLuiRelationsByLui"/>
      <xs:element name="getLuiLuiRelationsByLuiResponse" type="tns:getLuiLuiRelationsByLuiResponse"/>
      <xs:element name="getLuiResponse" type="tns:getLuiResponse"/>
      <xs:element name="getLuisByIdList" type="tns:getLuisByIdList"/>
      <xs:element name="getLuisByIdListResponse" type="tns:getLuisByIdListResponse"/>
      <xs:element name="getLuisByRelation" type="tns:getLuisByRelation"/>
      <xs:element name="getLuisByRelationResponse" type="tns:getLuisByRelationResponse"/>
      <xs:element name="getLuisInAtpByCluId" type="tns:getLuisInAtpByCluId"/>
      <xs:element name="getLuisInAtpByCluIdResponse" type="tns:getLuisInAtpByCluIdResponse"/>
      <xs:element name="getRelatedCluIdsByCluId" type="tns:getRelatedCluIdsByCluId"/>
      <xs:element name="getRelatedCluIdsByCluIdResponse" type="tns:getRelatedCluIdsByCluIdResponse"/>
      <xs:element name="getRelatedClusByCluId" type="tns:getRelatedClusByCluId"/>
      <xs:element name="getRelatedClusByCluIdResponse" type="tns:getRelatedClusByCluIdResponse"/>
      <xs:element name="getRelatedLuiIdsByLuiId" type="tns:getRelatedLuiIdsByLuiId"/>
      <xs:element name="getRelatedLuiIdsByLuiIdResponse" type="tns:getRelatedLuiIdsByLuiIdResponse"/>
      <xs:element name="getRelatedLuisByLuiId" type="tns:getRelatedLuisByLuiId"/>
      <xs:element name="getRelatedLuisByLuiIdResponse" type="tns:getRelatedLuisByLuiIdResponse"/>
      <xs:element name="getResourceRequirementsForCluId" type="tns:getResourceRequirementsForCluId"/>
      <xs:element name="getResourceRequirementsForCluIdResponse" type="tns:getResourceRequirementsForCluIdResponse"/>
      <xs:element name="getResultUsageType" type="tns:getResultUsageType"/>
      <xs:element name="getResultUsageTypeResponse" type="tns:getResultUsageTypeResponse"/>
      <xs:element name="getResultUsageTypes" type="tns:getResultUsageTypes"/>
      <xs:element name="getResultUsageTypesResponse" type="tns:getResultUsageTypesResponse"/>
      <xs:element name="isCluInCluSet" type="tns:isCluInCluSet"/>
      <xs:element name="isCluInCluSetResponse" type="tns:isCluInCluSetResponse"/>
      <xs:element name="removeCluFromCluSet" type="tns:removeCluFromCluSet"/>
      <xs:element name="removeCluFromCluSetResponse" type="tns:removeCluFromCluSetResponse"/>
      <xs:element name="removeCluResourceRequirement" type="tns:removeCluResourceRequirement"/>
      <xs:element name="removeCluResourceRequirementResponse" type="tns:removeCluResourceRequirementResponse"/>
      <xs:element name="removeCluSetFromCluSet" type="tns:removeCluSetFromCluSet"/>
      <xs:element name="removeCluSetFromCluSetResponse" type="tns:removeCluSetFromCluSetResponse"/>
      <xs:element name="updateClu" type="tns:updateClu"/>
      <xs:element name="updateCluCluRelation" type="tns:updateCluCluRelation"/>
      <xs:element name="updateCluCluRelationResponse" type="tns:updateCluCluRelationResponse"/>
      <xs:element name="updateCluLoRelation" type="tns:updateCluLoRelation"/>
      <xs:element name="updateCluLoRelationResponse" type="tns:updateCluLoRelationResponse"/>
      <xs:element name="updateCluPublication" type="tns:updateCluPublication"/>
      <xs:element name="updateCluPublicationResponse" type="tns:updateCluPublicationResponse"/>
      <xs:element name="updateCluResponse" type="tns:updateCluResponse"/>
      <xs:element name="updateCluResult" type="tns:updateCluResult"/>
      <xs:element name="updateCluResultResponse" type="tns:updateCluResultResponse"/>
      <xs:element name="updateCluSet" type="tns:updateCluSet"/>
      <xs:element name="updateCluSetResponse" type="tns:updateCluSetResponse"/>
      <xs:element name="updateCluState" type="tns:updateCluState"/>
      <xs:element name="updateCluStateResponse" type="tns:updateCluStateResponse"/>
      <xs:element name="updateLui" type="tns:updateLui"/>
      <xs:element name="updateLuiLuiRelation" type="tns:updateLuiLuiRelation"/>
      <xs:element name="updateLuiLuiRelationResponse" type="tns:updateLuiLuiRelationResponse"/>
      <xs:element name="updateLuiResponse" type="tns:updateLuiResponse"/>
      <xs:element name="updateLuiState" type="tns:updateLuiState"/>
      <xs:element name="updateLuiStateResponse" type="tns:updateLuiStateResponse"/>
      <xs:element name="validateClu" type="tns:validateClu"/>
      <xs:element name="validateCluCluRelation" type="tns:validateCluCluRelation"/>
      <xs:element name="validateCluCluRelationResponse" type="tns:validateCluCluRelationResponse"/>
      <xs:element name="validateCluLoRelation" type="tns:validateCluLoRelation"/>
      <xs:element name="validateCluLoRelationResponse" type="tns:validateCluLoRelationResponse"/>
      <xs:element name="validateCluPublication" type="tns:validateCluPublication"/>
      <xs:element name="validateCluPublicationResponse" type="tns:validateCluPublicationResponse"/>
      <xs:element name="validateCluResponse" type="tns:validateCluResponse"/>
      <xs:element name="validateCluResult" type="tns:validateCluResult"/>
      <xs:element name="validateCluResultResponse" type="tns:validateCluResultResponse"/>
      <xs:element name="validateCluSet" type="tns:validateCluSet"/>
      <xs:element name="validateCluSetResponse" type="tns:validateCluSetResponse"/>
      <xs:element name="validateLui" type="tns:validateLui"/>
      <xs:element name="validateLuiLuiRelation" type="tns:validateLuiLuiRelation"/>
      <xs:element name="validateLuiLuiRelationResponse" type="tns:validateLuiLuiRelationResponse"/>
      <xs:element name="validateLuiResponse" type="tns:validateLuiResponse"/>
      <xs:complexType name="getAllCluIdsInCluSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluSetId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllCluIdsInCluSetResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateLuiLuiRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="luiLuiRelationId" type="xs:string"/>
          <xs:element minOccurs="0" name="luiLuiRelationInfo" type="tns:luiLuiRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="luiLuiRelationInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="luiId" type="xs:string"/>
          <xs:element minOccurs="0" name="relatedLuiId" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Attribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="metaInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="versionInd" type="xs:string"/>
          <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="createId" type="xs:string"/>
          <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="updateId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateLuiLuiRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:luiLuiRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRelatedClusByCluId">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="luLuRelationType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRelatedClusByCluIdResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluLoRelationTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getCluLoRelationTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:cluLoRelationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cluLoRelationTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType abstract="true" name="typeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="isCluInCluSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="cluSetId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isCluInCluSetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuiIdsInAtpByCluId">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="atpKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuiIdsInAtpByCluIdResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluPublication">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluPublicationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluPublicationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluPublicationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cluPublicationInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="variants" type="tns:fieldInfo"/>
          <xs:element minOccurs="0" name="startCycle" type="xs:string"/>
          <xs:element minOccurs="0" name="endCycle" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="fieldInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getAllowedCluLoRelationTypesForLuType">
        <xs:sequence>
          <xs:element minOccurs="0" name="luTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllowedCluLoRelationTypesForLuTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuPublicationTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getLuPublicationTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluSetType">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluSetTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluSetTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluSetTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cluSetTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="createLuiLuiRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="luiId" type="xs:string"/>
          <xs:element minOccurs="0" name="relatedLuiId" type="xs:string"/>
          <xs:element minOccurs="0" name="luLuRelationType" type="xs:string"/>
          <xs:element minOccurs="0" name="luiLuiRelationInfo" type="tns:luiLuiRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createLuiLuiRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:luiLuiRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluPublicationsByCluId">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluPublicationsByCluIdResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:cluPublicationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCluCluRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="relatedCluId" type="xs:string"/>
          <xs:element minOccurs="0" name="luLuRelationTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="cluCluRelationInfo" type="tns:cluCluRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cluCluRelationInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="relatedCluId" type="xs:string"/>
          <xs:element minOccurs="0" name="isCluRelationRequired" type="xs:boolean"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="createCluCluRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluCluRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getClu">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cluInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="officialIdentifier" type="tns:cluIdentifierInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="alternateIdentifiers" type="tns:cluIdentifierInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="academicSubjectOrgs" type="tns:academicSubjectOrgInfo"/>
          <xs:element minOccurs="0" name="studySubjectArea" type="xs:string"/>
          <xs:element minOccurs="0" name="descr" type="tns:richTextInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="campusLocations" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="accreditations" type="tns:accreditationInfo"/>
          <xs:element minOccurs="0" name="primaryAdminOrg" type="tns:adminOrgInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="alternateAdminOrgs" type="tns:adminOrgInfo"/>
          <xs:element minOccurs="0" name="primaryInstructor" type="tns:cluInstructorInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="instructors" type="tns:cluInstructorInfo"/>
          <xs:element minOccurs="0" name="expectedFirstAtp" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="intensity" type="tns:amountInfo"/>
          <xs:element minOccurs="0" name="stdDuration" type="tns:timeAmountInfo"/>
          <xs:element name="canCreateLui" type="xs:boolean"/>
          <xs:element minOccurs="0" name="referenceURL" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="luCodes" type="tns:luCodeInfo"/>
          <xs:element minOccurs="0" name="nextReviewPeriod" type="xs:string"/>
          <xs:element name="isEnrollable" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="offeredAtpTypes" type="xs:string"/>
          <xs:element name="hasEarlyDropDeadline" type="xs:boolean"/>
          <xs:element name="defaultEnrollmentEstimate" type="xs:int"/>
          <xs:element name="defaultMaximumEnrollment" type="xs:int"/>
          <xs:element name="isHazardousForDisabledStudents" type="xs:boolean"/>
          <xs:element minOccurs="0" name="feeInfo" type="tns:cluFeeInfo"/>
          <xs:element minOccurs="0" name="accountingInfo" type="tns:cluAccountingInfo"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="cluIdentifierInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="code" type="xs:string"/>
          <xs:element minOccurs="0" name="shortName" type="xs:string"/>
          <xs:element minOccurs="0" name="longName" type="xs:string"/>
          <xs:element minOccurs="0" name="level" type="xs:string"/>
          <xs:element minOccurs="0" name="division" type="xs:string"/>
          <xs:element minOccurs="0" name="variation" type="xs:string"/>
          <xs:element minOccurs="0" name="suffixCode" type="xs:string"/>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="academicSubjectOrgInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="richTextInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="plain" type="xs:string"/>
          <xs:element minOccurs="0" name="formatted" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="accreditationInfo">
        <xs:sequence>
          <xs:element name="attributes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="entry">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element minOccurs="0" name="key" type="xs:string"/>
                      <xs:element minOccurs="0" name="value" type="xs:string"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="adminOrgInfo">
        <xs:sequence>
          <xs:element name="attributes">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="entry">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element minOccurs="0" name="key" type="xs:string"/>
                      <xs:element minOccurs="0" name="value" type="xs:string"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cluInstructorInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="personId" type="xs:string"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="amountInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="unitType" type="xs:string"/>
          <xs:element minOccurs="0" name="unitQuantity" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="timeAmountInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="atpDurationTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="timeQuantity" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="luCodeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="descr" type="xs:string"/>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="cluFeeInfo">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="cluFeeRecords" type="tns:cluFeeRecordInfo"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="cluFeeRecordInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="feeType" type="xs:string"/>
          <xs:element minOccurs="0" name="feeAmount" type="tns:currencyAmountInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="affiliatedOrgInfoList" type="tns:affiliatedOrgInfo"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="currencyAmountInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="currencyTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="currencyQuantity" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="affiliatedOrgInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="percentage" type="xs:long"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="cluAccountingInfo">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="affiliatedOrgs" type="tns:affiliatedOrgInfo"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getCluIdsFromCluSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluSetId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluIdsFromCluSetResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateCluPublication">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="cluPublicationInfo" type="tns:cluPublicationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateCluPublicationResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validationResultInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="element" type="xs:string"/>
          <xs:element minOccurs="0" name="level" type="tns:errorLevel"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateCluResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluResultId" type="xs:string"/>
          <xs:element minOccurs="0" name="cluResultInfo" type="tns:cluResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cluResultInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="desc" type="tns:richTextInfo"/>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="resultOptions" type="tns:resultOptionInfo"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="resultOptionInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="desc" type="tns:richTextInfo"/>
          <xs:element minOccurs="0" name="resultUsageTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="resultComponentId" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="updateCluResultResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllowedLuLuRelationTypesForLuType">
        <xs:sequence>
          <xs:element minOccurs="0" name="luTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="relatedLuTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllowedLuLuRelationTypesForLuTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addCluResourceRequirement">
        <xs:sequence>
          <xs:element minOccurs="0" name="resourceTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addCluResourceRequirementResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="statusInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="success" type="xs:boolean"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getLuTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluLoRelationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluLoRelationTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluLoRelationTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluLoRelationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluLoRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluLoRelationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluLoRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluLoRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cluLoRelationInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="loId" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getAllowedResultComponentTypesForResultUsageType">
        <xs:sequence>
          <xs:element minOccurs="0" name="resultUsageTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllowedResultComponentTypesForResultUsageTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeCluResourceRequirement">
        <xs:sequence>
          <xs:element minOccurs="0" name="resourceTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeCluResourceRequirementResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuCodeType">
        <xs:sequence>
          <xs:element minOccurs="0" name="luCodeTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuCodeTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:luCodeTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="luCodeTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getCluLoRelationsByLo">
        <xs:sequence>
          <xs:element minOccurs="0" name="loId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluLoRelationsByLoResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:cluLoRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCluResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="cluResultType" type="xs:string"/>
          <xs:element minOccurs="0" name="cluResultInfo" type="tns:cluResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCluResultResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateLui">
        <xs:sequence>
          <xs:element minOccurs="0" name="luiId" type="xs:string"/>
          <xs:element minOccurs="0" name="luiInfo" type="tns:luiInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="luiInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="luiCode" type="xs:string"/>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="atpKey" type="xs:string"/>
          <xs:element minOccurs="0" name="maxSeats" type="xs:int"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="updateLuiResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:luiInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluCluRelationsByClu">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluCluRelationsByCluResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:cluCluRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createLui">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="atpKey" type="xs:string"/>
          <xs:element minOccurs="0" name="luiInfo" type="tns:luiInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createLuiResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:luiInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuiLuiRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="luiLuiRelationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuiLuiRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:luiLuiRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getClusByIdList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="cluIdList" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getClusByIdListResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluCluRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluCluRelationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluCluRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluCluRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluResultTypesForLuType">
        <xs:sequence>
          <xs:element minOccurs="0" name="luTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluResultTypesForLuTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:cluResultTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cluResultTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="validateLui">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="luiInfo" type="tns:luiInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateLuiResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCluResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluResultId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCluResultResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuisByRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="relatedLuiId" type="xs:string"/>
          <xs:element minOccurs="0" name="luLuRelationType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuisByRelationResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuCodeTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getLuCodeTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateLuiLuiRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="luiLuiRelationInfo" type="tns:luiLuiRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateLuiLuiRelationResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuiLuiRelationsByLui">
        <xs:sequence>
          <xs:element minOccurs="0" name="luiId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuiLuiRelationsByLuiResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:luiLuiRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRelatedLuisByLuiId">
        <xs:sequence>
          <xs:element minOccurs="0" name="luiId" type="xs:string"/>
          <xs:element minOccurs="0" name="luLuRelationType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRelatedLuisByLuiIdResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getResourceRequirementsForCluId">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getResourceRequirementsForCluIdResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateCluLoRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluLoRelationId" type="xs:string"/>
          <xs:element minOccurs="0" name="cluLoRelationInfo" type="tns:cluLoRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateCluLoRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluLoRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getInstructionalFormatType">
        <xs:sequence>
          <xs:element minOccurs="0" name="instructionalFormatTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getInstructionalFormatTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:instructionalFormatTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="instructionalFormatTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="removeCluFromCluSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="cluSetId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeCluFromCluSetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateCluResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="cluResultInfo" type="tns:cluResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateCluResultResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluIdsByLuType">
        <xs:sequence>
          <xs:element minOccurs="0" name="luTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="luState" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluIdsByLuTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCluSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluSetId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCluSetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getResultUsageTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getResultUsageTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:resultUsageTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resultUsageTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="updateClu">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="cluInfo" type="tns:cluInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateCluResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateCluLoRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="cluLoRelationInfo" type="tns:cluLoRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateCluLoRelationResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluResultId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluResultResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getClusByRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="relatedCluId" type="xs:string"/>
          <xs:element minOccurs="0" name="luLuRelationType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getClusByRelationResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:cluInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluSetIdsFromCluSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluSetId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluSetIdsFromCluSetResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteClu">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCluResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createClu">
        <xs:sequence>
          <xs:element minOccurs="0" name="luTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="cluInfo" type="tns:cluInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCluResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluSetTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getCluSetTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluPublicationsByType">
        <xs:sequence>
          <xs:element minOccurs="0" name="luPublicationTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluPublicationsByTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:cluPublicationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluResultTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getCluResultTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:cluResultTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateCluSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluSetId" type="xs:string"/>
          <xs:element minOccurs="0" name="cluSetInfo" type="tns:cluSetInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="cluSetInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="descr" type="tns:richTextInfo"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="membershipQuery" type="tns:membershipQueryInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="cluSetIds" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="cluIds" type="xs:string"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="membershipQueryInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="searchTypeKey" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="queryParamValueList" type="ns1:queryParamValue"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="updateCluSetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluSetInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllClusInCluSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluSetId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllClusInCluSetResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:cluInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCluLoRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluLoRelationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCluLoRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCluCluRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluCluRelationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCluCluRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuiIdsByCluId">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuiIdsByCluIdResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLui">
        <xs:sequence>
          <xs:element minOccurs="0" name="luiId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuiResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:luiInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCluSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluSetType" type="xs:string"/>
          <xs:element minOccurs="0" name="cluSetInfo" type="tns:cluSetInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCluSetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluSetInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getClusFromCluSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluSetId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getClusFromCluSetResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluResultType">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluResultTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluResultTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluResultTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuPublicationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="luPublicationTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuPublicationTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:luPublicationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="luPublicationTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getLuiIdsByRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="relatedLuiId" type="xs:string"/>
          <xs:element minOccurs="0" name="luLuRelationType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuiIdsByRelationResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateCluCluRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="cluCluRelationInfo" type="tns:cluCluRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateCluCluRelationResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getInstructionalFormatTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getInstructionalFormatTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateLuiState">
        <xs:sequence>
          <xs:element minOccurs="0" name="luiId" type="xs:string"/>
          <xs:element minOccurs="0" name="luState" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateLuiStateResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:luiInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCluPublication">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluPublicationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteCluPublicationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCluLoRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="loId" type="xs:string"/>
          <xs:element minOccurs="0" name="cluLoRelationType" type="xs:string"/>
          <xs:element minOccurs="0" name="cluLoRelationInfo" type="tns:cluLoRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCluLoRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluLoRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addCluSetToCluSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluSetId" type="xs:string"/>
          <xs:element minOccurs="0" name="addedCluSetId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addCluSetToCluSetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteLuiLuiRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="luiLuiRelationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteLuiLuiRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDeliveryMethodTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getDeliveryMethodTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuisByIdList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="luiIdList" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuisByIdListResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:luiInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteLui">
        <xs:sequence>
          <xs:element minOccurs="0" name="luiId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteLuiResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRelatedCluIdsByCluId">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="luLuRelationType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRelatedCluIdsByCluIdResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuType">
        <xs:sequence>
          <xs:element minOccurs="0" name="luTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:luTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="luTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence>
              <xs:element minOccurs="0" name="instructionalFormat" type="xs:string"/>
              <xs:element minOccurs="0" name="deliveryMethod" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getRelatedLuiIdsByLuiId">
        <xs:sequence>
          <xs:element minOccurs="0" name="luiId" type="xs:string"/>
          <xs:element minOccurs="0" name="luLuRelationType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRelatedLuiIdsByLuiIdResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateCluCluRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluCluRelationId" type="xs:string"/>
          <xs:element minOccurs="0" name="cluCluRelationInfo" type="tns:cluCluRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateCluCluRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluCluRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeCluSetFromCluSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluSetId" type="xs:string"/>
          <xs:element minOccurs="0" name="removedCluSetId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeCluSetFromCluSetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuisInAtpByCluId">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="atpKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuisInAtpByCluIdResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateCluPublication">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluPublicationId" type="xs:string"/>
          <xs:element minOccurs="0" name="cluPublicationInfo" type="tns:cluPublicationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateCluPublicationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluPublicationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluSetInfoByIdList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="cluSetIdList" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluSetInfoByIdListResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addCluToCluSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="cluSetId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addCluToCluSetResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluIdsByResultComponent">
        <xs:sequence>
          <xs:element minOccurs="0" name="resultComponentId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluIdsByResultComponentResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuPublicationTypesForLuType">
        <xs:sequence>
          <xs:element minOccurs="0" name="luTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuPublicationTypesForLuTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllowedLuLuRelationTypesByCluId">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="relatedCluId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllowedLuLuRelationTypesByCluIdResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuLuRelationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="luLuRelationTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuLuRelationTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:luLuRelationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="luLuRelationTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence>
              <xs:element minOccurs="0" name="revName" type="xs:string"/>
              <xs:element minOccurs="0" name="revDesc" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getCluIdsByResultUsageType">
        <xs:sequence>
          <xs:element minOccurs="0" name="resultUsageTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluIdsByResultUsageTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluIdsByRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="relatedCluId" type="xs:string"/>
          <xs:element minOccurs="0" name="luLuRelationType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluIdsByRelationResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluResultByClu">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluResultByCluResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:cluResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCluPublication">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="luPublicationType" type="xs:string"/>
          <xs:element minOccurs="0" name="cluPublicationInfo" type="tns:cluPublicationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createCluPublicationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluPublicationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateCluSet">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="cluSetInfo" type="tns:cluSetInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateCluSetResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluLoRelationsByClu">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluLoRelationsByCluResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:cluLoRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllowedResultUsageTypesForLuType">
        <xs:sequence>
          <xs:element minOccurs="0" name="luTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllowedResultUsageTypesForLuTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getResultUsageType">
        <xs:sequence>
          <xs:element minOccurs="0" name="resultUsageTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getResultUsageTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:resultUsageTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluSetInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluSetId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getCluSetInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluSetInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllowedLuLuRelationTypesByLuiId">
        <xs:sequence>
          <xs:element minOccurs="0" name="luiId" type="xs:string"/>
          <xs:element minOccurs="0" name="relatedLuiId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllowedLuLuRelationTypesByLuiIdResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDeliveryMethodType">
        <xs:sequence>
          <xs:element minOccurs="0" name="deliveryMethodTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getDeliveryMethodTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:deliveryMethodTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deliveryMethodTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="updateCluState">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluId" type="xs:string"/>
          <xs:element minOccurs="0" name="luState" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateCluStateResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:cluInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getLuLuRelationTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getLuLuRelationTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:luLuRelationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateClu">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="cluInfo" type="tns:cluInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateCluResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getClusByLuType">
        <xs:sequence>
          <xs:element minOccurs="0" name="luTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="luState" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getClusByLuTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="errorLevel">
        <xs:restriction base="xs:string">
          <xs:enumeration value="OK"/>
          <xs:enumeration value="WARN"/>
          <xs:enumeration value="ERROR"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="DoesNotExistException" nillable="true" type="ns0:DoesNotExistException"/>
      <xs:element name="OperationFailedException" nillable="true" type="ns0:OperationFailedException"/>
      <xs:element name="MissingParameterException" nillable="true" type="ns0:MissingParameterException"/>
      <xs:element name="PermissionDeniedException" nillable="true" type="ns0:PermissionDeniedException"/>
      <xs:element name="InvalidParameterException" nillable="true" type="ns0:InvalidParameterException"/>
      <xs:element name="DataValidationErrorException" nillable="true" type="ns0:DataValidationErrorException"/>
      <xs:element name="VersionMismatchException" nillable="true" type="ns0:VersionMismatchException"/>
      <xs:element name="CircularRelationshipException" nillable="true" type="ns0:CircularRelationshipException"/>
      <xs:element name="AlreadyExistsException" nillable="true" type="ns0:AlreadyExistsException"/>
      <xs:element name="getObjectStructure" nillable="true" type="ns2:getObjectStructure"/>
      <xs:element name="getObjectStructureResponse" nillable="true" type="ns2:getObjectStructureResponse"/>
      <xs:element name="getSearchResultType" nillable="true" type="ns1:getSearchResultType"/>
      <xs:element name="getSearchResultTypeResponse" nillable="true" type="ns1:getSearchResultTypeResponse"/>
      <xs:element name="DependentObjectsExistException" nillable="true" type="ns0:DependentObjectsExistException"/>
      <xs:element name="getObjectTypes" nillable="true" type="ns2:getObjectTypes"/>
      <xs:element name="getObjectTypesResponse" nillable="true" type="ns2:getObjectTypesResponse"/>
      <xs:element name="getSearchTypes" nillable="true" type="ns1:getSearchTypes"/>
      <xs:element name="getSearchTypesResponse" nillable="true" type="ns1:getSearchTypesResponse"/>
      <xs:element name="search" nillable="true" type="ns3:search"/>
      <xs:element name="searchResponse" nillable="true" type="ns3:searchResponse"/>
      <xs:element name="getSearchType" nillable="true" type="ns1:getSearchType"/>
      <xs:element name="getSearchTypeResponse" nillable="true" type="ns1:getSearchTypeResponse"/>
      <xs:element name="UnsupportedActionException" nillable="true" type="ns0:UnsupportedActionException"/>
      <xs:element name="getSearchTypesByCriteria" nillable="true" type="ns1:getSearchTypesByCriteria"/>
      <xs:element name="getSearchTypesByCriteriaResponse" nillable="true" type="ns1:getSearchTypesByCriteriaResponse"/>
      <xs:element name="getSearchTypesByResult" nillable="true" type="ns1:getSearchTypesByResult"/>
      <xs:element name="getSearchTypesByResultResponse" nillable="true" type="ns1:getSearchTypesByResultResponse"/>
      <xs:element name="getSearchCriteriaTypes" nillable="true" type="ns1:getSearchCriteriaTypes"/>
      <xs:element name="getSearchCriteriaTypesResponse" nillable="true" type="ns1:getSearchCriteriaTypesResponse"/>
      <xs:element name="validateObject" nillable="true" type="ns2:validateObject"/>
      <xs:element name="validateObjectResponse" nillable="true" type="ns2:validateObjectResponse"/>
      <xs:element name="getSearchCriteriaType" nillable="true" type="ns1:getSearchCriteriaType"/>
      <xs:element name="getSearchCriteriaTypeResponse" nillable="true" type="ns1:getSearchCriteriaTypeResponse"/>
      <xs:element name="searchForResults" nillable="true" type="ns1:searchForResults"/>
      <xs:element name="searchForResultsResponse" nillable="true" type="ns1:searchForResultsResponse"/>
      <xs:element name="getSearchResultTypes" nillable="true" type="ns1:getSearchResultTypes"/>
      <xs:element name="getSearchResultTypesResponse" nillable="true" type="ns1:getSearchResultTypesResponse"/>
      <xs:element name="validateStructureData" nillable="true" type="ns2:validateStructureData"/>
      <xs:element name="validateStructureDataResponse" nillable="true" type="ns2:validateStructureDataResponse"/>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/dictionary" xmlns:ns1="http://student.kuali.org/wsdl/lu" xmlns:tns="http://student.kuali.org/wsdl/dictionary" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://student.kuali.org/wsdl/lu"/>
      <xs:element name="fieldDescriptor" type="tns:fieldDescriptor"/>
      <xs:element name="getObjectStructure" type="tns:getObjectStructure"/>
      <xs:element name="getObjectStructureResponse" type="tns:getObjectStructureResponse"/>
      <xs:element name="getObjectTypes" type="tns:getObjectTypes"/>
      <xs:element name="getObjectTypesResponse" type="tns:getObjectTypesResponse"/>
      <xs:element name="validateObject" type="tns:validateObject"/>
      <xs:element name="validateObjectResponse" type="tns:validateObjectResponse"/>
      <xs:element name="validateStructureData" type="tns:validateStructureData"/>
      <xs:element name="validateStructureDataResponse" type="tns:validateStructureDataResponse"/>
      <xs:complexType name="getObjectStructure">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getObjectStructureResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:objectStructure"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="objectStructure">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="type" type="tns:type"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="type">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="state" type="tns:state"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element name="modifiable" type="xs:boolean"/>
          <xs:element minOccurs="0" name="attributes" type="ns1:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="state">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="field" type="tns:field"/>
          <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="field">
        <xs:sequence>
          <xs:element minOccurs="0" name="fieldDescriptor" type="tns:fieldDescriptor"/>
          <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
          <xs:element name="selector" type="xs:boolean"/>
          <xs:element name="dynamic" type="xs:boolean"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="fieldDescriptor">
        <xs:sequence>
          <xs:element name="name" type="xs:string"/>
          <xs:element name="desc" type="xs:string"/>
          <xs:element name="readOnly" type="xs:boolean"/>
          <xs:element name="dataType" type="xs:string"/>
          <xs:element minOccurs="0" name="search" type="tns:searchSelector"/>
          <xs:element minOccurs="0" name="objectStructure" type="tns:objectStructure"/>
          <xs:element minOccurs="0" name="objectStructureRef" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchSelector">
        <xs:sequence/>
        <xs:attribute name="key" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="constraintDescriptor">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="constraintSelector">
        <xs:sequence>
          <xs:element minOccurs="0" name="minValue" type="xs:string"/>
          <xs:element minOccurs="0" name="maxValue" type="xs:string"/>
          <xs:element minOccurs="0" name="minLength" type="xs:int"/>
          <xs:element minOccurs="0" name="maxLength" type="xs:string"/>
          <xs:element minOccurs="0" name="validChars" type="tns:validCharsConstraint"/>
          <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
          <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="case" type="tns:caseConstraint"/>
          <xs:element minOccurs="0" name="typeStateCase" type="tns:typeStateCaseConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="lookup" type="tns:lookupConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="className" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="serverSide" type="xs:boolean" use="required"/>
        <xs:attribute name="locale" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="validCharsConstraint">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="fields" type="xs:string"/>
        <xs:attribute name="separator" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="requireConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="caseConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="when" type="tns:whenConstraint"/>
        </xs:sequence>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="operator" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="whenConstraint">
        <xs:sequence>
          <xs:element minOccurs="0" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="value" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="typeStateCaseConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="typeStateWhen" type="tns:typeStateWhenConstraint"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="typeStateWhenConstraint">
        <xs:sequence>
          <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
          <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="lookupConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="lookupKey" type="tns:lookupKeyConstraint"/>
        </xs:sequence>
        <xs:attribute name="search" type="xs:string"/>
        <xs:attribute name="searchField" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="lookupKeyConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="mapsTo" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="occursConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="min" type="xs:int"/>
        <xs:attribute name="max" type="xs:int"/>
      </xs:complexType>
      <xs:complexType name="getObjectTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getObjectTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateObject">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="stateKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="info" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateObjectResponse">
        <xs:sequence>
          <xs:element form="unqualified" name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateStructureData">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="stateKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="info" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateStructureDataResponse">
        <xs:sequence>
          <xs:element form="unqualified" name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/exceptions" xmlns:tns="http://student.kuali.org/wsdl/exceptions" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
      <xs:element name="CircularRelationshipException" type="tns:CircularRelationshipException"/>
      <xs:element name="DataValidationErrorException" type="tns:DataValidationErrorException"/>
      <xs:element name="DependentObjectsExistException" type="tns:DependentObjectsExistException"/>
      <xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
      <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
      <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
      <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
      <xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
      <xs:element name="UnsupportedActionException" type="tns:UnsupportedActionException"/>
      <xs:element name="VersionMismatchException" type="tns:VersionMismatchException"/>
      <xs:complexType name="DoesNotExistException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OperationFailedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MissingParameterException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PermissionDeniedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InvalidParameterException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DataValidationErrorException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VersionMismatchException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CircularRelationshipException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AlreadyExistsException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DependentObjectsExistException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UnsupportedActionException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/organization" xmlns:ns1="http://student.kuali.org/wsdl/search" xmlns:tns="http://student.kuali.org/wsdl/organization" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://student.kuali.org/wsdl/search"/>
      <xs:element name="search" type="tns:search"/>
      <xs:element name="searchResponse" type="tns:searchResponse"/>
      <xs:complexType name="search">
        <xs:sequence>
          <xs:element minOccurs="0" name="arg0" type="ns1:searchRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="ns1:searchResult"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/search" xmlns:ns1="http://student.kuali.org/wsdl/dictionary" xmlns:tns="http://student.kuali.org/wsdl/search" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://student.kuali.org/wsdl/dictionary"/>
      <xs:element name="getSearchCriteriaType" type="tns:getSearchCriteriaType"/>
      <xs:element name="getSearchCriteriaTypeResponse" type="tns:getSearchCriteriaTypeResponse"/>
      <xs:element name="getSearchCriteriaTypes" type="tns:getSearchCriteriaTypes"/>
      <xs:element name="getSearchCriteriaTypesResponse" type="tns:getSearchCriteriaTypesResponse"/>
      <xs:element name="getSearchResultType" type="tns:getSearchResultType"/>
      <xs:element name="getSearchResultTypeResponse" type="tns:getSearchResultTypeResponse"/>
      <xs:element name="getSearchResultTypes" type="tns:getSearchResultTypes"/>
      <xs:element name="getSearchResultTypesResponse" type="tns:getSearchResultTypesResponse"/>
      <xs:element name="getSearchType" type="tns:getSearchType"/>
      <xs:element name="getSearchTypeResponse" type="tns:getSearchTypeResponse"/>
      <xs:element name="getSearchTypes" type="tns:getSearchTypes"/>
      <xs:element name="getSearchTypesByCriteria" type="tns:getSearchTypesByCriteria"/>
      <xs:element name="getSearchTypesByCriteriaResponse" type="tns:getSearchTypesByCriteriaResponse"/>
      <xs:element name="getSearchTypesByResult" type="tns:getSearchTypesByResult"/>
      <xs:element name="getSearchTypesByResultResponse" type="tns:getSearchTypesByResultResponse"/>
      <xs:element name="getSearchTypesResponse" type="tns:getSearchTypesResponse"/>
      <xs:element name="searchForResults" type="tns:searchForResults"/>
      <xs:element name="searchForResultsResponse" type="tns:searchForResultsResponse"/>
      <xs:complexType name="getSearchResultType">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchResultTypeResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResultTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="resultColumns">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="resultColumn" type="tns:resultColumnInfo"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="resultColumnInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="dataType" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getSearchTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getSearchTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="searchResultTypeInfo" type="tns:searchResultTypeInfo"/>
          <xs:element minOccurs="0" name="searchCriteriaTypeInfo" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchCriteriaTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="queryParams">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="queryParam" type="tns:queryParamInfo"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="queryParamInfo">
        <xs:sequence>
          <xs:element minOccurs="0" ref="ns1:fieldDescriptor"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
        <xs:attribute name="optional" type="xs:boolean" use="required"/>
      </xs:complexType>
      <xs:complexType name="searchRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="searchKey" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="params" nillable="true" type="tns:searchParam"/>
          <xs:element minOccurs="0" name="sortColumn" type="xs:string"/>
          <xs:element minOccurs="0" name="sortDirection" type="tns:sortDirection"/>
          <xs:element minOccurs="0" name="startAt" type="xs:int"/>
          <xs:element minOccurs="0" name="maxResults" type="xs:int"/>
          <xs:element minOccurs="0" name="neededTotalResults" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchParam">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="listValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="startAt" type="xs:int"/>
          <xs:element minOccurs="0" name="totalResults" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="rows" nillable="true" type="tns:searchResultRow"/>
          <xs:element minOccurs="0" name="sortColumn" type="xs:string"/>
          <xs:element minOccurs="0" name="sortDirection" type="tns:sortDirection"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResultRow">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="cells" nillable="true" type="tns:searchResultCell"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResultCell">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element minOccurs="0" name="key" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchType">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypeResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByCriteria">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByCriteriaResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByResult">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByResultResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="queryParamValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="listValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getSearchCriteriaTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getSearchCriteriaTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchCriteriaType">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchCriteriaTypeResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchForResults">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchTypeKey" type="xs:string"/>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="queryParamValues" type="tns:queryParamValue"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchForResultsResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:result"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="result">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="resultCells" type="tns:resultCell"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resultCell">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getSearchResultTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getSearchResultTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchRelationship">
        <xs:sequence>
          <xs:element minOccurs="0" name="lhs" type="tns:typeAttribute"/>
          <xs:element minOccurs="0" name="rhs" type="tns:typeAttribute"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="typeAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="parentType" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="alias" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="sortDirection">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ASC"/>
          <xs:enumeration value="DESC"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updateCluCluRelationResponse">
    <wsdl:part element="tns:updateCluCluRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuLuRelationTypesResponse">
    <wsdl:part element="tns:getLuLuRelationTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluPublicationsByCluId">
    <wsdl:part element="tns:getCluPublicationsByCluId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypeResponse">
    <wsdl:part element="tns:getSearchResultTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateObjectResponse">
    <wsdl:part element="tns:validateObjectResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluResultTypes">
    <wsdl:part element="tns:getCluResultTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateLuiLuiRelationResponse">
    <wsdl:part element="tns:validateLuiLuiRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCluSetResponse">
    <wsdl:part element="tns:updateCluSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCluSet">
    <wsdl:part element="tns:validateCluSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuType">
    <wsdl:part element="tns:getLuType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedLuLuRelationTypesByCluIdResponse">
    <wsdl:part element="tns:getAllowedLuLuRelationTypesByCluIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluIdsByRelationResponse">
    <wsdl:part element="tns:getCluIdsByRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelatedCluIdsByCluIdResponse">
    <wsdl:part element="tns:getRelatedCluIdsByCluIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypesResponse">
    <wsdl:part element="tns:getSearchCriteriaTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluResult">
    <wsdl:part element="tns:getCluResult" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedResultUsageTypesForLuType">
    <wsdl:part element="tns:getAllowedResultUsageTypesForLuType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluLoRelationsByLoResponse">
    <wsdl:part element="tns:getCluLoRelationsByLoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuisInAtpByCluId">
    <wsdl:part element="tns:getLuisInAtpByCluId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCluPublication">
    <wsdl:part element="tns:validateCluPublication" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelatedLuiIdsByLuiId">
    <wsdl:part element="tns:getRelatedLuiIdsByLuiId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluSetIdsFromCluSetResponse">
    <wsdl:part element="tns:getCluSetIdsFromCluSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCluPublicationResponse">
    <wsdl:part element="tns:validateCluPublicationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCluResult">
    <wsdl:part element="tns:createCluResult" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeCluResourceRequirement">
    <wsdl:part element="tns:removeCluResourceRequirement" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuiIdsByCluId">
    <wsdl:part element="tns:getLuiIdsByCluId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part element="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createLui">
    <wsdl:part element="tns:createLui" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypes">
    <wsdl:part element="tns:getObjectTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInstructionalFormatTypes">
    <wsdl:part element="tns:getInstructionalFormatTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCluSetResponse">
    <wsdl:part element="tns:createCluSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addCluSetToCluSetResponse">
    <wsdl:part element="tns:addCluSetToCluSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForResultsResponse">
    <wsdl:part element="tns:searchForResultsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluIdsByRelation">
    <wsdl:part element="tns:getCluIdsByRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuCodeTypesResponse">
    <wsdl:part element="tns:getLuCodeTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchType">
    <wsdl:part element="tns:getSearchType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelatedLuiIdsByLuiIdResponse">
    <wsdl:part element="tns:getRelatedLuiIdsByLuiIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part element="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDeliveryMethodType">
    <wsdl:part element="tns:getDeliveryMethodType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuPublicationTypesForLuTypeResponse">
    <wsdl:part element="tns:getLuPublicationTypesForLuTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCluSet">
    <wsdl:part element="tns:deleteCluSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeCluSetFromCluSetResponse">
    <wsdl:part element="tns:removeCluSetFromCluSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuTypesResponse">
    <wsdl:part element="tns:getLuTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuiLuiRelationsByLui">
    <wsdl:part element="tns:getLuiLuiRelationsByLui" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluResultTypesForLuType">
    <wsdl:part element="tns:getCluResultTypesForLuType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCluPublication">
    <wsdl:part element="tns:createCluPublication" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedCluLoRelationTypesForLuTypeResponse">
    <wsdl:part element="tns:getAllowedCluLoRelationTypesForLuTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DependentObjectsExistException">
    <wsdl:part element="tns:DependentObjectsExistException" name="DependentObjectsExistException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateLuiLuiRelation">
    <wsdl:part element="tns:validateLuiLuiRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeCluSetFromCluSet">
    <wsdl:part element="tns:removeCluSetFromCluSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLuiStateResponse">
    <wsdl:part element="tns:updateLuiStateResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateLui">
    <wsdl:part element="tns:validateLui" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCluCluRelationResponse">
    <wsdl:part element="tns:validateCluCluRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCluCluRelationResponse">
    <wsdl:part element="tns:createCluCluRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCluState">
    <wsdl:part element="tns:updateCluState" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClusByRelation">
    <wsdl:part element="tns:getClusByRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuPublicationType">
    <wsdl:part element="tns:getLuPublicationType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateStructureDataResponse">
    <wsdl:part element="tns:validateStructureDataResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part element="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuiIdsByCluIdResponse">
    <wsdl:part element="tns:getLuiIdsByCluIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDeliveryMethodTypeResponse">
    <wsdl:part element="tns:getDeliveryMethodTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluSetInfoResponse">
    <wsdl:part element="tns:getCluSetInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCluCluRelation">
    <wsdl:part element="tns:deleteCluCluRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypeResponse">
    <wsdl:part element="tns:getSearchCriteriaTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addCluSetToCluSet">
    <wsdl:part element="tns:addCluSetToCluSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluPublicationResponse">
    <wsdl:part element="tns:getCluPublicationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuiResponse">
    <wsdl:part element="tns:getLuiResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCluResponse">
    <wsdl:part element="tns:validateCluResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCluLoRelation">
    <wsdl:part element="tns:deleteCluLoRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuCodeTypeResponse">
    <wsdl:part element="tns:getLuCodeTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClusByRelationResponse">
    <wsdl:part element="tns:getClusByRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCluLoRelationResponse">
    <wsdl:part element="tns:deleteCluLoRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllCluIdsInCluSet">
    <wsdl:part element="tns:getAllCluIdsInCluSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCluResult">
    <wsdl:part element="tns:validateCluResult" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCluSetResponse">
    <wsdl:part element="tns:deleteCluSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypes">
    <wsdl:part element="tns:getSearchResultTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResultUsageType">
    <wsdl:part element="tns:getResultUsageType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuCodeTypes">
    <wsdl:part element="tns:getLuCodeTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInstructionalFormatType">
    <wsdl:part element="tns:getInstructionalFormatType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluIdsByResultUsageTypeResponse">
    <wsdl:part element="tns:getCluIdsByResultUsageTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCluResponse">
    <wsdl:part element="tns:createCluResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluResultResponse">
    <wsdl:part element="tns:getCluResultResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteria">
    <wsdl:part element="tns:getSearchTypesByCriteria" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluIdsByLuType">
    <wsdl:part element="tns:getCluIdsByLuType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCluStateResponse">
    <wsdl:part element="tns:updateCluStateResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuTypeResponse">
    <wsdl:part element="tns:getLuTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuisByRelation">
    <wsdl:part element="tns:getLuisByRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLuiResponse">
    <wsdl:part element="tns:updateLuiResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuisInAtpByCluIdResponse">
    <wsdl:part element="tns:getLuisInAtpByCluIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluResponse">
    <wsdl:part element="tns:getCluResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCluLoRelation">
    <wsdl:part element="tns:updateCluLoRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLuiLuiRelationResponse">
    <wsdl:part element="tns:updateLuiLuiRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluPublication">
    <wsdl:part element="tns:getCluPublication" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResourceRequirementsForCluId">
    <wsdl:part element="tns:getResourceRequirementsForCluId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluLoRelationTypeResponse">
    <wsdl:part element="tns:getCluLoRelationTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluLoRelationType">
    <wsdl:part element="tns:getCluLoRelationType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateObject">
    <wsdl:part element="tns:validateObject" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedLuLuRelationTypesForLuType">
    <wsdl:part element="tns:getAllowedLuLuRelationTypesForLuType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelatedLuisByLuiIdResponse">
    <wsdl:part element="tns:getRelatedLuisByLuiIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluCluRelationsByClu">
    <wsdl:part element="tns:getCluCluRelationsByClu" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaType">
    <wsdl:part element="tns:getSearchCriteriaType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCluSetResponse">
    <wsdl:part element="tns:validateCluSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypes">
    <wsdl:part element="tns:getSearchCriteriaTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelatedClusByCluId">
    <wsdl:part element="tns:getRelatedClusByCluId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createClu">
    <wsdl:part element="tns:createClu" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForResults">
    <wsdl:part element="tns:searchForResults" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createLuiLuiRelation">
    <wsdl:part element="tns:createLuiLuiRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UnsupportedActionException">
    <wsdl:part element="tns:UnsupportedActionException" name="UnsupportedActionException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluCluRelationResponse">
    <wsdl:part element="tns:getCluCluRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCluPublication">
    <wsdl:part element="tns:deleteCluPublication" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResultUsageTypeResponse">
    <wsdl:part element="tns:getResultUsageTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuiLuiRelation">
    <wsdl:part element="tns:getLuiLuiRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeCluResourceRequirementResponse">
    <wsdl:part element="tns:removeCluResourceRequirementResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluLoRelationResponse">
    <wsdl:part element="tns:getCluLoRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CircularRelationshipException">
    <wsdl:part element="tns:CircularRelationshipException" name="CircularRelationshipException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedLuLuRelationTypesByLuiId">
    <wsdl:part element="tns:getAllowedLuLuRelationTypesByLuiId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluIdsByResultComponent">
    <wsdl:part element="tns:getCluIdsByResultComponent" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClusByLuTypeResponse">
    <wsdl:part element="tns:getClusByLuTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClusFromCluSet">
    <wsdl:part element="tns:getClusFromCluSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResultUsageTypesResponse">
    <wsdl:part element="tns:getResultUsageTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuCodeType">
    <wsdl:part element="tns:getLuCodeType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLui">
    <wsdl:part element="tns:getLui" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluSetTypesResponse">
    <wsdl:part element="tns:getCluSetTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCluPublicationResponse">
    <wsdl:part element="tns:createCluPublicationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addCluResourceRequirementResponse">
    <wsdl:part element="tns:addCluResourceRequirementResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuLuRelationTypeResponse">
    <wsdl:part element="tns:getLuLuRelationTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedCluLoRelationTypesForLuType">
    <wsdl:part element="tns:getAllowedCluLoRelationTypesForLuType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateClu">
    <wsdl:part element="tns:updateClu" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuLuRelationType">
    <wsdl:part element="tns:getLuLuRelationType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluResultByClu">
    <wsdl:part element="tns:getCluResultByClu" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuisByIdList">
    <wsdl:part element="tns:getLuisByIdList" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuiIdsByRelation">
    <wsdl:part element="tns:getLuiIdsByRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluIdsByResultComponentResponse">
    <wsdl:part element="tns:getCluIdsByResultComponentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllCluIdsInCluSetResponse">
    <wsdl:part element="tns:getAllCluIdsInCluSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part element="tns:MissingParameterException" name="MissingParameterException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCluLoRelationResponse">
    <wsdl:part element="tns:validateCluLoRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuiIdsInAtpByCluId">
    <wsdl:part element="tns:getLuiIdsInAtpByCluId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLui">
    <wsdl:part element="tns:deleteLui" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluResultTypeResponse">
    <wsdl:part element="tns:getCluResultTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateClu">
    <wsdl:part element="tns:validateClu" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCluCluRelation">
    <wsdl:part element="tns:validateCluCluRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluIdsByLuTypeResponse">
    <wsdl:part element="tns:getCluIdsByLuTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluSetInfoByIdListResponse">
    <wsdl:part element="tns:getCluSetInfoByIdListResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCluResponse">
    <wsdl:part element="tns:updateCluResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuisByRelationResponse">
    <wsdl:part element="tns:getLuisByRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeCluFromCluSetResponse">
    <wsdl:part element="tns:removeCluFromCluSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypeResponse">
    <wsdl:part element="tns:getSearchTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedLuLuRelationTypesForLuTypeResponse">
    <wsdl:part element="tns:getAllowedLuLuRelationTypesForLuTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCluSet">
    <wsdl:part element="tns:createCluSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelatedCluIdsByCluId">
    <wsdl:part element="tns:getRelatedCluIdsByCluId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addCluResourceRequirement">
    <wsdl:part element="tns:addCluResourceRequirement" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInstructionalFormatTypeResponse">
    <wsdl:part element="tns:getInstructionalFormatTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedResultComponentTypesForResultUsageType">
    <wsdl:part element="tns:getAllowedResultComponentTypesForResultUsageType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCluLoRelation">
    <wsdl:part element="tns:validateCluLoRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLuiResponse">
    <wsdl:part element="tns:deleteLuiResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getInstructionalFormatTypesResponse">
    <wsdl:part element="tns:getInstructionalFormatTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluCluRelationsByCluResponse">
    <wsdl:part element="tns:getCluCluRelationsByCluResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedLuLuRelationTypesByLuiIdResponse">
    <wsdl:part element="tns:getAllowedLuLuRelationTypesByLuiIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DataValidationErrorException">
    <wsdl:part element="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuiLuiRelationsByLuiResponse">
    <wsdl:part element="tns:getLuiLuiRelationsByLuiResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createLuiResponse">
    <wsdl:part element="tns:createLuiResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createLuiLuiRelationResponse">
    <wsdl:part element="tns:createLuiLuiRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addCluToCluSet">
    <wsdl:part element="tns:addCluToCluSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClu">
    <wsdl:part element="tns:getClu" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypesResponse">
    <wsdl:part element="tns:getObjectTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuPublicationTypeResponse">
    <wsdl:part element="tns:getLuPublicationTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCluResultResponse">
    <wsdl:part element="tns:updateCluResultResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClusByIdList">
    <wsdl:part element="tns:getClusByIdList" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluIdsFromCluSet">
    <wsdl:part element="tns:getCluIdsFromCluSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteriaResponse">
    <wsdl:part element="tns:getSearchTypesByCriteriaResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluSetTypes">
    <wsdl:part element="tns:getCluSetTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCluCluRelationResponse">
    <wsdl:part element="tns:deleteCluCluRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuiLuiRelationResponse">
    <wsdl:part element="tns:getLuiLuiRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluCluRelation">
    <wsdl:part element="tns:getCluCluRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResultUsageTypes">
    <wsdl:part element="tns:getResultUsageTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCluCluRelation">
    <wsdl:part element="tns:createCluCluRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluPublicationsByTypeResponse">
    <wsdl:part element="tns:getCluPublicationsByTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeCluFromCluSet">
    <wsdl:part element="tns:removeCluFromCluSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCluCluRelation">
    <wsdl:part element="tns:updateCluCluRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluPublicationsByType">
    <wsdl:part element="tns:getCluPublicationsByType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuLuRelationTypes">
    <wsdl:part element="tns:getLuLuRelationTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLuiState">
    <wsdl:part element="tns:updateLuiState" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedResultUsageTypesForLuTypeResponse">
    <wsdl:part element="tns:getAllowedResultUsageTypesForLuTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluIdsByResultUsageType">
    <wsdl:part element="tns:getCluIdsByResultUsageType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypes">
    <wsdl:part element="tns:getSearchTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchResponse">
    <wsdl:part element="tns:searchResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCluLoRelation">
    <wsdl:part element="tns:createCluLoRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLuiLuiRelation">
    <wsdl:part element="tns:deleteLuiLuiRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluLoRelation">
    <wsdl:part element="tns:getCluLoRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClusFromCluSetResponse">
    <wsdl:part element="tns:getClusFromCluSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluResultTypesForLuTypeResponse">
    <wsdl:part element="tns:getCluResultTypesForLuTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultType">
    <wsdl:part element="tns:getSearchResultType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypesResponse">
    <wsdl:part element="tns:getSearchResultTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCluResultResponse">
    <wsdl:part element="tns:deleteCluResultResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="search">
    <wsdl:part element="tns:search" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateCluResultResponse">
    <wsdl:part element="tns:validateCluResultResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluSetType">
    <wsdl:part element="tns:getCluSetType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCluResult">
    <wsdl:part element="tns:updateCluResult" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuTypes">
    <wsdl:part element="tns:getLuTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluSetInfo">
    <wsdl:part element="tns:getCluSetInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCluPublication">
    <wsdl:part element="tns:updateCluPublication" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCluPublicationResponse">
    <wsdl:part element="tns:updateCluPublicationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelatedClusByCluIdResponse">
    <wsdl:part element="tns:getRelatedClusByCluIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteLuiLuiRelationResponse">
    <wsdl:part element="tns:deleteLuiLuiRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCluResultResponse">
    <wsdl:part element="tns:createCluResultResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluSetTypeResponse">
    <wsdl:part element="tns:getCluSetTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuPublicationTypesResponse">
    <wsdl:part element="tns:getLuPublicationTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluIdsFromCluSetResponse">
    <wsdl:part element="tns:getCluIdsFromCluSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDeliveryMethodTypesResponse">
    <wsdl:part element="tns:getDeliveryMethodTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedLuLuRelationTypesByCluId">
    <wsdl:part element="tns:getAllowedLuLuRelationTypesByCluId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isCluInCluSet">
    <wsdl:part element="tns:isCluInCluSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteClu">
    <wsdl:part element="tns:deleteClu" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResult">
    <wsdl:part element="tns:getSearchTypesByResult" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluLoRelationsByCluResponse">
    <wsdl:part element="tns:getCluLoRelationsByCluResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluLoRelationTypes">
    <wsdl:part element="tns:getCluLoRelationTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResourceRequirementsForCluIdResponse">
    <wsdl:part element="tns:getResourceRequirementsForCluIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResultResponse">
    <wsdl:part element="tns:getSearchTypesByResultResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isCluInCluSetResponse">
    <wsdl:part element="tns:isCluInCluSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllClusInCluSetResponse">
    <wsdl:part element="tns:getAllClusInCluSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluSetIdsFromCluSet">
    <wsdl:part element="tns:getCluSetIdsFromCluSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuiIdsByRelationResponse">
    <wsdl:part element="tns:getLuiIdsByRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateStructureData">
    <wsdl:part element="tns:validateStructureData" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluResultByCluResponse">
    <wsdl:part element="tns:getCluResultByCluResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part element="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluResultType">
    <wsdl:part element="tns:getCluResultType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCluResult">
    <wsdl:part element="tns:deleteCluResult" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="VersionMismatchException">
    <wsdl:part element="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part element="tns:OperationFailedException" name="OperationFailedException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedResultComponentTypesForResultUsageTypeResponse">
    <wsdl:part element="tns:getAllowedResultComponentTypesForResultUsageTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuiIdsInAtpByCluIdResponse">
    <wsdl:part element="tns:getLuiIdsInAtpByCluIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructure">
    <wsdl:part element="tns:getObjectStructure" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuisByIdListResponse">
    <wsdl:part element="tns:getLuisByIdListResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCluSet">
    <wsdl:part element="tns:updateCluSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructureResponse">
    <wsdl:part element="tns:getObjectStructureResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluPublicationsByCluIdResponse">
    <wsdl:part element="tns:getCluPublicationsByCluIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDeliveryMethodTypes">
    <wsdl:part element="tns:getDeliveryMethodTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluLoRelationsByLo">
    <wsdl:part element="tns:getCluLoRelationsByLo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCluResponse">
    <wsdl:part element="tns:deleteCluResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluLoRelationsByClu">
    <wsdl:part element="tns:getCluLoRelationsByClu" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateCluLoRelationResponse">
    <wsdl:part element="tns:updateCluLoRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesResponse">
    <wsdl:part element="tns:getSearchTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuPublicationTypes">
    <wsdl:part element="tns:getLuPublicationTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllClusInCluSet">
    <wsdl:part element="tns:getAllClusInCluSet" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCluLoRelationResponse">
    <wsdl:part element="tns:createCluLoRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addCluToCluSetResponse">
    <wsdl:part element="tns:addCluToCluSetResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteCluPublicationResponse">
    <wsdl:part element="tns:deleteCluPublicationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRelatedLuisByLuiId">
    <wsdl:part element="tns:getRelatedLuisByLuiId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluSetInfoByIdList">
    <wsdl:part element="tns:getCluSetInfoByIdList" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluLoRelationTypesResponse">
    <wsdl:part element="tns:getCluLoRelationTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLui">
    <wsdl:part element="tns:updateLui" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLuiLuiRelation">
    <wsdl:part element="tns:updateLuiLuiRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCluResultTypesResponse">
    <wsdl:part element="tns:getCluResultTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClusByLuType">
    <wsdl:part element="tns:getClusByLuType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateLuiResponse">
    <wsdl:part element="tns:validateLuiResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClusByIdListResponse">
    <wsdl:part element="tns:getClusByIdListResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLuPublicationTypesForLuType">
    <wsdl:part element="tns:getLuPublicationTypesForLuType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="LuService">
    <wsdl:operation name="getAllCluIdsInCluSet">
      <wsdl:input message="tns:getAllCluIdsInCluSet" name="getAllCluIdsInCluSet"></wsdl:input>
      <wsdl:output message="tns:getAllCluIdsInCluSetResponse" name="getAllCluIdsInCluSetResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLuiLuiRelation">
      <wsdl:input message="tns:updateLuiLuiRelation" name="updateLuiLuiRelation"></wsdl:input>
      <wsdl:output message="tns:updateLuiLuiRelationResponse" name="updateLuiLuiRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelatedClusByCluId">
      <wsdl:input message="tns:getRelatedClusByCluId" name="getRelatedClusByCluId"></wsdl:input>
      <wsdl:output message="tns:getRelatedClusByCluIdResponse" name="getRelatedClusByCluIdResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluLoRelationTypes">
      <wsdl:input message="tns:getCluLoRelationTypes" name="getCluLoRelationTypes"></wsdl:input>
      <wsdl:output message="tns:getCluLoRelationTypesResponse" name="getCluLoRelationTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isCluInCluSet">
      <wsdl:input message="tns:isCluInCluSet" name="isCluInCluSet"></wsdl:input>
      <wsdl:output message="tns:isCluInCluSetResponse" name="isCluInCluSetResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuiIdsInAtpByCluId">
      <wsdl:input message="tns:getLuiIdsInAtpByCluId" name="getLuiIdsInAtpByCluId"></wsdl:input>
      <wsdl:output message="tns:getLuiIdsInAtpByCluIdResponse" name="getLuiIdsInAtpByCluIdResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluPublication">
      <wsdl:input message="tns:getCluPublication" name="getCluPublication"></wsdl:input>
      <wsdl:output message="tns:getCluPublicationResponse" name="getCluPublicationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedCluLoRelationTypesForLuType">
      <wsdl:input message="tns:getAllowedCluLoRelationTypesForLuType" name="getAllowedCluLoRelationTypesForLuType"></wsdl:input>
      <wsdl:output message="tns:getAllowedCluLoRelationTypesForLuTypeResponse" name="getAllowedCluLoRelationTypesForLuTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuPublicationTypes">
      <wsdl:input message="tns:getLuPublicationTypes" name="getLuPublicationTypes"></wsdl:input>
      <wsdl:output message="tns:getLuPublicationTypesResponse" name="getLuPublicationTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluSetType">
      <wsdl:input message="tns:getCluSetType" name="getCluSetType"></wsdl:input>
      <wsdl:output message="tns:getCluSetTypeResponse" name="getCluSetTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createLuiLuiRelation">
      <wsdl:input message="tns:createLuiLuiRelation" name="createLuiLuiRelation"></wsdl:input>
      <wsdl:output message="tns:createLuiLuiRelationResponse" name="createLuiLuiRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:CircularRelationshipException" name="CircularRelationshipException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluPublicationsByCluId">
      <wsdl:input message="tns:getCluPublicationsByCluId" name="getCluPublicationsByCluId"></wsdl:input>
      <wsdl:output message="tns:getCluPublicationsByCluIdResponse" name="getCluPublicationsByCluIdResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCluCluRelation">
      <wsdl:input message="tns:createCluCluRelation" name="createCluCluRelation"></wsdl:input>
      <wsdl:output message="tns:createCluCluRelationResponse" name="createCluCluRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:CircularRelationshipException" name="CircularRelationshipException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectStructure">
      <wsdl:input message="tns:getObjectStructure" name="getObjectStructure"></wsdl:input>
      <wsdl:output message="tns:getObjectStructureResponse" name="getObjectStructureResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClu">
      <wsdl:input message="tns:getClu" name="getClu"></wsdl:input>
      <wsdl:output message="tns:getCluResponse" name="getCluResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluIdsFromCluSet">
      <wsdl:input message="tns:getCluIdsFromCluSet" name="getCluIdsFromCluSet"></wsdl:input>
      <wsdl:output message="tns:getCluIdsFromCluSetResponse" name="getCluIdsFromCluSetResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCluPublication">
      <wsdl:input message="tns:validateCluPublication" name="validateCluPublication"></wsdl:input>
      <wsdl:output message="tns:validateCluPublicationResponse" name="validateCluPublicationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCluResult">
      <wsdl:input message="tns:updateCluResult" name="updateCluResult"></wsdl:input>
      <wsdl:output message="tns:updateCluResultResponse" name="updateCluResultResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedLuLuRelationTypesForLuType">
      <wsdl:input message="tns:getAllowedLuLuRelationTypesForLuType" name="getAllowedLuLuRelationTypesForLuType"></wsdl:input>
      <wsdl:output message="tns:getAllowedLuLuRelationTypesForLuTypeResponse" name="getAllowedLuLuRelationTypesForLuTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCluResourceRequirement">
      <wsdl:input message="tns:addCluResourceRequirement" name="addCluResourceRequirement"></wsdl:input>
      <wsdl:output message="tns:addCluResourceRequirementResponse" name="addCluResourceRequirementResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuTypes">
      <wsdl:input message="tns:getLuTypes" name="getLuTypes"></wsdl:input>
      <wsdl:output message="tns:getLuTypesResponse" name="getLuTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluLoRelationType">
      <wsdl:input message="tns:getCluLoRelationType" name="getCluLoRelationType"></wsdl:input>
      <wsdl:output message="tns:getCluLoRelationTypeResponse" name="getCluLoRelationTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluLoRelation">
      <wsdl:input message="tns:getCluLoRelation" name="getCluLoRelation"></wsdl:input>
      <wsdl:output message="tns:getCluLoRelationResponse" name="getCluLoRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedResultComponentTypesForResultUsageType">
      <wsdl:input message="tns:getAllowedResultComponentTypesForResultUsageType" name="getAllowedResultComponentTypesForResultUsageType"></wsdl:input>
      <wsdl:output message="tns:getAllowedResultComponentTypesForResultUsageTypeResponse" name="getAllowedResultComponentTypesForResultUsageTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeCluResourceRequirement">
      <wsdl:input message="tns:removeCluResourceRequirement" name="removeCluResourceRequirement"></wsdl:input>
      <wsdl:output message="tns:removeCluResourceRequirementResponse" name="removeCluResourceRequirementResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuCodeType">
      <wsdl:input message="tns:getLuCodeType" name="getLuCodeType"></wsdl:input>
      <wsdl:output message="tns:getLuCodeTypeResponse" name="getLuCodeTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluLoRelationsByLo">
      <wsdl:input message="tns:getCluLoRelationsByLo" name="getCluLoRelationsByLo"></wsdl:input>
      <wsdl:output message="tns:getCluLoRelationsByLoResponse" name="getCluLoRelationsByLoResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCluResult">
      <wsdl:input message="tns:createCluResult" name="createCluResult"></wsdl:input>
      <wsdl:output message="tns:createCluResultResponse" name="createCluResultResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLui">
      <wsdl:input message="tns:updateLui" name="updateLui"></wsdl:input>
      <wsdl:output message="tns:updateLuiResponse" name="updateLuiResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluCluRelationsByClu">
      <wsdl:input message="tns:getCluCluRelationsByClu" name="getCluCluRelationsByClu"></wsdl:input>
      <wsdl:output message="tns:getCluCluRelationsByCluResponse" name="getCluCluRelationsByCluResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createLui">
      <wsdl:input message="tns:createLui" name="createLui"></wsdl:input>
      <wsdl:output message="tns:createLuiResponse" name="createLuiResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuiLuiRelation">
      <wsdl:input message="tns:getLuiLuiRelation" name="getLuiLuiRelation"></wsdl:input>
      <wsdl:output message="tns:getLuiLuiRelationResponse" name="getLuiLuiRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClusByIdList">
      <wsdl:input message="tns:getClusByIdList" name="getClusByIdList"></wsdl:input>
      <wsdl:output message="tns:getClusByIdListResponse" name="getClusByIdListResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <wsdl:input message="tns:getSearchResultType" name="getSearchResultType"></wsdl:input>
      <wsdl:output message="tns:getSearchResultTypeResponse" name="getSearchResultTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluCluRelation">
      <wsdl:input message="tns:getCluCluRelation" name="getCluCluRelation"></wsdl:input>
      <wsdl:output message="tns:getCluCluRelationResponse" name="getCluCluRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluResultTypesForLuType">
      <wsdl:input message="tns:getCluResultTypesForLuType" name="getCluResultTypesForLuType"></wsdl:input>
      <wsdl:output message="tns:getCluResultTypesForLuTypeResponse" name="getCluResultTypesForLuTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateLui">
      <wsdl:input message="tns:validateLui" name="validateLui"></wsdl:input>
      <wsdl:output message="tns:validateLuiResponse" name="validateLuiResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCluResult">
      <wsdl:input message="tns:deleteCluResult" name="deleteCluResult"></wsdl:input>
      <wsdl:output message="tns:deleteCluResultResponse" name="deleteCluResultResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DependentObjectsExistException" name="DependentObjectsExistException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuisByRelation">
      <wsdl:input message="tns:getLuisByRelation" name="getLuisByRelation"></wsdl:input>
      <wsdl:output message="tns:getLuisByRelationResponse" name="getLuisByRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuCodeTypes">
      <wsdl:input message="tns:getLuCodeTypes" name="getLuCodeTypes"></wsdl:input>
      <wsdl:output message="tns:getLuCodeTypesResponse" name="getLuCodeTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateLuiLuiRelation">
      <wsdl:input message="tns:validateLuiLuiRelation" name="validateLuiLuiRelation"></wsdl:input>
      <wsdl:output message="tns:validateLuiLuiRelationResponse" name="validateLuiLuiRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuiLuiRelationsByLui">
      <wsdl:input message="tns:getLuiLuiRelationsByLui" name="getLuiLuiRelationsByLui"></wsdl:input>
      <wsdl:output message="tns:getLuiLuiRelationsByLuiResponse" name="getLuiLuiRelationsByLuiResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelatedLuisByLuiId">
      <wsdl:input message="tns:getRelatedLuisByLuiId" name="getRelatedLuisByLuiId"></wsdl:input>
      <wsdl:output message="tns:getRelatedLuisByLuiIdResponse" name="getRelatedLuisByLuiIdResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceRequirementsForCluId">
      <wsdl:input message="tns:getResourceRequirementsForCluId" name="getResourceRequirementsForCluId"></wsdl:input>
      <wsdl:output message="tns:getResourceRequirementsForCluIdResponse" name="getResourceRequirementsForCluIdResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCluLoRelation">
      <wsdl:input message="tns:updateCluLoRelation" name="updateCluLoRelation"></wsdl:input>
      <wsdl:output message="tns:updateCluLoRelationResponse" name="updateCluLoRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <wsdl:input message="tns:getObjectTypes" name="getObjectTypes"></wsdl:input>
      <wsdl:output message="tns:getObjectTypesResponse" name="getObjectTypesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <wsdl:input message="tns:getSearchTypes" name="getSearchTypes"></wsdl:input>
      <wsdl:output message="tns:getSearchTypesResponse" name="getSearchTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="search">
      <wsdl:input message="tns:search" name="search"></wsdl:input>
      <wsdl:output message="tns:searchResponse" name="searchResponse"></wsdl:output>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <wsdl:input message="tns:getSearchType" name="getSearchType"></wsdl:input>
      <wsdl:output message="tns:getSearchTypeResponse" name="getSearchTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInstructionalFormatType">
      <wsdl:input message="tns:getInstructionalFormatType" name="getInstructionalFormatType"></wsdl:input>
      <wsdl:output message="tns:getInstructionalFormatTypeResponse" name="getInstructionalFormatTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeCluFromCluSet">
      <wsdl:input message="tns:removeCluFromCluSet" name="removeCluFromCluSet"></wsdl:input>
      <wsdl:output message="tns:removeCluFromCluSetResponse" name="removeCluFromCluSetResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:UnsupportedActionException" name="UnsupportedActionException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCluResult">
      <wsdl:input message="tns:validateCluResult" name="validateCluResult"></wsdl:input>
      <wsdl:output message="tns:validateCluResultResponse" name="validateCluResultResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluIdsByLuType">
      <wsdl:input message="tns:getCluIdsByLuType" name="getCluIdsByLuType"></wsdl:input>
      <wsdl:output message="tns:getCluIdsByLuTypeResponse" name="getCluIdsByLuTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCluSet">
      <wsdl:input message="tns:deleteCluSet" name="deleteCluSet"></wsdl:input>
      <wsdl:output message="tns:deleteCluSetResponse" name="deleteCluSetResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <wsdl:input message="tns:getSearchTypesByCriteria" name="getSearchTypesByCriteria"></wsdl:input>
      <wsdl:output message="tns:getSearchTypesByCriteriaResponse" name="getSearchTypesByCriteriaResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResultUsageTypes">
      <wsdl:input message="tns:getResultUsageTypes" name="getResultUsageTypes"></wsdl:input>
      <wsdl:output message="tns:getResultUsageTypesResponse" name="getResultUsageTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateClu">
      <wsdl:input message="tns:updateClu" name="updateClu"></wsdl:input>
      <wsdl:output message="tns:updateCluResponse" name="updateCluResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCluLoRelation">
      <wsdl:input message="tns:validateCluLoRelation" name="validateCluLoRelation"></wsdl:input>
      <wsdl:output message="tns:validateCluLoRelationResponse" name="validateCluLoRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluResult">
      <wsdl:input message="tns:getCluResult" name="getCluResult"></wsdl:input>
      <wsdl:output message="tns:getCluResultResponse" name="getCluResultResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClusByRelation">
      <wsdl:input message="tns:getClusByRelation" name="getClusByRelation"></wsdl:input>
      <wsdl:output message="tns:getClusByRelationResponse" name="getClusByRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluSetIdsFromCluSet">
      <wsdl:input message="tns:getCluSetIdsFromCluSet" name="getCluSetIdsFromCluSet"></wsdl:input>
      <wsdl:output message="tns:getCluSetIdsFromCluSetResponse" name="getCluSetIdsFromCluSetResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteClu">
      <wsdl:input message="tns:deleteClu" name="deleteClu"></wsdl:input>
      <wsdl:output message="tns:deleteCluResponse" name="deleteCluResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DependentObjectsExistException" name="DependentObjectsExistException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createClu">
      <wsdl:input message="tns:createClu" name="createClu"></wsdl:input>
      <wsdl:output message="tns:createCluResponse" name="createCluResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluSetTypes">
      <wsdl:input message="tns:getCluSetTypes" name="getCluSetTypes"></wsdl:input>
      <wsdl:output message="tns:getCluSetTypesResponse" name="getCluSetTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <wsdl:input message="tns:getSearchTypesByResult" name="getSearchTypesByResult"></wsdl:input>
      <wsdl:output message="tns:getSearchTypesByResultResponse" name="getSearchTypesByResultResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluPublicationsByType">
      <wsdl:input message="tns:getCluPublicationsByType" name="getCluPublicationsByType"></wsdl:input>
      <wsdl:output message="tns:getCluPublicationsByTypeResponse" name="getCluPublicationsByTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluResultTypes">
      <wsdl:input message="tns:getCluResultTypes" name="getCluResultTypes"></wsdl:input>
      <wsdl:output message="tns:getCluResultTypesResponse" name="getCluResultTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCluSet">
      <wsdl:input message="tns:updateCluSet" name="updateCluSet"></wsdl:input>
      <wsdl:output message="tns:updateCluSetResponse" name="updateCluSetResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:UnsupportedActionException" name="UnsupportedActionException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:CircularRelationshipException" name="CircularRelationshipException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllClusInCluSet">
      <wsdl:input message="tns:getAllClusInCluSet" name="getAllClusInCluSet"></wsdl:input>
      <wsdl:output message="tns:getAllClusInCluSetResponse" name="getAllClusInCluSetResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCluLoRelation">
      <wsdl:input message="tns:deleteCluLoRelation" name="deleteCluLoRelation"></wsdl:input>
      <wsdl:output message="tns:deleteCluLoRelationResponse" name="deleteCluLoRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCluCluRelation">
      <wsdl:input message="tns:deleteCluCluRelation" name="deleteCluCluRelation"></wsdl:input>
      <wsdl:output message="tns:deleteCluCluRelationResponse" name="deleteCluCluRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuiIdsByCluId">
      <wsdl:input message="tns:getLuiIdsByCluId" name="getLuiIdsByCluId"></wsdl:input>
      <wsdl:output message="tns:getLuiIdsByCluIdResponse" name="getLuiIdsByCluIdResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLui">
      <wsdl:input message="tns:getLui" name="getLui"></wsdl:input>
      <wsdl:output message="tns:getLuiResponse" name="getLuiResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCluSet">
      <wsdl:input message="tns:createCluSet" name="createCluSet"></wsdl:input>
      <wsdl:output message="tns:createCluSetResponse" name="createCluSetResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClusFromCluSet">
      <wsdl:input message="tns:getClusFromCluSet" name="getClusFromCluSet"></wsdl:input>
      <wsdl:output message="tns:getClusFromCluSetResponse" name="getClusFromCluSetResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluResultType">
      <wsdl:input message="tns:getCluResultType" name="getCluResultType"></wsdl:input>
      <wsdl:output message="tns:getCluResultTypeResponse" name="getCluResultTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaTypes">
      <wsdl:input message="tns:getSearchCriteriaTypes" name="getSearchCriteriaTypes"></wsdl:input>
      <wsdl:output message="tns:getSearchCriteriaTypesResponse" name="getSearchCriteriaTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuPublicationType">
      <wsdl:input message="tns:getLuPublicationType" name="getLuPublicationType"></wsdl:input>
      <wsdl:output message="tns:getLuPublicationTypeResponse" name="getLuPublicationTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuiIdsByRelation">
      <wsdl:input message="tns:getLuiIdsByRelation" name="getLuiIdsByRelation"></wsdl:input>
      <wsdl:output message="tns:getLuiIdsByRelationResponse" name="getLuiIdsByRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCluCluRelation">
      <wsdl:input message="tns:validateCluCluRelation" name="validateCluCluRelation"></wsdl:input>
      <wsdl:output message="tns:validateCluCluRelationResponse" name="validateCluCluRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInstructionalFormatTypes">
      <wsdl:input message="tns:getInstructionalFormatTypes" name="getInstructionalFormatTypes"></wsdl:input>
      <wsdl:output message="tns:getInstructionalFormatTypesResponse" name="getInstructionalFormatTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateObject">
      <wsdl:input message="tns:validateObject" name="validateObject"></wsdl:input>
      <wsdl:output message="tns:validateObjectResponse" name="validateObjectResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateLuiState">
      <wsdl:input message="tns:updateLuiState" name="updateLuiState"></wsdl:input>
      <wsdl:output message="tns:updateLuiStateResponse" name="updateLuiStateResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <wsdl:input message="tns:getSearchCriteriaType" name="getSearchCriteriaType"></wsdl:input>
      <wsdl:output message="tns:getSearchCriteriaTypeResponse" name="getSearchCriteriaTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCluPublication">
      <wsdl:input message="tns:deleteCluPublication" name="deleteCluPublication"></wsdl:input>
      <wsdl:output message="tns:deleteCluPublicationResponse" name="deleteCluPublicationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DependentObjectsExistException" name="DependentObjectsExistException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCluLoRelation">
      <wsdl:input message="tns:createCluLoRelation" name="createCluLoRelation"></wsdl:input>
      <wsdl:output message="tns:createCluLoRelationResponse" name="createCluLoRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCluSetToCluSet">
      <wsdl:input message="tns:addCluSetToCluSet" name="addCluSetToCluSet"></wsdl:input>
      <wsdl:output message="tns:addCluSetToCluSetResponse" name="addCluSetToCluSetResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:UnsupportedActionException" name="UnsupportedActionException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:CircularRelationshipException" name="CircularRelationshipException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteLuiLuiRelation">
      <wsdl:input message="tns:deleteLuiLuiRelation" name="deleteLuiLuiRelation"></wsdl:input>
      <wsdl:output message="tns:deleteLuiLuiRelationResponse" name="deleteLuiLuiRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForResults">
      <wsdl:input message="tns:searchForResults" name="searchForResults"></wsdl:input>
      <wsdl:output message="tns:searchForResultsResponse" name="searchForResultsResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDeliveryMethodTypes">
      <wsdl:input message="tns:getDeliveryMethodTypes" name="getDeliveryMethodTypes"></wsdl:input>
      <wsdl:output message="tns:getDeliveryMethodTypesResponse" name="getDeliveryMethodTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuisByIdList">
      <wsdl:input message="tns:getLuisByIdList" name="getLuisByIdList"></wsdl:input>
      <wsdl:output message="tns:getLuisByIdListResponse" name="getLuisByIdListResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteLui">
      <wsdl:input message="tns:deleteLui" name="deleteLui"></wsdl:input>
      <wsdl:output message="tns:deleteLuiResponse" name="deleteLuiResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DependentObjectsExistException" name="DependentObjectsExistException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelatedCluIdsByCluId">
      <wsdl:input message="tns:getRelatedCluIdsByCluId" name="getRelatedCluIdsByCluId"></wsdl:input>
      <wsdl:output message="tns:getRelatedCluIdsByCluIdResponse" name="getRelatedCluIdsByCluIdResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuType">
      <wsdl:input message="tns:getLuType" name="getLuType"></wsdl:input>
      <wsdl:output message="tns:getLuTypeResponse" name="getLuTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelatedLuiIdsByLuiId">
      <wsdl:input message="tns:getRelatedLuiIdsByLuiId" name="getRelatedLuiIdsByLuiId"></wsdl:input>
      <wsdl:output message="tns:getRelatedLuiIdsByLuiIdResponse" name="getRelatedLuiIdsByLuiIdResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCluCluRelation">
      <wsdl:input message="tns:updateCluCluRelation" name="updateCluCluRelation"></wsdl:input>
      <wsdl:output message="tns:updateCluCluRelationResponse" name="updateCluCluRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeCluSetFromCluSet">
      <wsdl:input message="tns:removeCluSetFromCluSet" name="removeCluSetFromCluSet"></wsdl:input>
      <wsdl:output message="tns:removeCluSetFromCluSetResponse" name="removeCluSetFromCluSetResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:UnsupportedActionException" name="UnsupportedActionException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuisInAtpByCluId">
      <wsdl:input message="tns:getLuisInAtpByCluId" name="getLuisInAtpByCluId"></wsdl:input>
      <wsdl:output message="tns:getLuisInAtpByCluIdResponse" name="getLuisInAtpByCluIdResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCluPublication">
      <wsdl:input message="tns:updateCluPublication" name="updateCluPublication"></wsdl:input>
      <wsdl:output message="tns:updateCluPublicationResponse" name="updateCluPublicationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluSetInfoByIdList">
      <wsdl:input message="tns:getCluSetInfoByIdList" name="getCluSetInfoByIdList"></wsdl:input>
      <wsdl:output message="tns:getCluSetInfoByIdListResponse" name="getCluSetInfoByIdListResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCluToCluSet">
      <wsdl:input message="tns:addCluToCluSet" name="addCluToCluSet"></wsdl:input>
      <wsdl:output message="tns:addCluToCluSetResponse" name="addCluToCluSetResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:UnsupportedActionException" name="UnsupportedActionException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <wsdl:input message="tns:getSearchResultTypes" name="getSearchResultTypes"></wsdl:input>
      <wsdl:output message="tns:getSearchResultTypesResponse" name="getSearchResultTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluIdsByResultComponent">
      <wsdl:input message="tns:getCluIdsByResultComponent" name="getCluIdsByResultComponent"></wsdl:input>
      <wsdl:output message="tns:getCluIdsByResultComponentResponse" name="getCluIdsByResultComponentResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuPublicationTypesForLuType">
      <wsdl:input message="tns:getLuPublicationTypesForLuType" name="getLuPublicationTypesForLuType"></wsdl:input>
      <wsdl:output message="tns:getLuPublicationTypesForLuTypeResponse" name="getLuPublicationTypesForLuTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedLuLuRelationTypesByCluId">
      <wsdl:input message="tns:getAllowedLuLuRelationTypesByCluId" name="getAllowedLuLuRelationTypesByCluId"></wsdl:input>
      <wsdl:output message="tns:getAllowedLuLuRelationTypesByCluIdResponse" name="getAllowedLuLuRelationTypesByCluIdResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuLuRelationType">
      <wsdl:input message="tns:getLuLuRelationType" name="getLuLuRelationType"></wsdl:input>
      <wsdl:output message="tns:getLuLuRelationTypeResponse" name="getLuLuRelationTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluIdsByResultUsageType">
      <wsdl:input message="tns:getCluIdsByResultUsageType" name="getCluIdsByResultUsageType"></wsdl:input>
      <wsdl:output message="tns:getCluIdsByResultUsageTypeResponse" name="getCluIdsByResultUsageTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateStructureData">
      <wsdl:input message="tns:validateStructureData" name="validateStructureData"></wsdl:input>
      <wsdl:output message="tns:validateStructureDataResponse" name="validateStructureDataResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCluIdsByRelation">
      <wsdl:input message="tns:getCluIdsByRelation" name="getCluIdsByRelation"></wsdl:input>
      <wsdl:output message="tns:getCluIdsByRelationResponse" name="getCluIdsByRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluResultByClu">
      <wsdl:input message="tns:getCluResultByClu" name="getCluResultByClu"></wsdl:input>
      <wsdl:output message="tns:getCluResultByCluResponse" name="getCluResultByCluResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCluPublication">
      <wsdl:input message="tns:createCluPublication" name="createCluPublication"></wsdl:input>
      <wsdl:output message="tns:createCluPublicationResponse" name="createCluPublicationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCluSet">
      <wsdl:input message="tns:validateCluSet" name="validateCluSet"></wsdl:input>
      <wsdl:output message="tns:validateCluSetResponse" name="validateCluSetResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluLoRelationsByClu">
      <wsdl:input message="tns:getCluLoRelationsByClu" name="getCluLoRelationsByClu"></wsdl:input>
      <wsdl:output message="tns:getCluLoRelationsByCluResponse" name="getCluLoRelationsByCluResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedResultUsageTypesForLuType">
      <wsdl:input message="tns:getAllowedResultUsageTypesForLuType" name="getAllowedResultUsageTypesForLuType"></wsdl:input>
      <wsdl:output message="tns:getAllowedResultUsageTypesForLuTypeResponse" name="getAllowedResultUsageTypesForLuTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResultUsageType">
      <wsdl:input message="tns:getResultUsageType" name="getResultUsageType"></wsdl:input>
      <wsdl:output message="tns:getResultUsageTypeResponse" name="getResultUsageTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluSetInfo">
      <wsdl:input message="tns:getCluSetInfo" name="getCluSetInfo"></wsdl:input>
      <wsdl:output message="tns:getCluSetInfoResponse" name="getCluSetInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedLuLuRelationTypesByLuiId">
      <wsdl:input message="tns:getAllowedLuLuRelationTypesByLuiId" name="getAllowedLuLuRelationTypesByLuiId"></wsdl:input>
      <wsdl:output message="tns:getAllowedLuLuRelationTypesByLuiIdResponse" name="getAllowedLuLuRelationTypesByLuiIdResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDeliveryMethodType">
      <wsdl:input message="tns:getDeliveryMethodType" name="getDeliveryMethodType"></wsdl:input>
      <wsdl:output message="tns:getDeliveryMethodTypeResponse" name="getDeliveryMethodTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCluState">
      <wsdl:input message="tns:updateCluState" name="updateCluState"></wsdl:input>
      <wsdl:output message="tns:updateCluStateResponse" name="updateCluStateResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuLuRelationTypes">
      <wsdl:input message="tns:getLuLuRelationTypes" name="getLuLuRelationTypes"></wsdl:input>
      <wsdl:output message="tns:getLuLuRelationTypesResponse" name="getLuLuRelationTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateClu">
      <wsdl:input message="tns:validateClu" name="validateClu"></wsdl:input>
      <wsdl:output message="tns:validateCluResponse" name="validateCluResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClusByLuType">
      <wsdl:input message="tns:getClusByLuType" name="getClusByLuType"></wsdl:input>
      <wsdl:output message="tns:getClusByLuTypeResponse" name="getClusByLuTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="LuServiceSoapBinding" type="tns:LuService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getAllCluIdsInCluSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllCluIdsInCluSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllCluIdsInCluSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelatedClusByCluId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelatedClusByCluId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelatedClusByCluIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLuiLuiRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateLuiLuiRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateLuiLuiRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluLoRelationTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluLoRelationTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluLoRelationTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isCluInCluSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isCluInCluSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isCluInCluSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuiIdsInAtpByCluId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuiIdsInAtpByCluId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuiIdsInAtpByCluIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedCluLoRelationTypesForLuType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllowedCluLoRelationTypesForLuType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllowedCluLoRelationTypesForLuTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluPublication">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluPublication">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluPublicationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuPublicationTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuPublicationTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuPublicationTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createLuiLuiRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createLuiLuiRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createLuiLuiRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="CircularRelationshipException">
        <soap:fault name="CircularRelationshipException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluSetType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluSetType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluSetTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluPublicationsByCluId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluPublicationsByCluId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluPublicationsByCluIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCluCluRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createCluCluRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createCluCluRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="CircularRelationshipException">
        <soap:fault name="CircularRelationshipException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectStructure">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectStructure">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectStructureResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getClu">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getClu">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluIdsFromCluSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluIdsFromCluSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluIdsFromCluSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCluPublication">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateCluPublication">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateCluPublicationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCluResult">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateCluResult">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateCluResultResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedLuLuRelationTypesForLuType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllowedLuLuRelationTypesForLuType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllowedLuLuRelationTypesForLuTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCluResourceRequirement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addCluResourceRequirement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addCluResourceRequirementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluLoRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluLoRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluLoRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedResultComponentTypesForResultUsageType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllowedResultComponentTypesForResultUsageType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllowedResultComponentTypesForResultUsageTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluLoRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluLoRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluLoRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuCodeType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuCodeType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuCodeTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeCluResourceRequirement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeCluResourceRequirement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeCluResourceRequirementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCluResult">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createCluResult">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createCluResultResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluLoRelationsByLo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluLoRelationsByLo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluLoRelationsByLoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createLui">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createLui">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createLuiResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluCluRelationsByClu">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluCluRelationsByClu">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluCluRelationsByCluResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLui">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateLui">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateLuiResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClusByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getClusByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getClusByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuiLuiRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuiLuiRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuiLuiRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluResultTypesForLuType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluResultTypesForLuType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluResultTypesForLuTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluCluRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluCluRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluCluRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCluResult">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteCluResult">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteCluResultResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateLui">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateLui">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateLuiResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuisByRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuisByRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuisByRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuCodeTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuCodeTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuCodeTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateLuiLuiRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateLuiLuiRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateLuiLuiRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuiLuiRelationsByLui">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuiLuiRelationsByLui">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuiLuiRelationsByLuiResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelatedLuisByLuiId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelatedLuisByLuiId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelatedLuisByLuiIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResourceRequirementsForCluId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getResourceRequirementsForCluId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getResourceRequirementsForCluIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCluLoRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateCluLoRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateCluLoRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="search">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="search">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInstructionalFormatType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getInstructionalFormatType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getInstructionalFormatTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeCluFromCluSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeCluFromCluSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeCluFromCluSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnsupportedActionException">
        <soap:fault name="UnsupportedActionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCluResult">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateCluResult">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateCluResultResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCluSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteCluSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteCluSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluIdsByLuType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluIdsByLuType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluIdsByLuTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResultUsageTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getResultUsageTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getResultUsageTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByCriteria">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByCriteriaResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateClu">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateClu">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateCluResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCluLoRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateCluLoRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateCluLoRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClusByRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getClusByRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getClusByRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluResult">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluResult">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluResultResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteClu">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteClu">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteCluResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluSetIdsFromCluSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluSetIdsFromCluSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluSetIdsFromCluSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createClu">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createClu">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createCluResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluSetTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluSetTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluSetTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByResult">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByResultResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluPublicationsByType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluPublicationsByType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluPublicationsByTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluResultTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluResultTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluResultTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllClusInCluSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllClusInCluSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllClusInCluSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCluSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateCluSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateCluSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnsupportedActionException">
        <soap:fault name="UnsupportedActionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="CircularRelationshipException">
        <soap:fault name="CircularRelationshipException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCluCluRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteCluCluRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteCluCluRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCluLoRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteCluLoRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteCluLoRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuiIdsByCluId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuiIdsByCluId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuiIdsByCluIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCluSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createCluSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createCluSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLui">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLui">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuiResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClusFromCluSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getClusFromCluSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getClusFromCluSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluResultType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluResultType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluResultTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuPublicationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuPublicationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuPublicationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuiIdsByRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuiIdsByRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuiIdsByRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getInstructionalFormatTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getInstructionalFormatTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getInstructionalFormatTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCluCluRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateCluCluRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateCluCluRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateObject">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateObject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateObjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateLuiState">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateLuiState">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateLuiStateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCluLoRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createCluLoRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createCluLoRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteCluPublication">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteCluPublication">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteCluPublicationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCluSetToCluSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addCluSetToCluSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addCluSetToCluSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnsupportedActionException">
        <soap:fault name="UnsupportedActionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="CircularRelationshipException">
        <soap:fault name="CircularRelationshipException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteLuiLuiRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteLuiLuiRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteLuiLuiRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForResults">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForResults">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForResultsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDeliveryMethodTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDeliveryMethodTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDeliveryMethodTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuisByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuisByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuisByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteLui">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteLui">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteLuiResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelatedCluIdsByCluId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelatedCluIdsByCluId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelatedCluIdsByCluIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRelatedLuiIdsByLuiId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRelatedLuiIdsByLuiId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRelatedLuiIdsByLuiIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCluCluRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateCluCluRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateCluCluRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeCluSetFromCluSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeCluSetFromCluSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeCluSetFromCluSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnsupportedActionException">
        <soap:fault name="UnsupportedActionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuisInAtpByCluId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuisInAtpByCluId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuisInAtpByCluIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCluPublication">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateCluPublication">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateCluPublicationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluSetInfoByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluSetInfoByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluSetInfoByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addCluToCluSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addCluToCluSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addCluToCluSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UnsupportedActionException">
        <soap:fault name="UnsupportedActionException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluIdsByResultComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluIdsByResultComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluIdsByResultComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuPublicationTypesForLuType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuPublicationTypesForLuType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuPublicationTypesForLuTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedLuLuRelationTypesByCluId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllowedLuLuRelationTypesByCluId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllowedLuLuRelationTypesByCluIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuLuRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuLuRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuLuRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluIdsByResultUsageType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluIdsByResultUsageType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluIdsByResultUsageTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateStructureData">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateStructureData">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateStructureDataResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getCluIdsByRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluIdsByRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluIdsByRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluResultByClu">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluResultByClu">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluResultByCluResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCluPublication">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createCluPublication">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createCluPublicationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateCluSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateCluSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateCluSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluLoRelationsByClu">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluLoRelationsByClu">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluLoRelationsByCluResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedResultUsageTypesForLuType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllowedResultUsageTypesForLuType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllowedResultUsageTypesForLuTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedLuLuRelationTypesByLuiId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllowedLuLuRelationTypesByLuiId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllowedLuLuRelationTypesByLuiIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCluSetInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getCluSetInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCluSetInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResultUsageType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getResultUsageType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getResultUsageTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDeliveryMethodType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getDeliveryMethodType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDeliveryMethodTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLuLuRelationTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getLuLuRelationTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLuLuRelationTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateCluState">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateCluState">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateCluStateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateClu">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateClu">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateCluResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClusByLuType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getClusByLuType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getClusByLuTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="LuService">
    <wsdl:port binding="tns:LuServiceSoapBinding" name="LuServicePort">
      <soap:address location="http://localhost/ks-embedded/services/LuService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache>
  <con:endpoints>
    <con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint>
    <con:endpoint>https://test.kuali.org/ks-stg/services/LuService</con:endpoint>
    <con:endpoint>https://www.yahoo.com/foobar</con:endpoint>
  </con:endpoints>
<con:operation isOneWay="false" action="" name="addCluResourceRequirement" bindingOperationName="addCluResourceRequirement" type="Request-Response" outputName="addCluResourceRequirementResponse" inputName="addCluResourceRequirement" receivesAttachments="false" sendsAttachments="false" id="76e57808-ae0b-4974-8cea-479fc7d013aa"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="addCluSetToCluSet" bindingOperationName="addCluSetToCluSet" type="Request-Response" outputName="addCluSetToCluSetResponse" inputName="addCluSetToCluSet" receivesAttachments="false" sendsAttachments="false" id="fae8d77b-5c77-486a-9cb5-bc37282839fa"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="addCluToCluSet" bindingOperationName="addCluToCluSet" type="Request-Response" outputName="addCluToCluSetResponse" inputName="addCluToCluSet" receivesAttachments="false" sendsAttachments="false" id="9650a452-f48e-4c09-90fd-27daa6e2cc57"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="createClu" bindingOperationName="createClu" type="Request-Response" outputName="createCluResponse" inputName="createClu" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="a85e17bf-5635-4028-91d4-204c17af302f"><con:settings/><con:call name="createCreditCourse" id="611c9560-0da1-47e7-a6d1-ff00e0657c13" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createClu>
         <luTypeKey>kuali.lu.type.CreditCourse</luTypeKey>
           <cluInfo type="kuali.lu.type.CreditCourse" state="draft" id="">
            <officialIdentifier type="" state="" id="">
            </officialIdentifier>
            <academicSubjectOrgs>
               <orgId>51</orgId>
            </academicSubjectOrgs>
            <campusLocations>NorthCountyCampus</campusLocations>
            <campusLocations>SouthCountyCampus</campusLocations>
            <primaryAdminOrg>
               <orgId>51</orgId>
            </primaryAdminOrg>
         </cluInfo>
      </lu:createClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/createClu"/><con:wsrmConfig version="1.2"/></con:call><con:call name="createCreditCourseFormatShell"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://test.kuali.org/ks-stg/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createClu>
         <luTypeKey>kuali.lu.type.CreditCourseFormatShell</luTypeKey>
           <cluInfo type="kuali.lu.type.CreditCourseFormatShell" state="draft" id="">
         </cluInfo>
      </lu:createClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/createClu"/><con:wsrmConfig version="1.2"/></con:call><con:call name="createActivityLecture"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://test.kuali.org/ks-stg/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createClu>
         <luTypeKey>kuali.lu.type.activity.Lecture</luTypeKey>
         <cluInfo type="kuali.lu.type.activity.Lecture" state="draft" id="">
            <intensity>
               <unitType>atpType.duration.weekly</unitType>
               <unitQuantity>1</unitQuantity>
            </intensity>
            <stdDuration>
               <atpDurationTypeKey>atpType.duration.week</atpDurationTypeKey>
               <timeQuantity>1</timeQuantity>
            </stdDuration>
         </cluInfo>
      </lu:createClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/createClu"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Request 4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createClu>
         <!--Optional:-->
         <luTypeKey>?</luTypeKey>
         <!--Optional:-->
         <cluInfo type="?" state="?" id="?">
            <!--Optional:-->
            <officialIdentifier type="?" state="?" id="?">
               <!--Optional:-->
               <code>?</code>
               <!--Optional:-->
               <shortName>?</shortName>
               <!--Optional:-->
               <longName>?</longName>
               <!--Optional:-->
               <level>?</level>
               <!--Optional:-->
               <division>?</division>
               <!--Optional:-->
               <variation>?</variation>
               <!--Optional:-->
               <suffixCode>?</suffixCode>
               <!--Optional:-->
               <orgId>?</orgId>
            </officialIdentifier>
            <!--Zero or more repetitions:-->
            <alternateIdentifiers type="?" state="?" id="?">
               <!--Optional:-->
               <code>?</code>
               <!--Optional:-->
               <shortName>?</shortName>
               <!--Optional:-->
               <longName>?</longName>
               <!--Optional:-->
               <level>?</level>
               <!--Optional:-->
               <division>?</division>
               <!--Optional:-->
               <variation>?</variation>
               <!--Optional:-->
               <suffixCode>?</suffixCode>
               <!--Optional:-->
               <orgId>?</orgId>
            </alternateIdentifiers>
            <!--Zero or more repetitions:-->
            <academicSubjectOrgs>
               <!--Optional:-->
               <orgId>?</orgId>
            </academicSubjectOrgs>
            <!--Optional:-->
            <studySubjectArea>?</studySubjectArea>
            <!--Optional:-->
            <descr>
               <!--Optional:-->
               <plain>?</plain>
               <!--Optional:-->
               <formatted>?</formatted>
            </descr>
            <!--Zero or more repetitions:-->
            <campusLocations>?</campusLocations>
            <!--Zero or more repetitions:-->
            <accreditations>
               <attributes>
                  <!--Zero or more repetitions:-->
                  <entry>
                     <!--Optional:-->
                     <key>?</key>
                     <!--Optional:-->
                     <value>?</value>
                  </entry>
               </attributes>
               <!--Optional:-->
               <effectiveDate>?</effectiveDate>
               <!--Optional:-->
               <expirationDate>?</expirationDate>
               <!--Optional:-->
               <id>?</id>
               <!--Optional:-->
               <metaInfo>
                  <!--Optional:-->
                  <versionInd>?</versionInd>
                  <!--Optional:-->
                  <createTime>?</createTime>
                  <!--Optional:-->
                  <createId>?</createId>
                  <!--Optional:-->
                  <updateTime>?</updateTime>
                  <!--Optional:-->
                  <updateId>?</updateId>
               </metaInfo>
               <!--Optional:-->
               <orgId>?</orgId>
            </accreditations>
            <!--Optional:-->
            <primaryAdminOrg>
               <attributes>
                  <!--Zero or more repetitions:-->
                  <entry>
                     <!--Optional:-->
                     <key>?</key>
                     <!--Optional:-->
                     <value>?</value>
                  </entry>
               </attributes>
               <!--Optional:-->
               <id>?</id>
               <!--Optional:-->
               <orgId>?</orgId>
            </primaryAdminOrg>
            <!--Zero or more repetitions:-->
            <alternateAdminOrgs>
               <attributes>
                  <!--Zero or more repetitions:-->
                  <entry>
                     <!--Optional:-->
                     <key>?</key>
                     <!--Optional:-->
                     <value>?</value>
                  </entry>
               </attributes>
               <!--Optional:-->
               <id>?</id>
               <!--Optional:-->
               <orgId>?</orgId>
            </alternateAdminOrgs>
            <!--Optional:-->
            <primaryInstructor>
               <!--Optional:-->
               <orgId>?</orgId>
               <!--Optional:-->
               <personId>?</personId>
               <!--Optional:-->
               <attributes>
                  <!--Zero or more repetitions:-->
                  <attribute key="?">
                     <!--Optional:-->
                     <value>?</value>
                  </attribute>
               </attributes>
            </primaryInstructor>
            <!--Zero or more repetitions:-->
            <instructors>
               <!--Optional:-->
               <orgId>?</orgId>
               <!--Optional:-->
               <personId>?</personId>
               <!--Optional:-->
               <attributes>
                  <!--Zero or more repetitions:-->
                  <attribute key="?">
                     <!--Optional:-->
                     <value>?</value>
                  </attribute>
               </attributes>
            </instructors>
            <!--Optional:-->
            <expectedFirstAtp>?</expectedFirstAtp>
            <!--Optional:-->
            <effectiveDate>?</effectiveDate>
            <!--Optional:-->
            <expirationDate>?</expirationDate>
            <!--Optional:-->
            <intensity>
               <!--Optional:-->
               <unitType>?</unitType>
               <!--Optional:-->
               <unitQuantity>?</unitQuantity>
            </intensity>
            <!--Optional:-->
            <stdDuration>
               <!--Optional:-->
               <atpDurationTypeKey>?</atpDurationTypeKey>
               <!--Optional:-->
               <timeQuantity>?</timeQuantity>
            </stdDuration>
            <canCreateLui>?</canCreateLui>
            <!--Optional:-->
            <referenceURL>?</referenceURL>
            <!--Zero or more repetitions:-->
            <luCodes key="?">
               <!--Optional:-->
               <descr>?</descr>
               <!--Optional:-->
               <value>?</value>
               <!--Optional:-->
               <attributes>
                  <!--Zero or more repetitions:-->
                  <attribute key="?">
                     <!--Optional:-->
                     <value>?</value>
                  </attribute>
               </attributes>
               <!--Optional:-->
               <metaInfo>
                  <!--Optional:-->
                  <versionInd>?</versionInd>
                  <!--Optional:-->
                  <createTime>?</createTime>
                  <!--Optional:-->
                  <createId>?</createId>
                  <!--Optional:-->
                  <updateTime>?</updateTime>
                  <!--Optional:-->
                  <updateId>?</updateId>
               </metaInfo>
            </luCodes>
            <!--Optional:-->
            <nextReviewPeriod>?</nextReviewPeriod>
            <isEnrollable>?</isEnrollable>
            <!--Zero or more repetitions:-->
            <offeredAtpTypes>?</offeredAtpTypes>
            <hasEarlyDropDeadline>?</hasEarlyDropDeadline>
            <defaultEnrollmentEstimate>?</defaultEnrollmentEstimate>
            <defaultMaximumEnrollment>?</defaultMaximumEnrollment>
            <isHazardousForDisabledStudents>?</isHazardousForDisabledStudents>
            <!--Optional:-->
            <feeInfo id="?">
               <!--Zero or more repetitions:-->
               <cluFeeRecords id="?">
                  <!--Optional:-->
                  <feeType>?</feeType>
                  <!--Optional:-->
                  <feeAmount>
                     <!--Optional:-->
                     <currencyTypeKey>?</currencyTypeKey>
                     <!--Optional:-->
                     <currencyQuantity>?</currencyQuantity>
                  </feeAmount>
                  <!--Zero or more repetitions:-->
                  <affiliatedOrgInfoList id="?">
                     <!--Optional:-->
                     <orgId>?</orgId>
                     <!--Optional:-->
                     <effectiveDate>?</effectiveDate>
                     <!--Optional:-->
                     <expirationDate>?</expirationDate>
                     <!--Optional:-->
                     <percentage>?</percentage>
                  </affiliatedOrgInfoList>
                  <!--Optional:-->
                  <attributes>
                     <!--Zero or more repetitions:-->
                     <attribute key="?">
                        <!--Optional:-->
                        <value>?</value>
                     </attribute>
                  </attributes>
               </cluFeeRecords>
               <!--Optional:-->
               <attributes>
                  <!--Zero or more repetitions:-->
                  <attribute key="?">
                     <!--Optional:-->
                     <value>?</value>
                  </attribute>
               </attributes>
               <!--Optional:-->
               <metaInfo>
                  <!--Optional:-->
                  <versionInd>?</versionInd>
                  <!--Optional:-->
                  <createTime>?</createTime>
                  <!--Optional:-->
                  <createId>?</createId>
                  <!--Optional:-->
                  <updateTime>?</updateTime>
                  <!--Optional:-->
                  <updateId>?</updateId>
               </metaInfo>
            </feeInfo>
            <!--Optional:-->
            <accountingInfo id="?">
               <!--Zero or more repetitions:-->
               <affiliatedOrgs id="?">
                  <!--Optional:-->
                  <orgId>?</orgId>
                  <!--Optional:-->
                  <effectiveDate>?</effectiveDate>
                  <!--Optional:-->
                  <expirationDate>?</expirationDate>
                  <!--Optional:-->
                  <percentage>?</percentage>
               </affiliatedOrgs>
               <!--Optional:-->
               <attributes>
                  <!--Zero or more repetitions:-->
                  <attribute key="?">
                     <!--Optional:-->
                     <value>?</value>
                  </attribute>
               </attributes>
            </accountingInfo>
            <!--Optional:-->
            <attributes>
               <!--Zero or more repetitions:-->
               <attribute key="?">
                  <!--Optional:-->
                  <value>?</value>
               </attribute>
            </attributes>
            <!--Optional:-->
            <metaInfo>
               <!--Optional:-->
               <versionInd>?</versionInd>
               <!--Optional:-->
               <createTime>?</createTime>
               <!--Optional:-->
               <createId>?</createId>
               <!--Optional:-->
               <updateTime>?</updateTime>
               <!--Optional:-->
               <updateId>?</updateId>
            </metaInfo>
         </cluInfo>
      </lu:createClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/createClu"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="createCluCluRelation" bindingOperationName="createCluCluRelation" type="Request-Response" outputName="createCluCluRelationResponse" inputName="createCluCluRelation" receivesAttachments="false" sendsAttachments="false" id="0bf460ff-b6ad-4365-9108-fbbdc6d556c5" anonymous="optional"><con:settings/><con:call name="relateCreditCourseToCourseFormatShell"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createCluCluRelation>
         <cluId>012127c1-1975-4628-ad37-dcc1d7b75cae</cluId>
         <relatedCluId>01136167-f0c6-4ba1-81e5-ba081e6de16a</relatedCluId>
         <luLuRelationTypeKey>luLuRelationType.contains</luLuRelationTypeKey>
         <cluCluRelationInfo type="luLuRelationType.contains" state="Active" id="">
            <cluId>012127c1-1975-4628-ad37-dcc1d7b75cae</cluId>
            <relatedCluId>01136167-f0c6-4ba1-81e5-ba081e6de16a</relatedCluId>
         </cluCluRelationInfo>
      </lu:createCluCluRelation>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/createCluCluRelation"/><con:wsrmConfig version="1.2"/></con:call><con:call name="relateCourseFormatShellToActivityLecture"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createCluCluRelation>
         <cluId>cfea8159-0a2a-486d-82a4-80ffa7de096c</cluId>
         <relatedCluId>012127c1-1975-4628-ad37-dcc1d7b75cae</relatedCluId>
         <luLuRelationTypeKey>luLuRelationType.hasCourseFormat</luLuRelationTypeKey>
         <cluCluRelationInfo type="luLuRelationType.hasCourseFormat" state="Active" id="">
            <cluId>cfea8159-0a2a-486d-82a4-80ffa7de096c</cluId>
            <relatedCluId>012127c1-1975-4628-ad37-dcc1d7b75cae</relatedCluId>
         </cluCluRelationInfo>
      </lu:createCluCluRelation>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/createCluCluRelation"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="createCluLoRelation" bindingOperationName="createCluLoRelation" type="Request-Response" outputName="createCluLoRelationResponse" inputName="createCluLoRelation" receivesAttachments="false" sendsAttachments="false" id="dc79209a-ecfe-4a8d-9fed-22e914ec8e29"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="createCluPublication" bindingOperationName="createCluPublication" type="Request-Response" outputName="createCluPublicationResponse" inputName="createCluPublication" receivesAttachments="false" sendsAttachments="false" id="283b53d0-0e03-47e0-972e-e9e35e1b4e40"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="createCluResult" bindingOperationName="createCluResult" type="Request-Response" outputName="createCluResultResponse" inputName="createCluResult" receivesAttachments="false" sendsAttachments="false" id="15062ed0-6128-4465-9537-c57d35387055"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="createCluSet" bindingOperationName="createCluSet" type="Request-Response" outputName="createCluSetResponse" inputName="createCluSet" receivesAttachments="false" sendsAttachments="false" id="87a269c2-995e-4d1f-9fa5-15f523f7ed37"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="createLui" bindingOperationName="createLui" type="Request-Response" outputName="createLuiResponse" inputName="createLui" receivesAttachments="false" sendsAttachments="false" id="6be85e73-9d34-4068-9bb6-51940f76a377"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="createLuiLuiRelation" bindingOperationName="createLuiLuiRelation" type="Request-Response" outputName="createLuiLuiRelationResponse" inputName="createLuiLuiRelation" receivesAttachments="false" sendsAttachments="false" id="131b7696-19ad-4003-91d3-bc064f6f97fe"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="deleteClu" bindingOperationName="deleteClu" type="Request-Response" outputName="deleteCluResponse" inputName="deleteClu" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="201a7f94-c431-46cf-a22a-9ae4f2033ac9"><con:settings/><con:call name="deleteClu" id="3e7a1dc0-c3d1-402a-85a7-bcdad3c5d4e8" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:deleteClu>
        <cluId>78292d27-2399-492e-9ea6-877d09b6a61c</cluId>
      </lu:deleteClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/deleteClu"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="deleteCluCluRelation" bindingOperationName="deleteCluCluRelation" type="Request-Response" outputName="deleteCluCluRelationResponse" inputName="deleteCluCluRelation" receivesAttachments="false" sendsAttachments="false" id="42d22e12-1764-4f13-896f-eb0c2156ef41" anonymous="optional"><con:settings/><con:call name="deleteCluCluRelation"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:deleteCluCluRelation>
         <cluCluRelationId>aad9c380-93af-4c71-b05d-2c58405366d1</cluCluRelationId>
      </lu:deleteCluCluRelation>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/deleteCluCluRelation"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="deleteCluLoRelation" bindingOperationName="deleteCluLoRelation" type="Request-Response" outputName="deleteCluLoRelationResponse" inputName="deleteCluLoRelation" receivesAttachments="false" sendsAttachments="false" id="01467648-e847-4bd9-b927-3b55875405ba"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="deleteCluPublication" bindingOperationName="deleteCluPublication" type="Request-Response" outputName="deleteCluPublicationResponse" inputName="deleteCluPublication" receivesAttachments="false" sendsAttachments="false" id="fd115feb-d00a-48d0-a573-ce23013576fc"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="deleteCluResult" bindingOperationName="deleteCluResult" type="Request-Response" outputName="deleteCluResultResponse" inputName="deleteCluResult" receivesAttachments="false" sendsAttachments="false" id="eaa45326-087e-459a-8fdd-e70e342200a4"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="deleteCluSet" bindingOperationName="deleteCluSet" type="Request-Response" outputName="deleteCluSetResponse" inputName="deleteCluSet" receivesAttachments="false" sendsAttachments="false" id="619ea569-8490-46a8-9104-736e506c942d"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="deleteLui" bindingOperationName="deleteLui" type="Request-Response" outputName="deleteLuiResponse" inputName="deleteLui" receivesAttachments="false" sendsAttachments="false" id="2abc7c01-549c-4d85-a296-5ecef159de54"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="deleteLuiLuiRelation" bindingOperationName="deleteLuiLuiRelation" type="Request-Response" outputName="deleteLuiLuiRelationResponse" inputName="deleteLuiLuiRelation" receivesAttachments="false" sendsAttachments="false" id="3def44a1-2a37-4044-bbcc-207ac009e757"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getAllCluIdsInCluSet" bindingOperationName="getAllCluIdsInCluSet" type="Request-Response" outputName="getAllCluIdsInCluSetResponse" inputName="getAllCluIdsInCluSet" receivesAttachments="false" sendsAttachments="false" id="2776c2aa-bfde-4754-aae1-d83df20ecc4d"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getAllClusInCluSet" bindingOperationName="getAllClusInCluSet" type="Request-Response" outputName="getAllClusInCluSetResponse" inputName="getAllClusInCluSet" receivesAttachments="false" sendsAttachments="false" id="1261bcf6-b129-4f84-91fd-0b34f2719249"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getAllowedCluLoRelationTypesForLuType" bindingOperationName="getAllowedCluLoRelationTypesForLuType" type="Request-Response" outputName="getAllowedCluLoRelationTypesForLuTypeResponse" inputName="getAllowedCluLoRelationTypesForLuType" receivesAttachments="false" sendsAttachments="false" id="a8d06eae-d4b6-4b22-aedc-d3f10f50411a"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getAllowedLuLuRelationTypesByCluId" bindingOperationName="getAllowedLuLuRelationTypesByCluId" type="Request-Response" outputName="getAllowedLuLuRelationTypesByCluIdResponse" inputName="getAllowedLuLuRelationTypesByCluId" receivesAttachments="false" sendsAttachments="false" id="5a9196c7-9a93-4ab2-a250-889833afceb9"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getAllowedLuLuRelationTypesByLuiId" bindingOperationName="getAllowedLuLuRelationTypesByLuiId" type="Request-Response" outputName="getAllowedLuLuRelationTypesByLuiIdResponse" inputName="getAllowedLuLuRelationTypesByLuiId" receivesAttachments="false" sendsAttachments="false" id="141388ff-54a5-45bd-ba86-1d4def72848f"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getAllowedLuLuRelationTypesForLuType" bindingOperationName="getAllowedLuLuRelationTypesForLuType" type="Request-Response" outputName="getAllowedLuLuRelationTypesForLuTypeResponse" inputName="getAllowedLuLuRelationTypesForLuType" receivesAttachments="false" sendsAttachments="false" id="378fab8d-bd8f-4fc0-989e-c5be177f1faa"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getAllowedResultComponentTypesForResultUsageType" bindingOperationName="getAllowedResultComponentTypesForResultUsageType" type="Request-Response" outputName="getAllowedResultComponentTypesForResultUsageTypeResponse" inputName="getAllowedResultComponentTypesForResultUsageType" receivesAttachments="false" sendsAttachments="false" id="83d199d5-3302-41ad-b7d1-1f0d11dee03f"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getAllowedResultUsageTypesForLuType" bindingOperationName="getAllowedResultUsageTypesForLuType" type="Request-Response" outputName="getAllowedResultUsageTypesForLuTypeResponse" inputName="getAllowedResultUsageTypesForLuType" receivesAttachments="false" sendsAttachments="false" id="0af9376d-bf9d-4cff-b07e-541959675002"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getClu" bindingOperationName="getClu" type="Request-Response" outputName="getCluResponse" inputName="getClu" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="61b4bcf0-cc66-4a20-8dc1-2442d617fe18"><con:settings/><con:call name="getClu" id="9eee3df1-ef52-47dd-9858-692f776653f9" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:getClu>
      <cluId>bfc3a298-840c-48d2-9cc8-e11f31715f04</cluId></lu:getClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/getClu"/><con:wsrmConfig version="1.2"/></con:call><con:call name="getCreditCourse"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:getClu>
      <cluId>296fa070-46fa-42b8-b410-e1f1ee0b3f1f</cluId></lu:getClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/getClu"/><con:wsrmConfig version="1.2"/></con:call><con:call name="getCreditCourseFormatShell"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:getClu>
      <cluId>296fa070-46fa-42b8-b410-e1f1ee0b3f1f</cluId></lu:getClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/getClu"/><con:wsrmConfig version="1.2"/></con:call><con:call name="getActivityLecture"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:getClu>
      <cluId>296fa070-46fa-42b8-b410-e1f1ee0b3f1f</cluId></lu:getClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/getClu"/><con:wsrmConfig version="1.2"/></con:call><con:call name="getAdvancedAppliedLinearAlgebra"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:getClu>
      <cluId>00000000-a389-4fd0-b349-1e649c20fd08</cluId></lu:getClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/getClu"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCluCluRelation" bindingOperationName="getCluCluRelation" type="Request-Response" outputName="getCluCluRelationResponse" inputName="getCluCluRelation" receivesAttachments="false" sendsAttachments="false" id="e2c41311-4809-4d84-90a1-d8f0e3dae39e"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluCluRelationsByClu" bindingOperationName="getCluCluRelationsByClu" type="Request-Response" outputName="getCluCluRelationsByCluResponse" inputName="getCluCluRelationsByClu" receivesAttachments="false" sendsAttachments="false" id="eb8282f1-3fa0-4250-8f09-f1463187f3bc" anonymous="optional"><con:settings/><con:call name="getCreditCourseRelations"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:getCluCluRelationsByClu>
         
      <cluId>43656063-a0c7-48af-949d-2cb881ad8cb9</cluId></lu:getCluCluRelationsByClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/getCluCluRelationsByClu"/><con:wsrmConfig version="1.2"/></con:call><con:call name="getCreditCourseFormatShellRelations"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:getCluCluRelationsByClu>
         <cluId>4e06fa7c-f8db-4c00-824d-250031baf2da</cluId>
      </lu:getCluCluRelationsByClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/getCluCluRelationsByClu"/><con:wsrmConfig version="1.2"/></con:call><con:call name="getActivityLectureRelations"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:getCluCluRelationsByClu>
         <cluId>1aa51209-dad7-43bc-8c8d-b754c2a67a1f</cluId>
      </lu:getCluCluRelationsByClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/getCluCluRelationsByClu"/><con:wsrmConfig version="1.2"/></con:call><con:call name="getCluCluRelationsByClu"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:getCluCluRelationsByClu>
         
      <cluId>451ab5eb-f7bd-4dab-a8e0-f31aad0bd5aa</cluId></lu:getCluCluRelationsByClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/getCluCluRelationsByClu"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getCluIdsByLuType" bindingOperationName="getCluIdsByLuType" type="Request-Response" outputName="getCluIdsByLuTypeResponse" inputName="getCluIdsByLuType" receivesAttachments="false" sendsAttachments="false" id="70124534-4eb8-492a-a186-f7fed7b73aa1"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluIdsByRelation" bindingOperationName="getCluIdsByRelation" type="Request-Response" outputName="getCluIdsByRelationResponse" inputName="getCluIdsByRelation" receivesAttachments="false" sendsAttachments="false" id="54011893-a465-4a8e-8d7d-1a6bd6b22716"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluIdsByResultComponent" bindingOperationName="getCluIdsByResultComponent" type="Request-Response" outputName="getCluIdsByResultComponentResponse" inputName="getCluIdsByResultComponent" receivesAttachments="false" sendsAttachments="false" id="10c21034-64db-4bab-a082-9e6e694d92ee"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluIdsByResultUsageType" bindingOperationName="getCluIdsByResultUsageType" type="Request-Response" outputName="getCluIdsByResultUsageTypeResponse" inputName="getCluIdsByResultUsageType" receivesAttachments="false" sendsAttachments="false" id="3440609d-1b40-4aac-9e45-1cf660c95097"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluIdsFromCluSet" bindingOperationName="getCluIdsFromCluSet" type="Request-Response" outputName="getCluIdsFromCluSetResponse" inputName="getCluIdsFromCluSet" receivesAttachments="false" sendsAttachments="false" id="2c12c011-50ac-4828-b78d-32224112d692"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluLoRelation" bindingOperationName="getCluLoRelation" type="Request-Response" outputName="getCluLoRelationResponse" inputName="getCluLoRelation" receivesAttachments="false" sendsAttachments="false" id="39aa3149-bcca-4c0c-a144-65641a6d5ccc"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluLoRelationsByClu" bindingOperationName="getCluLoRelationsByClu" type="Request-Response" outputName="getCluLoRelationsByCluResponse" inputName="getCluLoRelationsByClu" receivesAttachments="false" sendsAttachments="false" id="dbe1e546-0d22-4611-92cd-52bc69f32991"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluLoRelationsByLo" bindingOperationName="getCluLoRelationsByLo" type="Request-Response" outputName="getCluLoRelationsByLoResponse" inputName="getCluLoRelationsByLo" receivesAttachments="false" sendsAttachments="false" id="472f4097-9a84-4514-9741-797403dbbe48"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluLoRelationType" bindingOperationName="getCluLoRelationType" type="Request-Response" outputName="getCluLoRelationTypeResponse" inputName="getCluLoRelationType" receivesAttachments="false" sendsAttachments="false" id="527e2f6e-927d-47fa-9ba8-01da19a4e286"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluLoRelationTypes" bindingOperationName="getCluLoRelationTypes" type="Request-Response" outputName="getCluLoRelationTypesResponse" inputName="getCluLoRelationTypes" receivesAttachments="false" sendsAttachments="false" id="542a8150-238e-4b18-acde-e69b942c10ee"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluPublication" bindingOperationName="getCluPublication" type="Request-Response" outputName="getCluPublicationResponse" inputName="getCluPublication" receivesAttachments="false" sendsAttachments="false" id="b76e479e-37d0-4f33-a779-6658b4eac3c0"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluPublicationsByCluId" bindingOperationName="getCluPublicationsByCluId" type="Request-Response" outputName="getCluPublicationsByCluIdResponse" inputName="getCluPublicationsByCluId" receivesAttachments="false" sendsAttachments="false" id="8d667b9c-6d3e-439e-9b4a-db63624d90f8"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluPublicationsByType" bindingOperationName="getCluPublicationsByType" type="Request-Response" outputName="getCluPublicationsByTypeResponse" inputName="getCluPublicationsByType" receivesAttachments="false" sendsAttachments="false" id="d3d4615b-91f6-4bff-84dd-b6bd163ce31b"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluResult" bindingOperationName="getCluResult" type="Request-Response" outputName="getCluResultResponse" inputName="getCluResult" receivesAttachments="false" sendsAttachments="false" id="8d926bed-886a-4f55-8d60-10366eecf135"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluResultByClu" bindingOperationName="getCluResultByClu" type="Request-Response" outputName="getCluResultByCluResponse" inputName="getCluResultByClu" receivesAttachments="false" sendsAttachments="false" id="f11377a1-a2e5-4bbf-863f-e1bb4b4687fe"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluResultType" bindingOperationName="getCluResultType" type="Request-Response" outputName="getCluResultTypeResponse" inputName="getCluResultType" receivesAttachments="false" sendsAttachments="false" id="75a8d38d-175e-4b8d-b809-b0b74621561a"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluResultTypes" bindingOperationName="getCluResultTypes" type="Request-Response" outputName="getCluResultTypesResponse" inputName="getCluResultTypes" receivesAttachments="false" sendsAttachments="false" id="fcea0f82-2169-46dc-92c3-cf86ac1b4c56"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluResultTypesForLuType" bindingOperationName="getCluResultTypesForLuType" type="Request-Response" outputName="getCluResultTypesForLuTypeResponse" inputName="getCluResultTypesForLuType" receivesAttachments="false" sendsAttachments="false" id="23aca856-6255-412c-83c2-e7323ec8d081"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getClusByIdList" bindingOperationName="getClusByIdList" type="Request-Response" outputName="getClusByIdListResponse" inputName="getClusByIdList" receivesAttachments="false" sendsAttachments="false" id="2d9a0636-85b1-4d12-977a-9d66ecb20e38"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getClusByLuType" bindingOperationName="getClusByLuType" type="Request-Response" outputName="getClusByLuTypeResponse" inputName="getClusByLuType" receivesAttachments="false" sendsAttachments="false" id="21daa690-ec64-402e-bf1f-a265b1b19b6a"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getClusByRelation" bindingOperationName="getClusByRelation" type="Request-Response" outputName="getClusByRelationResponse" inputName="getClusByRelation" receivesAttachments="false" sendsAttachments="false" id="b14bb20a-5d6a-4807-a9b2-f0b593455845"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluSetIdsFromCluSet" bindingOperationName="getCluSetIdsFromCluSet" type="Request-Response" outputName="getCluSetIdsFromCluSetResponse" inputName="getCluSetIdsFromCluSet" receivesAttachments="false" sendsAttachments="false" id="ffe128b6-70ce-494f-a827-3464fbb868d4"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluSetInfo" bindingOperationName="getCluSetInfo" type="Request-Response" outputName="getCluSetInfoResponse" inputName="getCluSetInfo" receivesAttachments="false" sendsAttachments="false" id="83035cc1-4192-4741-9647-e2a3338a8a27"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluSetInfoByIdList" bindingOperationName="getCluSetInfoByIdList" type="Request-Response" outputName="getCluSetInfoByIdListResponse" inputName="getCluSetInfoByIdList" receivesAttachments="false" sendsAttachments="false" id="9b318052-8c56-4d3a-b1d3-9ccaf7533314"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluSetType" bindingOperationName="getCluSetType" type="Request-Response" outputName="getCluSetTypeResponse" inputName="getCluSetType" receivesAttachments="false" sendsAttachments="false" id="540a3992-1f00-44c3-868a-e5b6c7f989b4"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getCluSetTypes" bindingOperationName="getCluSetTypes" type="Request-Response" outputName="getCluSetTypesResponse" inputName="getCluSetTypes" receivesAttachments="false" sendsAttachments="false" id="6426eef4-1ebb-47e7-b383-d78750e4a9bb"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getClusFromCluSet" bindingOperationName="getClusFromCluSet" type="Request-Response" outputName="getClusFromCluSetResponse" inputName="getClusFromCluSet" receivesAttachments="false" sendsAttachments="false" id="3e27fb33-fa4b-44b0-8515-9bc35a4e0b7d"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getDeliveryMethodType" bindingOperationName="getDeliveryMethodType" type="Request-Response" outputName="getDeliveryMethodTypeResponse" inputName="getDeliveryMethodType" receivesAttachments="false" sendsAttachments="false" id="5fb8d9b6-33ba-416e-a848-fc9af3157789"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getDeliveryMethodTypes" bindingOperationName="getDeliveryMethodTypes" type="Request-Response" outputName="getDeliveryMethodTypesResponse" inputName="getDeliveryMethodTypes" receivesAttachments="false" sendsAttachments="false" id="585a8483-21bf-4193-9fd7-403d3a95d5ad"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getInstructionalFormatType" bindingOperationName="getInstructionalFormatType" type="Request-Response" outputName="getInstructionalFormatTypeResponse" inputName="getInstructionalFormatType" receivesAttachments="false" sendsAttachments="false" id="3f23f431-d4a5-439a-ba10-79f12fb3840e"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getInstructionalFormatTypes" bindingOperationName="getInstructionalFormatTypes" type="Request-Response" outputName="getInstructionalFormatTypesResponse" inputName="getInstructionalFormatTypes" receivesAttachments="false" sendsAttachments="false" id="1d0f9e4d-ab67-4fd6-bf97-cc2dd3930813"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuCodeType" bindingOperationName="getLuCodeType" type="Request-Response" outputName="getLuCodeTypeResponse" inputName="getLuCodeType" receivesAttachments="false" sendsAttachments="false" id="c9d730e3-bfa2-4cb1-92d9-f5fdd0719b25"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuCodeTypes" bindingOperationName="getLuCodeTypes" type="Request-Response" outputName="getLuCodeTypesResponse" inputName="getLuCodeTypes" receivesAttachments="false" sendsAttachments="false" id="9ded4a6d-e792-4a62-8cd8-9947d34bcff0"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLui" bindingOperationName="getLui" type="Request-Response" outputName="getLuiResponse" inputName="getLui" receivesAttachments="false" sendsAttachments="false" id="e5b11360-2a5d-41eb-b270-8410ce679cfc"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuiIdsByCluId" bindingOperationName="getLuiIdsByCluId" type="Request-Response" outputName="getLuiIdsByCluIdResponse" inputName="getLuiIdsByCluId" receivesAttachments="false" sendsAttachments="false" id="293871f1-245f-4f18-bc36-e19729b850a2"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuiIdsByRelation" bindingOperationName="getLuiIdsByRelation" type="Request-Response" outputName="getLuiIdsByRelationResponse" inputName="getLuiIdsByRelation" receivesAttachments="false" sendsAttachments="false" id="acf6dce3-4f6b-447f-9b29-5b1827cc8e22"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuiIdsInAtpByCluId" bindingOperationName="getLuiIdsInAtpByCluId" type="Request-Response" outputName="getLuiIdsInAtpByCluIdResponse" inputName="getLuiIdsInAtpByCluId" receivesAttachments="false" sendsAttachments="false" id="85aa68d1-a101-40d3-bf32-ad6c93542d2b"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuiLuiRelation" bindingOperationName="getLuiLuiRelation" type="Request-Response" outputName="getLuiLuiRelationResponse" inputName="getLuiLuiRelation" receivesAttachments="false" sendsAttachments="false" id="14f22817-0e40-4b8b-871d-a94db96340d7"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuiLuiRelationsByLui" bindingOperationName="getLuiLuiRelationsByLui" type="Request-Response" outputName="getLuiLuiRelationsByLuiResponse" inputName="getLuiLuiRelationsByLui" receivesAttachments="false" sendsAttachments="false" id="e23a39eb-ddea-4e2f-bb50-e819ccae87ce"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuisByIdList" bindingOperationName="getLuisByIdList" type="Request-Response" outputName="getLuisByIdListResponse" inputName="getLuisByIdList" receivesAttachments="false" sendsAttachments="false" id="b8f4a3ca-591b-40aa-bf28-c976b62e2e56"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuisByRelation" bindingOperationName="getLuisByRelation" type="Request-Response" outputName="getLuisByRelationResponse" inputName="getLuisByRelation" receivesAttachments="false" sendsAttachments="false" id="ffaf9452-6b5d-489d-814c-3223e62bb5d0"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuisInAtpByCluId" bindingOperationName="getLuisInAtpByCluId" type="Request-Response" outputName="getLuisInAtpByCluIdResponse" inputName="getLuisInAtpByCluId" receivesAttachments="false" sendsAttachments="false" id="d20902aa-d1af-44d0-9adb-aff39f64a2dc"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuLuRelationType" bindingOperationName="getLuLuRelationType" type="Request-Response" outputName="getLuLuRelationTypeResponse" inputName="getLuLuRelationType" receivesAttachments="false" sendsAttachments="false" id="bcc2a6d5-ef77-486c-a007-e806c3d7a2e7"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuLuRelationTypes" bindingOperationName="getLuLuRelationTypes" type="Request-Response" outputName="getLuLuRelationTypesResponse" inputName="getLuLuRelationTypes" receivesAttachments="false" sendsAttachments="false" id="9b613d88-619f-47bf-af57-42ca3d2651b4"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuPublicationType" bindingOperationName="getLuPublicationType" type="Request-Response" outputName="getLuPublicationTypeResponse" inputName="getLuPublicationType" receivesAttachments="false" sendsAttachments="false" id="13668944-4497-4444-91c3-ff69d5134853"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuPublicationTypes" bindingOperationName="getLuPublicationTypes" type="Request-Response" outputName="getLuPublicationTypesResponse" inputName="getLuPublicationTypes" receivesAttachments="false" sendsAttachments="false" id="c8685701-9ba2-4b10-922d-a74e84701137"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuPublicationTypesForLuType" bindingOperationName="getLuPublicationTypesForLuType" type="Request-Response" outputName="getLuPublicationTypesForLuTypeResponse" inputName="getLuPublicationTypesForLuType" receivesAttachments="false" sendsAttachments="false" id="b13cb1a0-aa34-495d-a70e-2fadc6a64980"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuType" bindingOperationName="getLuType" type="Request-Response" outputName="getLuTypeResponse" inputName="getLuType" receivesAttachments="false" sendsAttachments="false" id="7ebc4bb3-6316-4194-8556-d0895c327818"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getLuTypes" bindingOperationName="getLuTypes" type="Request-Response" outputName="getLuTypesResponse" inputName="getLuTypes" receivesAttachments="false" sendsAttachments="false" id="70c94cba-a5d1-42a8-937f-5f5d50463da8" anonymous="optional"><con:settings/><con:call name="Request 1" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://test.kuali.org/ks-stg/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:getLuTypes/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/getLuTypes"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getObjectStructure" bindingOperationName="getObjectStructure" type="Request-Response" outputName="getObjectStructureResponse" inputName="getObjectStructure" receivesAttachments="false" sendsAttachments="false" id="26f261eb-b7de-4a66-8888-2511901e40b3"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getObjectTypes" bindingOperationName="getObjectTypes" type="Request-Response" outputName="getObjectTypesResponse" inputName="getObjectTypes" receivesAttachments="false" sendsAttachments="false" id="2c9d369f-7e60-4ceb-b1da-27d6787d045f"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getRelatedCluIdsByCluId" bindingOperationName="getRelatedCluIdsByCluId" type="Request-Response" outputName="getRelatedCluIdsByCluIdResponse" inputName="getRelatedCluIdsByCluId" receivesAttachments="false" sendsAttachments="false" id="7de0833c-9dc8-4fdd-ad16-71e917b9ebe5"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getRelatedClusByCluId" bindingOperationName="getRelatedClusByCluId" type="Request-Response" outputName="getRelatedClusByCluIdResponse" inputName="getRelatedClusByCluId" receivesAttachments="false" sendsAttachments="false" id="072d268a-44e4-41a6-8b4f-d34a42bcf87d"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getRelatedLuiIdsByLuiId" bindingOperationName="getRelatedLuiIdsByLuiId" type="Request-Response" outputName="getRelatedLuiIdsByLuiIdResponse" inputName="getRelatedLuiIdsByLuiId" receivesAttachments="false" sendsAttachments="false" id="38644599-ec05-4b7a-bf62-d4178d80b379"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getRelatedLuisByLuiId" bindingOperationName="getRelatedLuisByLuiId" type="Request-Response" outputName="getRelatedLuisByLuiIdResponse" inputName="getRelatedLuisByLuiId" receivesAttachments="false" sendsAttachments="false" id="fe9d484e-d50c-4502-92ae-39faaecf2509"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getResourceRequirementsForCluId" bindingOperationName="getResourceRequirementsForCluId" type="Request-Response" outputName="getResourceRequirementsForCluIdResponse" inputName="getResourceRequirementsForCluId" receivesAttachments="false" sendsAttachments="false" id="f0f8f87c-51f1-4f37-a520-f268ea1e1ba5"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getResultUsageType" bindingOperationName="getResultUsageType" type="Request-Response" outputName="getResultUsageTypeResponse" inputName="getResultUsageType" receivesAttachments="false" sendsAttachments="false" id="124051bb-f9f6-40c1-a7e2-42ada1a43bae"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getResultUsageTypes" bindingOperationName="getResultUsageTypes" type="Request-Response" outputName="getResultUsageTypesResponse" inputName="getResultUsageTypes" receivesAttachments="false" sendsAttachments="false" id="4f86de05-f89c-4f56-93ca-ae4060daa538"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchCriteriaType" bindingOperationName="getSearchCriteriaType" type="Request-Response" outputName="getSearchCriteriaTypeResponse" inputName="getSearchCriteriaType" receivesAttachments="false" sendsAttachments="false" id="6bba676e-50c4-4d91-b607-dc4fbeb39d4b"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchCriteriaTypes" bindingOperationName="getSearchCriteriaTypes" type="Request-Response" outputName="getSearchCriteriaTypesResponse" inputName="getSearchCriteriaTypes" receivesAttachments="false" sendsAttachments="false" id="48de5fc3-b797-44e8-91e9-3dc3ee0d38d7"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchResultType" bindingOperationName="getSearchResultType" type="Request-Response" outputName="getSearchResultTypeResponse" inputName="getSearchResultType" receivesAttachments="false" sendsAttachments="false" id="34987154-3206-46ac-bdff-cb98e8034dc7"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchResultTypes" bindingOperationName="getSearchResultTypes" type="Request-Response" outputName="getSearchResultTypesResponse" inputName="getSearchResultTypes" receivesAttachments="false" sendsAttachments="false" id="3a5b7b11-0a1a-48c2-ade2-065448d7588c"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchType" bindingOperationName="getSearchType" type="Request-Response" outputName="getSearchTypeResponse" inputName="getSearchType" receivesAttachments="false" sendsAttachments="false" id="c4e01024-ce67-443c-997b-2e760afe6b73"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchTypes" bindingOperationName="getSearchTypes" type="Request-Response" outputName="getSearchTypesResponse" inputName="getSearchTypes" receivesAttachments="false" sendsAttachments="false" id="564e055a-1c1a-46da-84a6-21e6c25ffc16"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchTypesByCriteria" bindingOperationName="getSearchTypesByCriteria" type="Request-Response" outputName="getSearchTypesByCriteriaResponse" inputName="getSearchTypesByCriteria" receivesAttachments="false" sendsAttachments="false" id="b6ec9036-9214-46d6-9ced-2bc9bbdb423f"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchTypesByResult" bindingOperationName="getSearchTypesByResult" type="Request-Response" outputName="getSearchTypesByResultResponse" inputName="getSearchTypesByResult" receivesAttachments="false" sendsAttachments="false" id="f7b77a7a-8546-4e6a-aec5-45a13f0854cd"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="isCluInCluSet" bindingOperationName="isCluInCluSet" type="Request-Response" outputName="isCluInCluSetResponse" inputName="isCluInCluSet" receivesAttachments="false" sendsAttachments="false" id="8977d1b3-6107-464f-856d-e79228bfce29"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="removeCluFromCluSet" bindingOperationName="removeCluFromCluSet" type="Request-Response" outputName="removeCluFromCluSetResponse" inputName="removeCluFromCluSet" receivesAttachments="false" sendsAttachments="false" id="6fca7856-0934-43b5-af0b-3a780d835b7b"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="removeCluResourceRequirement" bindingOperationName="removeCluResourceRequirement" type="Request-Response" outputName="removeCluResourceRequirementResponse" inputName="removeCluResourceRequirement" receivesAttachments="false" sendsAttachments="false" id="a3e1902b-8443-4a29-921e-0acd3b76228e"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="removeCluSetFromCluSet" bindingOperationName="removeCluSetFromCluSet" type="Request-Response" outputName="removeCluSetFromCluSetResponse" inputName="removeCluSetFromCluSet" receivesAttachments="false" sendsAttachments="false" id="9ea59d2c-5ddb-4b34-88ea-961c98f0684a"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="search" bindingOperationName="search" type="Request-Response" outputName="searchResponse" inputName="search" receivesAttachments="false" sendsAttachments="false" id="b324a4d9-ad48-41f1-8942-3c42de265015"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="searchForResults" bindingOperationName="searchForResults" type="Request-Response" outputName="searchForResultsResponse" inputName="searchForResults" receivesAttachments="false" sendsAttachments="false" id="286e7d42-9509-4e2e-9a46-2767fae0d2e7"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateClu" bindingOperationName="updateClu" type="Request-Response" outputName="updateCluResponse" inputName="updateClu" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="9cdde582-ec50-4a28-90cb-0bf8e4b71963"><con:settings/><con:call name="updateCreditCourseGovernance" id="e8302549-57c1-4c17-8697-1bdb631b851b" outgoingWss="" incomingWss=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:updateClu>
         <cluId>3f478675-f1f0-4a66-816b-395106021595</cluId>
         <cluInfo type="kuali.lu.type.CreditCourse" state="draft" id="3f478675-f1f0-4a66-816b-395106021595">
            <officialIdentifier id="eaf2a116-7090-4426-a104-f131aa4d3b0f">
            </officialIdentifier>
            <academicSubjectOrgs>
               <orgId>51</orgId>
            </academicSubjectOrgs>
            <campusLocations>NorthCountyCampus</campusLocations>
            <campusLocations>SouthCountyCampus</campusLocations>
            <primaryAdminOrg>
               <id>869d50fc-65b1-456f-99c3-cc5155773f69</id>
               <orgId>51</orgId>
            </primaryAdminOrg>
            <metaInfo>
               <versionInd>3</versionInd>
               <createTime>2010-03-09T19:43:59.780-07:00</createTime>
               <updateTime>2010-03-09T19:51:02.599-07:00</updateTime>
            </metaInfo>
         </cluInfo>
      </lu:updateClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/updateClu"/><con:wsrmConfig version="1.2"/></con:call><con:call name="updateCreditCourseCourseLogistics"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:updateClu>
         <cluId>f35df023-3acf-4f5b-b4da-385fa44ea2d2</cluId>
         <cluInfo type="kuali.lu.type.CreditCourse" state="draft" id="f35df023-3acf-4f5b-b4da-385fa44ea2d2">
            <officialIdentifier id="a0f9be6a-74a2-4867-ab83-cd55562ad27e">
            </officialIdentifier>
            <academicSubjectOrgs>
               <orgId>51</orgId>
            </academicSubjectOrgs>
            <campusLocations>NorthCountyCampus</campusLocations>
            <campusLocations>SouthCountyCampus</campusLocations>
            <primaryAdminOrg>
               <id>593955b7-c5f8-486e-83dc-9c87cee9821f</id>
               <orgId>51</orgId>
            </primaryAdminOrg>
            <primaryInstructor>
               <personId>edna</personId>
            </primaryInstructor>
            <expectedFirstAtp>kuali.atp.AY2008-2009</expectedFirstAtp>
            <stdDuration>
               <atpDurationTypeKey>atpType.duration.month</atpDurationTypeKey>
               <timeQuantity>1</timeQuantity>
            </stdDuration>
            <metaInfo>
               <versionInd>1</versionInd>
               <createTime>2010-03-09T19:43:59.780-07:00</createTime>
               <updateTime>2010-03-09T19:51:02.599-07:00</updateTime>
            </metaInfo>
         </cluInfo>
      </lu:updateClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/updateClu"/><con:wsrmConfig version="1.2"/></con:call><con:call name="updateCreditCourseCourseInformation"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:updateClu>
         <cluId>bfc3a298-840c-48d2-9cc8-e11f31715f04</cluId>
         <cluInfo type="kuali.lu.type.CreditCourse" state="draft" id="bfc3a298-840c-48d2-9cc8-e11f31715f04">
            <officialIdentifier id="7d410577-64a6-44bc-ae08-7bed44ad3aea">
               <code>nullnull</code>
               <shortName>Short Course Title</shortName>
               <longName>Course Title</longName>
               <division>ABCD</division>
               <suffixCode>123</suffixCode>
            </officialIdentifier>
            <alternateIdentifiers type="kuali.lu.type.CreditCourse.identifier.cross-listed">

               <division>DCBA</division>
               <suffixCode>321</suffixCode>
               <orgId>51</orgId>
            </alternateIdentifiers>
            <alternateIdentifiers type="kuali.lu.type.CreditCourse.identifier.version">

               <variation>A</variation>
               <longName>Version Code Title</longName>
            </alternateIdentifiers>
            <academicSubjectOrgs>
               <orgId>51</orgId>
            </academicSubjectOrgs>
            <descr>
               <plain>Course Description</plain>
            </descr>
            <campusLocations>NorthCountyCampus</campusLocations>
            <campusLocations>SouthCountyCampus</campusLocations>
            <primaryAdminOrg>

               <id>4580f068-e337-443d-bd6c-f70b8adbe868</id>
               <orgId>51</orgId>
            </primaryAdminOrg>
            <primaryInstructor>
               <personId>earl</personId>

            </primaryInstructor>
            <expectedFirstAtp>kuali.atp.AY2008-2009</expectedFirstAtp>
            <effectiveDate>2020-03-09T19:43:59.780-07:00</effectiveDate>
            <expirationDate>2021-03-09T19:43:59.780-07:00</expirationDate>
            <stdDuration>
               <atpDurationTypeKey>atpType.duration.week</atpDurationTypeKey>
               <timeQuantity>1</timeQuantity>
            </stdDuration>







            <metaInfo>
               <versionInd>1</versionInd>
               <createTime>2010-03-19T10:29:02.393-07:00</createTime>
               <updateTime>2010-03-19T10:44:28.276-07:00</updateTime>
            </metaInfo>
         </cluInfo>
      </lu:updateClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/updateClu"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="updateCluCluRelation" bindingOperationName="updateCluCluRelation" type="Request-Response" outputName="updateCluCluRelationResponse" inputName="updateCluCluRelation" receivesAttachments="false" sendsAttachments="false" id="68794c81-e5e4-4ef9-9064-24bee827020f"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateCluLoRelation" bindingOperationName="updateCluLoRelation" type="Request-Response" outputName="updateCluLoRelationResponse" inputName="updateCluLoRelation" receivesAttachments="false" sendsAttachments="false" id="4dc23f60-1e6e-4e59-8a53-220c25df0678"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateCluPublication" bindingOperationName="updateCluPublication" type="Request-Response" outputName="updateCluPublicationResponse" inputName="updateCluPublication" receivesAttachments="false" sendsAttachments="false" id="56f3ee25-b22e-4eba-947f-d7f64798c34a"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateCluResult" bindingOperationName="updateCluResult" type="Request-Response" outputName="updateCluResultResponse" inputName="updateCluResult" receivesAttachments="false" sendsAttachments="false" id="a97e1806-19ab-4cb3-a727-50c2ee37641c"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateCluSet" bindingOperationName="updateCluSet" type="Request-Response" outputName="updateCluSetResponse" inputName="updateCluSet" receivesAttachments="false" sendsAttachments="false" id="7e1b9c57-c8fb-4364-8c3d-04f91d8720e6"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateCluState" bindingOperationName="updateCluState" type="Request-Response" outputName="updateCluStateResponse" inputName="updateCluState" receivesAttachments="false" sendsAttachments="false" id="bbf3fbda-fc95-4915-aebe-8fc3c59764ac"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateLui" bindingOperationName="updateLui" type="Request-Response" outputName="updateLuiResponse" inputName="updateLui" receivesAttachments="false" sendsAttachments="false" id="277b7558-4e4f-45b9-a111-324d4ead340b"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateLuiLuiRelation" bindingOperationName="updateLuiLuiRelation" type="Request-Response" outputName="updateLuiLuiRelationResponse" inputName="updateLuiLuiRelation" receivesAttachments="false" sendsAttachments="false" id="908bca9b-1514-4c5d-8437-d42a8e6efd73"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateLuiState" bindingOperationName="updateLuiState" type="Request-Response" outputName="updateLuiStateResponse" inputName="updateLuiState" receivesAttachments="false" sendsAttachments="false" id="b5b13b25-2972-4162-81da-864b856d37fd"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateClu" bindingOperationName="validateClu" type="Request-Response" outputName="validateCluResponse" inputName="validateClu" receivesAttachments="false" sendsAttachments="false" id="19ffda71-2c2c-40b6-86b9-882a133bb78d"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateCluCluRelation" bindingOperationName="validateCluCluRelation" type="Request-Response" outputName="validateCluCluRelationResponse" inputName="validateCluCluRelation" receivesAttachments="false" sendsAttachments="false" id="6053db9f-22c5-44b4-9952-459683205829"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateCluLoRelation" bindingOperationName="validateCluLoRelation" type="Request-Response" outputName="validateCluLoRelationResponse" inputName="validateCluLoRelation" receivesAttachments="false" sendsAttachments="false" id="5d7876c6-228d-44b3-a0e3-992c6795f895"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateCluPublication" bindingOperationName="validateCluPublication" type="Request-Response" outputName="validateCluPublicationResponse" inputName="validateCluPublication" receivesAttachments="false" sendsAttachments="false" id="6cce23dc-d0e5-4730-a843-891ca9018453"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateCluResult" bindingOperationName="validateCluResult" type="Request-Response" outputName="validateCluResultResponse" inputName="validateCluResult" receivesAttachments="false" sendsAttachments="false" id="7f6228a3-a318-41f6-82c7-dfa0e70e30b2"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateCluSet" bindingOperationName="validateCluSet" type="Request-Response" outputName="validateCluSetResponse" inputName="validateCluSet" receivesAttachments="false" sendsAttachments="false" id="d9324163-4888-4c8e-94e0-c27f14137239"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateLui" bindingOperationName="validateLui" type="Request-Response" outputName="validateLuiResponse" inputName="validateLui" receivesAttachments="false" sendsAttachments="false" id="6e2b4310-18d5-4bd7-b054-a8c5540f3f54"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateLuiLuiRelation" bindingOperationName="validateLuiLuiRelation" type="Request-Response" outputName="validateLuiLuiRelationResponse" inputName="validateLuiLuiRelation" receivesAttachments="false" sendsAttachments="false" id="2f057f1e-9cb9-4b1f-bbbe-1a088feb38b5"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateObject" bindingOperationName="validateObject" type="Request-Response" outputName="validateObjectResponse" inputName="validateObject" receivesAttachments="false" sendsAttachments="false" id="01009e27-cf21-4632-814a-688cd696757c"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateStructureData" bindingOperationName="validateStructureData" type="Request-Response" outputName="validateStructureDataResponse" inputName="validateStructureData" receivesAttachments="false" sendsAttachments="false" id="3a11e3b2-1688-4e6a-b254-577f955ff781"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="ProposalServiceSoapBinding" type="wsdl" bindingName="{http://student.kuali.org/wsdl/proposal}ProposalServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost/ks-embedded/services/ProposalService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost/ks-embedded/services/ProposalService?wsdl"><con:part><con:url>http://localhost/ks-embedded/services/ProposalService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="ProposalService" targetNamespace="http://student.kuali.org/wsdl/proposal" xmlns:ns1="http://cxf.apache.org/bindings/xformat" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://student.kuali.org/wsdl/proposal" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/exceptions" xmlns:tns="http://student.kuali.org/wsdl/exceptions" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
      <xs:element name="DataValidationErrorException" type="tns:DataValidationErrorException"/>
      <xs:element name="DependentObjectsExistException" type="tns:DependentObjectsExistException"/>
      <xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
      <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
      <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
      <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
      <xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
      <xs:element name="VersionMismatchException" type="tns:VersionMismatchException"/>
      <xs:complexType name="MissingParameterException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DoesNotExistException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InvalidParameterException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OperationFailedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PermissionDeniedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DataValidationErrorException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AlreadyExistsException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DependentObjectsExistException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VersionMismatchException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/search" xmlns:ns1="http://student.kuali.org/wsdl/dictionary" xmlns:tns="http://student.kuali.org/wsdl/search" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://student.kuali.org/wsdl/dictionary"/>
      <xs:element name="getSearchCriteriaType" type="tns:getSearchCriteriaType"/>
      <xs:element name="getSearchCriteriaTypeResponse" type="tns:getSearchCriteriaTypeResponse"/>
      <xs:element name="getSearchCriteriaTypes" type="tns:getSearchCriteriaTypes"/>
      <xs:element name="getSearchCriteriaTypesResponse" type="tns:getSearchCriteriaTypesResponse"/>
      <xs:element name="getSearchResultType" type="tns:getSearchResultType"/>
      <xs:element name="getSearchResultTypeResponse" type="tns:getSearchResultTypeResponse"/>
      <xs:element name="getSearchResultTypes" type="tns:getSearchResultTypes"/>
      <xs:element name="getSearchResultTypesResponse" type="tns:getSearchResultTypesResponse"/>
      <xs:element name="getSearchType" type="tns:getSearchType"/>
      <xs:element name="getSearchTypeResponse" type="tns:getSearchTypeResponse"/>
      <xs:element name="getSearchTypes" type="tns:getSearchTypes"/>
      <xs:element name="getSearchTypesByCriteria" type="tns:getSearchTypesByCriteria"/>
      <xs:element name="getSearchTypesByCriteriaResponse" type="tns:getSearchTypesByCriteriaResponse"/>
      <xs:element name="getSearchTypesByResult" type="tns:getSearchTypesByResult"/>
      <xs:element name="getSearchTypesByResultResponse" type="tns:getSearchTypesByResultResponse"/>
      <xs:element name="getSearchTypesResponse" type="tns:getSearchTypesResponse"/>
      <xs:element name="searchForResults" type="tns:searchForResults"/>
      <xs:element name="searchForResultsResponse" type="tns:searchForResultsResponse"/>
      <xs:complexType name="getSearchCriteriaType">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchCriteriaTypeResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchCriteriaTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="queryParams">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="queryParam" type="tns:queryParamInfo"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="queryParamInfo">
        <xs:sequence>
          <xs:element minOccurs="0" ref="ns1:fieldDescriptor"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
        <xs:attribute name="optional" type="xs:boolean" use="required"/>
      </xs:complexType>
      <xs:complexType name="getSearchResultTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getSearchResultTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResultTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="resultColumns">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="resultColumn" type="tns:resultColumnInfo"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="resultColumnInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="dataType" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getSearchTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getSearchTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="searchResultTypeInfo" type="tns:searchResultTypeInfo"/>
          <xs:element minOccurs="0" name="searchCriteriaTypeInfo" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchForResults">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchTypeKey" type="xs:string"/>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="queryParamValues" type="tns:queryParamValue"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="queryParamValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="listValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchForResultsResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:result"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="result">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="resultCells" type="tns:resultCell"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resultCell">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getSearchCriteriaTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getSearchCriteriaTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByResult">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByResultResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchResultType">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchResultTypeResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="searchKey" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="params" nillable="true" type="tns:searchParam"/>
          <xs:element minOccurs="0" name="sortColumn" type="xs:string"/>
          <xs:element minOccurs="0" name="sortDirection" type="tns:sortDirection"/>
          <xs:element minOccurs="0" name="startAt" type="xs:int"/>
          <xs:element minOccurs="0" name="maxResults" type="xs:int"/>
          <xs:element minOccurs="0" name="neededTotalResults" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchParam">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="listValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="startAt" type="xs:int"/>
          <xs:element minOccurs="0" name="totalResults" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="rows" nillable="true" type="tns:searchResultRow"/>
          <xs:element minOccurs="0" name="sortColumn" type="xs:string"/>
          <xs:element minOccurs="0" name="sortDirection" type="tns:sortDirection"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResultRow">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="cells" nillable="true" type="tns:searchResultCell"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResultCell">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element minOccurs="0" name="key" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchType">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypeResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByCriteria">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByCriteriaResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchRelationship">
        <xs:sequence>
          <xs:element minOccurs="0" name="lhs" type="tns:typeAttribute"/>
          <xs:element minOccurs="0" name="rhs" type="tns:typeAttribute"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="typeAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="parentType" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="alias" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="sortDirection">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ASC"/>
          <xs:enumeration value="DESC"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/proposal" xmlns:ns0="http://student.kuali.org/wsdl/exceptions" xmlns:ns1="http://student.kuali.org/wsdl/search" xmlns:ns2="http://student.kuali.org/wsdl/dictionary" xmlns:ns3="http://student.kuali.org/wsdl/organization" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="createProposal" type="tns:createProposal"/>
      <xs:element name="createProposalDocRelation" type="tns:createProposalDocRelation"/>
      <xs:element name="createProposalDocRelationResponse" type="tns:createProposalDocRelationResponse"/>
      <xs:element name="createProposalResponse" type="tns:createProposalResponse"/>
      <xs:element name="deleteProposal" type="tns:deleteProposal"/>
      <xs:element name="deleteProposalDocRelation" type="tns:deleteProposalDocRelation"/>
      <xs:element name="deleteProposalDocRelationResponse" type="tns:deleteProposalDocRelationResponse"/>
      <xs:element name="deleteProposalResponse" type="tns:deleteProposalResponse"/>
      <xs:element name="getAllowedProposalDocRelationTypesForProposalType" type="tns:getAllowedProposalDocRelationTypesForProposalType"/>
      <xs:element name="getAllowedProposalDocRelationTypesForProposalTypeResponse" type="tns:getAllowedProposalDocRelationTypesForProposalTypeResponse"/>
      <xs:element name="getProposal" type="tns:getProposal"/>
      <xs:element name="getProposalDocRelation" type="tns:getProposalDocRelation"/>
      <xs:element name="getProposalDocRelationResponse" type="tns:getProposalDocRelationResponse"/>
      <xs:element name="getProposalDocRelationType" type="tns:getProposalDocRelationType"/>
      <xs:element name="getProposalDocRelationTypeResponse" type="tns:getProposalDocRelationTypeResponse"/>
      <xs:element name="getProposalDocRelationTypes" type="tns:getProposalDocRelationTypes"/>
      <xs:element name="getProposalDocRelationTypesResponse" type="tns:getProposalDocRelationTypesResponse"/>
      <xs:element name="getProposalDocRelationsByDocument" type="tns:getProposalDocRelationsByDocument"/>
      <xs:element name="getProposalDocRelationsByDocumentResponse" type="tns:getProposalDocRelationsByDocumentResponse"/>
      <xs:element name="getProposalDocRelationsByIdList" type="tns:getProposalDocRelationsByIdList"/>
      <xs:element name="getProposalDocRelationsByIdListResponse" type="tns:getProposalDocRelationsByIdListResponse"/>
      <xs:element name="getProposalDocRelationsByProposal" type="tns:getProposalDocRelationsByProposal"/>
      <xs:element name="getProposalDocRelationsByProposalResponse" type="tns:getProposalDocRelationsByProposalResponse"/>
      <xs:element name="getProposalDocRelationsByType" type="tns:getProposalDocRelationsByType"/>
      <xs:element name="getProposalDocRelationsByTypeResponse" type="tns:getProposalDocRelationsByTypeResponse"/>
      <xs:element name="getProposalResponse" type="tns:getProposalResponse"/>
      <xs:element name="getProposalType" type="tns:getProposalType"/>
      <xs:element name="getProposalTypeResponse" type="tns:getProposalTypeResponse"/>
      <xs:element name="getProposalTypes" type="tns:getProposalTypes"/>
      <xs:element name="getProposalTypesForReferenceType" type="tns:getProposalTypesForReferenceType"/>
      <xs:element name="getProposalTypesForReferenceTypeResponse" type="tns:getProposalTypesForReferenceTypeResponse"/>
      <xs:element name="getProposalTypesResponse" type="tns:getProposalTypesResponse"/>
      <xs:element name="getProposalsByIdList" type="tns:getProposalsByIdList"/>
      <xs:element name="getProposalsByIdListResponse" type="tns:getProposalsByIdListResponse"/>
      <xs:element name="getProposalsByProposalType" type="tns:getProposalsByProposalType"/>
      <xs:element name="getProposalsByProposalTypeResponse" type="tns:getProposalsByProposalTypeResponse"/>
      <xs:element name="getProposalsByReference" type="tns:getProposalsByReference"/>
      <xs:element name="getProposalsByReferenceResponse" type="tns:getProposalsByReferenceResponse"/>
      <xs:element name="getProposalsByState" type="tns:getProposalsByState"/>
      <xs:element name="getProposalsByStateResponse" type="tns:getProposalsByStateResponse"/>
      <xs:element name="getReferenceTypes" type="tns:getReferenceTypes"/>
      <xs:element name="getReferenceTypesResponse" type="tns:getReferenceTypesResponse"/>
      <xs:element name="updateProposal" type="tns:updateProposal"/>
      <xs:element name="updateProposalDocRelation" type="tns:updateProposalDocRelation"/>
      <xs:element name="updateProposalDocRelationResponse" type="tns:updateProposalDocRelationResponse"/>
      <xs:element name="updateProposalResponse" type="tns:updateProposalResponse"/>
      <xs:element name="validateProposal" type="tns:validateProposal"/>
      <xs:element name="validateProposalDocRelation" type="tns:validateProposalDocRelation"/>
      <xs:element name="validateProposalDocRelationResponse" type="tns:validateProposalDocRelationResponse"/>
      <xs:element name="validateProposalResponse" type="tns:validateProposalResponse"/>
      <xs:complexType name="getProposalDocRelationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalDocRelationTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalDocRelationTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:proposalDocRelationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="proposalDocRelationTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Attribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getProposalTypesForReferenceType">
        <xs:sequence>
          <xs:element minOccurs="0" name="referenceTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalTypesForReferenceTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createProposalDocRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalDocRelationType" type="xs:string"/>
          <xs:element minOccurs="0" name="documentId" type="xs:string"/>
          <xs:element minOccurs="0" name="proposalId" type="xs:string"/>
          <xs:element minOccurs="0" name="proposalDocRelationInfo" type="tns:proposalDocRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="proposalDocRelationInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalId" type="xs:string"/>
          <xs:element minOccurs="0" name="documentId" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="tns:richTextInfo"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="richTextInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="plain" type="xs:string"/>
          <xs:element minOccurs="0" name="formatted" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="metaInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="versionInd" type="xs:string"/>
          <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="createId" type="xs:string"/>
          <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="updateId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createProposalDocRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:proposalDocRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalDocRelationTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getProposalDocRelationTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalsByState">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalState" type="xs:string"/>
          <xs:element minOccurs="0" name="proposalTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalsByStateResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalsByIdList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="proposalIdList" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalsByIdListResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposal">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:proposalInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="proposalInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="proposerPerson" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="proposerOrg" type="xs:string"/>
          <xs:element minOccurs="0" name="proposalReferenceType" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="proposalReference" type="xs:string"/>
          <xs:element minOccurs="0" name="rationale" type="xs:string"/>
          <xs:element minOccurs="0" name="detailDesc" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getProposalTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getProposalTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createProposal">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="proposalInfo" type="tns:proposalInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createProposalResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:proposalInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllowedProposalDocRelationTypesForProposalType">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllowedProposalDocRelationTypesForProposalTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalDocRelationsByDocument">
        <xs:sequence>
          <xs:element minOccurs="0" name="documentId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalDocRelationsByDocumentResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalDocRelationsByProposal">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalDocRelationsByProposalResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateProposalDocRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="proposalDocRelationInfo" type="tns:proposalDocRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateProposalDocRelationResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalDocRelationsByType">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalDocRelationTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalDocRelationsByTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteProposal">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteProposalResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="statusInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="success" type="xs:boolean"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateProposalDocRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalDocRelationId" type="xs:string"/>
          <xs:element minOccurs="0" name="proposalDocRelationInfo" type="tns:proposalDocRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateProposalDocRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:proposalDocRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalDocRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalDocRelationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalDocRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:proposalDocRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalsByProposalType">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalsByProposalTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateProposal">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="proposalInfo" type="tns:proposalInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateProposalResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateProposal">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalId" type="xs:string"/>
          <xs:element minOccurs="0" name="proposalInfo" type="tns:proposalInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateProposalResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:proposalInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalDocRelationsByIdList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="proposalDocRelationIdList" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalDocRelationsByIdListResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalType">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:proposalTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="proposalTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getReferenceTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getReferenceTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalsByReference">
        <xs:sequence>
          <xs:element minOccurs="0" name="referenceTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="referenceId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getProposalsByReferenceResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteProposalDocRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="proposalDocRelationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteProposalDocRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="referenceTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:element name="MissingParameterException" nillable="true" type="ns0:MissingParameterException"/>
      <xs:element name="DoesNotExistException" nillable="true" type="ns0:DoesNotExistException"/>
      <xs:element name="InvalidParameterException" nillable="true" type="ns0:InvalidParameterException"/>
      <xs:element name="OperationFailedException" nillable="true" type="ns0:OperationFailedException"/>
      <xs:element name="getSearchCriteriaType" nillable="true" type="ns1:getSearchCriteriaType"/>
      <xs:element name="getSearchCriteriaTypeResponse" nillable="true" type="ns1:getSearchCriteriaTypeResponse"/>
      <xs:element name="PermissionDeniedException" nillable="true" type="ns0:PermissionDeniedException"/>
      <xs:element name="DataValidationErrorException" nillable="true" type="ns0:DataValidationErrorException"/>
      <xs:element name="AlreadyExistsException" nillable="true" type="ns0:AlreadyExistsException"/>
      <xs:element name="getSearchResultTypes" nillable="true" type="ns1:getSearchResultTypes"/>
      <xs:element name="getSearchResultTypesResponse" nillable="true" type="ns1:getSearchResultTypesResponse"/>
      <xs:element name="getSearchTypes" nillable="true" type="ns1:getSearchTypes"/>
      <xs:element name="getSearchTypesResponse" nillable="true" type="ns1:getSearchTypesResponse"/>
      <xs:element name="validateStructureData" nillable="true" type="ns2:validateStructureData"/>
      <xs:element name="validateStructureDataResponse" nillable="true" type="ns2:validateStructureDataResponse"/>
      <xs:element name="searchForResults" nillable="true" type="ns1:searchForResults"/>
      <xs:element name="searchForResultsResponse" nillable="true" type="ns1:searchForResultsResponse"/>
      <xs:element name="getSearchCriteriaTypes" nillable="true" type="ns1:getSearchCriteriaTypes"/>
      <xs:element name="getSearchCriteriaTypesResponse" nillable="true" type="ns1:getSearchCriteriaTypesResponse"/>
      <xs:element name="getSearchTypesByResult" nillable="true" type="ns1:getSearchTypesByResult"/>
      <xs:element name="getSearchTypesByResultResponse" nillable="true" type="ns1:getSearchTypesByResultResponse"/>
      <xs:element name="getSearchResultType" nillable="true" type="ns1:getSearchResultType"/>
      <xs:element name="getSearchResultTypeResponse" nillable="true" type="ns1:getSearchResultTypeResponse"/>
      <xs:element name="search" nillable="true" type="ns3:search"/>
      <xs:element name="searchResponse" nillable="true" type="ns3:searchResponse"/>
      <xs:element name="validateObject" nillable="true" type="ns2:validateObject"/>
      <xs:element name="validateObjectResponse" nillable="true" type="ns2:validateObjectResponse"/>
      <xs:element name="DependentObjectsExistException" nillable="true" type="ns0:DependentObjectsExistException"/>
      <xs:element name="VersionMismatchException" nillable="true" type="ns0:VersionMismatchException"/>
      <xs:element name="getSearchType" nillable="true" type="ns1:getSearchType"/>
      <xs:element name="getSearchTypeResponse" nillable="true" type="ns1:getSearchTypeResponse"/>
      <xs:element name="getObjectStructure" nillable="true" type="ns2:getObjectStructure"/>
      <xs:element name="getObjectStructureResponse" nillable="true" type="ns2:getObjectStructureResponse"/>
      <xs:element name="getSearchTypesByCriteria" nillable="true" type="ns1:getSearchTypesByCriteria"/>
      <xs:element name="getSearchTypesByCriteriaResponse" nillable="true" type="ns1:getSearchTypesByCriteriaResponse"/>
      <xs:element name="getObjectTypes" nillable="true" type="ns2:getObjectTypes"/>
      <xs:element name="getObjectTypesResponse" nillable="true" type="ns2:getObjectTypesResponse"/>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/dictionary" xmlns:ns1="http://student.kuali.org/wsdl/proposal" xmlns:tns="http://student.kuali.org/wsdl/dictionary" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://student.kuali.org/wsdl/proposal"/>
      <xs:element name="fieldDescriptor" type="tns:fieldDescriptor"/>
      <xs:element name="getObjectStructure" type="tns:getObjectStructure"/>
      <xs:element name="getObjectStructureResponse" type="tns:getObjectStructureResponse"/>
      <xs:element name="getObjectTypes" type="tns:getObjectTypes"/>
      <xs:element name="getObjectTypesResponse" type="tns:getObjectTypesResponse"/>
      <xs:element name="validateObject" type="tns:validateObject"/>
      <xs:element name="validateObjectResponse" type="tns:validateObjectResponse"/>
      <xs:element name="validateStructureData" type="tns:validateStructureData"/>
      <xs:element name="validateStructureDataResponse" type="tns:validateStructureDataResponse"/>
      <xs:complexType name="fieldDescriptor">
        <xs:sequence>
          <xs:element name="name" type="xs:string"/>
          <xs:element name="desc" type="xs:string"/>
          <xs:element name="readOnly" type="xs:boolean"/>
          <xs:element name="dataType" type="xs:string"/>
          <xs:element minOccurs="0" name="search" type="tns:searchSelector"/>
          <xs:element minOccurs="0" name="objectStructure" type="tns:objectStructure"/>
          <xs:element minOccurs="0" name="objectStructureRef" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchSelector">
        <xs:sequence/>
        <xs:attribute name="key" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="objectStructure">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="type" type="tns:type"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="type">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="state" type="tns:state"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element name="modifiable" type="xs:boolean"/>
          <xs:element minOccurs="0" name="attributes" type="ns1:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="state">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="field" type="tns:field"/>
          <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="field">
        <xs:sequence>
          <xs:element minOccurs="0" name="fieldDescriptor" type="tns:fieldDescriptor"/>
          <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
          <xs:element name="selector" type="xs:boolean"/>
          <xs:element name="dynamic" type="xs:boolean"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="constraintDescriptor">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="constraintSelector">
        <xs:sequence>
          <xs:element minOccurs="0" name="minValue" type="xs:string"/>
          <xs:element minOccurs="0" name="maxValue" type="xs:string"/>
          <xs:element minOccurs="0" name="minLength" type="xs:int"/>
          <xs:element minOccurs="0" name="maxLength" type="xs:string"/>
          <xs:element minOccurs="0" name="validChars" type="tns:validCharsConstraint"/>
          <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
          <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="case" type="tns:caseConstraint"/>
          <xs:element minOccurs="0" name="typeStateCase" type="tns:typeStateCaseConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="lookup" type="tns:lookupConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="className" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="serverSide" type="xs:boolean" use="required"/>
        <xs:attribute name="locale" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="validCharsConstraint">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="fields" type="xs:string"/>
        <xs:attribute name="separator" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="requireConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="caseConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="when" type="tns:whenConstraint"/>
        </xs:sequence>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="operator" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="whenConstraint">
        <xs:sequence>
          <xs:element minOccurs="0" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="value" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="typeStateCaseConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="typeStateWhen" type="tns:typeStateWhenConstraint"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="typeStateWhenConstraint">
        <xs:sequence>
          <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
          <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="lookupConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="lookupKey" type="tns:lookupKeyConstraint"/>
        </xs:sequence>
        <xs:attribute name="search" type="xs:string"/>
        <xs:attribute name="searchField" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="lookupKeyConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="mapsTo" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="occursConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="min" type="xs:int"/>
        <xs:attribute name="max" type="xs:int"/>
      </xs:complexType>
      <xs:complexType name="validateStructureData">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="stateKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="info" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateStructureDataResponse">
        <xs:sequence>
          <xs:element form="unqualified" name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateObject">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="stateKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="info" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateObjectResponse">
        <xs:sequence>
          <xs:element form="unqualified" name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getObjectStructure">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getObjectStructureResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:objectStructure"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getObjectTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getObjectTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/organization" xmlns:ns1="http://student.kuali.org/wsdl/search" xmlns:tns="http://student.kuali.org/wsdl/organization" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://student.kuali.org/wsdl/search"/>
      <xs:element name="search" type="tns:search"/>
      <xs:element name="searchResponse" type="tns:searchResponse"/>
      <xs:complexType name="search">
        <xs:sequence>
          <xs:element minOccurs="0" name="arg0" type="ns1:searchRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="ns1:searchResult"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getSearchResultTypeResponse">
    <wsdl:part element="tns:getSearchResultTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultType">
    <wsdl:part element="tns:getSearchResultType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateStructureDataResponse">
    <wsdl:part element="tns:validateStructureDataResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReferenceTypesResponse">
    <wsdl:part element="tns:getReferenceTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part element="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypesResponse">
    <wsdl:part element="tns:getSearchResultTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypeResponse">
    <wsdl:part element="tns:getSearchCriteriaTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateObjectResponse">
    <wsdl:part element="tns:validateObjectResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedProposalDocRelationTypesForProposalTypeResponse">
    <wsdl:part element="tns:getAllowedProposalDocRelationTypesForProposalTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteProposalDocRelationResponse">
    <wsdl:part element="tns:deleteProposalDocRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part element="tns:MissingParameterException" name="MissingParameterException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalTypesForReferenceTypeResponse">
    <wsdl:part element="tns:getProposalTypesForReferenceTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="search">
    <wsdl:part element="tns:search" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalTypesResponse">
    <wsdl:part element="tns:getProposalTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByIdList">
    <wsdl:part element="tns:getProposalDocRelationsByIdList" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationTypes">
    <wsdl:part element="tns:getProposalDocRelationTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposal">
    <wsdl:part element="tns:getProposal" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypesResponse">
    <wsdl:part element="tns:getSearchCriteriaTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByProposalType">
    <wsdl:part element="tns:getProposalsByProposalType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalResponse">
    <wsdl:part element="tns:getProposalResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByIdListResponse">
    <wsdl:part element="tns:getProposalsByIdListResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteProposalResponse">
    <wsdl:part element="tns:deleteProposalResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelation">
    <wsdl:part element="tns:getProposalDocRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createProposalDocRelation">
    <wsdl:part element="tns:createProposalDocRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypes">
    <wsdl:part element="tns:getSearchResultTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByType">
    <wsdl:part element="tns:getProposalDocRelationsByType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByProposal">
    <wsdl:part element="tns:getProposalDocRelationsByProposal" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateProposal">
    <wsdl:part element="tns:validateProposal" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateProposalResponse">
    <wsdl:part element="tns:updateProposalResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateProposalDocRelation">
    <wsdl:part element="tns:updateProposalDocRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationTypesResponse">
    <wsdl:part element="tns:getProposalDocRelationTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createProposal">
    <wsdl:part element="tns:createProposal" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createProposalResponse">
    <wsdl:part element="tns:createProposalResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateProposalDocRelationResponse">
    <wsdl:part element="tns:updateProposalDocRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByProposalResponse">
    <wsdl:part element="tns:getProposalDocRelationsByProposalResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByDocumentResponse">
    <wsdl:part element="tns:getProposalDocRelationsByDocumentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteProposalDocRelation">
    <wsdl:part element="tns:deleteProposalDocRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteria">
    <wsdl:part element="tns:getSearchTypesByCriteria" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResult">
    <wsdl:part element="tns:getSearchTypesByResult" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypeResponse">
    <wsdl:part element="tns:getSearchTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResultResponse">
    <wsdl:part element="tns:getSearchTypesByResultResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateProposal">
    <wsdl:part element="tns:updateProposal" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByProposalTypeResponse">
    <wsdl:part element="tns:getProposalsByProposalTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part element="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypes">
    <wsdl:part element="tns:getObjectTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateProposalDocRelationResponse">
    <wsdl:part element="tns:validateProposalDocRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateStructureData">
    <wsdl:part element="tns:validateStructureData" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedProposalDocRelationTypesForProposalType">
    <wsdl:part element="tns:getAllowedProposalDocRelationTypesForProposalType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByIdListResponse">
    <wsdl:part element="tns:getProposalDocRelationsByIdListResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateObject">
    <wsdl:part element="tns:validateObject" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part element="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalTypes">
    <wsdl:part element="tns:getProposalTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForResultsResponse">
    <wsdl:part element="tns:searchForResultsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchType">
    <wsdl:part element="tns:getSearchType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="VersionMismatchException">
    <wsdl:part element="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReferenceTypes">
    <wsdl:part element="tns:getReferenceTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part element="tns:OperationFailedException" name="OperationFailedException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part element="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DataValidationErrorException">
    <wsdl:part element="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructure">
    <wsdl:part element="tns:getObjectStructure" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypes">
    <wsdl:part element="tns:getSearchCriteriaTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaType">
    <wsdl:part element="tns:getSearchCriteriaType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructureResponse">
    <wsdl:part element="tns:getObjectStructureResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypesResponse">
    <wsdl:part element="tns:getObjectTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalTypeResponse">
    <wsdl:part element="tns:getProposalTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalType">
    <wsdl:part element="tns:getProposalType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteProposal">
    <wsdl:part element="tns:deleteProposal" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForResults">
    <wsdl:part element="tns:searchForResults" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DependentObjectsExistException">
    <wsdl:part element="tns:DependentObjectsExistException" name="DependentObjectsExistException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByTypeResponse">
    <wsdl:part element="tns:getProposalDocRelationsByTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationType">
    <wsdl:part element="tns:getProposalDocRelationType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createProposalDocRelationResponse">
    <wsdl:part element="tns:createProposalDocRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByState">
    <wsdl:part element="tns:getProposalsByState" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalTypesForReferenceType">
    <wsdl:part element="tns:getProposalTypesForReferenceType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByStateResponse">
    <wsdl:part element="tns:getProposalsByStateResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteriaResponse">
    <wsdl:part element="tns:getSearchTypesByCriteriaResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByDocument">
    <wsdl:part element="tns:getProposalDocRelationsByDocument" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesResponse">
    <wsdl:part element="tns:getSearchTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationTypeResponse">
    <wsdl:part element="tns:getProposalDocRelationTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByIdList">
    <wsdl:part element="tns:getProposalsByIdList" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByReferenceResponse">
    <wsdl:part element="tns:getProposalsByReferenceResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateProposalResponse">
    <wsdl:part element="tns:validateProposalResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByReference">
    <wsdl:part element="tns:getProposalsByReference" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationResponse">
    <wsdl:part element="tns:getProposalDocRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateProposalDocRelation">
    <wsdl:part element="tns:validateProposalDocRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypes">
    <wsdl:part element="tns:getSearchTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchResponse">
    <wsdl:part element="tns:searchResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ProposalService">
    <wsdl:operation name="getProposalDocRelationType">
      <wsdl:input message="tns:getProposalDocRelationType" name="getProposalDocRelationType"></wsdl:input>
      <wsdl:output message="tns:getProposalDocRelationTypeResponse" name="getProposalDocRelationTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalTypesForReferenceType">
      <wsdl:input message="tns:getProposalTypesForReferenceType" name="getProposalTypesForReferenceType"></wsdl:input>
      <wsdl:output message="tns:getProposalTypesForReferenceTypeResponse" name="getProposalTypesForReferenceTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <wsdl:input message="tns:getSearchCriteriaType" name="getSearchCriteriaType"></wsdl:input>
      <wsdl:output message="tns:getSearchCriteriaTypeResponse" name="getSearchCriteriaTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createProposalDocRelation">
      <wsdl:input message="tns:createProposalDocRelation" name="createProposalDocRelation"></wsdl:input>
      <wsdl:output message="tns:createProposalDocRelationResponse" name="createProposalDocRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <wsdl:input message="tns:getSearchResultTypes" name="getSearchResultTypes"></wsdl:input>
      <wsdl:output message="tns:getSearchResultTypesResponse" name="getSearchResultTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationTypes">
      <wsdl:input message="tns:getProposalDocRelationTypes" name="getProposalDocRelationTypes"></wsdl:input>
      <wsdl:output message="tns:getProposalDocRelationTypesResponse" name="getProposalDocRelationTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <wsdl:input message="tns:getSearchTypes" name="getSearchTypes"></wsdl:input>
      <wsdl:output message="tns:getSearchTypesResponse" name="getSearchTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateStructureData">
      <wsdl:input message="tns:validateStructureData" name="validateStructureData"></wsdl:input>
      <wsdl:output message="tns:validateStructureDataResponse" name="validateStructureDataResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchForResults">
      <wsdl:input message="tns:searchForResults" name="searchForResults"></wsdl:input>
      <wsdl:output message="tns:searchForResultsResponse" name="searchForResultsResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaTypes">
      <wsdl:input message="tns:getSearchCriteriaTypes" name="getSearchCriteriaTypes"></wsdl:input>
      <wsdl:output message="tns:getSearchCriteriaTypesResponse" name="getSearchCriteriaTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByState">
      <wsdl:input message="tns:getProposalsByState" name="getProposalsByState"></wsdl:input>
      <wsdl:output message="tns:getProposalsByStateResponse" name="getProposalsByStateResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByIdList">
      <wsdl:input message="tns:getProposalsByIdList" name="getProposalsByIdList"></wsdl:input>
      <wsdl:output message="tns:getProposalsByIdListResponse" name="getProposalsByIdListResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <wsdl:input message="tns:getSearchTypesByResult" name="getSearchTypesByResult"></wsdl:input>
      <wsdl:output message="tns:getSearchTypesByResultResponse" name="getSearchTypesByResultResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <wsdl:input message="tns:getSearchResultType" name="getSearchResultType"></wsdl:input>
      <wsdl:output message="tns:getSearchResultTypeResponse" name="getSearchResultTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposal">
      <wsdl:input message="tns:getProposal" name="getProposal"></wsdl:input>
      <wsdl:output message="tns:getProposalResponse" name="getProposalResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalTypes">
      <wsdl:input message="tns:getProposalTypes" name="getProposalTypes"></wsdl:input>
      <wsdl:output message="tns:getProposalTypesResponse" name="getProposalTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createProposal">
      <wsdl:input message="tns:createProposal" name="createProposal"></wsdl:input>
      <wsdl:output message="tns:createProposalResponse" name="createProposalResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedProposalDocRelationTypesForProposalType">
      <wsdl:input message="tns:getAllowedProposalDocRelationTypesForProposalType" name="getAllowedProposalDocRelationTypesForProposalType"></wsdl:input>
      <wsdl:output message="tns:getAllowedProposalDocRelationTypesForProposalTypeResponse" name="getAllowedProposalDocRelationTypesForProposalTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByDocument">
      <wsdl:input message="tns:getProposalDocRelationsByDocument" name="getProposalDocRelationsByDocument"></wsdl:input>
      <wsdl:output message="tns:getProposalDocRelationsByDocumentResponse" name="getProposalDocRelationsByDocumentResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByProposal">
      <wsdl:input message="tns:getProposalDocRelationsByProposal" name="getProposalDocRelationsByProposal"></wsdl:input>
      <wsdl:output message="tns:getProposalDocRelationsByProposalResponse" name="getProposalDocRelationsByProposalResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="search">
      <wsdl:input message="tns:search" name="search"></wsdl:input>
      <wsdl:output message="tns:searchResponse" name="searchResponse"></wsdl:output>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateProposalDocRelation">
      <wsdl:input message="tns:validateProposalDocRelation" name="validateProposalDocRelation"></wsdl:input>
      <wsdl:output message="tns:validateProposalDocRelationResponse" name="validateProposalDocRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByType">
      <wsdl:input message="tns:getProposalDocRelationsByType" name="getProposalDocRelationsByType"></wsdl:input>
      <wsdl:output message="tns:getProposalDocRelationsByTypeResponse" name="getProposalDocRelationsByTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateObject">
      <wsdl:input message="tns:validateObject" name="validateObject"></wsdl:input>
      <wsdl:output message="tns:validateObjectResponse" name="validateObjectResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteProposal">
      <wsdl:input message="tns:deleteProposal" name="deleteProposal"></wsdl:input>
      <wsdl:output message="tns:deleteProposalResponse" name="deleteProposalResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DependentObjectsExistException" name="DependentObjectsExistException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProposalDocRelation">
      <wsdl:input message="tns:updateProposalDocRelation" name="updateProposalDocRelation"></wsdl:input>
      <wsdl:output message="tns:updateProposalDocRelationResponse" name="updateProposalDocRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <wsdl:input message="tns:getSearchType" name="getSearchType"></wsdl:input>
      <wsdl:output message="tns:getSearchTypeResponse" name="getSearchTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectStructure">
      <wsdl:input message="tns:getObjectStructure" name="getObjectStructure"></wsdl:input>
      <wsdl:output message="tns:getObjectStructureResponse" name="getObjectStructureResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelation">
      <wsdl:input message="tns:getProposalDocRelation" name="getProposalDocRelation"></wsdl:input>
      <wsdl:output message="tns:getProposalDocRelationResponse" name="getProposalDocRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByProposalType">
      <wsdl:input message="tns:getProposalsByProposalType" name="getProposalsByProposalType"></wsdl:input>
      <wsdl:output message="tns:getProposalsByProposalTypeResponse" name="getProposalsByProposalTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateProposal">
      <wsdl:input message="tns:validateProposal" name="validateProposal"></wsdl:input>
      <wsdl:output message="tns:validateProposalResponse" name="validateProposalResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProposal">
      <wsdl:input message="tns:updateProposal" name="updateProposal"></wsdl:input>
      <wsdl:output message="tns:updateProposalResponse" name="updateProposalResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <wsdl:input message="tns:getSearchTypesByCriteria" name="getSearchTypesByCriteria"></wsdl:input>
      <wsdl:output message="tns:getSearchTypesByCriteriaResponse" name="getSearchTypesByCriteriaResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByIdList">
      <wsdl:input message="tns:getProposalDocRelationsByIdList" name="getProposalDocRelationsByIdList"></wsdl:input>
      <wsdl:output message="tns:getProposalDocRelationsByIdListResponse" name="getProposalDocRelationsByIdListResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalType">
      <wsdl:input message="tns:getProposalType" name="getProposalType"></wsdl:input>
      <wsdl:output message="tns:getProposalTypeResponse" name="getProposalTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferenceTypes">
      <wsdl:input message="tns:getReferenceTypes" name="getReferenceTypes"></wsdl:input>
      <wsdl:output message="tns:getReferenceTypesResponse" name="getReferenceTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByReference">
      <wsdl:input message="tns:getProposalsByReference" name="getProposalsByReference"></wsdl:input>
      <wsdl:output message="tns:getProposalsByReferenceResponse" name="getProposalsByReferenceResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteProposalDocRelation">
      <wsdl:input message="tns:deleteProposalDocRelation" name="deleteProposalDocRelation"></wsdl:input>
      <wsdl:output message="tns:deleteProposalDocRelationResponse" name="deleteProposalDocRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <wsdl:input message="tns:getObjectTypes" name="getObjectTypes"></wsdl:input>
      <wsdl:output message="tns:getObjectTypesResponse" name="getObjectTypesResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ProposalServiceSoapBinding" type="tns:ProposalService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getProposalDocRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalDocRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalDocRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalTypesForReferenceType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalTypesForReferenceType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalTypesForReferenceTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createProposalDocRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createProposalDocRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createProposalDocRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalDocRelationTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalDocRelationTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateStructureData">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateStructureData">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateStructureDataResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForResults">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForResults">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForResultsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByState">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalsByState">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalsByStateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalsByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalsByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByResult">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByResultResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createProposal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createProposal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createProposalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedProposalDocRelationTypesForProposalType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllowedProposalDocRelationTypesForProposalType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllowedProposalDocRelationTypesForProposalTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalDocRelationsByDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalDocRelationsByDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByProposal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalDocRelationsByProposal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalDocRelationsByProposalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="search">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="search">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalDocRelationsByType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalDocRelationsByTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateProposalDocRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateProposalDocRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateProposalDocRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateObject">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateObject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateObjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteProposal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteProposal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteProposalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectStructure">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectStructure">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectStructureResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProposalDocRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateProposalDocRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateProposalDocRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalDocRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalDocRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByProposalType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalsByProposalType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalsByProposalTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateProposal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateProposal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateProposalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProposal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateProposal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateProposalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalDocRelationsByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalDocRelationsByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByCriteria">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByCriteriaResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferenceTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getReferenceTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReferenceTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteProposalDocRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteProposalDocRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteProposalDocRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByReference">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalsByReference">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalsByReferenceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ProposalService">
    <wsdl:port binding="tns:ProposalServiceSoapBinding" name="ProposalServicePort">
      <soap:address location="http://localhost/ks-embedded/services/ProposalService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost/ks-embedded/services/ProposalService</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="createProposal" bindingOperationName="createProposal" type="Request-Response" outputName="createProposalResponse" inputName="createProposal" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="createProposal"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/ProposalService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:prop="http://student.kuali.org/wsdl/proposal">
   <soapenv:Header/>
   <soapenv:Body>
      <prop:createProposal>
         <proposalTypeKey>kuali.proposal.type.course.create</proposalTypeKey><proposalInfo type="kuali.proposal.type.course.create">
            <name>Proposal Title</name>
            <proposalReferenceType>kuali.proposal.referenceType.clu</proposalReferenceType>
            <proposalReference>cluId</proposalReference>
         </proposalInfo>
      </prop:createProposal>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/proposal/ProposalService/createProposal"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="createProposalDocRelation" bindingOperationName="createProposalDocRelation" type="Request-Response" outputName="createProposalDocRelationResponse" inputName="createProposalDocRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="deleteProposal" bindingOperationName="deleteProposal" type="Request-Response" outputName="deleteProposalResponse" inputName="deleteProposal" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="deleteProposal"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/ProposalService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:prop="http://student.kuali.org/wsdl/proposal">
   <soapenv:Header/>
   <soapenv:Body>
      <prop:deleteProposal>
         <proposalId>8facf83d-7cbb-4ca7-9223-ccfbdc1ff75f</proposalId>
      </prop:deleteProposal>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/proposal/ProposalService/deleteProposal"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="deleteProposalDocRelation" bindingOperationName="deleteProposalDocRelation" type="Request-Response" outputName="deleteProposalDocRelationResponse" inputName="deleteProposalDocRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getAllowedProposalDocRelationTypesForProposalType" bindingOperationName="getAllowedProposalDocRelationTypesForProposalType" type="Request-Response" outputName="getAllowedProposalDocRelationTypesForProposalTypeResponse" inputName="getAllowedProposalDocRelationTypesForProposalType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getObjectStructure" bindingOperationName="getObjectStructure" type="Request-Response" outputName="getObjectStructureResponse" inputName="getObjectStructure" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getObjectTypes" bindingOperationName="getObjectTypes" type="Request-Response" outputName="getObjectTypesResponse" inputName="getObjectTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getProposal" bindingOperationName="getProposal" type="Request-Response" outputName="getProposalResponse" inputName="getProposal" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="getProposal"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/ProposalService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:prop="http://student.kuali.org/wsdl/proposal">
   <soapenv:Header/>
   <soapenv:Body>
      <prop:getProposal>
         <!--Optional:-->
         
      <proposalId>8facf83d-7cbb-4ca7-9223-ccfbdc1ff75f</proposalId></prop:getProposal>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/proposal/ProposalService/getProposal"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getProposalDocRelation" bindingOperationName="getProposalDocRelation" type="Request-Response" outputName="getProposalDocRelationResponse" inputName="getProposalDocRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getProposalDocRelationsByDocument" bindingOperationName="getProposalDocRelationsByDocument" type="Request-Response" outputName="getProposalDocRelationsByDocumentResponse" inputName="getProposalDocRelationsByDocument" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getProposalDocRelationsByIdList" bindingOperationName="getProposalDocRelationsByIdList" type="Request-Response" outputName="getProposalDocRelationsByIdListResponse" inputName="getProposalDocRelationsByIdList" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getProposalDocRelationsByProposal" bindingOperationName="getProposalDocRelationsByProposal" type="Request-Response" outputName="getProposalDocRelationsByProposalResponse" inputName="getProposalDocRelationsByProposal" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getProposalDocRelationsByType" bindingOperationName="getProposalDocRelationsByType" type="Request-Response" outputName="getProposalDocRelationsByTypeResponse" inputName="getProposalDocRelationsByType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getProposalDocRelationType" bindingOperationName="getProposalDocRelationType" type="Request-Response" outputName="getProposalDocRelationTypeResponse" inputName="getProposalDocRelationType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getProposalDocRelationTypes" bindingOperationName="getProposalDocRelationTypes" type="Request-Response" outputName="getProposalDocRelationTypesResponse" inputName="getProposalDocRelationTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getProposalsByIdList" bindingOperationName="getProposalsByIdList" type="Request-Response" outputName="getProposalsByIdListResponse" inputName="getProposalsByIdList" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getProposalsByProposalType" bindingOperationName="getProposalsByProposalType" type="Request-Response" outputName="getProposalsByProposalTypeResponse" inputName="getProposalsByProposalType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getProposalsByReference" bindingOperationName="getProposalsByReference" type="Request-Response" outputName="getProposalsByReferenceResponse" inputName="getProposalsByReference" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getProposalsByState" bindingOperationName="getProposalsByState" type="Request-Response" outputName="getProposalsByStateResponse" inputName="getProposalsByState" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getProposalType" bindingOperationName="getProposalType" type="Request-Response" outputName="getProposalTypeResponse" inputName="getProposalType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getProposalTypes" bindingOperationName="getProposalTypes" type="Request-Response" outputName="getProposalTypesResponse" inputName="getProposalTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getProposalTypesForReferenceType" bindingOperationName="getProposalTypesForReferenceType" type="Request-Response" outputName="getProposalTypesForReferenceTypeResponse" inputName="getProposalTypesForReferenceType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getReferenceTypes" bindingOperationName="getReferenceTypes" type="Request-Response" outputName="getReferenceTypesResponse" inputName="getReferenceTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchCriteriaType" bindingOperationName="getSearchCriteriaType" type="Request-Response" outputName="getSearchCriteriaTypeResponse" inputName="getSearchCriteriaType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchCriteriaTypes" bindingOperationName="getSearchCriteriaTypes" type="Request-Response" outputName="getSearchCriteriaTypesResponse" inputName="getSearchCriteriaTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchResultType" bindingOperationName="getSearchResultType" type="Request-Response" outputName="getSearchResultTypeResponse" inputName="getSearchResultType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchResultTypes" bindingOperationName="getSearchResultTypes" type="Request-Response" outputName="getSearchResultTypesResponse" inputName="getSearchResultTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchType" bindingOperationName="getSearchType" type="Request-Response" outputName="getSearchTypeResponse" inputName="getSearchType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchTypes" bindingOperationName="getSearchTypes" type="Request-Response" outputName="getSearchTypesResponse" inputName="getSearchTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchTypesByCriteria" bindingOperationName="getSearchTypesByCriteria" type="Request-Response" outputName="getSearchTypesByCriteriaResponse" inputName="getSearchTypesByCriteria" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchTypesByResult" bindingOperationName="getSearchTypesByResult" type="Request-Response" outputName="getSearchTypesByResultResponse" inputName="getSearchTypesByResult" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="search" bindingOperationName="search" type="Request-Response" outputName="searchResponse" inputName="search" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="searchForResults" bindingOperationName="searchForResults" type="Request-Response" outputName="searchForResultsResponse" inputName="searchForResults" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateProposal" bindingOperationName="updateProposal" type="Request-Response" outputName="updateProposalResponse" inputName="updateProposal" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="updateProposal"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/ProposalService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:prop="http://student.kuali.org/wsdl/proposal">
   <soapenv:Header/>
   <soapenv:Body>
      <prop:updateProposal>
         <proposalId>8facf83d-7cbb-4ca7-9223-ccfbdc1ff75f</proposalId>
         <proposalInfo type="kuali.proposal.type.course.create" id="8facf83d-7cbb-4ca7-9223-ccfbdc1ff75f">
            <name>Proposal Title</name>
            <proposalReferenceType>kuali.proposal.referenceType.clu</proposalReferenceType>
            <proposalReference>cluId</proposalReference>
            <metaInfo>
               <versionInd>0</versionInd>
               <createTime>2010-03-18T16:36:49.444-07:00</createTime>
               <updateTime>2010-03-18T16:36:49.444-07:00</updateTime>
            </metaInfo>
         </proposalInfo>
      </prop:updateProposal>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/proposal/ProposalService/updateProposal"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="updateProposalDocRelation" bindingOperationName="updateProposalDocRelation" type="Request-Response" outputName="updateProposalDocRelationResponse" inputName="updateProposalDocRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateObject" bindingOperationName="validateObject" type="Request-Response" outputName="validateObjectResponse" inputName="validateObject" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateProposal" bindingOperationName="validateProposal" type="Request-Response" outputName="validateProposalResponse" inputName="validateProposal" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateProposalDocRelation" bindingOperationName="validateProposalDocRelation" type="Request-Response" outputName="validateProposalDocRelationResponse" inputName="validateProposalDocRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateStructureData" bindingOperationName="validateStructureData" type="Request-Response" outputName="validateStructureDataResponse" inputName="validateStructureData" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="StatementServiceSoapBinding" type="wsdl" bindingName="{http://student.kuali.org/wsdl/statement}StatementServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost/ks-embedded/services/StatementService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost/ks-embedded/services/StatementService?wsdl"><con:part><con:url>http://localhost/ks-embedded/services/StatementService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="StatementService" targetNamespace="http://student.kuali.org/wsdl/statement" xmlns:ns1="http://cxf.apache.org/bindings/xformat" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://student.kuali.org/wsdl/statement" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/statement" xmlns:ns0="http://student.kuali.org/wsdl/exceptions" xmlns:ns1="http://student.kuali.org/wsdl/dictionary" xmlns:ns2="http://student.kuali.org/wsdl/search" xmlns:ns3="http://student.kuali.org/wsdl/organization" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://student.kuali.org/wsdl/dictionary"/>
      <xs:element name="createRefStatementRelation" type="tns:createRefStatementRelation"/>
      <xs:element name="createRefStatementRelationResponse" type="tns:createRefStatementRelationResponse"/>
      <xs:element name="createReqComponent" type="tns:createReqComponent"/>
      <xs:element name="createReqComponentResponse" type="tns:createReqComponentResponse"/>
      <xs:element name="createStatement" type="tns:createStatement"/>
      <xs:element name="createStatementResponse" type="tns:createStatementResponse"/>
      <xs:element name="deleteRefStatementRelation" type="tns:deleteRefStatementRelation"/>
      <xs:element name="deleteRefStatementRelationResponse" type="tns:deleteRefStatementRelationResponse"/>
      <xs:element name="deleteReqComponent" type="tns:deleteReqComponent"/>
      <xs:element name="deleteReqComponentResponse" type="tns:deleteReqComponentResponse"/>
      <xs:element name="deleteStatement" type="tns:deleteStatement"/>
      <xs:element name="deleteStatementResponse" type="tns:deleteStatementResponse"/>
      <xs:element name="getNaturalLanguageForRefStatementRelation" type="tns:getNaturalLanguageForRefStatementRelation"/>
      <xs:element name="getNaturalLanguageForRefStatementRelationResponse" type="tns:getNaturalLanguageForRefStatementRelationResponse"/>
      <xs:element name="getNaturalLanguageForReqComponent" type="tns:getNaturalLanguageForReqComponent"/>
      <xs:element name="getNaturalLanguageForReqComponentResponse" type="tns:getNaturalLanguageForReqComponentResponse"/>
      <xs:element name="getNaturalLanguageForStatement" type="tns:getNaturalLanguageForStatement"/>
      <xs:element name="getNaturalLanguageForStatementResponse" type="tns:getNaturalLanguageForStatementResponse"/>
      <xs:element name="getNlUsageType" type="tns:getNlUsageType"/>
      <xs:element name="getNlUsageTypeResponse" type="tns:getNlUsageTypeResponse"/>
      <xs:element name="getNlUsageTypes" type="tns:getNlUsageTypes"/>
      <xs:element name="getNlUsageTypesResponse" type="tns:getNlUsageTypesResponse"/>
      <xs:element name="getRefObjectSubTypes" type="tns:getRefObjectSubTypes"/>
      <xs:element name="getRefObjectSubTypesResponse" type="tns:getRefObjectSubTypesResponse"/>
      <xs:element name="getRefObjectTypes" type="tns:getRefObjectTypes"/>
      <xs:element name="getRefObjectTypesResponse" type="tns:getRefObjectTypesResponse"/>
      <xs:element name="getRefStatementRelation" type="tns:getRefStatementRelation"/>
      <xs:element name="getRefStatementRelationResponse" type="tns:getRefStatementRelationResponse"/>
      <xs:element name="getRefStatementRelationType" type="tns:getRefStatementRelationType"/>
      <xs:element name="getRefStatementRelationTypeResponse" type="tns:getRefStatementRelationTypeResponse"/>
      <xs:element name="getRefStatementRelationTypes" type="tns:getRefStatementRelationTypes"/>
      <xs:element name="getRefStatementRelationTypesForRefObjectSubType" type="tns:getRefStatementRelationTypesForRefObjectSubType"/>
      <xs:element name="getRefStatementRelationTypesForRefObjectSubTypeResponse" type="tns:getRefStatementRelationTypesForRefObjectSubTypeResponse"/>
      <xs:element name="getRefStatementRelationTypesResponse" type="tns:getRefStatementRelationTypesResponse"/>
      <xs:element name="getRefStatementRelationsByRef" type="tns:getRefStatementRelationsByRef"/>
      <xs:element name="getRefStatementRelationsByRefResponse" type="tns:getRefStatementRelationsByRefResponse"/>
      <xs:element name="getRefStatementRelationsByStatement" type="tns:getRefStatementRelationsByStatement"/>
      <xs:element name="getRefStatementRelationsByStatementResponse" type="tns:getRefStatementRelationsByStatementResponse"/>
      <xs:element name="getReqComponent" type="tns:getReqComponent"/>
      <xs:element name="getReqComponentResponse" type="tns:getReqComponentResponse"/>
      <xs:element name="getReqComponentType" type="tns:getReqComponentType"/>
      <xs:element name="getReqComponentTypeResponse" type="tns:getReqComponentTypeResponse"/>
      <xs:element name="getReqComponentTypes" type="tns:getReqComponentTypes"/>
      <xs:element name="getReqComponentTypesForStatementType" type="tns:getReqComponentTypesForStatementType"/>
      <xs:element name="getReqComponentTypesForStatementTypeResponse" type="tns:getReqComponentTypesForStatementTypeResponse"/>
      <xs:element name="getReqComponentTypesResponse" type="tns:getReqComponentTypesResponse"/>
      <xs:element name="getReqComponentsByType" type="tns:getReqComponentsByType"/>
      <xs:element name="getReqComponentsByTypeResponse" type="tns:getReqComponentsByTypeResponse"/>
      <xs:element name="getStatement" type="tns:getStatement"/>
      <xs:element name="getStatementResponse" type="tns:getStatementResponse"/>
      <xs:element name="getStatementTreeView" type="tns:getStatementTreeView"/>
      <xs:element name="getStatementTreeViewResponse" type="tns:getStatementTreeViewResponse"/>
      <xs:element name="getStatementType" type="tns:getStatementType"/>
      <xs:element name="getStatementTypeResponse" type="tns:getStatementTypeResponse"/>
      <xs:element name="getStatementTypes" type="tns:getStatementTypes"/>
      <xs:element name="getStatementTypesForRefStatementRelationType" type="tns:getStatementTypesForRefStatementRelationType"/>
      <xs:element name="getStatementTypesForRefStatementRelationTypeResponse" type="tns:getStatementTypesForRefStatementRelationTypeResponse"/>
      <xs:element name="getStatementTypesForStatementType" type="tns:getStatementTypesForStatementType"/>
      <xs:element name="getStatementTypesForStatementTypeResponse" type="tns:getStatementTypesForStatementTypeResponse"/>
      <xs:element name="getStatementTypesResponse" type="tns:getStatementTypesResponse"/>
      <xs:element name="getStatementsByType" type="tns:getStatementsByType"/>
      <xs:element name="getStatementsByTypeResponse" type="tns:getStatementsByTypeResponse"/>
      <xs:element name="getStatementsUsingReqComponent" type="tns:getStatementsUsingReqComponent"/>
      <xs:element name="getStatementsUsingReqComponentResponse" type="tns:getStatementsUsingReqComponentResponse"/>
      <xs:element name="getStatementsUsingStatement" type="tns:getStatementsUsingStatement"/>
      <xs:element name="getStatementsUsingStatementResponse" type="tns:getStatementsUsingStatementResponse"/>
      <xs:element name="translateReqComponentToNL" type="tns:translateReqComponentToNL"/>
      <xs:element name="translateReqComponentToNLResponse" type="tns:translateReqComponentToNLResponse"/>
      <xs:element name="translateStatementTreeViewToNL" type="tns:translateStatementTreeViewToNL"/>
      <xs:element name="translateStatementTreeViewToNLResponse" type="tns:translateStatementTreeViewToNLResponse"/>
      <xs:element name="updateRefStatementRelation" type="tns:updateRefStatementRelation"/>
      <xs:element name="updateRefStatementRelationResponse" type="tns:updateRefStatementRelationResponse"/>
      <xs:element name="updateReqComponent" type="tns:updateReqComponent"/>
      <xs:element name="updateReqComponentResponse" type="tns:updateReqComponentResponse"/>
      <xs:element name="updateStatement" type="tns:updateStatement"/>
      <xs:element name="updateStatementResponse" type="tns:updateStatementResponse"/>
      <xs:element name="updateStatementTreeView" type="tns:updateStatementTreeView"/>
      <xs:element name="updateStatementTreeViewResponse" type="tns:updateStatementTreeViewResponse"/>
      <xs:element name="validateRefStatementRelation" type="tns:validateRefStatementRelation"/>
      <xs:element name="validateRefStatementRelationResponse" type="tns:validateRefStatementRelationResponse"/>
      <xs:element name="validateReqComponent" type="tns:validateReqComponent"/>
      <xs:element name="validateReqComponentResponse" type="tns:validateReqComponentResponse"/>
      <xs:element name="validateStatement" type="tns:validateStatement"/>
      <xs:element name="validateStatementResponse" type="tns:validateStatementResponse"/>
      <xs:complexType name="updateStatement">
        <xs:sequence>
          <xs:element minOccurs="0" name="statementId" type="xs:string"/>
          <xs:element minOccurs="0" name="statementInfo" type="tns:statementInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="statementInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="tns:richTextInfo"/>
          <xs:element minOccurs="0" name="operator" type="tns:statementOperatorTypeKey"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="statementIds" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="reqComponentIds" type="xs:string"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="parentId" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="richTextInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="plain" type="xs:string"/>
          <xs:element minOccurs="0" name="formatted" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Attribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="metaInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="versionInd" type="xs:string"/>
          <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="createId" type="xs:string"/>
          <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="updateId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateStatementResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statementInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="translateReqComponentToNL">
        <xs:sequence>
          <xs:element minOccurs="0" name="reqComponentInfo" type="tns:reqComponentInfo"/>
          <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="reqComponentInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="desc" type="tns:richTextInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="reqCompFields" type="tns:reqCompFieldInfo"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
          <xs:element minOccurs="0" name="requiredComponentType" type="tns:reqComponentTypeInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="reqCompFieldInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="reqComponentTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence>
              <xs:element minOccurs="0" name="reqCompFieldTypes">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="reqCompFieldType" type="tns:reqCompFieldTypeInfo"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType abstract="true" name="typeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="reqCompFieldTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" ref="ns1:fieldDescriptor"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="translateReqComponentToNLResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementTypesForStatementType">
        <xs:sequence>
          <xs:element minOccurs="0" name="statementTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementTypesForStatementTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createReqComponent">
        <xs:sequence>
          <xs:element minOccurs="0" name="reqComponentType" type="xs:string"/>
          <xs:element minOccurs="0" name="reqComponentInfo" type="tns:reqComponentInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createReqComponentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:reqComponentInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNaturalLanguageForRefStatementRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="refStatementRelationId" type="xs:string"/>
          <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNaturalLanguageForRefStatementRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateStatement">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="statementInfo" type="tns:statementInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateStatementResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateRefStatementRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="refStatementRelationId" type="xs:string"/>
          <xs:element minOccurs="0" name="refStatementRelationInfo" type="tns:refStatementRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="refStatementRelationInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="refObjectTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="refObjectId" type="xs:string"/>
          <xs:element minOccurs="0" name="statementId" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="updateRefStatementRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:refStatementRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateReqComponent">
        <xs:sequence>
          <xs:element minOccurs="0" name="reqComponentId" type="xs:string"/>
          <xs:element minOccurs="0" name="reqComponentInfo" type="tns:reqComponentInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateReqComponentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:reqComponentInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReqComponentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="reqComponentTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReqComponentTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:reqComponentTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createStatement">
        <xs:sequence>
          <xs:element minOccurs="0" name="statementType" type="xs:string"/>
          <xs:element minOccurs="0" name="statementInfo" type="tns:statementInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createStatementResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statementInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementType">
        <xs:sequence>
          <xs:element minOccurs="0" name="statementTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statementTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="statementTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence>
              <xs:element minOccurs="0" name="allowedReqComponentTypes">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="reqComponentTypeKey" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element minOccurs="0" name="allowedStatementTypes">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="statementTypeKey" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="deleteRefStatementRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="refStatementRelationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteRefStatementRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="statusInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="success" type="xs:boolean"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRefObjectSubTypes">
        <xs:sequence>
          <xs:element minOccurs="0" name="objectTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRefObjectSubTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteStatement">
        <xs:sequence>
          <xs:element minOccurs="0" name="statementId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteStatementResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateReqComponent">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="reqComponentInfo" type="tns:reqComponentInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateReqComponentResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRefObjectTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getRefObjectTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRefStatementRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="refStatementRelationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRefStatementRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:refStatementRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateStatementTreeView">
        <xs:sequence>
          <xs:element minOccurs="0" name="statementId" type="xs:string"/>
          <xs:element minOccurs="0" name="statementTreeViewInfo" type="tns:statementTreeViewInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="statementTreeViewInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="tns:richTextInfo"/>
          <xs:element minOccurs="0" name="operator" type="tns:statementOperatorTypeKey"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="statements" type="tns:statementTreeViewInfo"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="reqComponents" type="tns:reqComponentInfo"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="parentId" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="updateStatementTreeViewResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statementTreeViewInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementsUsingStatement">
        <xs:sequence>
          <xs:element minOccurs="0" name="statementId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementsUsingStatementResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:statementInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatement">
        <xs:sequence>
          <xs:element minOccurs="0" name="statementId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statementInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRefStatementRelationsByRef">
        <xs:sequence>
          <xs:element minOccurs="0" name="refObjectTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="refObjectId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRefStatementRelationsByRefResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:refStatementRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementsUsingReqComponent">
        <xs:sequence>
          <xs:element minOccurs="0" name="reqComponentId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementsUsingReqComponentResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:statementInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRefStatementRelationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="refStatementRelationTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRefStatementRelationTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:refStatementRelationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="refStatementRelationTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getRefStatementRelationsByStatement">
        <xs:sequence>
          <xs:element minOccurs="0" name="statementId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRefStatementRelationsByStatementResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:refStatementRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getStatementTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:statementTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteReqComponent">
        <xs:sequence>
          <xs:element minOccurs="0" name="reqComponentId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteReqComponentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="translateStatementTreeViewToNL">
        <xs:sequence>
          <xs:element minOccurs="0" name="statementTreeViewInfo" type="tns:statementTreeViewInfo"/>
          <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="translateStatementTreeViewToNLResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementsByType">
        <xs:sequence>
          <xs:element minOccurs="0" name="statementTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementsByTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createRefStatementRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="refStatementRelationInfo" type="tns:refStatementRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createRefStatementRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:refStatementRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRefStatementRelationTypesForRefObjectSubType">
        <xs:sequence>
          <xs:element minOccurs="0" name="refSubTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getRefStatementRelationTypesForRefObjectSubTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReqComponentTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getReqComponentTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReqComponentsByType">
        <xs:sequence>
          <xs:element minOccurs="0" name="reqComponentTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReqComponentsByTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReqComponentTypesForStatementType">
        <xs:sequence>
          <xs:element minOccurs="0" name="statementTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReqComponentTypesForStatementTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNlUsageTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getNlUsageTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementTreeView">
        <xs:sequence>
          <xs:element minOccurs="0" name="statementId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementTreeViewResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statementTreeViewInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReqComponent">
        <xs:sequence>
          <xs:element minOccurs="0" name="reqComponentId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getReqComponentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:reqComponentInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNaturalLanguageForReqComponent">
        <xs:sequence>
          <xs:element minOccurs="0" name="reqComponentId" type="xs:string"/>
          <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNaturalLanguageForReqComponentResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateRefStatementRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="refStatementRelationInfo" type="tns:refStatementRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateRefStatementRelationResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validationResultInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="element" type="xs:string"/>
          <xs:element minOccurs="0" name="level" type="tns:errorLevel"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNaturalLanguageForStatement">
        <xs:sequence>
          <xs:element minOccurs="0" name="statementId" type="xs:string"/>
          <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNaturalLanguageForStatementResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNlUsageType">
        <xs:sequence>
          <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getNlUsageTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:nlUsageTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="nlUsageTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getRefStatementRelationTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getRefStatementRelationTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:refStatementRelationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementTypesForRefStatementRelationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="refStatementRelationTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getStatementTypesForRefStatementRelationTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="statementOperatorTypeKey">
        <xs:restriction base="xs:string">
          <xs:enumeration value="AND"/>
          <xs:enumeration value="OR"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="errorLevel">
        <xs:restriction base="xs:string">
          <xs:enumeration value="OK"/>
          <xs:enumeration value="WARN"/>
          <xs:enumeration value="ERROR"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="OperationFailedException" nillable="true" type="ns0:OperationFailedException"/>
      <xs:element name="VersionMismatchException" nillable="true" type="ns0:VersionMismatchException"/>
      <xs:element name="MissingParameterException" nillable="true" type="ns0:MissingParameterException"/>
      <xs:element name="PermissionDeniedException" nillable="true" type="ns0:PermissionDeniedException"/>
      <xs:element name="DoesNotExistException" nillable="true" type="ns0:DoesNotExistException"/>
      <xs:element name="DataValidationErrorException" nillable="true" type="ns0:DataValidationErrorException"/>
      <xs:element name="CircularReferenceException" nillable="true" type="ns0:CircularReferenceException"/>
      <xs:element name="InvalidParameterException" nillable="true" type="ns0:InvalidParameterException"/>
      <xs:element name="getObjectStructure" nillable="true" type="ns1:getObjectStructure"/>
      <xs:element name="getObjectStructureResponse" nillable="true" type="ns1:getObjectStructureResponse"/>
      <xs:element name="getSearchCriteriaTypes" nillable="true" type="ns2:getSearchCriteriaTypes"/>
      <xs:element name="getSearchCriteriaTypesResponse" nillable="true" type="ns2:getSearchCriteriaTypesResponse"/>
      <xs:element name="search" nillable="true" type="ns3:search"/>
      <xs:element name="searchResponse" nillable="true" type="ns3:searchResponse"/>
      <xs:element name="AlreadyExistsException" nillable="true" type="ns0:AlreadyExistsException"/>
      <xs:element name="getSearchType" nillable="true" type="ns2:getSearchType"/>
      <xs:element name="getSearchTypeResponse" nillable="true" type="ns2:getSearchTypeResponse"/>
      <xs:element name="validateObject" nillable="true" type="ns1:validateObject"/>
      <xs:element name="validateObjectResponse" nillable="true" type="ns1:validateObjectResponse"/>
      <xs:element name="getSearchTypesByCriteria" nillable="true" type="ns2:getSearchTypesByCriteria"/>
      <xs:element name="getSearchTypesByCriteriaResponse" nillable="true" type="ns2:getSearchTypesByCriteriaResponse"/>
      <xs:element name="validateStructureData" nillable="true" type="ns1:validateStructureData"/>
      <xs:element name="validateStructureDataResponse" nillable="true" type="ns1:validateStructureDataResponse"/>
      <xs:element name="getObjectTypes" nillable="true" type="ns1:getObjectTypes"/>
      <xs:element name="getObjectTypesResponse" nillable="true" type="ns1:getObjectTypesResponse"/>
      <xs:element name="searchForResults" nillable="true" type="ns2:searchForResults"/>
      <xs:element name="searchForResultsResponse" nillable="true" type="ns2:searchForResultsResponse"/>
      <xs:element name="getSearchCriteriaType" nillable="true" type="ns2:getSearchCriteriaType"/>
      <xs:element name="getSearchCriteriaTypeResponse" nillable="true" type="ns2:getSearchCriteriaTypeResponse"/>
      <xs:element name="getSearchTypes" nillable="true" type="ns2:getSearchTypes"/>
      <xs:element name="getSearchTypesResponse" nillable="true" type="ns2:getSearchTypesResponse"/>
      <xs:element name="getSearchTypesByResult" nillable="true" type="ns2:getSearchTypesByResult"/>
      <xs:element name="getSearchTypesByResultResponse" nillable="true" type="ns2:getSearchTypesByResultResponse"/>
      <xs:element name="getSearchResultTypes" nillable="true" type="ns2:getSearchResultTypes"/>
      <xs:element name="getSearchResultTypesResponse" nillable="true" type="ns2:getSearchResultTypesResponse"/>
      <xs:element name="getSearchResultType" nillable="true" type="ns2:getSearchResultType"/>
      <xs:element name="getSearchResultTypeResponse" nillable="true" type="ns2:getSearchResultTypeResponse"/>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/dictionary" xmlns:ns1="http://student.kuali.org/wsdl/statement" xmlns:tns="http://student.kuali.org/wsdl/dictionary" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://student.kuali.org/wsdl/statement"/>
      <xs:element name="fieldDescriptor" type="tns:fieldDescriptor"/>
      <xs:element name="getObjectStructure" type="tns:getObjectStructure"/>
      <xs:element name="getObjectStructureResponse" type="tns:getObjectStructureResponse"/>
      <xs:element name="getObjectTypes" type="tns:getObjectTypes"/>
      <xs:element name="getObjectTypesResponse" type="tns:getObjectTypesResponse"/>
      <xs:element name="validateObject" type="tns:validateObject"/>
      <xs:element name="validateObjectResponse" type="tns:validateObjectResponse"/>
      <xs:element name="validateStructureData" type="tns:validateStructureData"/>
      <xs:element name="validateStructureDataResponse" type="tns:validateStructureDataResponse"/>
      <xs:complexType name="fieldDescriptor">
        <xs:sequence>
          <xs:element name="name" type="xs:string"/>
          <xs:element name="desc" type="xs:string"/>
          <xs:element name="readOnly" type="xs:boolean"/>
          <xs:element name="dataType" type="xs:string"/>
          <xs:element minOccurs="0" name="search" type="tns:searchSelector"/>
          <xs:element minOccurs="0" name="objectStructure" type="tns:objectStructure"/>
          <xs:element minOccurs="0" name="objectStructureRef" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchSelector">
        <xs:sequence/>
        <xs:attribute name="key" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="objectStructure">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="type" type="tns:type"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="type">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="state" type="tns:state"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element name="modifiable" type="xs:boolean"/>
          <xs:element minOccurs="0" name="attributes" type="ns1:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="state">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="field" type="tns:field"/>
          <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="field">
        <xs:sequence>
          <xs:element minOccurs="0" name="fieldDescriptor" type="tns:fieldDescriptor"/>
          <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
          <xs:element name="selector" type="xs:boolean"/>
          <xs:element name="dynamic" type="xs:boolean"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="constraintDescriptor">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="constraintSelector">
        <xs:sequence>
          <xs:element minOccurs="0" name="minValue" type="xs:string"/>
          <xs:element minOccurs="0" name="maxValue" type="xs:string"/>
          <xs:element minOccurs="0" name="minLength" type="xs:int"/>
          <xs:element minOccurs="0" name="maxLength" type="xs:string"/>
          <xs:element minOccurs="0" name="validChars" type="tns:validCharsConstraint"/>
          <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
          <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="case" type="tns:caseConstraint"/>
          <xs:element minOccurs="0" name="typeStateCase" type="tns:typeStateCaseConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="lookup" type="tns:lookupConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="className" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="serverSide" type="xs:boolean" use="required"/>
        <xs:attribute name="locale" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="validCharsConstraint">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="fields" type="xs:string"/>
        <xs:attribute name="separator" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="requireConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="caseConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="when" type="tns:whenConstraint"/>
        </xs:sequence>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="operator" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="whenConstraint">
        <xs:sequence>
          <xs:element minOccurs="0" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="value" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="typeStateCaseConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="typeStateWhen" type="tns:typeStateWhenConstraint"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="typeStateWhenConstraint">
        <xs:sequence>
          <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
          <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="lookupConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="lookupKey" type="tns:lookupKeyConstraint"/>
        </xs:sequence>
        <xs:attribute name="search" type="xs:string"/>
        <xs:attribute name="searchField" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="lookupKeyConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="mapsTo" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="occursConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="min" type="xs:int"/>
        <xs:attribute name="max" type="xs:int"/>
      </xs:complexType>
      <xs:complexType name="getObjectStructure">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getObjectStructureResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:objectStructure"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateObject">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="stateKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="info" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateObjectResponse">
        <xs:sequence>
          <xs:element form="unqualified" name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateStructureData">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="stateKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="info" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateStructureDataResponse">
        <xs:sequence>
          <xs:element form="unqualified" name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getObjectTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getObjectTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/exceptions" xmlns:tns="http://student.kuali.org/wsdl/exceptions" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
      <xs:element name="CircularReferenceException" type="tns:CircularReferenceException"/>
      <xs:element name="DataValidationErrorException" type="tns:DataValidationErrorException"/>
      <xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
      <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
      <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
      <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
      <xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
      <xs:element name="VersionMismatchException" type="tns:VersionMismatchException"/>
      <xs:complexType name="OperationFailedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VersionMismatchException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MissingParameterException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PermissionDeniedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DoesNotExistException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DataValidationErrorException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CircularReferenceException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InvalidParameterException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AlreadyExistsException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/search" xmlns:ns1="http://student.kuali.org/wsdl/dictionary" xmlns:tns="http://student.kuali.org/wsdl/search" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://student.kuali.org/wsdl/dictionary"/>
      <xs:element name="getSearchCriteriaType" type="tns:getSearchCriteriaType"/>
      <xs:element name="getSearchCriteriaTypeResponse" type="tns:getSearchCriteriaTypeResponse"/>
      <xs:element name="getSearchCriteriaTypes" type="tns:getSearchCriteriaTypes"/>
      <xs:element name="getSearchCriteriaTypesResponse" type="tns:getSearchCriteriaTypesResponse"/>
      <xs:element name="getSearchResultType" type="tns:getSearchResultType"/>
      <xs:element name="getSearchResultTypeResponse" type="tns:getSearchResultTypeResponse"/>
      <xs:element name="getSearchResultTypes" type="tns:getSearchResultTypes"/>
      <xs:element name="getSearchResultTypesResponse" type="tns:getSearchResultTypesResponse"/>
      <xs:element name="getSearchType" type="tns:getSearchType"/>
      <xs:element name="getSearchTypeResponse" type="tns:getSearchTypeResponse"/>
      <xs:element name="getSearchTypes" type="tns:getSearchTypes"/>
      <xs:element name="getSearchTypesByCriteria" type="tns:getSearchTypesByCriteria"/>
      <xs:element name="getSearchTypesByCriteriaResponse" type="tns:getSearchTypesByCriteriaResponse"/>
      <xs:element name="getSearchTypesByResult" type="tns:getSearchTypesByResult"/>
      <xs:element name="getSearchTypesByResultResponse" type="tns:getSearchTypesByResultResponse"/>
      <xs:element name="getSearchTypesResponse" type="tns:getSearchTypesResponse"/>
      <xs:element name="searchForResults" type="tns:searchForResults"/>
      <xs:element name="searchForResultsResponse" type="tns:searchForResultsResponse"/>
      <xs:complexType name="getSearchCriteriaTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getSearchCriteriaTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchCriteriaTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="queryParams">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="queryParam" type="tns:queryParamInfo"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="queryParamInfo">
        <xs:sequence>
          <xs:element minOccurs="0" ref="ns1:fieldDescriptor"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
        <xs:attribute name="optional" type="xs:boolean" use="required"/>
      </xs:complexType>
      <xs:complexType name="searchRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="searchKey" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="params" nillable="true" type="tns:searchParam"/>
          <xs:element minOccurs="0" name="sortColumn" type="xs:string"/>
          <xs:element minOccurs="0" name="sortDirection" type="tns:sortDirection"/>
          <xs:element minOccurs="0" name="startAt" type="xs:int"/>
          <xs:element minOccurs="0" name="maxResults" type="xs:int"/>
          <xs:element minOccurs="0" name="neededTotalResults" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchParam">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="listValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="startAt" type="xs:int"/>
          <xs:element minOccurs="0" name="totalResults" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="rows" nillable="true" type="tns:searchResultRow"/>
          <xs:element minOccurs="0" name="sortColumn" type="xs:string"/>
          <xs:element minOccurs="0" name="sortDirection" type="tns:sortDirection"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResultRow">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="cells" nillable="true" type="tns:searchResultCell"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResultCell">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element minOccurs="0" name="key" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchType">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypeResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="searchResultTypeInfo" type="tns:searchResultTypeInfo"/>
          <xs:element minOccurs="0" name="searchCriteriaTypeInfo" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchResultTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="resultColumns">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="resultColumn" type="tns:resultColumnInfo"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="resultColumnInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="dataType" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByCriteria">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByCriteriaResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchForResults">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchTypeKey" type="xs:string"/>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="queryParamValues" type="tns:queryParamValue"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="queryParamValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="listValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchForResultsResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:result"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="result">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="resultCells" type="tns:resultCell"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resultCell">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getSearchCriteriaType">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchCriteriaTypeResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getSearchTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByResult">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByResultResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchResultTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getSearchResultTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchResultType">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchResultTypeResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchRelationship">
        <xs:sequence>
          <xs:element minOccurs="0" name="lhs" type="tns:typeAttribute"/>
          <xs:element minOccurs="0" name="rhs" type="tns:typeAttribute"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="typeAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="parentType" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="alias" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="sortDirection">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ASC"/>
          <xs:enumeration value="DESC"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/organization" xmlns:ns1="http://student.kuali.org/wsdl/search" xmlns:tns="http://student.kuali.org/wsdl/organization" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://student.kuali.org/wsdl/search"/>
      <xs:element name="search" type="tns:search"/>
      <xs:element name="searchResponse" type="tns:searchResponse"/>
      <xs:complexType name="search">
        <xs:sequence>
          <xs:element minOccurs="0" name="arg0" type="ns1:searchRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="ns1:searchResult"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="updateStatementResponse">
    <wsdl:part element="tns:updateStatementResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefObjectSubTypesResponse">
    <wsdl:part element="tns:getRefObjectSubTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchType">
    <wsdl:part element="tns:getSearchType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part element="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateStatement">
    <wsdl:part element="tns:updateStatement" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createStatement">
    <wsdl:part element="tns:createStatement" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForResultsResponse">
    <wsdl:part element="tns:searchForResultsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteStatementResponse">
    <wsdl:part element="tns:deleteStatementResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DataValidationErrorException">
    <wsdl:part element="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationResponse">
    <wsdl:part element="tns:getRefStatementRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForStatementResponse">
    <wsdl:part element="tns:getNaturalLanguageForStatementResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementsUsingStatementResponse">
    <wsdl:part element="tns:getStatementsUsingStatementResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementsByType">
    <wsdl:part element="tns:getStatementsByType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypesResponse">
    <wsdl:part element="tns:getObjectTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForStatement">
    <wsdl:part element="tns:getNaturalLanguageForStatement" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelation">
    <wsdl:part element="tns:getRefStatementRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTypesResponse">
    <wsdl:part element="tns:getStatementTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentType">
    <wsdl:part element="tns:getReqComponentType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementsUsingStatement">
    <wsdl:part element="tns:getStatementsUsingStatement" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteriaResponse">
    <wsdl:part element="tns:getSearchTypesByCriteriaResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationsByRef">
    <wsdl:part element="tns:getRefStatementRelationsByRef" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNlUsageTypeResponse">
    <wsdl:part element="tns:getNlUsageTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentsByTypeResponse">
    <wsdl:part element="tns:getReqComponentsByTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentResponse">
    <wsdl:part element="tns:getReqComponentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createReqComponentResponse">
    <wsdl:part element="tns:createReqComponentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRefStatementRelationResponse">
    <wsdl:part element="tns:createRefStatementRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateReqComponentResponse">
    <wsdl:part element="tns:updateReqComponentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateStatementTreeView">
    <wsdl:part element="tns:updateStatementTreeView" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypes">
    <wsdl:part element="tns:getSearchTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRefStatementRelationResponse">
    <wsdl:part element="tns:updateRefStatementRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchResponse">
    <wsdl:part element="tns:searchResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNlUsageTypes">
    <wsdl:part element="tns:getNlUsageTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypeResponse">
    <wsdl:part element="tns:getSearchResultTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="translateStatementTreeViewToNLResponse">
    <wsdl:part element="tns:translateStatementTreeViewToNLResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part element="tns:MissingParameterException" name="MissingParameterException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRefStatementRelationResponse">
    <wsdl:part element="tns:deleteRefStatementRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForRefStatementRelation">
    <wsdl:part element="tns:getNaturalLanguageForRefStatementRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponent">
    <wsdl:part element="tns:getReqComponent" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateObjectResponse">
    <wsdl:part element="tns:validateObjectResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteReqComponentResponse">
    <wsdl:part element="tns:deleteReqComponentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentTypes">
    <wsdl:part element="tns:getReqComponentTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateStatementTreeViewResponse">
    <wsdl:part element="tns:updateStatementTreeViewResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRefStatementRelation">
    <wsdl:part element="tns:updateRefStatementRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatement">
    <wsdl:part element="tns:getStatement" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="CircularReferenceException">
    <wsdl:part element="tns:CircularReferenceException" name="CircularReferenceException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentsByType">
    <wsdl:part element="tns:getReqComponentsByType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createStatementResponse">
    <wsdl:part element="tns:createStatementResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypesResponse">
    <wsdl:part element="tns:getSearchCriteriaTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefObjectSubTypes">
    <wsdl:part element="tns:getRefObjectSubTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementResponse">
    <wsdl:part element="tns:getStatementResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementsByTypeResponse">
    <wsdl:part element="tns:getStatementsByTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementsUsingReqComponent">
    <wsdl:part element="tns:getStatementsUsingReqComponent" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createReqComponent">
    <wsdl:part element="tns:createReqComponent" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypeResponse">
    <wsdl:part element="tns:getSearchTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="translateReqComponentToNL">
    <wsdl:part element="tns:translateReqComponentToNL" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateStatement">
    <wsdl:part element="tns:validateStatement" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRefStatementRelation">
    <wsdl:part element="tns:deleteRefStatementRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementsUsingReqComponentResponse">
    <wsdl:part element="tns:getStatementsUsingReqComponentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypes">
    <wsdl:part element="tns:getObjectTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part element="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForRefStatementRelationResponse">
    <wsdl:part element="tns:getNaturalLanguageForRefStatementRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationTypesResponse">
    <wsdl:part element="tns:getRefStatementRelationTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteStatement">
    <wsdl:part element="tns:deleteStatement" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="VersionMismatchException">
    <wsdl:part element="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part element="tns:OperationFailedException" name="OperationFailedException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part element="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateObject">
    <wsdl:part element="tns:validateObject" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaType">
    <wsdl:part element="tns:getSearchCriteriaType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForReqComponent">
    <wsdl:part element="tns:getNaturalLanguageForReqComponent" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructure">
    <wsdl:part element="tns:getObjectStructure" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypes">
    <wsdl:part element="tns:getSearchCriteriaTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTypesForStatementType">
    <wsdl:part element="tns:getStatementTypesForStatementType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationTypes">
    <wsdl:part element="tns:getRefStatementRelationTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateReqComponent">
    <wsdl:part element="tns:updateReqComponent" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationsByStatement">
    <wsdl:part element="tns:getRefStatementRelationsByStatement" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForResults">
    <wsdl:part element="tns:searchForResults" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTypesForRefStatementRelationTypeResponse">
    <wsdl:part element="tns:getStatementTypesForRefStatementRelationTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructureResponse">
    <wsdl:part element="tns:getObjectStructureResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNlUsageType">
    <wsdl:part element="tns:getNlUsageType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationTypesForRefObjectSubTypeResponse">
    <wsdl:part element="tns:getRefStatementRelationTypesForRefObjectSubTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTypesForRefStatementRelationType">
    <wsdl:part element="tns:getStatementTypesForRefStatementRelationType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesResponse">
    <wsdl:part element="tns:getSearchTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationsByRefResponse">
    <wsdl:part element="tns:getRefStatementRelationsByRefResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationTypesForRefObjectSubType">
    <wsdl:part element="tns:getRefStatementRelationTypesForRefObjectSubType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTypes">
    <wsdl:part element="tns:getStatementTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentTypesResponse">
    <wsdl:part element="tns:getReqComponentTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateStatementResponse">
    <wsdl:part element="tns:validateStatementResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationType">
    <wsdl:part element="tns:getRefStatementRelationType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTreeView">
    <wsdl:part element="tns:getStatementTreeView" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementType">
    <wsdl:part element="tns:getStatementType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateReqComponentResponse">
    <wsdl:part element="tns:validateReqComponentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTypesForStatementTypeResponse">
    <wsdl:part element="tns:getStatementTypesForStatementTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateReqComponent">
    <wsdl:part element="tns:validateReqComponent" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateStructureDataResponse">
    <wsdl:part element="tns:validateStructureDataResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRefStatementRelation">
    <wsdl:part element="tns:createRefStatementRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefObjectTypesResponse">
    <wsdl:part element="tns:getRefObjectTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part element="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultType">
    <wsdl:part element="tns:getSearchResultType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteReqComponent">
    <wsdl:part element="tns:deleteReqComponent" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTreeViewResponse">
    <wsdl:part element="tns:getStatementTreeViewResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="search">
    <wsdl:part element="tns:search" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationsByStatementResponse">
    <wsdl:part element="tns:getRefStatementRelationsByStatementResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNlUsageTypesResponse">
    <wsdl:part element="tns:getNlUsageTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentTypesForStatementType">
    <wsdl:part element="tns:getReqComponentTypesForStatementType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypesResponse">
    <wsdl:part element="tns:getSearchResultTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypeResponse">
    <wsdl:part element="tns:getSearchCriteriaTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentTypeResponse">
    <wsdl:part element="tns:getReqComponentTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypes">
    <wsdl:part element="tns:getSearchResultTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReqComponentTypesForStatementTypeResponse">
    <wsdl:part element="tns:getReqComponentTypesForStatementTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="translateStatementTreeViewToNL">
    <wsdl:part element="tns:translateStatementTreeViewToNL" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateRefStatementRelationResponse">
    <wsdl:part element="tns:validateRefStatementRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getStatementTypeResponse">
    <wsdl:part element="tns:getStatementTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefStatementRelationTypeResponse">
    <wsdl:part element="tns:getRefStatementRelationTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResultResponse">
    <wsdl:part element="tns:getSearchTypesByResultResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="translateReqComponentToNLResponse">
    <wsdl:part element="tns:translateReqComponentToNLResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResult">
    <wsdl:part element="tns:getSearchTypesByResult" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteria">
    <wsdl:part element="tns:getSearchTypesByCriteria" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateStructureData">
    <wsdl:part element="tns:validateStructureData" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateRefStatementRelation">
    <wsdl:part element="tns:validateRefStatementRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRefObjectTypes">
    <wsdl:part element="tns:getRefObjectTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForReqComponentResponse">
    <wsdl:part element="tns:getNaturalLanguageForReqComponentResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="StatementService">
    <wsdl:operation name="updateStatement">
      <wsdl:input message="tns:updateStatement" name="updateStatement"></wsdl:input>
      <wsdl:output message="tns:updateStatementResponse" name="updateStatementResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:CircularReferenceException" name="CircularReferenceException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="translateReqComponentToNL">
      <wsdl:input message="tns:translateReqComponentToNL" name="translateReqComponentToNL"></wsdl:input>
      <wsdl:output message="tns:translateReqComponentToNLResponse" name="translateReqComponentToNLResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectStructure">
      <wsdl:input message="tns:getObjectStructure" name="getObjectStructure"></wsdl:input>
      <wsdl:output message="tns:getObjectStructureResponse" name="getObjectStructureResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaTypes">
      <wsdl:input message="tns:getSearchCriteriaTypes" name="getSearchCriteriaTypes"></wsdl:input>
      <wsdl:output message="tns:getSearchCriteriaTypesResponse" name="getSearchCriteriaTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTypesForStatementType">
      <wsdl:input message="tns:getStatementTypesForStatementType" name="getStatementTypesForStatementType"></wsdl:input>
      <wsdl:output message="tns:getStatementTypesForStatementTypeResponse" name="getStatementTypesForStatementTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="search">
      <wsdl:input message="tns:search" name="search"></wsdl:input>
      <wsdl:output message="tns:searchResponse" name="searchResponse"></wsdl:output>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createReqComponent">
      <wsdl:input message="tns:createReqComponent" name="createReqComponent"></wsdl:input>
      <wsdl:output message="tns:createReqComponentResponse" name="createReqComponentResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForRefStatementRelation">
      <wsdl:input message="tns:getNaturalLanguageForRefStatementRelation" name="getNaturalLanguageForRefStatementRelation"></wsdl:input>
      <wsdl:output message="tns:getNaturalLanguageForRefStatementRelationResponse" name="getNaturalLanguageForRefStatementRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateStatement">
      <wsdl:input message="tns:validateStatement" name="validateStatement"></wsdl:input>
      <wsdl:output message="tns:validateStatementResponse" name="validateStatementResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRefStatementRelation">
      <wsdl:input message="tns:updateRefStatementRelation" name="updateRefStatementRelation"></wsdl:input>
      <wsdl:output message="tns:updateRefStatementRelationResponse" name="updateRefStatementRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <wsdl:input message="tns:getSearchType" name="getSearchType"></wsdl:input>
      <wsdl:output message="tns:getSearchTypeResponse" name="getSearchTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateReqComponent">
      <wsdl:input message="tns:updateReqComponent" name="updateReqComponent"></wsdl:input>
      <wsdl:output message="tns:updateReqComponentResponse" name="updateReqComponentResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentType">
      <wsdl:input message="tns:getReqComponentType" name="getReqComponentType"></wsdl:input>
      <wsdl:output message="tns:getReqComponentTypeResponse" name="getReqComponentTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createStatement">
      <wsdl:input message="tns:createStatement" name="createStatement"></wsdl:input>
      <wsdl:output message="tns:createStatementResponse" name="createStatementResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementType">
      <wsdl:input message="tns:getStatementType" name="getStatementType"></wsdl:input>
      <wsdl:output message="tns:getStatementTypeResponse" name="getStatementTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRefStatementRelation">
      <wsdl:input message="tns:deleteRefStatementRelation" name="deleteRefStatementRelation"></wsdl:input>
      <wsdl:output message="tns:deleteRefStatementRelationResponse" name="deleteRefStatementRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefObjectSubTypes">
      <wsdl:input message="tns:getRefObjectSubTypes" name="getRefObjectSubTypes"></wsdl:input>
      <wsdl:output message="tns:getRefObjectSubTypesResponse" name="getRefObjectSubTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteStatement">
      <wsdl:input message="tns:deleteStatement" name="deleteStatement"></wsdl:input>
      <wsdl:output message="tns:deleteStatementResponse" name="deleteStatementResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateReqComponent">
      <wsdl:input message="tns:validateReqComponent" name="validateReqComponent"></wsdl:input>
      <wsdl:output message="tns:validateReqComponentResponse" name="validateReqComponentResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefObjectTypes">
      <wsdl:input message="tns:getRefObjectTypes" name="getRefObjectTypes"></wsdl:input>
      <wsdl:output message="tns:getRefObjectTypesResponse" name="getRefObjectTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateObject">
      <wsdl:input message="tns:validateObject" name="validateObject"></wsdl:input>
      <wsdl:output message="tns:validateObjectResponse" name="validateObjectResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelation">
      <wsdl:input message="tns:getRefStatementRelation" name="getRefStatementRelation"></wsdl:input>
      <wsdl:output message="tns:getRefStatementRelationResponse" name="getRefStatementRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateStatementTreeView">
      <wsdl:input message="tns:updateStatementTreeView" name="updateStatementTreeView"></wsdl:input>
      <wsdl:output message="tns:updateStatementTreeViewResponse" name="updateStatementTreeViewResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:CircularReferenceException" name="CircularReferenceException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementsUsingStatement">
      <wsdl:input message="tns:getStatementsUsingStatement" name="getStatementsUsingStatement"></wsdl:input>
      <wsdl:output message="tns:getStatementsUsingStatementResponse" name="getStatementsUsingStatementResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatement">
      <wsdl:input message="tns:getStatement" name="getStatement"></wsdl:input>
      <wsdl:output message="tns:getStatementResponse" name="getStatementResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationsByRef">
      <wsdl:input message="tns:getRefStatementRelationsByRef" name="getRefStatementRelationsByRef"></wsdl:input>
      <wsdl:output message="tns:getRefStatementRelationsByRefResponse" name="getRefStatementRelationsByRefResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementsUsingReqComponent">
      <wsdl:input message="tns:getStatementsUsingReqComponent" name="getStatementsUsingReqComponent"></wsdl:input>
      <wsdl:output message="tns:getStatementsUsingReqComponentResponse" name="getStatementsUsingReqComponentResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <wsdl:input message="tns:getSearchTypesByCriteria" name="getSearchTypesByCriteria"></wsdl:input>
      <wsdl:output message="tns:getSearchTypesByCriteriaResponse" name="getSearchTypesByCriteriaResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationType">
      <wsdl:input message="tns:getRefStatementRelationType" name="getRefStatementRelationType"></wsdl:input>
      <wsdl:output message="tns:getRefStatementRelationTypeResponse" name="getRefStatementRelationTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateStructureData">
      <wsdl:input message="tns:validateStructureData" name="validateStructureData"></wsdl:input>
      <wsdl:output message="tns:validateStructureDataResponse" name="validateStructureDataResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationsByStatement">
      <wsdl:input message="tns:getRefStatementRelationsByStatement" name="getRefStatementRelationsByStatement"></wsdl:input>
      <wsdl:output message="tns:getRefStatementRelationsByStatementResponse" name="getRefStatementRelationsByStatementResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTypes">
      <wsdl:input message="tns:getStatementTypes" name="getStatementTypes"></wsdl:input>
      <wsdl:output message="tns:getStatementTypesResponse" name="getStatementTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteReqComponent">
      <wsdl:input message="tns:deleteReqComponent" name="deleteReqComponent"></wsdl:input>
      <wsdl:output message="tns:deleteReqComponentResponse" name="deleteReqComponentResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="translateStatementTreeViewToNL">
      <wsdl:input message="tns:translateStatementTreeViewToNL" name="translateStatementTreeViewToNL"></wsdl:input>
      <wsdl:output message="tns:translateStatementTreeViewToNLResponse" name="translateStatementTreeViewToNLResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementsByType">
      <wsdl:input message="tns:getStatementsByType" name="getStatementsByType"></wsdl:input>
      <wsdl:output message="tns:getStatementsByTypeResponse" name="getStatementsByTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRefStatementRelation">
      <wsdl:input message="tns:createRefStatementRelation" name="createRefStatementRelation"></wsdl:input>
      <wsdl:output message="tns:createRefStatementRelationResponse" name="createRefStatementRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationTypesForRefObjectSubType">
      <wsdl:input message="tns:getRefStatementRelationTypesForRefObjectSubType" name="getRefStatementRelationTypesForRefObjectSubType"></wsdl:input>
      <wsdl:output message="tns:getRefStatementRelationTypesForRefObjectSubTypeResponse" name="getRefStatementRelationTypesForRefObjectSubTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentTypes">
      <wsdl:input message="tns:getReqComponentTypes" name="getReqComponentTypes"></wsdl:input>
      <wsdl:output message="tns:getReqComponentTypesResponse" name="getReqComponentTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <wsdl:input message="tns:getObjectTypes" name="getObjectTypes"></wsdl:input>
      <wsdl:output message="tns:getObjectTypesResponse" name="getObjectTypesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchForResults">
      <wsdl:input message="tns:searchForResults" name="searchForResults"></wsdl:input>
      <wsdl:output message="tns:searchForResultsResponse" name="searchForResultsResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentsByType">
      <wsdl:input message="tns:getReqComponentsByType" name="getReqComponentsByType"></wsdl:input>
      <wsdl:output message="tns:getReqComponentsByTypeResponse" name="getReqComponentsByTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <wsdl:input message="tns:getSearchCriteriaType" name="getSearchCriteriaType"></wsdl:input>
      <wsdl:output message="tns:getSearchCriteriaTypeResponse" name="getSearchCriteriaTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentTypesForStatementType">
      <wsdl:input message="tns:getReqComponentTypesForStatementType" name="getReqComponentTypesForStatementType"></wsdl:input>
      <wsdl:output message="tns:getReqComponentTypesForStatementTypeResponse" name="getReqComponentTypesForStatementTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNlUsageTypes">
      <wsdl:input message="tns:getNlUsageTypes" name="getNlUsageTypes"></wsdl:input>
      <wsdl:output message="tns:getNlUsageTypesResponse" name="getNlUsageTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTreeView">
      <wsdl:input message="tns:getStatementTreeView" name="getStatementTreeView"></wsdl:input>
      <wsdl:output message="tns:getStatementTreeViewResponse" name="getStatementTreeViewResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <wsdl:input message="tns:getSearchTypes" name="getSearchTypes"></wsdl:input>
      <wsdl:output message="tns:getSearchTypesResponse" name="getSearchTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponent">
      <wsdl:input message="tns:getReqComponent" name="getReqComponent"></wsdl:input>
      <wsdl:output message="tns:getReqComponentResponse" name="getReqComponentResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForReqComponent">
      <wsdl:input message="tns:getNaturalLanguageForReqComponent" name="getNaturalLanguageForReqComponent"></wsdl:input>
      <wsdl:output message="tns:getNaturalLanguageForReqComponentResponse" name="getNaturalLanguageForReqComponentResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <wsdl:input message="tns:getSearchTypesByResult" name="getSearchTypesByResult"></wsdl:input>
      <wsdl:output message="tns:getSearchTypesByResultResponse" name="getSearchTypesByResultResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <wsdl:input message="tns:getSearchResultTypes" name="getSearchResultTypes"></wsdl:input>
      <wsdl:output message="tns:getSearchResultTypesResponse" name="getSearchResultTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateRefStatementRelation">
      <wsdl:input message="tns:validateRefStatementRelation" name="validateRefStatementRelation"></wsdl:input>
      <wsdl:output message="tns:validateRefStatementRelationResponse" name="validateRefStatementRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForStatement">
      <wsdl:input message="tns:getNaturalLanguageForStatement" name="getNaturalLanguageForStatement"></wsdl:input>
      <wsdl:output message="tns:getNaturalLanguageForStatementResponse" name="getNaturalLanguageForStatementResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNlUsageType">
      <wsdl:input message="tns:getNlUsageType" name="getNlUsageType"></wsdl:input>
      <wsdl:output message="tns:getNlUsageTypeResponse" name="getNlUsageTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <wsdl:input message="tns:getSearchResultType" name="getSearchResultType"></wsdl:input>
      <wsdl:output message="tns:getSearchResultTypeResponse" name="getSearchResultTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationTypes">
      <wsdl:input message="tns:getRefStatementRelationTypes" name="getRefStatementRelationTypes"></wsdl:input>
      <wsdl:output message="tns:getRefStatementRelationTypesResponse" name="getRefStatementRelationTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTypesForRefStatementRelationType">
      <wsdl:input message="tns:getStatementTypesForRefStatementRelationType" name="getStatementTypesForRefStatementRelationType"></wsdl:input>
      <wsdl:output message="tns:getStatementTypesForRefStatementRelationTypeResponse" name="getStatementTypesForRefStatementRelationTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="StatementServiceSoapBinding" type="tns:StatementService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getObjectStructure">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectStructure">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectStructureResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="translateReqComponentToNL">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="translateReqComponentToNL">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="translateReqComponentToNLResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="CircularReferenceException">
        <soap:fault name="CircularReferenceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTypesForStatementType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementTypesForStatementType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementTypesForStatementTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="search">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="search">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForRefStatementRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNaturalLanguageForRefStatementRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNaturalLanguageForRefStatementRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRefStatementRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateRefStatementRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateRefStatementRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getReqComponentType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReqComponentTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRefStatementRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteRefStatementRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteRefStatementRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefObjectSubTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefObjectSubTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefObjectSubTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefObjectTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefObjectTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefObjectTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateObject">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateObject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateObjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefStatementRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefStatementRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateStatementTreeView">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateStatementTreeView">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateStatementTreeViewResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="CircularReferenceException">
        <soap:fault name="CircularReferenceException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementsUsingStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementsUsingStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementsUsingStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationsByRef">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefStatementRelationsByRef">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefStatementRelationsByRefResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementsUsingReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementsUsingReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementsUsingReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByCriteria">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByCriteriaResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefStatementRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefStatementRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationsByStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefStatementRelationsByStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefStatementRelationsByStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateStructureData">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateStructureData">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateStructureDataResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="translateStatementTreeViewToNL">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="translateStatementTreeViewToNL">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="translateStatementTreeViewToNLResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementsByType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementsByType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementsByTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRefStatementRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRefStatementRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createRefStatementRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationTypesForRefObjectSubType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefStatementRelationTypesForRefObjectSubType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefStatementRelationTypesForRefObjectSubTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getReqComponentTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReqComponentTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentsByType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getReqComponentsByType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReqComponentsByTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForResults">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForResults">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForResultsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNlUsageTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNlUsageTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNlUsageTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponentTypesForStatementType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getReqComponentTypesForStatementType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReqComponentTypesForStatementTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTreeView">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementTreeView">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementTreeViewResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNaturalLanguageForReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNaturalLanguageForReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByResult">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByResultResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNaturalLanguageForStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNaturalLanguageForStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateRefStatementRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateRefStatementRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateRefStatementRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNlUsageType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNlUsageType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNlUsageTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRefStatementRelationTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRefStatementRelationTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRefStatementRelationTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getStatementTypesForRefStatementRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getStatementTypesForRefStatementRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getStatementTypesForRefStatementRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="StatementService">
    <wsdl:port binding="tns:StatementServiceSoapBinding" name="StatementServicePort">
      <soap:address location="http://localhost/ks-embedded/services/StatementService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost/ks-embedded/services/StatementService</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="createRefStatementRelation" bindingOperationName="createRefStatementRelation" type="Request-Response" outputName="createRefStatementRelationResponse" inputName="createRefStatementRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="createReqComponent" bindingOperationName="createReqComponent" type="Request-Response" outputName="createReqComponentResponse" inputName="createReqComponent" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="createStatement" bindingOperationName="createStatement" type="Request-Response" outputName="createStatementResponse" inputName="createStatement" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="deleteRefStatementRelation" bindingOperationName="deleteRefStatementRelation" type="Request-Response" outputName="deleteRefStatementRelationResponse" inputName="deleteRefStatementRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="deleteReqComponent" bindingOperationName="deleteReqComponent" type="Request-Response" outputName="deleteReqComponentResponse" inputName="deleteReqComponent" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="deleteStatement" bindingOperationName="deleteStatement" type="Request-Response" outputName="deleteStatementResponse" inputName="deleteStatement" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getNaturalLanguageForRefStatementRelation" bindingOperationName="getNaturalLanguageForRefStatementRelation" type="Request-Response" outputName="getNaturalLanguageForRefStatementRelationResponse" inputName="getNaturalLanguageForRefStatementRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getNaturalLanguageForReqComponent" bindingOperationName="getNaturalLanguageForReqComponent" type="Request-Response" outputName="getNaturalLanguageForReqComponentResponse" inputName="getNaturalLanguageForReqComponent" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getNaturalLanguageForStatement" bindingOperationName="getNaturalLanguageForStatement" type="Request-Response" outputName="getNaturalLanguageForStatementResponse" inputName="getNaturalLanguageForStatement" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getNlUsageType" bindingOperationName="getNlUsageType" type="Request-Response" outputName="getNlUsageTypeResponse" inputName="getNlUsageType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getNlUsageTypes" bindingOperationName="getNlUsageTypes" type="Request-Response" outputName="getNlUsageTypesResponse" inputName="getNlUsageTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getObjectStructure" bindingOperationName="getObjectStructure" type="Request-Response" outputName="getObjectStructureResponse" inputName="getObjectStructure" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getObjectTypes" bindingOperationName="getObjectTypes" type="Request-Response" outputName="getObjectTypesResponse" inputName="getObjectTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getRefObjectSubTypes" bindingOperationName="getRefObjectSubTypes" type="Request-Response" outputName="getRefObjectSubTypesResponse" inputName="getRefObjectSubTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getRefObjectTypes" bindingOperationName="getRefObjectTypes" type="Request-Response" outputName="getRefObjectTypesResponse" inputName="getRefObjectTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getRefStatementRelation" bindingOperationName="getRefStatementRelation" type="Request-Response" outputName="getRefStatementRelationResponse" inputName="getRefStatementRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getRefStatementRelationsByRef" bindingOperationName="getRefStatementRelationsByRef" type="Request-Response" outputName="getRefStatementRelationsByRefResponse" inputName="getRefStatementRelationsByRef" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/StatementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:stat="http://student.kuali.org/wsdl/statement">
   <soapenv:Header/>
   <soapenv:Body>
      <stat:getRefStatementRelationsByRef>
         <!--Optional:-->
         <refObjectTypeKey>clu</refObjectTypeKey><refObjectId>cded1c4c-37cc-41bf-bb27-cac92459359a</refObjectId>
         <!--Optional:-->
         
      </stat:getRefStatementRelationsByRef>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/statement/StatementService/getRefStatementRelationsByRef"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getRefStatementRelationsByStatement" bindingOperationName="getRefStatementRelationsByStatement" type="Request-Response" outputName="getRefStatementRelationsByStatementResponse" inputName="getRefStatementRelationsByStatement" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getRefStatementRelationType" bindingOperationName="getRefStatementRelationType" type="Request-Response" outputName="getRefStatementRelationTypeResponse" inputName="getRefStatementRelationType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getRefStatementRelationTypes" bindingOperationName="getRefStatementRelationTypes" type="Request-Response" outputName="getRefStatementRelationTypesResponse" inputName="getRefStatementRelationTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getRefStatementRelationTypesForRefObjectSubType" bindingOperationName="getRefStatementRelationTypesForRefObjectSubType" type="Request-Response" outputName="getRefStatementRelationTypesForRefObjectSubTypeResponse" inputName="getRefStatementRelationTypesForRefObjectSubType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getReqComponent" bindingOperationName="getReqComponent" type="Request-Response" outputName="getReqComponentResponse" inputName="getReqComponent" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getReqComponentsByType" bindingOperationName="getReqComponentsByType" type="Request-Response" outputName="getReqComponentsByTypeResponse" inputName="getReqComponentsByType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getReqComponentType" bindingOperationName="getReqComponentType" type="Request-Response" outputName="getReqComponentTypeResponse" inputName="getReqComponentType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getReqComponentTypes" bindingOperationName="getReqComponentTypes" type="Request-Response" outputName="getReqComponentTypesResponse" inputName="getReqComponentTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getReqComponentTypesForStatementType" bindingOperationName="getReqComponentTypesForStatementType" type="Request-Response" outputName="getReqComponentTypesForStatementTypeResponse" inputName="getReqComponentTypesForStatementType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchCriteriaType" bindingOperationName="getSearchCriteriaType" type="Request-Response" outputName="getSearchCriteriaTypeResponse" inputName="getSearchCriteriaType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchCriteriaTypes" bindingOperationName="getSearchCriteriaTypes" type="Request-Response" outputName="getSearchCriteriaTypesResponse" inputName="getSearchCriteriaTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchResultType" bindingOperationName="getSearchResultType" type="Request-Response" outputName="getSearchResultTypeResponse" inputName="getSearchResultType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchResultTypes" bindingOperationName="getSearchResultTypes" type="Request-Response" outputName="getSearchResultTypesResponse" inputName="getSearchResultTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchType" bindingOperationName="getSearchType" type="Request-Response" outputName="getSearchTypeResponse" inputName="getSearchType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchTypes" bindingOperationName="getSearchTypes" type="Request-Response" outputName="getSearchTypesResponse" inputName="getSearchTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchTypesByCriteria" bindingOperationName="getSearchTypesByCriteria" type="Request-Response" outputName="getSearchTypesByCriteriaResponse" inputName="getSearchTypesByCriteria" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchTypesByResult" bindingOperationName="getSearchTypesByResult" type="Request-Response" outputName="getSearchTypesByResultResponse" inputName="getSearchTypesByResult" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getStatement" bindingOperationName="getStatement" type="Request-Response" outputName="getStatementResponse" inputName="getStatement" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getStatementsByType" bindingOperationName="getStatementsByType" type="Request-Response" outputName="getStatementsByTypeResponse" inputName="getStatementsByType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getStatementsUsingReqComponent" bindingOperationName="getStatementsUsingReqComponent" type="Request-Response" outputName="getStatementsUsingReqComponentResponse" inputName="getStatementsUsingReqComponent" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getStatementsUsingStatement" bindingOperationName="getStatementsUsingStatement" type="Request-Response" outputName="getStatementsUsingStatementResponse" inputName="getStatementsUsingStatement" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getStatementTreeView" bindingOperationName="getStatementTreeView" type="Request-Response" outputName="getStatementTreeViewResponse" inputName="getStatementTreeView" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getStatementType" bindingOperationName="getStatementType" type="Request-Response" outputName="getStatementTypeResponse" inputName="getStatementType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getStatementTypes" bindingOperationName="getStatementTypes" type="Request-Response" outputName="getStatementTypesResponse" inputName="getStatementTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getStatementTypesForRefStatementRelationType" bindingOperationName="getStatementTypesForRefStatementRelationType" type="Request-Response" outputName="getStatementTypesForRefStatementRelationTypeResponse" inputName="getStatementTypesForRefStatementRelationType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getStatementTypesForStatementType" bindingOperationName="getStatementTypesForStatementType" type="Request-Response" outputName="getStatementTypesForStatementTypeResponse" inputName="getStatementTypesForStatementType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="search" bindingOperationName="search" type="Request-Response" outputName="searchResponse" inputName="search" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="searchForResults" bindingOperationName="searchForResults" type="Request-Response" outputName="searchForResultsResponse" inputName="searchForResults" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="translateReqComponentToNL" bindingOperationName="translateReqComponentToNL" type="Request-Response" outputName="translateReqComponentToNLResponse" inputName="translateReqComponentToNL" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="translateStatementTreeViewToNL" bindingOperationName="translateStatementTreeViewToNL" type="Request-Response" outputName="translateStatementTreeViewToNLResponse" inputName="translateStatementTreeViewToNL" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateRefStatementRelation" bindingOperationName="updateRefStatementRelation" type="Request-Response" outputName="updateRefStatementRelationResponse" inputName="updateRefStatementRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateReqComponent" bindingOperationName="updateReqComponent" type="Request-Response" outputName="updateReqComponentResponse" inputName="updateReqComponent" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateStatement" bindingOperationName="updateStatement" type="Request-Response" outputName="updateStatementResponse" inputName="updateStatement" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateStatementTreeView" bindingOperationName="updateStatementTreeView" type="Request-Response" outputName="updateStatementTreeViewResponse" inputName="updateStatementTreeView" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateObject" bindingOperationName="validateObject" type="Request-Response" outputName="validateObjectResponse" inputName="validateObject" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateRefStatementRelation" bindingOperationName="validateRefStatementRelation" type="Request-Response" outputName="validateRefStatementRelationResponse" inputName="validateRefStatementRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateReqComponent" bindingOperationName="validateReqComponent" type="Request-Response" outputName="validateReqComponentResponse" inputName="validateReqComponent" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateStatement" bindingOperationName="validateStatement" type="Request-Response" outputName="validateStatementResponse" inputName="validateStatement" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateStructureData" bindingOperationName="validateStructureData" type="Request-Response" outputName="validateStructureDataResponse" inputName="validateStructureData" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="OrganizationServiceSoapBinding" type="wsdl" bindingName="{http://student.kuali.org/wsdl/organization}OrganizationServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost/ks-embedded/services/OrganizationService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost/ks-embedded/services/OrganizationService?wsdl"><con:part><con:url>http://localhost/ks-embedded/services/OrganizationService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="OrganizationService" targetNamespace="http://student.kuali.org/wsdl/organization" xmlns:ns1="http://cxf.apache.org/bindings/xformat" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://student.kuali.org/wsdl/organization" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/search" xmlns:ns1="http://student.kuali.org/wsdl/dictionary" xmlns:tns="http://student.kuali.org/wsdl/search" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://student.kuali.org/wsdl/dictionary"/>
      <xs:element name="getSearchCriteriaType" type="tns:getSearchCriteriaType"/>
      <xs:element name="getSearchCriteriaTypeResponse" type="tns:getSearchCriteriaTypeResponse"/>
      <xs:element name="getSearchCriteriaTypes" type="tns:getSearchCriteriaTypes"/>
      <xs:element name="getSearchCriteriaTypesResponse" type="tns:getSearchCriteriaTypesResponse"/>
      <xs:element name="getSearchResultType" type="tns:getSearchResultType"/>
      <xs:element name="getSearchResultTypeResponse" type="tns:getSearchResultTypeResponse"/>
      <xs:element name="getSearchResultTypes" type="tns:getSearchResultTypes"/>
      <xs:element name="getSearchResultTypesResponse" type="tns:getSearchResultTypesResponse"/>
      <xs:element name="getSearchType" type="tns:getSearchType"/>
      <xs:element name="getSearchTypeResponse" type="tns:getSearchTypeResponse"/>
      <xs:element name="getSearchTypes" type="tns:getSearchTypes"/>
      <xs:element name="getSearchTypesByCriteria" type="tns:getSearchTypesByCriteria"/>
      <xs:element name="getSearchTypesByCriteriaResponse" type="tns:getSearchTypesByCriteriaResponse"/>
      <xs:element name="getSearchTypesByResult" type="tns:getSearchTypesByResult"/>
      <xs:element name="getSearchTypesByResultResponse" type="tns:getSearchTypesByResultResponse"/>
      <xs:element name="getSearchTypesResponse" type="tns:getSearchTypesResponse"/>
      <xs:element name="searchForResults" type="tns:searchForResults"/>
      <xs:element name="searchForResultsResponse" type="tns:searchForResultsResponse"/>
      <xs:complexType name="getSearchResultTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getSearchResultTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResultTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="resultColumns">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="resultColumn" type="tns:resultColumnInfo"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="resultColumnInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="dataType" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchForResults">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchTypeKey" type="xs:string"/>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="queryParamValues" type="tns:queryParamValue"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="queryParamValue">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="listValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchForResultsResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:result"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="result">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="resultCells" type="tns:resultCell"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="resultCell">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchRequest">
        <xs:sequence>
          <xs:element minOccurs="0" name="searchKey" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="params" nillable="true" type="tns:searchParam"/>
          <xs:element minOccurs="0" name="sortColumn" type="xs:string"/>
          <xs:element minOccurs="0" name="sortDirection" type="tns:sortDirection"/>
          <xs:element minOccurs="0" name="startAt" type="xs:int"/>
          <xs:element minOccurs="0" name="maxResults" type="xs:int"/>
          <xs:element minOccurs="0" name="neededTotalResults" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchParam">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="listValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchResult">
        <xs:sequence>
          <xs:element minOccurs="0" name="startAt" type="xs:int"/>
          <xs:element minOccurs="0" name="totalResults" type="xs:int"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="rows" nillable="true" type="tns:searchResultRow"/>
          <xs:element minOccurs="0" name="sortColumn" type="xs:string"/>
          <xs:element minOccurs="0" name="sortDirection" type="tns:sortDirection"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResultRow">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="cells" nillable="true" type="tns:searchResultCell"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResultCell">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element minOccurs="0" name="key" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchResultType">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchResultTypeResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchCriteriaType">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchCriteriaTypeResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchCriteriaTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="queryParams">
            <xs:complexType>
              <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="queryParam" type="tns:queryParamInfo"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="queryParamInfo">
        <xs:sequence>
          <xs:element minOccurs="0" ref="ns1:fieldDescriptor"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
        <xs:attribute name="optional" type="xs:boolean" use="required"/>
      </xs:complexType>
      <xs:complexType name="getSearchTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getSearchTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchTypeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="searchResultTypeInfo" type="tns:searchResultTypeInfo"/>
          <xs:element minOccurs="0" name="searchCriteriaTypeInfo" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByResult">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByResultResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByCriteria">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypesByCriteriaResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchCriteriaTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getSearchCriteriaTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchType">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="searchTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getSearchTypeResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchRelationship">
        <xs:sequence>
          <xs:element minOccurs="0" name="lhs" type="tns:typeAttribute"/>
          <xs:element minOccurs="0" name="rhs" type="tns:typeAttribute"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="typeAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="parentType" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="alias" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="sortDirection">
        <xs:restriction base="xs:string">
          <xs:enumeration value="ASC"/>
          <xs:enumeration value="DESC"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/exceptions" xmlns:tns="http://student.kuali.org/wsdl/exceptions" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
      <xs:element name="DataValidationErrorException" type="tns:DataValidationErrorException"/>
      <xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
      <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
      <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
      <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
      <xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
      <xs:element name="VersionMismatchException" type="tns:VersionMismatchException"/>
      <xs:complexType name="MissingParameterException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="InvalidParameterException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="OperationFailedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DoesNotExistException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PermissionDeniedException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="VersionMismatchException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DataValidationErrorException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AlreadyExistsException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/organization" xmlns:ns0="http://student.kuali.org/wsdl/exceptions" xmlns:ns1="http://student.kuali.org/wsdl/search" xmlns:ns2="http://student.kuali.org/wsdl/dictionary" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://student.kuali.org/wsdl/search"/>
      <xs:element name="addPositionRestrictionToOrg" type="tns:addPositionRestrictionToOrg"/>
      <xs:element name="addPositionRestrictionToOrgResponse" type="tns:addPositionRestrictionToOrgResponse"/>
      <xs:element name="createOrgOrgRelation" type="tns:createOrgOrgRelation"/>
      <xs:element name="createOrgOrgRelationResponse" type="tns:createOrgOrgRelationResponse"/>
      <xs:element name="createOrgPersonRelation" type="tns:createOrgPersonRelation"/>
      <xs:element name="createOrgPersonRelationResponse" type="tns:createOrgPersonRelationResponse"/>
      <xs:element name="createOrganization" type="tns:createOrganization"/>
      <xs:element name="createOrganizationResponse" type="tns:createOrganizationResponse"/>
      <xs:element name="deleteOrganization" type="tns:deleteOrganization"/>
      <xs:element name="deleteOrganizationResponse" type="tns:deleteOrganizationResponse"/>
      <xs:element name="getAllAncestors" type="tns:getAllAncestors"/>
      <xs:element name="getAllAncestorsResponse" type="tns:getAllAncestorsResponse"/>
      <xs:element name="getAllDescendants" type="tns:getAllDescendants"/>
      <xs:element name="getAllDescendantsResponse" type="tns:getAllDescendantsResponse"/>
      <xs:element name="getAllOrgPersonRelationsByOrg" type="tns:getAllOrgPersonRelationsByOrg"/>
      <xs:element name="getAllOrgPersonRelationsByOrgResponse" type="tns:getAllOrgPersonRelationsByOrgResponse"/>
      <xs:element name="getAllOrgPersonRelationsByPerson" type="tns:getAllOrgPersonRelationsByPerson"/>
      <xs:element name="getAllOrgPersonRelationsByPersonResponse" type="tns:getAllOrgPersonRelationsByPersonResponse"/>
      <xs:element name="getOrgHierarchies" type="tns:getOrgHierarchies"/>
      <xs:element name="getOrgHierarchiesResponse" type="tns:getOrgHierarchiesResponse"/>
      <xs:element name="getOrgHierarchy" type="tns:getOrgHierarchy"/>
      <xs:element name="getOrgHierarchyResponse" type="tns:getOrgHierarchyResponse"/>
      <xs:element name="getOrgOrgRelation" type="tns:getOrgOrgRelation"/>
      <xs:element name="getOrgOrgRelationResponse" type="tns:getOrgOrgRelationResponse"/>
      <xs:element name="getOrgOrgRelationType" type="tns:getOrgOrgRelationType"/>
      <xs:element name="getOrgOrgRelationTypeResponse" type="tns:getOrgOrgRelationTypeResponse"/>
      <xs:element name="getOrgOrgRelationTypes" type="tns:getOrgOrgRelationTypes"/>
      <xs:element name="getOrgOrgRelationTypesForOrgHierarchy" type="tns:getOrgOrgRelationTypesForOrgHierarchy"/>
      <xs:element name="getOrgOrgRelationTypesForOrgHierarchyResponse" type="tns:getOrgOrgRelationTypesForOrgHierarchyResponse"/>
      <xs:element name="getOrgOrgRelationTypesForOrgType" type="tns:getOrgOrgRelationTypesForOrgType"/>
      <xs:element name="getOrgOrgRelationTypesForOrgTypeResponse" type="tns:getOrgOrgRelationTypesForOrgTypeResponse"/>
      <xs:element name="getOrgOrgRelationTypesResponse" type="tns:getOrgOrgRelationTypesResponse"/>
      <xs:element name="getOrgOrgRelationsByIdList" type="tns:getOrgOrgRelationsByIdList"/>
      <xs:element name="getOrgOrgRelationsByIdListResponse" type="tns:getOrgOrgRelationsByIdListResponse"/>
      <xs:element name="getOrgOrgRelationsByOrg" type="tns:getOrgOrgRelationsByOrg"/>
      <xs:element name="getOrgOrgRelationsByOrgResponse" type="tns:getOrgOrgRelationsByOrgResponse"/>
      <xs:element name="getOrgOrgRelationsByRelatedOrg" type="tns:getOrgOrgRelationsByRelatedOrg"/>
      <xs:element name="getOrgOrgRelationsByRelatedOrgResponse" type="tns:getOrgOrgRelationsByRelatedOrgResponse"/>
      <xs:element name="getOrgPersonRelation" type="tns:getOrgPersonRelation"/>
      <xs:element name="getOrgPersonRelationResponse" type="tns:getOrgPersonRelationResponse"/>
      <xs:element name="getOrgPersonRelationType" type="tns:getOrgPersonRelationType"/>
      <xs:element name="getOrgPersonRelationTypeResponse" type="tns:getOrgPersonRelationTypeResponse"/>
      <xs:element name="getOrgPersonRelationTypes" type="tns:getOrgPersonRelationTypes"/>
      <xs:element name="getOrgPersonRelationTypesForOrgType" type="tns:getOrgPersonRelationTypesForOrgType"/>
      <xs:element name="getOrgPersonRelationTypesForOrgTypeResponse" type="tns:getOrgPersonRelationTypesForOrgTypeResponse"/>
      <xs:element name="getOrgPersonRelationTypesResponse" type="tns:getOrgPersonRelationTypesResponse"/>
      <xs:element name="getOrgPersonRelationsByIdList" type="tns:getOrgPersonRelationsByIdList"/>
      <xs:element name="getOrgPersonRelationsByIdListResponse" type="tns:getOrgPersonRelationsByIdListResponse"/>
      <xs:element name="getOrgPersonRelationsByOrg" type="tns:getOrgPersonRelationsByOrg"/>
      <xs:element name="getOrgPersonRelationsByOrgResponse" type="tns:getOrgPersonRelationsByOrgResponse"/>
      <xs:element name="getOrgPersonRelationsByPerson" type="tns:getOrgPersonRelationsByPerson"/>
      <xs:element name="getOrgPersonRelationsByPersonResponse" type="tns:getOrgPersonRelationsByPersonResponse"/>
      <xs:element name="getOrgTree" type="tns:getOrgTree"/>
      <xs:element name="getOrgTreeResponse" type="tns:getOrgTreeResponse"/>
      <xs:element name="getOrgType" type="tns:getOrgType"/>
      <xs:element name="getOrgTypeResponse" type="tns:getOrgTypeResponse"/>
      <xs:element name="getOrgTypes" type="tns:getOrgTypes"/>
      <xs:element name="getOrgTypesResponse" type="tns:getOrgTypesResponse"/>
      <xs:element name="getOrganization" type="tns:getOrganization"/>
      <xs:element name="getOrganizationResponse" type="tns:getOrganizationResponse"/>
      <xs:element name="getOrganizationsByIdList" type="tns:getOrganizationsByIdList"/>
      <xs:element name="getOrganizationsByIdListResponse" type="tns:getOrganizationsByIdListResponse"/>
      <xs:element name="getPersonIdsForOrgByRelationType" type="tns:getPersonIdsForOrgByRelationType"/>
      <xs:element name="getPersonIdsForOrgByRelationTypeResponse" type="tns:getPersonIdsForOrgByRelationTypeResponse"/>
      <xs:element name="getPositionRestrictionsByOrg" type="tns:getPositionRestrictionsByOrg"/>
      <xs:element name="getPositionRestrictionsByOrgResponse" type="tns:getPositionRestrictionsByOrgResponse"/>
      <xs:element name="hasOrgOrgRelation" type="tns:hasOrgOrgRelation"/>
      <xs:element name="hasOrgOrgRelationResponse" type="tns:hasOrgOrgRelationResponse"/>
      <xs:element name="hasOrgPersonRelation" type="tns:hasOrgPersonRelation"/>
      <xs:element name="hasOrgPersonRelationResponse" type="tns:hasOrgPersonRelationResponse"/>
      <xs:element name="isDescendant" type="tns:isDescendant"/>
      <xs:element name="isDescendantResponse" type="tns:isDescendantResponse"/>
      <xs:element name="removeOrgOrgRelation" type="tns:removeOrgOrgRelation"/>
      <xs:element name="removeOrgOrgRelationResponse" type="tns:removeOrgOrgRelationResponse"/>
      <xs:element name="removeOrgPersonRelation" type="tns:removeOrgPersonRelation"/>
      <xs:element name="removeOrgPersonRelationResponse" type="tns:removeOrgPersonRelationResponse"/>
      <xs:element name="removePositionRestrictionFromOrg" type="tns:removePositionRestrictionFromOrg"/>
      <xs:element name="removePositionRestrictionFromOrgResponse" type="tns:removePositionRestrictionFromOrgResponse"/>
      <xs:element name="search" type="tns:search"/>
      <xs:element name="searchResponse" type="tns:searchResponse"/>
      <xs:element name="updateOrgOrgRelation" type="tns:updateOrgOrgRelation"/>
      <xs:element name="updateOrgOrgRelationResponse" type="tns:updateOrgOrgRelationResponse"/>
      <xs:element name="updateOrgPersonRelation" type="tns:updateOrgPersonRelation"/>
      <xs:element name="updateOrgPersonRelationResponse" type="tns:updateOrgPersonRelationResponse"/>
      <xs:element name="updateOrganization" type="tns:updateOrganization"/>
      <xs:element name="updateOrganizationResponse" type="tns:updateOrganizationResponse"/>
      <xs:element name="updatePositionRestrictionForOrg" type="tns:updatePositionRestrictionForOrg"/>
      <xs:element name="updatePositionRestrictionForOrgResponse" type="tns:updatePositionRestrictionForOrgResponse"/>
      <xs:element name="validateOrg" type="tns:validateOrg"/>
      <xs:element name="validateOrgOrgRelation" type="tns:validateOrgOrgRelation"/>
      <xs:element name="validateOrgOrgRelationResponse" type="tns:validateOrgOrgRelationResponse"/>
      <xs:element name="validateOrgPersonRelation" type="tns:validateOrgPersonRelation"/>
      <xs:element name="validateOrgPersonRelationResponse" type="tns:validateOrgPersonRelationResponse"/>
      <xs:element name="validateOrgPositionRestriction" type="tns:validateOrgPositionRestriction"/>
      <xs:element name="validateOrgPositionRestrictionResponse" type="tns:validateOrgPositionRestrictionResponse"/>
      <xs:element name="validateOrgResponse" type="tns:validateOrgResponse"/>
      <xs:complexType name="validateOrg">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="orgInfo" type="tns:orgInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orgInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="longName" type="xs:string"/>
          <xs:element minOccurs="0" name="shortName" type="xs:string"/>
          <xs:element minOccurs="0" name="sortName" type="xs:string"/>
          <xs:element minOccurs="0" name="shortDesc" type="xs:string"/>
          <xs:element minOccurs="0" name="longDesc" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="orgCodes" type="tns:orgCodeInfo"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="orgCodeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Attribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="metaInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="versionInd" type="xs:string"/>
          <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="createId" type="xs:string"/>
          <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="updateId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateOrgResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultContainer"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validationResultContainer">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="validationResults" type="tns:validationResultInfo"/>
          <xs:element minOccurs="0" name="errorLevel" type="tns:errorLevel"/>
          <xs:element minOccurs="0" name="element" type="xs:string"/>
          <xs:element minOccurs="0" name="derivedMinOccurs" type="xs:int"/>
          <xs:element minOccurs="0" name="derivedMaxOccurs" type="xs:string"/>
          <xs:element minOccurs="0" name="derivedMinLength" type="xs:int"/>
          <xs:element minOccurs="0" name="derivedMaxLength" type="xs:string"/>
          <xs:element minOccurs="0" name="dataType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validationResultInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="element" type="xs:string"/>
          <xs:element minOccurs="0" name="level" type="tns:errorLevel"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPersonIdsForOrgByRelationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPersonIdsForOrgByRelationTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateOrgOrgRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgOrgRelationId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgOrgRelationInfo" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orgOrgRelationInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="relatedOrgId" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="updateOrgOrgRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrganization">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrganizationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removePositionRestrictionFromOrg">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removePositionRestrictionFromOrgResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="statusInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="success" type="xs:boolean"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgOrgRelationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="search">
        <xs:sequence>
          <xs:element minOccurs="0" name="arg0" type="ns1:searchRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="searchResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="ns1:searchResult"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPositionRestrictionsByOrg">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getPositionRestrictionsByOrgResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPositionRestrictionInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orgPositionRestrictionInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="title" type="xs:string"/>
          <xs:element minOccurs="0" name="stdDuration" type="tns:timeAmountInfo"/>
          <xs:element minOccurs="0" name="minNumRelations" type="xs:int"/>
          <xs:element minOccurs="0" name="maxNumRelations" type="xs:string"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="timeAmountInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="atpDurationTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="timeQuantity" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgPersonRelationTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getOrgPersonRelationTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPersonRelationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orgPersonRelationTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType abstract="true" name="typeInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="getOrgPersonRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgPersonRelationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgPersonRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orgPersonRelationInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="personId" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
          <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="removeOrgPersonRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgPersonRelationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeOrgPersonRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgType">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orgTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getOrgPersonRelationsByPerson">
        <xs:sequence>
          <xs:element minOccurs="0" name="personId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgPersonRelationsByPersonResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateOrgPersonRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgPersonRelationId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgPersonRelationInfo" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateOrgPersonRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgTree">
        <xs:sequence>
          <xs:element minOccurs="0" name="rootOrgId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgHierarchyId" type="xs:string"/>
          <xs:element name="maxLevels" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgTreeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgTreeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orgTreeInfo">
        <xs:sequence/>
        <xs:attribute name="orgId" type="xs:string"/>
        <xs:attribute name="parentId" type="xs:string"/>
        <xs:attribute name="displayName" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="createOrgPersonRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="personId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="orgPersonRelationInfo" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createOrgPersonRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgPersonRelationsByOrg">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgPersonRelationsByOrgResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteOrganization">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="deleteOrganizationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateOrganization">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgInfo" type="tns:orgInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateOrganizationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgOrgRelationTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgOrgRelationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orgOrgRelationTypeInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence>
              <xs:element minOccurs="0" name="revName" type="xs:string"/>
              <xs:element minOccurs="0" name="revDesc" type="xs:string"/>
              <xs:element minOccurs="0" name="orgHierarchyKey" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="hasOrgPersonRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="personId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="hasOrgPersonRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeOrgOrgRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgOrgRelationId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeOrgOrgRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createOrganization">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="orgInfo" type="tns:orgInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createOrganizationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addPositionRestrictionToOrg">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="orgPositionRestrictionInfo" type="tns:orgPositionRestrictionInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addPositionRestrictionToOrgResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgPositionRestrictionInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrganizationsByIdList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="orgIdList" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrganizationsByIdListResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgPersonRelationsByIdList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="orgPersonRelationIdList" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgPersonRelationsByIdListResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updatePositionRestrictionForOrg">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="orgPositionRestrictionInfo" type="tns:orgPositionRestrictionInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updatePositionRestrictionForOrgResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgPositionRestrictionInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgPersonRelationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgPersonRelationTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgPersonRelationTypeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgPersonRelationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgPersonRelationTypesForOrgType">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgPersonRelationTypesForOrgTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPersonRelationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="hasOrgOrgRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="comparisonOrgId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgOrgRelationTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="hasOrgOrgRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgHierarchy">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgHierarchyKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgHierarchyResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgHierarchyInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="orgHierarchyInfo">
        <xs:complexContent>
          <xs:extension base="tns:typeInfo">
            <xs:sequence>
              <xs:element minOccurs="0" name="rootOrgId" type="xs:string"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getOrgHierarchies">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getOrgHierarchiesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgHierarchyInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationsByIdList">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="orgOrgRelationIdList" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationsByIdListResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationsByRelatedOrg">
        <xs:sequence>
          <xs:element minOccurs="0" name="relatedOrgId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationsByRelatedOrgResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllOrgPersonRelationsByOrg">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllOrgPersonRelationsByOrgResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateOrgOrgRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="orgOrgRelationInfo" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateOrgOrgRelationResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultContainer"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getOrgTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isDescendant">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="descendantOrgId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgHierarchy" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="isDescendantResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateOrgPositionRestriction">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="orgPositionRestrictionInfo" type="tns:orgPositionRestrictionInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateOrgPositionRestrictionResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultContainer"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationTypesForOrgType">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationTypesForOrgTypeResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgOrgRelationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationsByOrg">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationsByOrgResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationTypesForOrgHierarchy">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgHierarchyKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationTypesForOrgHierarchyResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgOrgRelationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllOrgPersonRelationsByPerson">
        <xs:sequence>
          <xs:element minOccurs="0" name="personId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllOrgPersonRelationsByPersonResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createOrgOrgRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="relatedOrgId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgOrgRelationTypeKey" type="xs:string"/>
          <xs:element minOccurs="0" name="orgOrgRelationInfo" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createOrgOrgRelationResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:orgOrgRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getOrgOrgRelationTypesResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:orgOrgRelationTypeInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllDescendants">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgHierarchy" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllDescendantsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateOrgPersonRelation">
        <xs:sequence>
          <xs:element minOccurs="0" name="validationType" type="xs:string"/>
          <xs:element minOccurs="0" name="orgPersonRelationInfo" type="tns:orgPersonRelationInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateOrgPersonRelationResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:validationResultContainer"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllAncestors">
        <xs:sequence>
          <xs:element minOccurs="0" name="orgId" type="xs:string"/>
          <xs:element minOccurs="0" name="orgHierarchy" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllAncestorsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="errorLevel">
        <xs:restriction base="xs:string">
          <xs:enumeration value="OK"/>
          <xs:enumeration value="WARN"/>
          <xs:enumeration value="ERROR"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="MissingParameterException" nillable="true" type="ns0:MissingParameterException"/>
      <xs:element name="InvalidParameterException" nillable="true" type="ns0:InvalidParameterException"/>
      <xs:element name="OperationFailedException" nillable="true" type="ns0:OperationFailedException"/>
      <xs:element name="DoesNotExistException" nillable="true" type="ns0:DoesNotExistException"/>
      <xs:element name="PermissionDeniedException" nillable="true" type="ns0:PermissionDeniedException"/>
      <xs:element name="VersionMismatchException" nillable="true" type="ns0:VersionMismatchException"/>
      <xs:element name="DataValidationErrorException" nillable="true" type="ns0:DataValidationErrorException"/>
      <xs:element name="getSearchResultTypes" nillable="true" type="ns1:getSearchResultTypes"/>
      <xs:element name="getSearchResultTypesResponse" nillable="true" type="ns1:getSearchResultTypesResponse"/>
      <xs:element name="validateObject" nillable="true" type="ns2:validateObject"/>
      <xs:element name="validateObjectResponse" nillable="true" type="ns2:validateObjectResponse"/>
      <xs:element name="searchForResults" nillable="true" type="ns1:searchForResults"/>
      <xs:element name="searchForResultsResponse" nillable="true" type="ns1:searchForResultsResponse"/>
      <xs:element name="getObjectTypes" nillable="true" type="ns2:getObjectTypes"/>
      <xs:element name="getObjectTypesResponse" nillable="true" type="ns2:getObjectTypesResponse"/>
      <xs:element name="getSearchResultType" nillable="true" type="ns1:getSearchResultType"/>
      <xs:element name="getSearchResultTypeResponse" nillable="true" type="ns1:getSearchResultTypeResponse"/>
      <xs:element name="AlreadyExistsException" nillable="true" type="ns0:AlreadyExistsException"/>
      <xs:element name="getSearchCriteriaType" nillable="true" type="ns1:getSearchCriteriaType"/>
      <xs:element name="getSearchCriteriaTypeResponse" nillable="true" type="ns1:getSearchCriteriaTypeResponse"/>
      <xs:element name="getObjectStructure" nillable="true" type="ns2:getObjectStructure"/>
      <xs:element name="getObjectStructureResponse" nillable="true" type="ns2:getObjectStructureResponse"/>
      <xs:element name="getSearchTypes" nillable="true" type="ns1:getSearchTypes"/>
      <xs:element name="getSearchTypesResponse" nillable="true" type="ns1:getSearchTypesResponse"/>
      <xs:element name="validateStructureData" nillable="true" type="ns2:validateStructureData"/>
      <xs:element name="validateStructureDataResponse" nillable="true" type="ns2:validateStructureDataResponse"/>
      <xs:element name="getSearchTypesByResult" nillable="true" type="ns1:getSearchTypesByResult"/>
      <xs:element name="getSearchTypesByResultResponse" nillable="true" type="ns1:getSearchTypesByResultResponse"/>
      <xs:element name="getSearchTypesByCriteria" nillable="true" type="ns1:getSearchTypesByCriteria"/>
      <xs:element name="getSearchTypesByCriteriaResponse" nillable="true" type="ns1:getSearchTypesByCriteriaResponse"/>
      <xs:element name="getSearchCriteriaTypes" nillable="true" type="ns1:getSearchCriteriaTypes"/>
      <xs:element name="getSearchCriteriaTypesResponse" nillable="true" type="ns1:getSearchCriteriaTypesResponse"/>
      <xs:element name="getSearchType" nillable="true" type="ns1:getSearchType"/>
      <xs:element name="getSearchTypeResponse" nillable="true" type="ns1:getSearchTypeResponse"/>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/dictionary" xmlns:ns1="http://student.kuali.org/wsdl/organization" xmlns:tns="http://student.kuali.org/wsdl/dictionary" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://student.kuali.org/wsdl/organization"/>
      <xs:element name="fieldDescriptor" type="tns:fieldDescriptor"/>
      <xs:element name="getObjectStructure" type="tns:getObjectStructure"/>
      <xs:element name="getObjectStructureResponse" type="tns:getObjectStructureResponse"/>
      <xs:element name="getObjectTypes" type="tns:getObjectTypes"/>
      <xs:element name="getObjectTypesResponse" type="tns:getObjectTypesResponse"/>
      <xs:element name="validateObject" type="tns:validateObject"/>
      <xs:element name="validateObjectResponse" type="tns:validateObjectResponse"/>
      <xs:element name="validateStructureData" type="tns:validateStructureData"/>
      <xs:element name="validateStructureDataResponse" type="tns:validateStructureDataResponse"/>
      <xs:complexType name="validateObject">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="stateKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="info" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateObjectResponse">
        <xs:sequence>
          <xs:element form="unqualified" name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getObjectTypes">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getObjectTypesResponse">
        <xs:sequence>
          <xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="fieldDescriptor">
        <xs:sequence>
          <xs:element name="name" type="xs:string"/>
          <xs:element name="desc" type="xs:string"/>
          <xs:element name="readOnly" type="xs:boolean"/>
          <xs:element name="dataType" type="xs:string"/>
          <xs:element minOccurs="0" name="search" type="tns:searchSelector"/>
          <xs:element minOccurs="0" name="objectStructure" type="tns:objectStructure"/>
          <xs:element minOccurs="0" name="objectStructureRef" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="searchSelector">
        <xs:sequence/>
        <xs:attribute name="key" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="objectStructure">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="type" type="tns:type"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="type">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="state" type="tns:state"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="desc" type="xs:string"/>
          <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
          <xs:element name="modifiable" type="xs:boolean"/>
          <xs:element minOccurs="0" name="attributes" type="ns1:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="state">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="field" type="tns:field"/>
          <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
      </xs:complexType>
      <xs:complexType name="field">
        <xs:sequence>
          <xs:element minOccurs="0" name="fieldDescriptor" type="tns:fieldDescriptor"/>
          <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
          <xs:element name="selector" type="xs:boolean"/>
          <xs:element name="dynamic" type="xs:boolean"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="constraintDescriptor">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="constraintSelector">
        <xs:sequence>
          <xs:element minOccurs="0" name="minValue" type="xs:string"/>
          <xs:element minOccurs="0" name="maxValue" type="xs:string"/>
          <xs:element minOccurs="0" name="minLength" type="xs:int"/>
          <xs:element minOccurs="0" name="maxLength" type="xs:string"/>
          <xs:element minOccurs="0" name="validChars" type="tns:validCharsConstraint"/>
          <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
          <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="case" type="tns:caseConstraint"/>
          <xs:element minOccurs="0" name="typeStateCase" type="tns:typeStateCaseConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="lookup" type="tns:lookupConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="className" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="serverSide" type="xs:boolean" use="required"/>
        <xs:attribute name="locale" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="validCharsConstraint">
        <xs:sequence>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="fields" type="xs:string"/>
        <xs:attribute name="separator" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="requireConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="caseConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="when" type="tns:whenConstraint"/>
        </xs:sequence>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="operator" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="whenConstraint">
        <xs:sequence>
          <xs:element minOccurs="0" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="value" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="typeStateCaseConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="typeStateWhen" type="tns:typeStateWhenConstraint"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="typeStateWhenConstraint">
        <xs:sequence>
          <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
          <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="lookupConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="lookupKey" type="tns:lookupKeyConstraint"/>
        </xs:sequence>
        <xs:attribute name="search" type="xs:string"/>
        <xs:attribute name="searchField" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="lookupKeyConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="mapsTo" type="xs:string"/>
      </xs:complexType>
      <xs:complexType name="occursConstraint">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="min" type="xs:int"/>
        <xs:attribute name="max" type="xs:int"/>
      </xs:complexType>
      <xs:complexType name="getObjectStructure">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getObjectStructureResponse">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="return" type="tns:objectStructure"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateStructureData">
        <xs:sequence>
          <xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="stateKey" type="xs:string"/>
          <xs:element form="unqualified" minOccurs="0" name="info" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validateStructureDataResponse">
        <xs:sequence>
          <xs:element form="unqualified" name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getAllOrgPersonRelationsByOrgResponse">
    <wsdl:part element="tns:getAllOrgPersonRelationsByOrgResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationTypes">
    <wsdl:part element="tns:getOrgOrgRelationTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateOrgPersonRelation">
    <wsdl:part element="tns:updateOrgPersonRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationTypes">
    <wsdl:part element="tns:getOrgPersonRelationTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationType">
    <wsdl:part element="tns:getOrgPersonRelationType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isDescendantResponse">
    <wsdl:part element="tns:isDescendantResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePositionRestrictionFromOrgResponse">
    <wsdl:part element="tns:removePositionRestrictionFromOrgResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addPositionRestrictionToOrgResponse">
    <wsdl:part element="tns:addPositionRestrictionToOrgResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeOrgOrgRelation">
    <wsdl:part element="tns:removeOrgOrgRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonIdsForOrgByRelationTypeResponse">
    <wsdl:part element="tns:getPersonIdsForOrgByRelationTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrganizationResponse">
    <wsdl:part element="tns:getOrganizationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesResponse">
    <wsdl:part element="tns:getSearchTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationsByOrg">
    <wsdl:part element="tns:getOrgPersonRelationsByOrg" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrgOrgRelationResponse">
    <wsdl:part element="tns:validateOrgOrgRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationsByPerson">
    <wsdl:part element="tns:getOrgPersonRelationsByPerson" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationTypesResponse">
    <wsdl:part element="tns:getOrgPersonRelationTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgTypes">
    <wsdl:part element="tns:getOrgTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllOrgPersonRelationsByPersonResponse">
    <wsdl:part element="tns:getAllOrgPersonRelationsByPersonResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationTypesForOrgHierarchy">
    <wsdl:part element="tns:getOrgOrgRelationTypesForOrgHierarchy" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrgOrgRelation">
    <wsdl:part element="tns:validateOrgOrgRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForResults">
    <wsdl:part element="tns:searchForResults" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgType">
    <wsdl:part element="tns:getOrgType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructureResponse">
    <wsdl:part element="tns:getObjectStructureResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationTypesForOrgTypeResponse">
    <wsdl:part element="tns:getOrgOrgRelationTypesForOrgTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationTypesForOrgHierarchyResponse">
    <wsdl:part element="tns:getOrgOrgRelationTypesForOrgHierarchyResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="VersionMismatchException">
    <wsdl:part element="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part element="tns:OperationFailedException" name="OperationFailedException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationTypesForOrgType">
    <wsdl:part element="tns:getOrgPersonRelationTypesForOrgType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllOrgPersonRelationsByPerson">
    <wsdl:part element="tns:getAllOrgPersonRelationsByPerson" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateObject">
    <wsdl:part element="tns:validateObject" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part element="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypes">
    <wsdl:part element="tns:getSearchCriteriaTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructure">
    <wsdl:part element="tns:getObjectStructure" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllDescendantsResponse">
    <wsdl:part element="tns:getAllDescendantsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaType">
    <wsdl:part element="tns:getSearchCriteriaType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllAncestors">
    <wsdl:part element="tns:getAllAncestors" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPersonIdsForOrgByRelationType">
    <wsdl:part element="tns:getPersonIdsForOrgByRelationType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResultResponse">
    <wsdl:part element="tns:getSearchTypesByResultResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateOrganization">
    <wsdl:part element="tns:updateOrganization" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createOrganizationResponse">
    <wsdl:part element="tns:createOrganizationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteria">
    <wsdl:part element="tns:getSearchTypesByCriteria" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResult">
    <wsdl:part element="tns:getSearchTypesByResult" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateStructureData">
    <wsdl:part element="tns:validateStructureData" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgTypeResponse">
    <wsdl:part element="tns:getOrgTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteOrganizationResponse">
    <wsdl:part element="tns:deleteOrganizationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createOrgOrgRelation">
    <wsdl:part element="tns:createOrgOrgRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="hasOrgPersonRelationResponse">
    <wsdl:part element="tns:hasOrgPersonRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationsByPersonResponse">
    <wsdl:part element="tns:getOrgPersonRelationsByPersonResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrgPositionRestriction">
    <wsdl:part element="tns:validateOrgPositionRestriction" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createOrgPersonRelationResponse">
    <wsdl:part element="tns:createOrgPersonRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="hasOrgOrgRelation">
    <wsdl:part element="tns:hasOrgOrgRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrgPositionRestrictionResponse">
    <wsdl:part element="tns:validateOrgPositionRestrictionResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteOrganization">
    <wsdl:part element="tns:deleteOrganization" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationTypeResponse">
    <wsdl:part element="tns:getOrgPersonRelationTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllOrgPersonRelationsByOrg">
    <wsdl:part element="tns:getAllOrgPersonRelationsByOrg" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPositionRestrictionsByOrgResponse">
    <wsdl:part element="tns:getPositionRestrictionsByOrgResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationsByOrgResponse">
    <wsdl:part element="tns:getOrgPersonRelationsByOrgResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationTypeResponse">
    <wsdl:part element="tns:getOrgOrgRelationTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypes">
    <wsdl:part element="tns:getSearchResultTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrgPersonRelation">
    <wsdl:part element="tns:validateOrgPersonRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultType">
    <wsdl:part element="tns:getSearchResultType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateStructureDataResponse">
    <wsdl:part element="tns:validateStructureDataResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part element="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationsByIdList">
    <wsdl:part element="tns:getOrgOrgRelationsByIdList" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgHierarchies">
    <wsdl:part element="tns:getOrgHierarchies" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="search">
    <wsdl:part element="tns:search" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypesResponse">
    <wsdl:part element="tns:getSearchResultTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeOrgPersonRelation">
    <wsdl:part element="tns:removeOrgPersonRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypeResponse">
    <wsdl:part element="tns:getSearchCriteriaTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllDescendants">
    <wsdl:part element="tns:getAllDescendants" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationType">
    <wsdl:part element="tns:getOrgOrgRelationType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchResponse">
    <wsdl:part element="tns:searchResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypes">
    <wsdl:part element="tns:getSearchTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationsByIdList">
    <wsdl:part element="tns:getOrgPersonRelationsByIdList" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrgPersonRelationResponse">
    <wsdl:part element="tns:validateOrgPersonRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrg">
    <wsdl:part element="tns:validateOrg" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelation">
    <wsdl:part element="tns:getOrgPersonRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationResponse">
    <wsdl:part element="tns:getOrgOrgRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeOrgOrgRelationResponse">
    <wsdl:part element="tns:removeOrgOrgRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationsByOrg">
    <wsdl:part element="tns:getOrgOrgRelationsByOrg" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationTypesResponse">
    <wsdl:part element="tns:getOrgOrgRelationTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteriaResponse">
    <wsdl:part element="tns:getSearchTypesByCriteriaResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationsByIdListResponse">
    <wsdl:part element="tns:getOrgOrgRelationsByIdListResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeOrgPersonRelationResponse">
    <wsdl:part element="tns:removeOrgPersonRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateOrganizationResponse">
    <wsdl:part element="tns:updateOrganizationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationTypesForOrgType">
    <wsdl:part element="tns:getOrgOrgRelationTypesForOrgType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createOrgPersonRelation">
    <wsdl:part element="tns:createOrgPersonRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllAncestorsResponse">
    <wsdl:part element="tns:getAllAncestorsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationsByOrgResponse">
    <wsdl:part element="tns:getOrgOrgRelationsByOrgResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrganization">
    <wsdl:part element="tns:getOrganization" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypesResponse">
    <wsdl:part element="tns:getObjectTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePositionRestrictionForOrg">
    <wsdl:part element="tns:updatePositionRestrictionForOrg" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgTreeResponse">
    <wsdl:part element="tns:getOrgTreeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationsByRelatedOrgResponse">
    <wsdl:part element="tns:getOrgOrgRelationsByRelatedOrgResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationsByIdListResponse">
    <wsdl:part element="tns:getOrgPersonRelationsByIdListResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchType">
    <wsdl:part element="tns:getSearchType" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createOrgOrgRelationResponse">
    <wsdl:part element="tns:createOrgOrgRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part element="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelationsByRelatedOrg">
    <wsdl:part element="tns:getOrgOrgRelationsByRelatedOrg" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePositionRestrictionFromOrg">
    <wsdl:part element="tns:removePositionRestrictionFromOrg" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationTypesForOrgTypeResponse">
    <wsdl:part element="tns:getOrgPersonRelationTypesForOrgTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchForResultsResponse">
    <wsdl:part element="tns:searchForResultsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgHierarchyResponse">
    <wsdl:part element="tns:getOrgHierarchyResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="DataValidationErrorException">
    <wsdl:part element="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgTree">
    <wsdl:part element="tns:getOrgTree" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateOrgOrgRelationResponse">
    <wsdl:part element="tns:updateOrgOrgRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypeResponse">
    <wsdl:part element="tns:getSearchTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypes">
    <wsdl:part element="tns:getObjectTypes" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgHierarchiesResponse">
    <wsdl:part element="tns:getOrgHierarchiesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgHierarchy">
    <wsdl:part element="tns:getOrgHierarchy" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part element="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isDescendant">
    <wsdl:part element="tns:isDescendant" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="hasOrgPersonRelation">
    <wsdl:part element="tns:hasOrgPersonRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPositionRestrictionsByOrg">
    <wsdl:part element="tns:getPositionRestrictionsByOrg" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateOrgPersonRelationResponse">
    <wsdl:part element="tns:updateOrgPersonRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addPositionRestrictionToOrg">
    <wsdl:part element="tns:addPositionRestrictionToOrg" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgTypesResponse">
    <wsdl:part element="tns:getOrgTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateOrgResponse">
    <wsdl:part element="tns:validateOrgResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updatePositionRestrictionForOrgResponse">
    <wsdl:part element="tns:updatePositionRestrictionForOrgResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgPersonRelationResponse">
    <wsdl:part element="tns:getOrgPersonRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createOrganization">
    <wsdl:part element="tns:createOrganization" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrganizationsByIdList">
    <wsdl:part element="tns:getOrganizationsByIdList" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypesResponse">
    <wsdl:part element="tns:getSearchCriteriaTypesResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypeResponse">
    <wsdl:part element="tns:getSearchResultTypeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrgOrgRelation">
    <wsdl:part element="tns:getOrgOrgRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="hasOrgOrgRelationResponse">
    <wsdl:part element="tns:hasOrgOrgRelationResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getOrganizationsByIdListResponse">
    <wsdl:part element="tns:getOrganizationsByIdListResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part element="tns:MissingParameterException" name="MissingParameterException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateOrgOrgRelation">
    <wsdl:part element="tns:updateOrgOrgRelation" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateObjectResponse">
    <wsdl:part element="tns:validateObjectResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="OrganizationService">
    <wsdl:operation name="validateOrg">
      <wsdl:input message="tns:validateOrg" name="validateOrg"></wsdl:input>
      <wsdl:output message="tns:validateOrgResponse" name="validateOrgResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPersonIdsForOrgByRelationType">
      <wsdl:input message="tns:getPersonIdsForOrgByRelationType" name="getPersonIdsForOrgByRelationType"></wsdl:input>
      <wsdl:output message="tns:getPersonIdsForOrgByRelationTypeResponse" name="getPersonIdsForOrgByRelationTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateOrgOrgRelation">
      <wsdl:input message="tns:updateOrgOrgRelation" name="updateOrgOrgRelation"></wsdl:input>
      <wsdl:output message="tns:updateOrgOrgRelationResponse" name="updateOrgOrgRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrganization">
      <wsdl:input message="tns:getOrganization" name="getOrganization"></wsdl:input>
      <wsdl:output message="tns:getOrganizationResponse" name="getOrganizationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <wsdl:input message="tns:getSearchResultTypes" name="getSearchResultTypes"></wsdl:input>
      <wsdl:output message="tns:getSearchResultTypesResponse" name="getSearchResultTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateObject">
      <wsdl:input message="tns:validateObject" name="validateObject"></wsdl:input>
      <wsdl:output message="tns:validateObjectResponse" name="validateObjectResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removePositionRestrictionFromOrg">
      <wsdl:input message="tns:removePositionRestrictionFromOrg" name="removePositionRestrictionFromOrg"></wsdl:input>
      <wsdl:output message="tns:removePositionRestrictionFromOrgResponse" name="removePositionRestrictionFromOrgResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelation">
      <wsdl:input message="tns:getOrgOrgRelation" name="getOrgOrgRelation"></wsdl:input>
      <wsdl:output message="tns:getOrgOrgRelationResponse" name="getOrgOrgRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForResults">
      <wsdl:input message="tns:searchForResults" name="searchForResults"></wsdl:input>
      <wsdl:output message="tns:searchForResultsResponse" name="searchForResultsResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="search">
      <wsdl:input message="tns:search" name="search"></wsdl:input>
      <wsdl:output message="tns:searchResponse" name="searchResponse"></wsdl:output>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <wsdl:input message="tns:getObjectTypes" name="getObjectTypes"></wsdl:input>
      <wsdl:output message="tns:getObjectTypesResponse" name="getObjectTypesResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPositionRestrictionsByOrg">
      <wsdl:input message="tns:getPositionRestrictionsByOrg" name="getPositionRestrictionsByOrg"></wsdl:input>
      <wsdl:output message="tns:getPositionRestrictionsByOrgResponse" name="getPositionRestrictionsByOrgResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationTypes">
      <wsdl:input message="tns:getOrgPersonRelationTypes" name="getOrgPersonRelationTypes"></wsdl:input>
      <wsdl:output message="tns:getOrgPersonRelationTypesResponse" name="getOrgPersonRelationTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelation">
      <wsdl:input message="tns:getOrgPersonRelation" name="getOrgPersonRelation"></wsdl:input>
      <wsdl:output message="tns:getOrgPersonRelationResponse" name="getOrgPersonRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeOrgPersonRelation">
      <wsdl:input message="tns:removeOrgPersonRelation" name="removeOrgPersonRelation"></wsdl:input>
      <wsdl:output message="tns:removeOrgPersonRelationResponse" name="removeOrgPersonRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgType">
      <wsdl:input message="tns:getOrgType" name="getOrgType"></wsdl:input>
      <wsdl:output message="tns:getOrgTypeResponse" name="getOrgTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationsByPerson">
      <wsdl:input message="tns:getOrgPersonRelationsByPerson" name="getOrgPersonRelationsByPerson"></wsdl:input>
      <wsdl:output message="tns:getOrgPersonRelationsByPersonResponse" name="getOrgPersonRelationsByPersonResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateOrgPersonRelation">
      <wsdl:input message="tns:updateOrgPersonRelation" name="updateOrgPersonRelation"></wsdl:input>
      <wsdl:output message="tns:updateOrgPersonRelationResponse" name="updateOrgPersonRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <wsdl:input message="tns:getSearchResultType" name="getSearchResultType"></wsdl:input>
      <wsdl:output message="tns:getSearchResultTypeResponse" name="getSearchResultTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgTree">
      <wsdl:input message="tns:getOrgTree" name="getOrgTree"></wsdl:input>
      <wsdl:output message="tns:getOrgTreeResponse" name="getOrgTreeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createOrgPersonRelation">
      <wsdl:input message="tns:createOrgPersonRelation" name="createOrgPersonRelation"></wsdl:input>
      <wsdl:output message="tns:createOrgPersonRelationResponse" name="createOrgPersonRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationsByOrg">
      <wsdl:input message="tns:getOrgPersonRelationsByOrg" name="getOrgPersonRelationsByOrg"></wsdl:input>
      <wsdl:output message="tns:getOrgPersonRelationsByOrgResponse" name="getOrgPersonRelationsByOrgResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <wsdl:input message="tns:getSearchCriteriaType" name="getSearchCriteriaType"></wsdl:input>
      <wsdl:output message="tns:getSearchCriteriaTypeResponse" name="getSearchCriteriaTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteOrganization">
      <wsdl:input message="tns:deleteOrganization" name="deleteOrganization"></wsdl:input>
      <wsdl:output message="tns:deleteOrganizationResponse" name="deleteOrganizationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateOrganization">
      <wsdl:input message="tns:updateOrganization" name="updateOrganization"></wsdl:input>
      <wsdl:output message="tns:updateOrganizationResponse" name="updateOrganizationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationType">
      <wsdl:input message="tns:getOrgOrgRelationType" name="getOrgOrgRelationType"></wsdl:input>
      <wsdl:output message="tns:getOrgOrgRelationTypeResponse" name="getOrgOrgRelationTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectStructure">
      <wsdl:input message="tns:getObjectStructure" name="getObjectStructure"></wsdl:input>
      <wsdl:output message="tns:getObjectStructureResponse" name="getObjectStructureResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="hasOrgPersonRelation">
      <wsdl:input message="tns:hasOrgPersonRelation" name="hasOrgPersonRelation"></wsdl:input>
      <wsdl:output message="tns:hasOrgPersonRelationResponse" name="hasOrgPersonRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeOrgOrgRelation">
      <wsdl:input message="tns:removeOrgOrgRelation" name="removeOrgOrgRelation"></wsdl:input>
      <wsdl:output message="tns:removeOrgOrgRelationResponse" name="removeOrgOrgRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createOrganization">
      <wsdl:input message="tns:createOrganization" name="createOrganization"></wsdl:input>
      <wsdl:output message="tns:createOrganizationResponse" name="createOrganizationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPositionRestrictionToOrg">
      <wsdl:input message="tns:addPositionRestrictionToOrg" name="addPositionRestrictionToOrg"></wsdl:input>
      <wsdl:output message="tns:addPositionRestrictionToOrgResponse" name="addPositionRestrictionToOrgResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <wsdl:input message="tns:getSearchTypes" name="getSearchTypes"></wsdl:input>
      <wsdl:output message="tns:getSearchTypesResponse" name="getSearchTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrganizationsByIdList">
      <wsdl:input message="tns:getOrganizationsByIdList" name="getOrganizationsByIdList"></wsdl:input>
      <wsdl:output message="tns:getOrganizationsByIdListResponse" name="getOrganizationsByIdListResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationsByIdList">
      <wsdl:input message="tns:getOrgPersonRelationsByIdList" name="getOrgPersonRelationsByIdList"></wsdl:input>
      <wsdl:output message="tns:getOrgPersonRelationsByIdListResponse" name="getOrgPersonRelationsByIdListResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePositionRestrictionForOrg">
      <wsdl:input message="tns:updatePositionRestrictionForOrg" name="updatePositionRestrictionForOrg"></wsdl:input>
      <wsdl:output message="tns:updatePositionRestrictionForOrgResponse" name="updatePositionRestrictionForOrgResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationType">
      <wsdl:input message="tns:getOrgPersonRelationType" name="getOrgPersonRelationType"></wsdl:input>
      <wsdl:output message="tns:getOrgPersonRelationTypeResponse" name="getOrgPersonRelationTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateStructureData">
      <wsdl:input message="tns:validateStructureData" name="validateStructureData"></wsdl:input>
      <wsdl:output message="tns:validateStructureDataResponse" name="validateStructureDataResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationTypesForOrgType">
      <wsdl:input message="tns:getOrgPersonRelationTypesForOrgType" name="getOrgPersonRelationTypesForOrgType"></wsdl:input>
      <wsdl:output message="tns:getOrgPersonRelationTypesForOrgTypeResponse" name="getOrgPersonRelationTypesForOrgTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="hasOrgOrgRelation">
      <wsdl:input message="tns:hasOrgOrgRelation" name="hasOrgOrgRelation"></wsdl:input>
      <wsdl:output message="tns:hasOrgOrgRelationResponse" name="hasOrgOrgRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgHierarchy">
      <wsdl:input message="tns:getOrgHierarchy" name="getOrgHierarchy"></wsdl:input>
      <wsdl:output message="tns:getOrgHierarchyResponse" name="getOrgHierarchyResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgHierarchies">
      <wsdl:input message="tns:getOrgHierarchies" name="getOrgHierarchies"></wsdl:input>
      <wsdl:output message="tns:getOrgHierarchiesResponse" name="getOrgHierarchiesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationsByIdList">
      <wsdl:input message="tns:getOrgOrgRelationsByIdList" name="getOrgOrgRelationsByIdList"></wsdl:input>
      <wsdl:output message="tns:getOrgOrgRelationsByIdListResponse" name="getOrgOrgRelationsByIdListResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationsByRelatedOrg">
      <wsdl:input message="tns:getOrgOrgRelationsByRelatedOrg" name="getOrgOrgRelationsByRelatedOrg"></wsdl:input>
      <wsdl:output message="tns:getOrgOrgRelationsByRelatedOrgResponse" name="getOrgOrgRelationsByRelatedOrgResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllOrgPersonRelationsByOrg">
      <wsdl:input message="tns:getAllOrgPersonRelationsByOrg" name="getAllOrgPersonRelationsByOrg"></wsdl:input>
      <wsdl:output message="tns:getAllOrgPersonRelationsByOrgResponse" name="getAllOrgPersonRelationsByOrgResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateOrgOrgRelation">
      <wsdl:input message="tns:validateOrgOrgRelation" name="validateOrgOrgRelation"></wsdl:input>
      <wsdl:output message="tns:validateOrgOrgRelationResponse" name="validateOrgOrgRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgTypes">
      <wsdl:input message="tns:getOrgTypes" name="getOrgTypes"></wsdl:input>
      <wsdl:output message="tns:getOrgTypesResponse" name="getOrgTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <wsdl:input message="tns:getSearchTypesByResult" name="getSearchTypesByResult"></wsdl:input>
      <wsdl:output message="tns:getSearchTypesByResultResponse" name="getSearchTypesByResultResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isDescendant">
      <wsdl:input message="tns:isDescendant" name="isDescendant"></wsdl:input>
      <wsdl:output message="tns:isDescendantResponse" name="isDescendantResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateOrgPositionRestriction">
      <wsdl:input message="tns:validateOrgPositionRestriction" name="validateOrgPositionRestriction"></wsdl:input>
      <wsdl:output message="tns:validateOrgPositionRestrictionResponse" name="validateOrgPositionRestrictionResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <wsdl:input message="tns:getSearchTypesByCriteria" name="getSearchTypesByCriteria"></wsdl:input>
      <wsdl:output message="tns:getSearchTypesByCriteriaResponse" name="getSearchTypesByCriteriaResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationTypesForOrgType">
      <wsdl:input message="tns:getOrgOrgRelationTypesForOrgType" name="getOrgOrgRelationTypesForOrgType"></wsdl:input>
      <wsdl:output message="tns:getOrgOrgRelationTypesForOrgTypeResponse" name="getOrgOrgRelationTypesForOrgTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationsByOrg">
      <wsdl:input message="tns:getOrgOrgRelationsByOrg" name="getOrgOrgRelationsByOrg"></wsdl:input>
      <wsdl:output message="tns:getOrgOrgRelationsByOrgResponse" name="getOrgOrgRelationsByOrgResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaTypes">
      <wsdl:input message="tns:getSearchCriteriaTypes" name="getSearchCriteriaTypes"></wsdl:input>
      <wsdl:output message="tns:getSearchCriteriaTypesResponse" name="getSearchCriteriaTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationTypesForOrgHierarchy">
      <wsdl:input message="tns:getOrgOrgRelationTypesForOrgHierarchy" name="getOrgOrgRelationTypesForOrgHierarchy"></wsdl:input>
      <wsdl:output message="tns:getOrgOrgRelationTypesForOrgHierarchyResponse" name="getOrgOrgRelationTypesForOrgHierarchyResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllOrgPersonRelationsByPerson">
      <wsdl:input message="tns:getAllOrgPersonRelationsByPerson" name="getAllOrgPersonRelationsByPerson"></wsdl:input>
      <wsdl:output message="tns:getAllOrgPersonRelationsByPersonResponse" name="getAllOrgPersonRelationsByPersonResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createOrgOrgRelation">
      <wsdl:input message="tns:createOrgOrgRelation" name="createOrgOrgRelation"></wsdl:input>
      <wsdl:output message="tns:createOrgOrgRelationResponse" name="createOrgOrgRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationTypes">
      <wsdl:input message="tns:getOrgOrgRelationTypes" name="getOrgOrgRelationTypes"></wsdl:input>
      <wsdl:output message="tns:getOrgOrgRelationTypesResponse" name="getOrgOrgRelationTypesResponse"></wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <wsdl:input message="tns:getSearchType" name="getSearchType"></wsdl:input>
      <wsdl:output message="tns:getSearchTypeResponse" name="getSearchTypeResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllDescendants">
      <wsdl:input message="tns:getAllDescendants" name="getAllDescendants"></wsdl:input>
      <wsdl:output message="tns:getAllDescendantsResponse" name="getAllDescendantsResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateOrgPersonRelation">
      <wsdl:input message="tns:validateOrgPersonRelation" name="validateOrgPersonRelation"></wsdl:input>
      <wsdl:output message="tns:validateOrgPersonRelationResponse" name="validateOrgPersonRelationResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllAncestors">
      <wsdl:input message="tns:getAllAncestors" name="getAllAncestors"></wsdl:input>
      <wsdl:output message="tns:getAllAncestorsResponse" name="getAllAncestorsResponse"></wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException"></wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException"></wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException"></wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OrganizationServiceSoapBinding" type="tns:OrganizationService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getPersonIdsForOrgByRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPersonIdsForOrgByRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPersonIdsForOrgByRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateOrgOrgRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateOrgOrgRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateOrgOrgRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrganization">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrganization">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrganizationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePositionRestrictionFromOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removePositionRestrictionFromOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removePositionRestrictionFromOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateObject">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateObject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateObjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="search">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="search">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="searchForResults">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="searchForResults">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchForResultsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgPersonRelationTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgPersonRelationTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPositionRestrictionsByOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getPositionRestrictionsByOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getPositionRestrictionsByOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgPersonRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgPersonRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeOrgPersonRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeOrgPersonRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeOrgPersonRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationsByPerson">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgPersonRelationsByPerson">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgPersonRelationsByPersonResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateOrgPersonRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateOrgPersonRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateOrgPersonRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createOrgPersonRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createOrgPersonRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createOrgPersonRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgTree">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgTree">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgTreeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationsByOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgPersonRelationsByOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgPersonRelationsByOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteOrganization">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteOrganization">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteOrganizationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateOrganization">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateOrganization">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateOrganizationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectStructure">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectStructure">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectStructureResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="hasOrgPersonRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="hasOrgPersonRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="hasOrgPersonRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeOrgOrgRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeOrgOrgRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeOrgOrgRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addPositionRestrictionToOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addPositionRestrictionToOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addPositionRestrictionToOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createOrganization">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createOrganization">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createOrganizationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationsByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgPersonRelationsByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgPersonRelationsByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrganizationsByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrganizationsByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrganizationsByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updatePositionRestrictionForOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updatePositionRestrictionForOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updatePositionRestrictionForOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgPersonRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgPersonRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgPersonRelationTypesForOrgType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgPersonRelationTypesForOrgType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgPersonRelationTypesForOrgTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateStructureData">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateStructureData">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateStructureDataResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="hasOrgOrgRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="hasOrgOrgRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="hasOrgOrgRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgHierarchy">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgHierarchy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgHierarchyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgHierarchies">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgHierarchies">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgHierarchiesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationsByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelationsByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationsByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllOrgPersonRelationsByOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllOrgPersonRelationsByOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllOrgPersonRelationsByOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationsByRelatedOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelationsByRelatedOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationsByRelatedOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateOrgOrgRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateOrgOrgRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateOrgOrgRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByResult">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByResultResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isDescendant">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isDescendant">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isDescendantResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByCriteria">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByCriteriaResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateOrgPositionRestriction">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateOrgPositionRestriction">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateOrgPositionRestrictionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationTypesForOrgType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelationTypesForOrgType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationTypesForOrgTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationsByOrg">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelationsByOrg">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationsByOrgResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationTypesForOrgHierarchy">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelationTypesForOrgHierarchy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationTypesForOrgHierarchyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllOrgPersonRelationsByPerson">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllOrgPersonRelationsByPerson">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllOrgPersonRelationsByPersonResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createOrgOrgRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createOrgOrgRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createOrgOrgRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrgOrgRelationTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getOrgOrgRelationTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrgOrgRelationTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllDescendants">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllDescendants">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllDescendantsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateOrgPersonRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateOrgPersonRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateOrgPersonRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllAncestors">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllAncestors">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllAncestorsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OrganizationService">
    <wsdl:port binding="tns:OrganizationServiceSoapBinding" name="OrganizationServicePort">
      <soap:address location="http://localhost/ks-embedded/services/OrganizationService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost/ks-embedded/services/OrganizationService</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="addPositionRestrictionToOrg" bindingOperationName="addPositionRestrictionToOrg" type="Request-Response" outputName="addPositionRestrictionToOrgResponse" inputName="addPositionRestrictionToOrg" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="createOrganization" bindingOperationName="createOrganization" type="Request-Response" outputName="createOrganizationResponse" inputName="createOrganization" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="createOrgOrgRelation" bindingOperationName="createOrgOrgRelation" type="Request-Response" outputName="createOrgOrgRelationResponse" inputName="createOrgOrgRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="createOrgPersonRelation" bindingOperationName="createOrgPersonRelation" type="Request-Response" outputName="createOrgPersonRelationResponse" inputName="createOrgPersonRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="deleteOrganization" bindingOperationName="deleteOrganization" type="Request-Response" outputName="deleteOrganizationResponse" inputName="deleteOrganization" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getAllAncestors" bindingOperationName="getAllAncestors" type="Request-Response" outputName="getAllAncestorsResponse" inputName="getAllAncestors" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getAllDescendants" bindingOperationName="getAllDescendants" type="Request-Response" outputName="getAllDescendantsResponse" inputName="getAllDescendants" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getAllOrgPersonRelationsByOrg" bindingOperationName="getAllOrgPersonRelationsByOrg" type="Request-Response" outputName="getAllOrgPersonRelationsByOrgResponse" inputName="getAllOrgPersonRelationsByOrg" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getAllOrgPersonRelationsByPerson" bindingOperationName="getAllOrgPersonRelationsByPerson" type="Request-Response" outputName="getAllOrgPersonRelationsByPersonResponse" inputName="getAllOrgPersonRelationsByPerson" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getObjectStructure" bindingOperationName="getObjectStructure" type="Request-Response" outputName="getObjectStructureResponse" inputName="getObjectStructure" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getObjectTypes" bindingOperationName="getObjectTypes" type="Request-Response" outputName="getObjectTypesResponse" inputName="getObjectTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrganization" bindingOperationName="getOrganization" type="Request-Response" outputName="getOrganizationResponse" inputName="getOrganization" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="getOrganization51"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/OrganizationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:org="http://student.kuali.org/wsdl/organization">
   <soapenv:Header/>
   <soapenv:Body>
      <org:getOrganization>
         <!--Optional:-->
         
      <orgId>51</orgId></org:getOrganization>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/organization/OrganizationService/getOrganization"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getOrganizationsByIdList" bindingOperationName="getOrganizationsByIdList" type="Request-Response" outputName="getOrganizationsByIdListResponse" inputName="getOrganizationsByIdList" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgHierarchies" bindingOperationName="getOrgHierarchies" type="Request-Response" outputName="getOrgHierarchiesResponse" inputName="getOrgHierarchies" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgHierarchy" bindingOperationName="getOrgHierarchy" type="Request-Response" outputName="getOrgHierarchyResponse" inputName="getOrgHierarchy" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgOrgRelation" bindingOperationName="getOrgOrgRelation" type="Request-Response" outputName="getOrgOrgRelationResponse" inputName="getOrgOrgRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgOrgRelationsByIdList" bindingOperationName="getOrgOrgRelationsByIdList" type="Request-Response" outputName="getOrgOrgRelationsByIdListResponse" inputName="getOrgOrgRelationsByIdList" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgOrgRelationsByOrg" bindingOperationName="getOrgOrgRelationsByOrg" type="Request-Response" outputName="getOrgOrgRelationsByOrgResponse" inputName="getOrgOrgRelationsByOrg" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgOrgRelationsByRelatedOrg" bindingOperationName="getOrgOrgRelationsByRelatedOrg" type="Request-Response" outputName="getOrgOrgRelationsByRelatedOrgResponse" inputName="getOrgOrgRelationsByRelatedOrg" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgOrgRelationType" bindingOperationName="getOrgOrgRelationType" type="Request-Response" outputName="getOrgOrgRelationTypeResponse" inputName="getOrgOrgRelationType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgOrgRelationTypes" bindingOperationName="getOrgOrgRelationTypes" type="Request-Response" outputName="getOrgOrgRelationTypesResponse" inputName="getOrgOrgRelationTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgOrgRelationTypesForOrgHierarchy" bindingOperationName="getOrgOrgRelationTypesForOrgHierarchy" type="Request-Response" outputName="getOrgOrgRelationTypesForOrgHierarchyResponse" inputName="getOrgOrgRelationTypesForOrgHierarchy" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgOrgRelationTypesForOrgType" bindingOperationName="getOrgOrgRelationTypesForOrgType" type="Request-Response" outputName="getOrgOrgRelationTypesForOrgTypeResponse" inputName="getOrgOrgRelationTypesForOrgType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgPersonRelation" bindingOperationName="getOrgPersonRelation" type="Request-Response" outputName="getOrgPersonRelationResponse" inputName="getOrgPersonRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgPersonRelationsByIdList" bindingOperationName="getOrgPersonRelationsByIdList" type="Request-Response" outputName="getOrgPersonRelationsByIdListResponse" inputName="getOrgPersonRelationsByIdList" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgPersonRelationsByOrg" bindingOperationName="getOrgPersonRelationsByOrg" type="Request-Response" outputName="getOrgPersonRelationsByOrgResponse" inputName="getOrgPersonRelationsByOrg" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgPersonRelationsByPerson" bindingOperationName="getOrgPersonRelationsByPerson" type="Request-Response" outputName="getOrgPersonRelationsByPersonResponse" inputName="getOrgPersonRelationsByPerson" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgPersonRelationType" bindingOperationName="getOrgPersonRelationType" type="Request-Response" outputName="getOrgPersonRelationTypeResponse" inputName="getOrgPersonRelationType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgPersonRelationTypes" bindingOperationName="getOrgPersonRelationTypes" type="Request-Response" outputName="getOrgPersonRelationTypesResponse" inputName="getOrgPersonRelationTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgPersonRelationTypesForOrgType" bindingOperationName="getOrgPersonRelationTypesForOrgType" type="Request-Response" outputName="getOrgPersonRelationTypesForOrgTypeResponse" inputName="getOrgPersonRelationTypesForOrgType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgTree" bindingOperationName="getOrgTree" type="Request-Response" outputName="getOrgTreeResponse" inputName="getOrgTree" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgType" bindingOperationName="getOrgType" type="Request-Response" outputName="getOrgTypeResponse" inputName="getOrgType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getOrgTypes" bindingOperationName="getOrgTypes" type="Request-Response" outputName="getOrgTypesResponse" inputName="getOrgTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getPersonIdsForOrgByRelationType" bindingOperationName="getPersonIdsForOrgByRelationType" type="Request-Response" outputName="getPersonIdsForOrgByRelationTypeResponse" inputName="getPersonIdsForOrgByRelationType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getPositionRestrictionsByOrg" bindingOperationName="getPositionRestrictionsByOrg" type="Request-Response" outputName="getPositionRestrictionsByOrgResponse" inputName="getPositionRestrictionsByOrg" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchCriteriaType" bindingOperationName="getSearchCriteriaType" type="Request-Response" outputName="getSearchCriteriaTypeResponse" inputName="getSearchCriteriaType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchCriteriaTypes" bindingOperationName="getSearchCriteriaTypes" type="Request-Response" outputName="getSearchCriteriaTypesResponse" inputName="getSearchCriteriaTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchResultType" bindingOperationName="getSearchResultType" type="Request-Response" outputName="getSearchResultTypeResponse" inputName="getSearchResultType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchResultTypes" bindingOperationName="getSearchResultTypes" type="Request-Response" outputName="getSearchResultTypesResponse" inputName="getSearchResultTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchType" bindingOperationName="getSearchType" type="Request-Response" outputName="getSearchTypeResponse" inputName="getSearchType" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchTypes" bindingOperationName="getSearchTypes" type="Request-Response" outputName="getSearchTypesResponse" inputName="getSearchTypes" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchTypesByCriteria" bindingOperationName="getSearchTypesByCriteria" type="Request-Response" outputName="getSearchTypesByCriteriaResponse" inputName="getSearchTypesByCriteria" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="getSearchTypesByResult" bindingOperationName="getSearchTypesByResult" type="Request-Response" outputName="getSearchTypesByResultResponse" inputName="getSearchTypesByResult" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="hasOrgOrgRelation" bindingOperationName="hasOrgOrgRelation" type="Request-Response" outputName="hasOrgOrgRelationResponse" inputName="hasOrgOrgRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="hasOrgPersonRelation" bindingOperationName="hasOrgPersonRelation" type="Request-Response" outputName="hasOrgPersonRelationResponse" inputName="hasOrgPersonRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="isDescendant" bindingOperationName="isDescendant" type="Request-Response" outputName="isDescendantResponse" inputName="isDescendant" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="removeOrgOrgRelation" bindingOperationName="removeOrgOrgRelation" type="Request-Response" outputName="removeOrgOrgRelationResponse" inputName="removeOrgOrgRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="removeOrgPersonRelation" bindingOperationName="removeOrgPersonRelation" type="Request-Response" outputName="removeOrgPersonRelationResponse" inputName="removeOrgPersonRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="removePositionRestrictionFromOrg" bindingOperationName="removePositionRestrictionFromOrg" type="Request-Response" outputName="removePositionRestrictionFromOrgResponse" inputName="removePositionRestrictionFromOrg" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="search" bindingOperationName="search" type="Request-Response" outputName="searchResponse" inputName="search" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="searchForResults" bindingOperationName="searchForResults" type="Request-Response" outputName="searchForResultsResponse" inputName="searchForResults" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateOrganization" bindingOperationName="updateOrganization" type="Request-Response" outputName="updateOrganizationResponse" inputName="updateOrganization" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateOrgOrgRelation" bindingOperationName="updateOrgOrgRelation" type="Request-Response" outputName="updateOrgOrgRelationResponse" inputName="updateOrgOrgRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updateOrgPersonRelation" bindingOperationName="updateOrgPersonRelation" type="Request-Response" outputName="updateOrgPersonRelationResponse" inputName="updateOrgPersonRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="updatePositionRestrictionForOrg" bindingOperationName="updatePositionRestrictionForOrg" type="Request-Response" outputName="updatePositionRestrictionForOrgResponse" inputName="updatePositionRestrictionForOrg" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateObject" bindingOperationName="validateObject" type="Request-Response" outputName="validateObjectResponse" inputName="validateObject" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateOrg" bindingOperationName="validateOrg" type="Request-Response" outputName="validateOrgResponse" inputName="validateOrg" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateOrgOrgRelation" bindingOperationName="validateOrgOrgRelation" type="Request-Response" outputName="validateOrgOrgRelationResponse" inputName="validateOrgOrgRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateOrgPersonRelation" bindingOperationName="validateOrgPersonRelation" type="Request-Response" outputName="validateOrgPersonRelationResponse" inputName="validateOrgPersonRelation" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateOrgPositionRestriction" bindingOperationName="validateOrgPositionRestriction" type="Request-Response" outputName="validateOrgPositionRestrictionResponse" inputName="validateOrgPositionRestriction" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation><con:operation isOneWay="false" action="" name="validateStructureData" bindingOperationName="validateStructureData" type="Request-Response" outputName="validateStructureDataResponse" inputName="validateStructureData" receivesAttachments="false" sendsAttachments="false"><con:settings/></con:operation></con:interface><con:testSuite name="CreateCreditCourseProposal" id="a0398377-3098-4b5a-8d57-63998ad83de2"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">true</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\workspace-jee-3\test\ws\ks-soapui\src\main\resources\reports</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:properties/><con:reportParameters/><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FullTest" searchProperties="true" id="5e97cb96-f84d-4431-b343-3d5c038fc015"><con:settings/><con:testStep type="request" name="createClu - createCreditCourse"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>createClu</con:operation><con:request name="createClu - createCreditCourse"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createClu>
         <luTypeKey>kuali.lu.type.CreditCourse</luTypeKey>
           <cluInfo type="kuali.lu.type.CreditCourse" state="draft" id="">
            <officialIdentifier type="" state="" id="">
            </officialIdentifier>
            <academicSubjectOrgs>
               <orgId>51</orgId>
            </academicSubjectOrgs>
            <campusLocations>NorthCountyCampus</campusLocations>
            <campusLocations>SouthCountyCampus</campusLocations>
            <primaryAdminOrg>
               <orgId>51</orgId>
            </primaryAdminOrg>
         </cluInfo>
      </lu:createClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;return id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluIdToGetCreditCourse"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>cluId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getClu - getCreditCourse</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:getClu[1]/cluId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getClu - getCreditCourse"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>getClu</con:operation><con:request name="getClu - getCreditCourse"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:getClu>
        
      <cluId>13cd1eb6-7a5c-41f3-aa77-1288b6735f91</cluId></lu:getClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;return id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluIdToProposal"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyCluId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createProposal - createCreditCourseProposal</con:targetStep><con:targetPath>declare namespace prop='http://student.kuali.org/wsdl/proposal';
//prop:createProposal[1]/proposalInfo[1]/proposalReference[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="createProposal - createCreditCourseProposal"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ProposalServiceSoapBinding</con:interface><con:operation>createProposal</con:operation><con:request name="createProposal - createCreditCourseProposal" outgoingWss="" incomingWss="" timeout="" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/ProposalService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:prop="http://student.kuali.org/wsdl/proposal">
   <soapenv:Header/>
   <soapenv:Body>
      <prop:createProposal>
         <proposalTypeKey>kuali.proposal.type.course.create</proposalTypeKey><proposalInfo type="kuali.proposal.type.course.create">
            <name>Proposal Title</name>
            <proposalReferenceType>kuali.proposal.referenceType.clu</proposalReferenceType>
            <proposalReference>13cd1eb6-7a5c-41f3-aa77-1288b6735f91</proposalReference>
         </proposalInfo>
      </prop:createProposal>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;versionInd>0&lt;/versionInd></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/proposal/ProposalService/createProposal"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyProposalPropertiesForUpdate"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyProposalId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createProposal - createCreditCourseProposal</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/proposal';
//ns2:createProposalResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateProposal - updateCreditCourseProposal</con:targetStep><con:targetPath>declare namespace prop='http://student.kuali.org/wsdl/proposal';
//prop:updateProposal[1]/proposalId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>copyProposalId2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createProposal - createCreditCourseProposal</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/proposal';
//ns2:createProposalResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateProposal - updateCreditCourseProposal</con:targetStep><con:targetPath>declare namespace prop='http://student.kuali.org/wsdl/proposal';
//prop:updateProposal[1]/proposalInfo[1]/@id</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>copyCluId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createProposal - createCreditCourseProposal</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/proposal';
//ns2:createProposalResponse[1]/return[1]/proposalReference[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateProposal - updateCreditCourseProposal</con:targetStep><con:targetPath>declare namespace prop='http://student.kuali.org/wsdl/proposal';
//prop:updateProposal[1]/proposalInfo[1]/proposalReference[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>copyVersionIndicator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createProposal - createCreditCourseProposal</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/proposal';
//ns2:createProposalResponse[1]/return[1]/metaInfo[1]/versionInd[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateProposal - updateCreditCourseProposal</con:targetStep><con:targetPath>declare namespace prop='http://student.kuali.org/wsdl/proposal';
//prop:updateProposal[1]/proposalInfo[1]/metaInfo[1]/versionInd[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="updateProposal - updateCreditCourseProposal"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ProposalServiceSoapBinding</con:interface><con:operation>updateProposal</con:operation><con:request name="updateProposal - updateCreditCourseProposal" outgoingWss="" incomingWss="" timeout="" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/ProposalService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:prop="http://student.kuali.org/wsdl/proposal">
   <soapenv:Header/>
   <soapenv:Body>
      <prop:updateProposal>
         <proposalId>700cbb62-4525-47e1-bf5b-fac70ae5d3e9</proposalId>
         <proposalInfo type="kuali.proposal.type.course.create" id="700cbb62-4525-47e1-bf5b-fac70ae5d3e9">
            <name>Updated Proposal Title</name>
            <proposalReferenceType>kuali.proposal.referenceType.clu</proposalReferenceType>
            <proposalReference>13cd1eb6-7a5c-41f3-aa77-1288b6735f91</proposalReference>
            <metaInfo>
               <versionInd>0</versionInd>
               <createTime>2010-03-18T16:36:49.444-07:00</createTime>
               <updateTime>2010-03-18T16:36:49.444-07:00</updateTime>
            </metaInfo>
         </proposalInfo>
      </prop:updateProposal>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;name>Updated Proposal Title&lt;/name></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>&lt;versionInd>1&lt;/versionInd></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/proposal/ProposalService/updateProposal"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluPropertiesForUpdate"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyCluIdToCluIdElement</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourseWithCourseLogistics</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>copyCluIdToCluIdAttribute</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourseWithCourseLogistics</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/@id</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>copyPrimaryAdminOrgId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/primaryAdminOrg[1]/id[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourseWithCourseLogistics</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/primaryAdminOrg[1]/id[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false"><con:name>copyVersionInd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/metaInfo[1]/versionInd[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourseWithCourseLogistics</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/metaInfo[1]/versionInd[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyOfficialIdentifierId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/officialIdentifier[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourseWithCourseLogistics</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/officialIdentifier[1]/@id</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="updateClu - updateCreditCourseWithCourseLogistics"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>updateClu</con:operation><con:request name="updateClu - updateCreditCourseWithCourseLogistics"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:updateClu>
         <cluId>13cd1eb6-7a5c-41f3-aa77-1288b6735f91</cluId>
         <cluInfo type="kuali.lu.type.CreditCourse" state="draft" id="13cd1eb6-7a5c-41f3-aa77-1288b6735f91">
            <officialIdentifier id="">
            </officialIdentifier>
            <academicSubjectOrgs>
               <orgId>51</orgId>
            </academicSubjectOrgs>
            <campusLocations>NorthCountyCampus</campusLocations>
            <campusLocations>SouthCountyCampus</campusLocations>
            <primaryAdminOrg>
               <id>8493a0aa-e336-4d56-93ee-282b0491bf32</id>
               <orgId>51</orgId>
            </primaryAdminOrg>








            <metaInfo>
               <versionInd>0</versionInd>
               <createTime>2010-03-09T19:43:59.780-07:00</createTime>
               <updateTime>2010-03-11T16:09:49.372-07:00</updateTime>
            </metaInfo>
         </cluInfo>
      </lu:updateClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;versionInd>1&lt;/versionInd></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="createClu - createFormatShell"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>createClu</con:operation><con:request name="createClu - createFormatShell"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createClu>
         <luTypeKey>kuali.lu.type.CreditCourseFormatShell</luTypeKey>
           <cluInfo type="kuali.lu.type.CreditCourseFormatShell" state="draft" id="">
         </cluInfo>
      </lu:createClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="createClu - createActivityLecture"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>createClu</con:operation><con:request name="createClu - createActivityLecture"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createClu>
         <luTypeKey>kuali.lu.type.activity.Lecture</luTypeKey>
         <cluInfo type="kuali.lu.type.activity.Lecture" state="draft" id="">
            <intensity>
               <unitType>atpType.duration.weekly</unitType>
               <unitQuantity>1</unitQuantity>
            </intensity>
            <stdDuration>
               <atpDurationTypeKey>atpType.duration.week</atpDurationTypeKey>
               <timeQuantity>1</timeQuantity>
            </stdDuration>
         </cluInfo>
      </lu:createClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyIdsForRelatingCreditCourseWithCourseFormatShell"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyCreditCourseCluId1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateCreditCourseToCourseFormatShell</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/cluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>copyCreditCourseCluId2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateCreditCourseToCourseFormatShell</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/cluCluRelationInfo[1]/cluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>copyRelatedCluId1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createFormatShell</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateCreditCourseToCourseFormatShell</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/relatedCluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyRelatedCluId2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createFormatShell</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateCreditCourseToCourseFormatShell</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/cluCluRelationInfo[1]/relatedCluId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="createCluCluRelation - relateCreditCourseToCourseFormatShell"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>createCluCluRelation</con:operation><con:request name="createCluCluRelation - relateCreditCourseToCourseFormatShell"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createCluCluRelation>
         <cluId>13cd1eb6-7a5c-41f3-aa77-1288b6735f91</cluId>
         <relatedCluId>5146c739-803e-4659-80a9-cdea8c69f84e</relatedCluId>
         <luLuRelationTypeKey>luLuRelationType.contains</luLuRelationTypeKey>
         <cluCluRelationInfo type="luLuRelationType.contains" state="Active" id="">
            <cluId>13cd1eb6-7a5c-41f3-aa77-1288b6735f91</cluId>
            <relatedCluId>5146c739-803e-4659-80a9-cdea8c69f84e</relatedCluId>
         </cluCluRelationInfo>
      </lu:createCluCluRelation>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>type="luLuRelationType.contains"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyIdsForRelatingFormatShellWithActivityLecture"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyCreditCourseCluId1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createFormatShell</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateFormatShellToActivityLecture</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/cluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyCreditCourseCluId2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createFormatShell</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateFormatShellToActivityLecture</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/cluCluRelationInfo[1]/cluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyRelatedCluId1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createActivityLecture</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateFormatShellToActivityLecture</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/relatedCluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyRelatedCluId2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createActivityLecture</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateFormatShellToActivityLecture</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/cluCluRelationInfo[1]/relatedCluId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="createCluCluRelation - relateFormatShellToActivityLecture"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>createCluCluRelation</con:operation><con:request name="createCluCluRelation - relateFormatShellToActivityLecture"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createCluCluRelation>
         <cluId>5146c739-803e-4659-80a9-cdea8c69f84e</cluId>
         <relatedCluId>a246e563-0300-4815-981f-9bcfdf8853cf</relatedCluId>
         <luLuRelationTypeKey>luLuRelationType.contains</luLuRelationTypeKey>
         <cluCluRelationInfo type="luLuRelationType.contains" state="Active" id="">
            <cluId>5146c739-803e-4659-80a9-cdea8c69f84e</cluId>
            <relatedCluId>a246e563-0300-4815-981f-9bcfdf8853cf</relatedCluId>
         </cluCluRelationInfo>
      </lu:createCluCluRelation>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>type="luLuRelationType.contains"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluIdToGetCluCluRelationsByClu"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyCluId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getCluCluRelationsByClu - getCreditCourseRelations</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:getCluCluRelationsByClu[1]/cluId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getCluCluRelationsByClu - getCreditCourseRelations"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>getCluCluRelationsByClu</con:operation><con:request name="getCluCluRelationsByClu - getCreditCourseRelations" outgoingWss="" incomingWss="" timeout="" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:getCluCluRelationsByClu>
         
      <cluId>13cd1eb6-7a5c-41f3-aa77-1288b6735f91</cluId></lu:getCluCluRelationsByClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/getCluCluRelationsByClu"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluPropertiesForUpdateCourseInformation"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyCluIdToCluIdElement</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourseCourseInformation</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>copyCluIdToCluIdAttribute</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourseCourseInformation</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/@id</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>copyPrimaryAdminOrgId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/primaryAdminOrg[1]/id[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourseCourseInformation</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/primaryAdminOrg[1]/id[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false"><con:name>copyVersionInd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>updateClu - updateCreditCourseWithCourseLogistics</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:updateCluResponse[1]/return[1]/metaInfo[1]/versionInd[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourseCourseInformation</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/metaInfo[1]/versionInd[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyOfficialIdentifierId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/officialIdentifier[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourseCourseInformation</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/officialIdentifier[1]/@id</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="updateClu - updateCreditCourseCourseInformation"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>updateClu</con:operation><con:request name="updateClu - updateCreditCourseCourseInformation" outgoingWss="" incomingWss="" timeout="" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:updateClu>
         <cluId>13cd1eb6-7a5c-41f3-aa77-1288b6735f91</cluId>
         <cluInfo type="kuali.lu.type.CreditCourse" state="draft" id="13cd1eb6-7a5c-41f3-aa77-1288b6735f91">
            <officialIdentifier id="46942bb6-48cb-4947-a943-2befb93c52fd">
               <code>nullnull</code>
               <shortName>Short Course Title</shortName>
               <longName>Course Title</longName>
               <division>ABCD</division>
               <suffixCode>123</suffixCode>
            </officialIdentifier>
            <alternateIdentifiers type="kuali.lu.type.CreditCourse.identifier.cross-listed">

               <division>DCBA</division>
               <suffixCode>321</suffixCode>
               <orgId>51</orgId>
            </alternateIdentifiers>
            <alternateIdentifiers type="kuali.lu.type.CreditCourse.identifier.version">

               <variation>A</variation>
               <longName>Version Code Title</longName>
            </alternateIdentifiers>
            <academicSubjectOrgs>
               <orgId>51</orgId>
            </academicSubjectOrgs>
            <descr>
               <plain>Course Description</plain>
            </descr>
            <campusLocations>NorthCountyCampus</campusLocations>
            <campusLocations>SouthCountyCampus</campusLocations>
            <primaryAdminOrg>

               <id>8493a0aa-e336-4d56-93ee-282b0491bf32</id>
               <orgId>51</orgId>
            </primaryAdminOrg>
            <primaryInstructor>
               <personId>earl</personId>

            </primaryInstructor>
            <expectedFirstAtp>kuali.atp.AY2008-2009</expectedFirstAtp>
            <effectiveDate>2020-03-09T19:43:59.780-07:00</effectiveDate>
            <expirationDate>2021-03-09T19:43:59.780-07:00</expirationDate>
            <stdDuration>
               <atpDurationTypeKey>atpType.duration.week</atpDurationTypeKey>
               <timeQuantity>1</timeQuantity>
            </stdDuration>







            <metaInfo>
               <versionInd>1</versionInd>
               <createTime>2010-03-19T10:29:02.393-07:00</createTime>
               <updateTime>2010-03-19T10:44:28.276-07:00</updateTime>
            </metaInfo>
         </cluInfo>
      </lu:updateClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;code>ABCD123&lt;/code></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>&lt;code>DCBA321&lt;/code></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>&lt;plain>Course Description&lt;/plain></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>&lt;effectiveDate>2020</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>&lt;expirationDate>2021</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/updateClu"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluCluRelationId-ActivityLecture"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>cluId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createCluCluRelation - relateFormatShellToActivityLecture</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluCluRelationResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>deleteCluCluRelation - deleteActivityLecture</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:deleteCluCluRelation[1]/cluCluRelationId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="deleteCluCluRelation - deleteActivityLecture"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>deleteCluCluRelation</con:operation><con:request name="deleteCluCluRelation - deleteActivityLecture" outgoingWss="" incomingWss="" timeout="" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:deleteCluCluRelation>
         <cluCluRelationId>3e5b4379-52f8-4dd9-b265-ae828e41dd65</cluCluRelationId>
      </lu:deleteCluCluRelation>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;success>true&lt;/success></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/deleteCluCluRelation"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluIdToDeleteActivityLecture"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>cluId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createActivityLecture</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>deleteClu - deleteActivityLecture</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:deleteClu[1]/cluId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="deleteClu - deleteActivityLecture"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>deleteClu</con:operation><con:request name="deleteClu - deleteActivityLecture"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:deleteClu>
        <cluId>a246e563-0300-4815-981f-9bcfdf8853cf</cluId>
      </lu:deleteClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;success>true&lt;/success></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluCluRelationId-FormatShell"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>cluId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createCluCluRelation - relateCreditCourseToCourseFormatShell</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluCluRelationResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>deleteCluCluRelation - deleteFormatShell</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:deleteCluCluRelation[1]/cluCluRelationId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="deleteCluCluRelation - deleteFormatShell"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>deleteCluCluRelation</con:operation><con:request name="deleteCluCluRelation - deleteFormatShell" outgoingWss="" incomingWss="" timeout="" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:deleteCluCluRelation>
         <cluCluRelationId>b1f0163e-71e1-41bb-abc4-e383a2d11081</cluCluRelationId>
      </lu:deleteCluCluRelation>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;success>true&lt;/success></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/lu/LuService/deleteCluCluRelation"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluIdToDeleteFormatShell"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>cluId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createFormatShell</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>deleteClu - deleteFormatShell</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:deleteClu[1]/cluId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="deleteClu - deleteFormatShell"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>deleteClu</con:operation><con:request name="deleteClu - deleteFormatShell"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:deleteClu>
        <cluId>5146c739-803e-4659-80a9-cdea8c69f84e</cluId>
      </lu:deleteClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;success>true&lt;/success></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluIdToDeleteCreditCourse"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>cluId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>deleteClu - deleteCreditCourse</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:deleteClu[1]/cluId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="deleteClu - deleteCreditCourse"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>deleteClu</con:operation><con:request name="deleteClu - deleteCreditCourse"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:deleteClu>
        <cluId>13cd1eb6-7a5c-41f3-aa77-1288b6735f91</cluId>
      </lu:deleteClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;success>true&lt;/success></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyProposalPropertiesForDelete"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyProposalId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createProposal - createCreditCourseProposal</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/proposal';
//ns2:createProposalResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>deleteProposal - deleteProposal</con:targetStep><con:targetPath>declare namespace prop='http://student.kuali.org/wsdl/proposal';
//prop:deleteProposal[1]/proposalId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="deleteProposal - deleteProposal"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ProposalServiceSoapBinding</con:interface><con:operation>deleteProposal</con:operation><con:request name="deleteProposal - deleteProposal" outgoingWss="" incomingWss="" timeout="" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/ProposalService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:prop="http://student.kuali.org/wsdl/proposal">
   <soapenv:Header/>
   <soapenv:Body>
      <prop:deleteProposal>
         <proposalId>700cbb62-4525-47e1-bf5b-fac70ae5d3e9</proposalId>
      </prop:deleteProposal>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://student.kuali.org/wsdl/proposal/ProposalService/deleteProposal"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest name="SingleThreaded" id="729ef5a1-ebf2-4b0c-8744-10700026ab84"><con:settings><con:setting id="FlowLayout">true</con:setting></con:settings><con:threadCount>1</con:threadCount><con:startDelay>5</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>600</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>1000</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>false</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CourseLogistics" searchProperties="true" id="57bb6075-6ab0-4e35-b82a-3702dfd0d03c"><con:settings/><con:testStep type="request" name="createClu - createCreditCourse"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>createClu</con:operation><con:request name="createClu - createCreditCourse"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createClu>
         <luTypeKey>kuali.lu.type.CreditCourse</luTypeKey>
           <cluInfo type="kuali.lu.type.CreditCourse" state="draft" id="">
            <officialIdentifier type="" state="" id="">
            </officialIdentifier>
            <academicSubjectOrgs>
               <orgId>51</orgId>
            </academicSubjectOrgs>
            <campusLocations>NorthCountyCampus</campusLocations>
            <campusLocations>SouthCountyCampus</campusLocations>
            <primaryAdminOrg>
               <orgId>51</orgId>
            </primaryAdminOrg>
         </cluInfo>
      </lu:createClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluIdToGetCreditCourse"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>cluId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getClu - getCreditCourse</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:getClu[1]/cluId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getClu - getCreditCourse"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>getClu</con:operation><con:request name="getClu - getCreditCourse"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:getClu>
        <cluId>54bbb170-c7bd-42e8-9d5b-9888fc6431c8</cluId>
      </lu:getClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;return id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>&lt;versionInd>0&lt;/versionInd></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluPropertiesForUpdate"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyCluIdToCluIdElement</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourse</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>copyCluIdToCluIdAttribute</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourse</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/@id</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>copyPrimaryAdminOrgId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/primaryAdminOrg[1]/id[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourse</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/primaryAdminOrg[1]/id[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>copyMetaInfoVersionNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/metaInfo[1]/versionInd[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourse</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/metaInfo[1]/versionInd[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>copyMetaInfoUpdateTime</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/metaInfo[1]/updateTime[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourse</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/metaInfo[1]/updateTime[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyMetaInfoCreatedTime</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getClu - getCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/metaInfo[1]/createTime[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateClu - updateCreditCourse</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/metaInfo[1]/createTime[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="updateClu - updateCreditCourse"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>updateClu</con:operation><con:request name="updateClu - updateCreditCourse"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:updateClu>
         <cluId>54bbb170-c7bd-42e8-9d5b-9888fc6431c8</cluId>
         <cluInfo type="kuali.lu.type.CreditCourse" state="draft" id="54bbb170-c7bd-42e8-9d5b-9888fc6431c8">
            <officialIdentifier id="a0f9be6a-74a2-4867-ab83-cd55562ad27e">
            </officialIdentifier>
            <academicSubjectOrgs>
               <orgId>51</orgId>
            </academicSubjectOrgs>
            <campusLocations>NorthCountyCampus</campusLocations>
            <campusLocations>SouthCountyCampus</campusLocations>
            <primaryAdminOrg>
               <id>9943c1d3-fd7b-4cb9-8440-9b437a100156</id>
               <orgId>51</orgId>
            </primaryAdminOrg>
            <primaryInstructor>
               <personId>edna</personId>
            </primaryInstructor>
            <expectedFirstAtp>kuali.atp.AY2008-2009</expectedFirstAtp>
            <stdDuration>
               <atpDurationTypeKey>atpType.duration.month</atpDurationTypeKey>
               <timeQuantity>1</timeQuantity>
            </stdDuration>
            <metaInfo>
               <versionInd>0</versionInd>
               <createTime>2010-03-23T17:06:47.101-07:00</createTime>
               <updateTime>2010-03-23T17:06:47.101-07:00</updateTime>
            </metaInfo>
         </cluInfo>
      </lu:updateClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="createClu - createCreditCourseFormatShell"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>createClu</con:operation><con:request name="createClu - createCreditCourseFormatShell"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createClu>
         <luTypeKey>kuali.lu.type.CreditCourseFormatShell</luTypeKey>
           <cluInfo type="kuali.lu.type.CreditCourseFormatShell" state="draft" id="">
         </cluInfo>
      </lu:createClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="createClu - createActivityLecture"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>createClu</con:operation><con:request name="createClu - createActivityLecture"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createClu>
         <luTypeKey>kuali.lu.type.activity.Lecture</luTypeKey>
         <cluInfo type="kuali.lu.type.activity.Lecture" state="draft" id="">
            <intensity>
               <unitType>atpType.duration.weekly</unitType>
               <unitQuantity>1</unitQuantity>
            </intensity>
            <stdDuration>
               <atpDurationTypeKey>atpType.duration.week</atpDurationTypeKey>
               <timeQuantity>1</timeQuantity>
            </stdDuration>
         </cluInfo>
      </lu:createClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyIdsForRelatingCreditCourseWithCourseFormatShell"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyCreditCourseCluId1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateCreditCourseToCourseFormatShell</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/cluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>copyCreditCourseCluId2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateCreditCourseToCourseFormatShell</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/cluCluRelationInfo[1]/cluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>copyRelatedCluId1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createCreditCourseFormatShell</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateCreditCourseToCourseFormatShell</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/relatedCluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyRelatedCluId2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createCreditCourseFormatShell</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateCreditCourseToCourseFormatShell</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/cluCluRelationInfo[1]/relatedCluId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="createCluCluRelation - relateCreditCourseToCourseFormatShell"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>createCluCluRelation</con:operation><con:request name="createCluCluRelation - relateCreditCourseToCourseFormatShell"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createCluCluRelation>
         <cluId>54bbb170-c7bd-42e8-9d5b-9888fc6431c8</cluId>
         <relatedCluId>d6b75e5b-a8dd-44ce-94fd-029425f720a1</relatedCluId>
         <luLuRelationTypeKey>luLuRelationType.contains</luLuRelationTypeKey>
         <cluCluRelationInfo type="luLuRelationType.contains" state="Active" id="">
            <cluId>54bbb170-c7bd-42e8-9d5b-9888fc6431c8</cluId>
            <relatedCluId>d6b75e5b-a8dd-44ce-94fd-029425f720a1</relatedCluId>
         </cluCluRelationInfo>
      </lu:createCluCluRelation>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>type="luLuRelationType.contains"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyIdsForRelatingCreditCourseWithActivityLecture"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyCreditCourseCluId1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateCreditCourseToActivityLecture</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/cluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyCreditCourseCluId2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createCreditCourse</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateCreditCourseToActivityLecture</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/cluCluRelationInfo[1]/cluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>copyRelatedCluId1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createActivityLecture</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateCreditCourseToActivityLecture</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/relatedCluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyRelatedCluId2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createClu - createActivityLecture</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>createCluCluRelation - relateCreditCourseToActivityLecture</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createCluCluRelation[1]/cluCluRelationInfo[1]/relatedCluId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="createCluCluRelation - relateCreditCourseToActivityLecture"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>createCluCluRelation</con:operation><con:request name="createCluCluRelation - relateCreditCourseToActivityLecture"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createCluCluRelation>
         <cluId>54bbb170-c7bd-42e8-9d5b-9888fc6431c8</cluId>
         <relatedCluId>446b7861-67c9-4f9a-82ea-6c7d4f4a5e8c</relatedCluId>
         <luLuRelationTypeKey>luLuRelationType.contains</luLuRelationTypeKey>
         <cluCluRelationInfo type="luLuRelationType.contains" state="Active" id="">
            <cluId>54bbb170-c7bd-42e8-9d5b-9888fc6431c8</cluId>
            <relatedCluId>446b7861-67c9-4f9a-82ea-6c7d4f4a5e8c</relatedCluId>
         </cluCluRelationInfo>
      </lu:createCluCluRelation>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>type="luLuRelationType.contains"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ActiveDates" searchProperties="true" id="8aa9bd28-cde4-4f39-b213-f944a24db6bd" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Groovy Script for Effrective Date"><con:settings/><con:config><script>sdf = new java.text.SimpleDateFormat("yyyy-MM-dd") 
todayStr = sdf.format(new Date()) 
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script for Expiration Date"><con:settings/><con:config><script>sdf = new java.text.SimpleDateFormat("yyyy-MM-dd") 
todayStr = sdf.format(new Date()+1096) 
</script></con:config></con:testStep><con:testStep type="transfer" name="CopyActiveDatesToCreateMethod"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>effectiveDate</con:name><con:sourceType>result</con:sourceType><con:sourceStep>Groovy Script for Effrective Date</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>createCreditCourseActiveDates</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createClu[1]/effectiveDate[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>expirationDate</con:name><con:sourceType>result</con:sourceType><con:sourceStep>Groovy Script for Expiration Date</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>createCreditCourseActiveDates</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:createClu[1]/expirationDate[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="createCreditCourseActiveDates"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>createClu</con:operation><con:request name="createCreditCourseActiveDates"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost/ks-embedded/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:createClu>
         <luTypeKey>kuali.lu.type.CreditCourse</luTypeKey>
           <cluInfo type="kuali.lu.type.CreditCourse" state="draft" id="">
            <officialIdentifier type="" state="" id="">
            </officialIdentifier>
            <academicSubjectOrgs>
               <orgId>51</orgId>
            </academicSubjectOrgs>
            <campusLocations>NorthCountyCampus</campusLocations>
            <campusLocations>SouthCountyCampus</campusLocations>
	    <campusLocations>AllCampuses</campusLocations>
            <primaryAdminOrg>
               <orgId>51</orgId>
            </primaryAdminOrg>
         </cluInfo>

	<effectiveDate>2010-03-22</effectiveDate>
	<expirationDate>2013-03-22</expirationDate>

      </lu:createClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;return id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match"><con:configuration><path/><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluIdToGetCreditCourse"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>cluId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createCreditCourseActiveDates</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>getCreditCourseActiveDates</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:getClu[1]/cluId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="getCreditCourseActiveDates"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>getClu</con:operation><con:request name="getCreditCourseActiveDates"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ksdevl1.adm.ubc.ca:8090/ks-embeddedM4/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:getClu>
    
      <cluId>87daf975-6a1b-44fd-841f-982fcf091804</cluId></lu:getClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;return id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluPropertiesForUpdate"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyCluIdToCluIdElement</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createCreditCourseActiveDates</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateCreditCourseActiveDates</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluId[1]</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false"><con:name>copyCluIdToCluIdAttribute</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getCreditCourseActiveDates</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateCreditCourseActiveDates</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/@id</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>copyPrimaryAdminOrgId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getCreditCourseActiveDates</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/primaryAdminOrg[1]/id[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateCreditCourseActiveDates</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/officialIdentifier[1]/@id</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>copyVersionInd</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>getCreditCourseActiveDates</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:getCluResponse[1]/return[1]/metaInfo[1]/versionInd[1]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>updateCreditCourseActiveDates</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:updateClu[1]/cluInfo[1]/metaInfo[1]/versionInd[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="updateCreditCourseActiveDates"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>updateClu</con:operation><con:request name="updateCreditCourseActiveDates"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ksdevl1.adm.ubc.ca:8090/ks-embeddedM4/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:updateClu>
         <cluId>87daf975-6a1b-44fd-841f-982fcf091804</cluId>
         <cluInfo type="kuali.lu.type.CreditCourse" state="draft" id="87daf975-6a1b-44fd-841f-982fcf091804">
            <officialIdentifier id="65dfc08f-9cea-4f3b-b980-8d696dbd0598">
              <code>nullnull</code>
            </officialIdentifier>
            <academicSubjectOrgs>
               <orgId>51</orgId>
            </academicSubjectOrgs>
            
            <campusLocations>NorthCountyCampus</campusLocations>
            <campusLocations>SouthCountyCampus</campusLocations>
            <primaryAdminOrg>
               
               <orgId>51</orgId>
            </primaryAdminOrg>
            
            <metaInfo>
               <versionInd>0</versionInd>
               <createTime>2010-03-09T19:43:59.780-07:00</createTime>
               <updateTime>2010-03-11T16:09:49.372-07:00</updateTime>
            </metaInfo>
         </cluInfo>
      </lu:updateClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="CopyCluIdToDeleteCreditCourse"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>cluId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createCreditCourseActiveDates</con:sourceStep><con:sourcePath>declare namespace ns2='http://student.kuali.org/wsdl/lu';
//ns2:createCluResponse[1]/return[1]/@id</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>deleteCreditCourseActiveDates</con:targetStep><con:targetPath>declare namespace lu='http://student.kuali.org/wsdl/lu';
//lu:deleteClu[1]/cluId[1]</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="request" name="deleteCreditCourseActiveDates"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>LuServiceSoapBinding</con:interface><con:operation>deleteClu</con:operation><con:request name="deleteCreditCourseActiveDates"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://ksdevl1.adm.ubc.ca:8090/ks-embeddedM4/services/LuService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:lu="http://student.kuali.org/wsdl/lu">
   <soapenv:Header/>
   <soapenv:Body>
      <lu:deleteClu>
        <cluId>87daf975-6a1b-44fd-841f-982fcf091804</cluId>
      </lu:deleteClu>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>&lt;success>true&lt;/success></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase></con:testSuite><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting></con:soapui-project>