<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2008-2009 The Kuali Foundation Licensed under the Educational
  Community License, Version 2.0 (the "License"); you may not use this file
  except in compliance with the License. You may obtain a copy of the License
  at http://www.opensource.org/licenses/ecl2.php Unless required by applicable
  law or agreed to in writing, software distributed under the License is
  distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied. See the License for the specific language
  governing permissions and limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                           http://www.springframework.org/schema/util 
                           http://www.springframework.org/schema/util/spring-util-2.0.xsd">

  <bean id="config" class="org.kuali.rice.student.core.config.spring.RiceConfigFactoryBean">
    <property name="configLocations">
      <list>
        <value>classpath:standalone-config-impex.xml</value>
      </list>
    </property>
  </bean>

  <bean id="propertyPlaceholder" class="org.kuali.rice.student.core.config.spring.RiceConfigPropertyPlaceholderConfigurer" depends-on="config"/>

  <bean id="impexCredentials" class="org.kuali.db.Credentials" p:username="${impex.username}" p:password="${ks.impex.password}"/>
  <bean id="impexDbaCredentials" class="org.kuali.db.Credentials" p:username="${impex.dba.username}" p:password="${ks.impex.dba.password}"/>
  <bean id="impexConnectionHandler" class="org.kuali.db.ConnectionHandler" p:url="${impex.url}">
    <property name="credentials">
      <ref bean="impexCredentials"/>
    </property>
  </bean>
  <bean id="impexDbaConnectionHandler" class="org.kuali.db.ConnectionHandler" p:url="${impex.dba.url}">
    <property name="credentials">
      <ref bean="impexDbaCredentials"/>
    </property>
  </bean>

  <bean id="oracleResetSql" class="org.kuali.db.ResetSql">
    <property name="createSql" value="
      -- Create a user, give them a password and set a quota for the default tablespace
      CREATE USER ${impex.username}
      IDENTIFIED BY ${impex.password}
      DEFAULT TABLESPACE ${oracle.tablespace.default}
      TEMPORARY TABLESPACE ${oracle.tablespace.temporary}
      QUOTA ${oracle.tablespace.default.quota} ON ${oracle.tablespace.default}
      /

      -- Grant permissions as needed
      GRANT CREATE PROCEDURE
      , CREATE SEQUENCE
      , CREATE SESSION
      , CREATE SYNONYM
      , CREATE TABLE
      , CREATE TRIGGER
      , CREATE TYPE
      , CREATE VIEW
      TO ${impex.username}
      /"/>
    <property name="dropSql" value="
      -- Drop the user and ignore the Oracle 'user does not exist' error
      -- Dropping the user removes all objects associated with this schema (tables, views, indexes, sequences, etc)
      -- This is roughly the equivalent to MySQL's: DROP DATABASE [databaseName] IF EXISTS
      BEGIN
      EXECUTE IMMEDIATE 'DROP USER ${impex.username} CASCADE';
      EXCEPTION WHEN OTHERS THEN
      IF SQLCODE != ${oracle.error.sqlcode.userDoesNotExist} THEN
      RAISE;
      END IF;
      END;
      /"/>
  </bean>
  <bean id="mysqlResetSql" class="org.kuali.db.ResetSql">
    <property name="createSql" value="
      CREATE DATABASE IF NOT EXISTS ${impex.database}
      DEFAULT CHARACTER SET '${mysql.character.set}'
      DEFAULT COLLATE '${mysql.collate}';
      /

      GRANT ALL ON ${impex.database}.*
      TO '${impex.username}'@'%'
      IDENTIFIED BY '${impex.password}'
      WITH GRANT OPTION
      /"/>
    <property name="dropSql" value="
      DROP DATABASE IF EXISTS ${impex.database}
      /

      GRANT USAGE ON *.* TO '${impex.username}'@'%' IDENTIFIED BY '${impex.password}'
      /

      DROP USER ${impex.username}
      /"/>
  </bean>

</beans>