<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/dictionary-extension http://student.kuali.org/xsd/dictionary-extension/dictionary-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
">
<!-- *** Automatically Generated ***
by: org.kuali.student.dictionary.writer.dict.DictionaryModelWriter
Using:Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls   and: Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls
 -->
<import resource="classpath:document-documentInfo-dictionary-structure-config.xml"/>

<!-- **************************************** -->
<!-- object structure for object.documentInfo -->
<!-- **************************************** -->
<!-- Detailed information about a document. -->
<dict:objectStructure key="org.kuali.student.core.document.dto.DocumentInfo" id="object.documentInfo.abstract" abstract="true">
	<dict:typeRef bean="type.documentInfo.File"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.document.dto.DocumentInfo" id="object.documentInfo" parent="object.documentInfo.abstract"/>

<!-- NOT IN SIMPLES - services said they will make the change to the type as documented in jira item 121 -->
<dict:type key="kuali.document.type.file" id="type.documentInfo.File.abstract" abstract="true">
	<dict:name>File</dict:name>
	<dict:desc>A document that contains an uploaded file</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.documentInfo.File.active"/>
		<dict:stateRef bean="state.documentInfo.File.inactive"/>
</dict:type>
<dict:type key="kuali.document.type.file" id="type.documentInfo.File" parent="type.documentInfo.File.abstract"/>

<!-- ******************************************* -->
<!-- State for state.documentInfo.File.(default) -->
<!-- ******************************************* -->

<dict:state key="*" id="state.documentInfo.File.abstract" abstract="true">
	<dict:fieldRef bean="dict.file.name"/>
	<dict:fieldRef bean="dict.file.fileName"/>
	<dict:fieldRef bean="dict.file.desc"/>
	<dict:fieldRef bean="dict.file.binary.info"/>
	<dict:fieldRef bean="dict.file.effectiveDate"/>
	<dict:fieldRef bean="dict.file.expirationDate"/>
	<dict:fieldRef bean="dict.file.metaInfo"/>
	<dict:fieldRef bean="dict.file.type"/>
	<dict:fieldRef bean="dict.file.state"/>
	<dict:fieldRef bean="dict.file.internal.id"/>
</dict:state>

<!-- **************************************** -->
<!-- State for state.documentInfo.File.active -->
<!-- **************************************** -->

<!-- TODO: Add to simple spec -->
<dict:state key="active" parent="state.documentInfo.File.abstract" id="state.documentInfo.File.active.abstract" abstract="true">
</dict:state>
<dict:state key="active" id="state.documentInfo.File.active" parent="state.documentInfo.File.active.abstract"/>

<!-- ****************************************** -->
<!-- State for state.documentInfo.File.inactive -->
<!-- ****************************************** -->

<!-- TODO: Add to simple spec -->
<dict:state key="inactive" parent="state.documentInfo.File.abstract" id="state.documentInfo.File.inactive.abstract" abstract="true">
</dict:state>
<dict:state key="inactive" id="state.documentInfo.File.inactive" parent="state.documentInfo.File.inactive.abstract"/>


<!-- ****************************************************************** -->
<!-- object structure for object.field.documentInfo.desc.File.(default) -->
<!-- ****************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="object.field.documentInfo.desc.File.abstract" abstract="true">
	<dict:typeRef bean="type.field.documentInfo.desc.File"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="object.field.documentInfo.desc.File" parent="object.field.documentInfo.desc.File.abstract"/>

<dict:type key="*" id="type.field.documentInfo.desc.File.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.field.documentInfo.desc.File"/>
</dict:type>
<dict:type key="*" id="type.field.documentInfo.desc.File" parent="type.field.documentInfo.desc.File.abstract"/>

<!-- ************************************************************************** -->
<!-- State for state.field.documentInfo.desc.File.(default).(default).(default) -->
<!-- ************************************************************************** -->

<dict:state key="*" id="state.field.documentInfo.desc.File.abstract" abstract="true">
	<dict:fieldRef bean="dict.file.desc.plain"/>
	<dict:fieldRef bean="dict.file.desc.formatted"/>
</dict:state>
<dict:state key="*" id="state.field.documentInfo.desc.File" parent="state.field.documentInfo.desc.File.abstract"/>


<!-- ******************** -->
<!-- dict.file.desc.plain -->
<!-- ******************** -->
<dict:field key="plain" id="dict.file.desc.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.desc.plain.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.desc.plain.cd"/>
</dict:field>
<dict:field key="plain" id="dict.file.desc.plain" parent="dict.file.desc.plain.abstract"/>
<dict:fieldDescriptor id="dict.file.desc.plain.fd.abstract" abstract="true">
	<dict:name>file desc plain text</dict:name>
	<dict:desc>file desc plain text</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.desc.plain.fd" parent="dict.file.desc.plain.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.desc.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="dict.file.desc.plain.cd" parent="dict.file.desc.plain.cd.abstract"/>

<!-- ************************ -->
<!-- dict.file.desc.formatted -->
<!-- ************************ -->
<dict:field key="formatted" id="dict.file.desc.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.desc.formatted.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.desc.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="dict.file.desc.formatted" parent="dict.file.desc.formatted.abstract"/>
<dict:fieldDescriptor id="dict.file.desc.formatted.fd.abstract" abstract="true">
	<dict:name>file desc formatted</dict:name>
	<dict:desc>file desc formatted</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.desc.formatted.fd" parent="dict.file.desc.formatted.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.desc.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="dict.file.desc.formatted.cd" parent="dict.file.desc.formatted.cd.abstract"/>

<!-- ******************************************************************************** -->
<!-- object structure for object.field.documentInfo.documentBinaryInfo.File.(default) -->
<!-- ******************************************************************************** -->
<!-- The encoded document. The expectation is that this could be a base64 encoding. -->
<dict:objectStructure key="org.kuali.student.core.document.dto.DocumentBinaryInfo" id="object.field.documentInfo.documentBinaryInfo.File.abstract" abstract="true">
	<dict:typeRef bean="type.field.documentInfo.documentBinaryInfo.File"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.document.dto.DocumentBinaryInfo" id="object.field.documentInfo.documentBinaryInfo.File" parent="object.field.documentInfo.documentBinaryInfo.File.abstract"/>

<dict:type key="*" id="type.field.documentInfo.documentBinaryInfo.File.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.field.documentInfo.documentBinaryInfo.File"/>
</dict:type>
<dict:type key="*" id="type.field.documentInfo.documentBinaryInfo.File" parent="type.field.documentInfo.documentBinaryInfo.File.abstract"/>

<!-- **************************************************************************************** -->
<!-- State for state.field.documentInfo.documentBinaryInfo.File.(default).(default).(default) -->
<!-- **************************************************************************************** -->

<dict:state key="*" id="state.field.documentInfo.documentBinaryInfo.File.abstract" abstract="true">
	<dict:fieldRef bean="dict.file.binary.data"/>
</dict:state>
<dict:state key="*" id="state.field.documentInfo.documentBinaryInfo.File" parent="state.field.documentInfo.documentBinaryInfo.File.abstract"/>


<!-- ********************* -->
<!-- dict.file.binary.data -->
<!-- ********************* -->
<dict:field key="binary" id="dict.file.binary.data.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.binary.data.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.binary.data.cd"/>
</dict:field>
<dict:field key="binary" id="dict.file.binary.data" parent="dict.file.binary.data.abstract"/>
<dict:fieldDescriptor id="dict.file.binary.data.fd.abstract" abstract="true">
	<dict:name>file binary</dict:name>
	<dict:desc>file binary</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.binary.data.fd" parent="dict.file.binary.data.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.binary.data.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="binary" id="dict.file.binary.data.cd" parent="dict.file.binary.data.cd.abstract"/>

<!-- ********************************************************************** -->
<!-- object structure for object.field.documentInfo.metaInfo.File.(default) -->
<!-- ********************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="object.field.documentInfo.metaInfo.File.abstract" abstract="true">
	<dict:typeRef bean="type.field.documentInfo.metaInfo.File"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="object.field.documentInfo.metaInfo.File" parent="object.field.documentInfo.metaInfo.File.abstract"/>

<dict:type key="*" id="type.field.documentInfo.metaInfo.File.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.field.documentInfo.metaInfo.File"/>
</dict:type>
<dict:type key="*" id="type.field.documentInfo.metaInfo.File" parent="type.field.documentInfo.metaInfo.File.abstract"/>

<!-- ****************************************************************************** -->
<!-- State for state.field.documentInfo.metaInfo.File.(default).(default).(default) -->
<!-- ****************************************************************************** -->

<dict:state key="*" id="state.field.documentInfo.metaInfo.File.abstract" abstract="true">
	<dict:fieldRef bean="dict.file.meta.versionInd"/>
	<dict:fieldRef bean="dict.file.meta.createTime"/>
	<dict:fieldRef bean="dict.file.meta.createId"/>
	<dict:fieldRef bean="dict.file.meta.updateTime"/>
	<dict:fieldRef bean="dict.file.meta.updateId"/>
</dict:state>
<dict:state key="*" id="state.field.documentInfo.metaInfo.File" parent="state.field.documentInfo.metaInfo.File.abstract"/>


<!-- ************************* -->
<!-- dict.file.meta.versionInd -->
<!-- ************************* -->
<dict:field key="versionInd" id="dict.file.meta.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.meta.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.meta.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="dict.file.meta.versionInd" parent="dict.file.meta.versionInd.abstract"/>
<dict:fieldDescriptor id="dict.file.meta.versionInd.fd.abstract" abstract="true">
	<dict:name>file meta versionInd</dict:name>
	<dict:desc>Version number for this file</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.meta.versionInd.fd" parent="dict.file.meta.versionInd.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.meta.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.hidden"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="dict.file.meta.versionInd.cd" parent="dict.file.meta.versionInd.cd.abstract"/>

<!-- ************************* -->
<!-- dict.file.meta.createTime -->
<!-- ************************* -->
<dict:field key="createTime" id="dict.file.meta.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.meta.createTime.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.meta.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="dict.file.meta.createTime" parent="dict.file.meta.createTime.abstract"/>
<dict:fieldDescriptor id="dict.file.meta.createTime.fd.abstract" abstract="true">
	<dict:name>file meta createTime</dict:name>
	<dict:desc>Date-time this file was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.meta.createTime.fd" parent="dict.file.meta.createTime.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.meta.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="dict.file.meta.createTime.cd" parent="dict.file.meta.createTime.cd.abstract"/>

<!-- *********************** -->
<!-- dict.file.meta.createId -->
<!-- *********************** -->
<dict:field key="createId" id="dict.file.meta.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.meta.createId.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.meta.createId.cd"/>
</dict:field>
<dict:field key="createId" id="dict.file.meta.createId" parent="dict.file.meta.createId.abstract"/>
<dict:fieldDescriptor id="dict.file.meta.createId.fd.abstract" abstract="true">
	<dict:name>file meta createId</dict:name>
	<dict:desc>Principal of the persion who first created this file</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.meta.createId.fd" parent="dict.file.meta.createId.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.meta.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="dict.file.meta.createId.cd" parent="dict.file.meta.createId.cd.abstract"/>

<!-- ************************* -->
<!-- dict.file.meta.updateTime -->
<!-- ************************* -->
<dict:field key="updateTime" id="dict.file.meta.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.meta.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.meta.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="dict.file.meta.updateTime" parent="dict.file.meta.updateTime.abstract"/>
<dict:fieldDescriptor id="dict.file.meta.updateTime.fd.abstract" abstract="true">
	<dict:name>file meta updateTime</dict:name>
	<dict:desc>Date-time this  file was last updated</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.meta.updateTime.fd" parent="dict.file.meta.updateTime.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.meta.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="dict.file.meta.updateTime.cd" parent="dict.file.meta.updateTime.cd.abstract"/>

<!-- *********************** -->
<!-- dict.file.meta.updateId -->
<!-- *********************** -->
<dict:field key="updateId" id="dict.file.meta.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.meta.updateId.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.meta.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="dict.file.meta.updateId" parent="dict.file.meta.updateId.abstract"/>
<dict:fieldDescriptor id="dict.file.meta.updateId.fd.abstract" abstract="true">
	<dict:name>file meta updateId</dict:name>
	<dict:desc>Principal of the persion who last updated this  file</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.meta.updateId.fd" parent="dict.file.meta.updateId.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.meta.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="dict.file.meta.updateId.cd" parent="dict.file.meta.updateId.cd.abstract"/>

<!-- ************** -->
<!-- dict.file.name -->
<!-- ************** -->
<dict:field key="name" id="dict.file.name.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.name.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.name.cd"/>
</dict:field>
<dict:field key="name" id="dict.file.name" parent="dict.file.name.abstract"/>
<dict:fieldDescriptor id="dict.file.name.fd.abstract" abstract="true">
	<dict:name>file name</dict:name>
	<dict:desc>file name</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.name.fd" parent="dict.file.name.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.name.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.single.line.text"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="name" id="dict.file.name.cd" parent="dict.file.name.cd.abstract"/>

<!-- ****************** -->
<!-- dict.file.fileName -->
<!-- ****************** -->
<dict:field key="fileName" id="dict.file.fileName.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.fileName.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.fileName.cd"/>
</dict:field>
<dict:field key="fileName" id="dict.file.fileName" parent="dict.file.fileName.abstract"/>
<dict:fieldDescriptor id="dict.file.fileName.fd.abstract" abstract="true">
	<dict:name>file fileName</dict:name>
	<dict:desc>file fileName</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.fileName.fd" parent="dict.file.fileName.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.fileName.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="fileName" id="dict.file.fileName.cd" parent="dict.file.fileName.cd.abstract"/>

<!-- ************** -->
<!-- dict.file.desc -->
<!-- ************** -->
<dict:field key="desc" id="dict.file.desc.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.desc.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.desc.cd"/>
</dict:field>
<dict:field key="desc" id="dict.file.desc" parent="dict.file.desc.abstract"/>
<dict:fieldDescriptor id="dict.file.desc.fd.abstract" abstract="true">
	<dict:name>file desc</dict:name>
	<dict:desc>file desc</dict:desc>
	<dict:dataType>Complex</dict:dataType>
	<dict:objectStructureRef bean="object.field.documentInfo.desc.File"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.desc.fd" parent="dict.file.desc.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.desc.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.hidden"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="dict.file.desc.cd" parent="dict.file.desc.cd.abstract"/>

<!-- ********************* -->
<!-- dict.file.binary.info -->
<!-- ********************* -->
<dict:field key="documentBinaryInfo" id="dict.file.binary.info.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.binary.info.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.binary.info.cd"/>
</dict:field>
<dict:field key="documentBinaryInfo" id="dict.file.binary.info" parent="dict.file.binary.info.abstract"/>
<dict:fieldDescriptor id="dict.file.binary.info.fd.abstract" abstract="true">
	<dict:name>file binary info</dict:name>
	<dict:desc>file binary info</dict:desc>
	<dict:dataType>Complex</dict:dataType>
	<dict:objectStructureRef bean="object.field.documentInfo.documentBinaryInfo.File"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.binary.info.fd" parent="dict.file.binary.info.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.binary.info.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="documentBinaryInfo" id="dict.file.binary.info.cd" parent="dict.file.binary.info.cd.abstract"/>

<!-- *********************** -->
<!-- dict.file.effectiveDate -->
<!-- *********************** -->
<dict:field key="effectiveDate" id="dict.file.effectiveDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.effectiveDate.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.effectiveDate.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="dict.file.effectiveDate" parent="dict.file.effectiveDate.abstract"/>
<dict:fieldDescriptor id="dict.file.effectiveDate.fd.abstract" abstract="true">
	<dict:name>file effectiveDate</dict:name>
	<dict:desc>file effectiveDate</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.effectiveDate.fd" parent="dict.file.effectiveDate.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.effectiveDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="dict.file.effectiveDate.cd" parent="dict.file.effectiveDate.cd.abstract"/>

<!-- ************************ -->
<!-- dict.file.expirationDate -->
<!-- ************************ -->
<dict:field key="expirationDate" id="dict.file.expirationDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.expirationDate.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.expirationDate.cd"/>
</dict:field>
<dict:field key="expirationDate" id="dict.file.expirationDate" parent="dict.file.expirationDate.abstract"/>
<dict:fieldDescriptor id="dict.file.expirationDate.fd.abstract" abstract="true">
	<dict:name>file expirationDate</dict:name>
	<dict:desc>file expirationDate</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.expirationDate.fd" parent="dict.file.expirationDate.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.expirationDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.cross.greaterthan.effective.date"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="dict.file.expirationDate.cd" parent="dict.file.expirationDate.cd.abstract"/>

<!-- ****************** -->
<!-- dict.file.metaInfo -->
<!-- ****************** -->
<dict:field key="metaInfo" id="dict.file.metaInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.metaInfo.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.metaInfo.cd"/>
</dict:field>
<dict:field key="metaInfo" id="dict.file.metaInfo" parent="dict.file.metaInfo.abstract"/>
<dict:fieldDescriptor id="dict.file.metaInfo.fd.abstract" abstract="true">
	<dict:name>file metaInfo</dict:name>
	<dict:desc>file metaInfo</dict:desc>
	<dict:dataType>Complex</dict:dataType>
	<dict:objectStructureRef bean="object.field.documentInfo.metaInfo.File"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.metaInfo.fd" parent="dict.file.metaInfo.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.metaInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="dict.file.metaInfo.cd" parent="dict.file.metaInfo.cd.abstract"/>

<!-- ************** -->
<!-- dict.file.type -->
<!-- ************** -->
<dict:field key="type" id="dict.file.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.type.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.type.cd"/>
</dict:field>
<dict:field key="type" id="dict.file.type" parent="dict.file.type.abstract"/>
<dict:fieldDescriptor id="dict.file.type.fd.abstract" abstract="true">
	<dict:name>file type</dict:name>
	<dict:desc>file type</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.type.fd" parent="dict.file.type.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.hard.coded.file"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="dict.file.type.cd" parent="dict.file.type.cd.abstract"/>

<!-- *************** -->
<!-- dict.file.state -->
<!-- *************** -->
<dict:field key="state" id="dict.file.state.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.state.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.state.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="dict.file.state" parent="dict.file.state.abstract"/>
<dict:fieldDescriptor id="dict.file.state.fd.abstract" abstract="true">
	<dict:name>file state</dict:name>
	<dict:desc>file state</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.state.fd" parent="dict.file.state.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.state.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="dict.file.state.cd" parent="dict.file.state.cd.abstract"/>

<!-- ********************* -->
<!-- dict.file.internal.id -->
<!-- ********************* -->
<dict:field key="id" id="dict.file.internal.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.file.internal.id.fd"/>
	<dict:constraintDescriptorRef bean="dict.file.internal.id.cd"/>
</dict:field>
<dict:field key="id" id="dict.file.internal.id" parent="dict.file.internal.id.abstract"/>
<dict:fieldDescriptor id="dict.file.internal.id.fd.abstract" abstract="true">
	<dict:name>file internal id</dict:name>
	<dict:desc>file internal id</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.file.internal.id.fd" parent="dict.file.internal.id.fd.abstract"/>
<dict:constraintDescriptor id="dict.file.internal.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.hidden"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="dict.file.internal.id.cd" parent="dict.file.internal.id.cd.abstract"/>
</beans>
