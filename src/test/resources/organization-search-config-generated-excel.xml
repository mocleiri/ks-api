<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:search="http://student.kuali.org/xsd/search-extension"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/search-extension http://student.kuali.org/xsd/search-extension/search-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
">
<!-- *** Automatically Generated ***
on: Fri Feb 19 11:17:16 EST 2010
by: org.kuali.student.dictionary.writer.search.SearchModelWriter
using: Excel Spreadsheet src/test/resources/Organization Search Specification.xls
 -->

<!-- Search Types -->

	<search:searchType id="org.search.orgHierarchyIds">
		<search:name>All org hierarchies</search:name>
		<search:desc>Returns all org hierarchies, name and id</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.orgHierarchyIdName" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="kuali.criteria.none" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="org.search.hierarchiesOrgIsIn">
		<search:name>Org Hierarchies for an org</search:name>
		<search:desc>Returns all org hierarchy ids</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.orgHierarchyId" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="org.criteria.orgId" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="org.search.orgQuickViewByOrgType">
		<search:name>All orgs of a given type</search:name>
		<search:desc>Returns name and short name of all orgs of a given type</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.orgQuickView" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="org.criteria.orgByOrgType" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="org.search.orgQuickViewByHierarchyShortName">
		<search:name>Find orgs within a given hierarchy</search:name>
		<search:desc>Within a hierarchy it searches for orgs by short name</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.orgQuickView" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="org.criteria.orgByHierarchyShortName" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="org.search.orgQuickViewByRelationTypeOrgTypeRelatedOrgType">
		<search:name>All organizations that are related in a particular way</search:name>
		<search:desc>Returns the organization that have a specified relation and are themselves specified types</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.orgQuickView" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="org.criteria.orgByRelationTypeOrgTypeRelatedOrgType" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="org.search.orgQuickViewByRelationTypeRelatedOrgTypeOrgId">
		<search:name>Orgs related to a given org</search:name>
		<search:desc>Returns a quick view of organization information for orgs in a relation with a specified org and a specified set of types</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.orgQuickView" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="org.criteria.orgQuickViewByRelationTypeRelatedOrgTypeOrgId" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="org.search.orgByShortName">
		<search:name>Org by short name (or id match?)</search:name>
		<search:desc>Search on short name or by specifying an org Id</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.orgQuickView" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="org.criteria.orgByShortName" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="org.search.orgByShortNameAndType">
		<search:name>Org by short name and Type match</search:name>
		<search:desc>Search orgs on short name and Type (and ID?)</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.orgQuickView" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="org.criteria.orgByShortNameAndType" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="org.search.orgQuickLongViewByFirstLetter">
		<search:name>Organizations matching either short or long name</search:name>
		<search:desc>Returns an organization either by short or long name.</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.orgQuickLongView" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="org.criteria.orgByFirstLetter" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="org.search.orgFullViewById">
		<!-- Why not just use the service operation? -->
		<search:name>Full view by organization id key</search:name>
		<search:desc>Returns a full view of organization information for the id supplied</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.orgFullView" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="org.criteria.orgById" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="nestedSearchType">
		<!-- This must be a test that was not removed -->
		<search:name>Nested Query</search:name>
		<search:desc>Nested Search Type</search:desc>
		<search:searchResultTypeInfo><ref bean="searchResultTypeNested" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="org.criteria.orgByOrgTypeNested" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="org.search.Name">
		<!-- Should the search include searching on SortName? -->
		<search:name>Name Search</search:name>
		<search:desc>Search for organization by name or abbreviation</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.Name" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="org.criteria.QuickName" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="org.search.AdvancedSearch">
		<!-- Should the results include the date created? -->
		<search:name>Name Search</search:name>
		<search:desc>Search for organization by name or abbreviation</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.FullInfo" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="org.criteria.Advanced" /></search:searchCriteriaTypeInfo>
		</search:searchType>

<!-- Search Criteria -->

	<search:searchCriteriaTypeInfo id="kuali.criteria.none">
		<search:name>No criteria</search:name>
		<search:desc>No criteria needed</search:desc>
		<search:queryParams>
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="org.criteria.orgId">
		<search:name>Org Id only</search:name>
		<search:desc>Just the id of an organization</search:desc>
		<search:queryParams>
			<ref bean="org.queryParam.orgId" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="org.criteria.orgByOrgType">
		<search:name>Organization type only</search:name>
		<search:desc>Just the organization type</search:desc>
		<search:queryParams>
			<ref bean="org.queryParam.orgType" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="org.criteria.orgByHierarchyShortName">
		<search:name>Org Hierarchy ID and Short name</search:name>
		<search:desc>The organization hierarchy and a short name</search:desc>
		<search:queryParams>
			<ref bean="org.queryParam.orgHierarchyId" />
			<ref bean="org.queryParam.orgShortName" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="org.criteria.orgByRelationTypeOrgTypeRelatedOrgType">
		<search:name>Two org types and the relation type between them</search:name>
		<search:desc>Orgs in a relation with the given org type and related org type</search:desc>
		<search:queryParams>
			<ref bean="org.queryParam.relationType" />
			<ref bean="org.queryParam.orgType" />
			<ref bean="org.queryParam.relatedOrgType" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="org.criteria.orgQuickViewByRelationTypeRelatedOrgTypeOrgId">
		<search:name>Org id, relation type and related org type</search:name>
		<search:desc>Orgs in a relation with the given orgid, type and related org type</search:desc>
		<search:queryParams>
			<ref bean="org.queryParam.relationType" />
			<ref bean="org.queryParam.orgId" />
			<ref bean="org.queryParam.relatedOrgType" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="org.criteria.orgByShortName">
		<search:name>Org short name or org Id</search:name>
		<search:desc>short name for the organization or it&apos;s id</search:desc>
		<search:queryParams>
			<ref bean="org.queryParam.orgShortName" />
			<ref bean="org.queryParam.orgId" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="org.criteria.orgByShortNameAndType">
		<search:name>Org Type and short name or Id</search:name>
		<search:desc>Organization type and either short name or an id</search:desc>
		<search:queryParams>
			<ref bean="org.queryParam.orgId" />
			<ref bean="org.queryParam.orgType" />
			<ref bean="org.queryParam.orgShortName" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="org.criteria.orgByFirstLetter">
		<search:name>Org short name only</search:name>
		<search:desc>Just the org short name</search:desc>
		<search:queryParams>
			<ref bean="org.queryParam.orgShortName" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="org.criteria.orgById">
		<search:name>Org Id only</search:name>
		<search:desc>Just the organization Id</search:desc>
		<search:queryParams>
			<ref bean="org.queryParam.orgId" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="org.criteria.orgByOrgTypeNested">
		<search:name>OrgByOrgTypeCriteria</search:name>
		<search:desc>OrgByOrgTypeCriteria Description</search:desc>
		<search:queryParams>
			<ref bean="in.line.definition" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="org.criteria.QuickName">
		<!-- Uses a name field that searches for an organization that matches what is typed in.  Intended for quick lookup up that displays matches while the user is typing. -->
		<search:name>Quick Name</search:name>
		<search:desc>Quick name search on an Organization</search:desc>
		<search:queryParams>
			<ref bean="org.queryParam.NameLookupField" />
			<ref bean="org.queryParam.OrganizationTypes" />
			<ref bean="org.queryParam.OrganizationStates" />
			<ref bean="kuali.queryParam.MaximumResults" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="org.criteria.Advanced">
		<!-- Intended to find orgs that were just created -->
		<search:name>Recently Created Orgs</search:name>
		<search:desc>Orgs that have been created since a specified date/time</search:desc>
		<search:queryParams>
			<ref bean="org.queryParam.orgHierarchyId" />
			<ref bean="org.queryParam.CreatedSince" />
			<ref bean="org.queryParam.OrganizationTypes" />
			<ref bean="org.queryParam.OrganizationStates" />
			<ref bean="kuali.queryParam.MaximumResults" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

<!-- Search Criteria Parameters -->

	<search:queryParam id="org.queryParam.orgId">
			<dict:fieldDescriptor>
			<dict:name>Org Id</dict:name>
			<dict:desc>The internal identifier of an organization</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="org.queryParam.orgType">
			<dict:fieldDescriptor>
			<dict:name>Org Type</dict:name>
			<dict:desc>Organization Type</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="org.queryParam.orgHierarchyId">
			<!-- Has a dict:fieldDescriptor
  <dict:name>Hierarchy</dict:name> 
  <dict:search key="org.search.orgHierarchyIds" -->
			<dict:fieldDescriptor>
			<dict:name>Hierarchy</dict:name>
			<dict:desc>Hierarchy Id</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="org.queryParam.orgShortName">
			<!-- Has a dict:fieldDescriptor parent="childFieldDescriptor" but I am not sure how that works -->
			<dict:fieldDescriptor>
			<dict:name>Org Name</dict:name>
			<dict:desc>Organization Name</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="org.queryParam.relationType">
			<dict:fieldDescriptor>
			<dict:name>Org Org Relationship Type</dict:name>
			<dict:desc>Organization to Organization Relationship type</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="org.queryParam.relatedOrgType">
			<!-- Has a ref bean="childFieldDescriptor" but not sure how that works? -->
			<dict:fieldDescriptor>
			<dict:name>Related Org Type</dict:name>
			<dict:desc>The org type of the related organization</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="in.line.definition">
			<!-- this parameter was defined in-line without giving it a type?!?!? -->
			<dict:fieldDescriptor>
			<dict:name>CLU Identifier</dict:name>
			<dict:desc>Unique identifier for a Canonical Learning Unit (CLU)</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="org.queryParam.NameLookupField">
			<dict:fieldDescriptor>
			<dict:name>Name Lookup Field</dict:name>
			<dict:desc>Name of organization</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="org.queryParam.OrganizationTypes">
			<dict:fieldDescriptor>
			<dict:name>Organization Types</dict:name>
			<dict:desc>List of organization types to search</dict:desc>
			<dict:dataType>List&lt;String&gt;</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="org.queryParam.OrganizationStates">
			<dict:fieldDescriptor>
			<dict:name>Organization States</dict:name>
			<dict:desc>List of organization states to search</dict:desc>
			<dict:dataType>List&lt;String&gt;</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="kuali.queryParam.MaximumResults">
			<!-- Search will actually return up to Max + 1 rows and the client is supposed to NOT display that extra row but instead use the existence of that riow as an indicator that there are MORE rows to prompt the user -->
			<dict:fieldDescriptor>
			<dict:name>Maximum Results</dict:name>
			<dict:desc>Special parameter that limits the number of result rows that this query will return.</dict:desc>
			<dict:dataType>integer</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="org.queryParam.CreatedSince">
			<dict:fieldDescriptor>
			<dict:name>Created Since Date</dict:name>
			<dict:desc>date used to query to find recently created orgs</dict:desc>
			<dict:dataType>dateTime</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

<!-- Search Results -->

	<search:searchResultTypeInfo id="org.result.orgHierarchyIdName">
		<search:name>Hierarchy ID and Name</search:name>
		<search:desc>The id and name of an organizational hierarchy</search:desc>
		<search:resultColumns>
			<ref bean="org.resultColumn.orgHierarchyId" />
			<ref bean="org.resultColumn.orgHierarchyName" />
		</search:resultColumns>
		</search:searchResultTypeInfo>

	<search:searchResultTypeInfo id="org.result.orgHierarchyId">
		<search:name>Org Hierarchy Id only</search:name>
		<search:desc>Just the internal identifier of an organizational hierarchy</search:desc>
		<search:resultColumns>
			<ref bean="org.resultColumn.orgHierarchyId" />
		</search:resultColumns>
		</search:searchResultTypeInfo>

	<search:searchResultTypeInfo id="org.result.orgQuickView">
		<search:name>Organization Quick View</search:name>
		<search:desc>Quick view that just returns the id and the short name</search:desc>
		<search:resultColumns>
			<ref bean="org.resultColumn.orgId" />
			<ref bean="org.resultColumn.orgShortName" />
		</search:resultColumns>
		</search:searchResultTypeInfo>

	<search:searchResultTypeInfo id="org.result.orgQuickLongView">
		<search:name>Organization Long View</search:name>
		<search:desc>Org id, long name, type and hierarchy name</search:desc>
		<search:resultColumns>
			<ref bean="org.resultColumn.orgId" />
			<ref bean="org.resultColumn.orgLongName" />
			<ref bean="org.resultColumn.orgType" />
			<ref bean="org.resultColumn.orgHierarchyName" />
		</search:resultColumns>
		</search:searchResultTypeInfo>

	<search:searchResultTypeInfo id="org.result.orgFullView">
		<search:name>Organization Full View</search:name>
		<search:desc>Organization full view, IUD, short and long name, type and hierarchy name</search:desc>
		<search:resultColumns>
			<ref bean="org.resultColumn.orgId" />
			<ref bean="org.resultColumn.orgShortName" />
			<ref bean="org.resultColumn.orgLongName" />
			<ref bean="org.resultColumn.orgType" />
			<ref bean="org.resultColumn.orgHierarchyName" />
		</search:resultColumns>
		</search:searchResultTypeInfo>

	<search:searchResultTypeInfo id="searchResultTypeNested">
		<search:name>Organization Quick View</search:name>
		<search:desc>Quick view of the Organization</search:desc>
		<search:resultColumns>
			<ref bean="org.resultColumn.orgIdNested" />
			<ref bean="org.resultColumn.orgIdNested2" />
		</search:resultColumns>
		</search:searchResultTypeInfo>

	<search:searchResultTypeInfo id="org.result.Name">
		<search:name>Name (long and short)</search:name>
		<search:desc>Abbreviation &amp; Name</search:desc>
		<search:resultColumns>
			<ref bean="org.resultColumn.orgId" />
			<ref bean="org.resultColumn.orgType" />
			<ref bean="org.resultColumn.orgState" />
			<ref bean="org.resultColumn.orgShortName" />
			<ref bean="org.resultColumn.orgLongName" />
		</search:resultColumns>
		</search:searchResultTypeInfo>

	<search:searchResultTypeInfo id="org.result.FullInfo">
		<search:name>fulll info</search:name>
		<search:desc>full info for an advanced search</search:desc>
		<search:resultColumns>
			<ref bean="org.resultColumn.orgId" />
			<ref bean="org.resultColumn.orgType" />
			<ref bean="org.resultColumn.orgState" />
			<ref bean="org.resultColumn.orgShortName" />
			<ref bean="org.resultColumn.orgLongName" />
			<ref bean="org.resultColumn.orgSortName" />
			<ref bean="org.resultColumn.orgCreateTime" />
			<ref bean="org.resultColumn.orgUpdateTime" />
			<ref bean="org.resultColumn.orgHierarchyId" />
		</search:resultColumns>
		</search:searchResultTypeInfo>

<!-- Search Result Columns -->

	<search:resultColumn id="org.resultColumn.orgHierarchyId">
		<search:name>Org Hierarchy Id</search:name>
		<search:desc>Internal Id of an organizational hierarchy</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgHierarchyName">
		<search:name>Org Hierarchy name</search:name>
		<search:desc>Name of an organizational hierarchy</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgId">
		<search:name>Organization Identifier</search:name>
		<search:desc>Identifier for the organization</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgShortName">
		<search:name>Organization Short Name</search:name>
		<search:desc>Short name for the organization, recorded as the default listing</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgLongName">
		<search:name>Organization Long Name</search:name>
		<search:desc>Long name for the organization, recorded as the default listing</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgType">
		<search:name>Organization Type</search:name>
		<search:desc>Organization Type</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgIdNested">
		<search:name>Organization Identifier</search:name>
		<search:desc>Identifier for the organization</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgIdNested2">
		<search:name>Organization Identifier</search:name>
		<search:desc>Identifier for the organization</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgState">
		<search:name>Organization State</search:name>
		<search:desc>Organization State</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgSortName">
		<search:name>String used to sort the organization</search:name>
		<search:desc>Sort name</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgCreateTime">
		<search:name>Date organization was created</search:name>
		<search:desc>Date organization was created</search:desc>
		<search:dataType>dateTime</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgUpdateTime">
		<search:name>Date organization was last updated</search:name>
		<search:desc>Date organization was last updated</search:desc>
		<search:dataType>dateTime</search:dataType>
		</search:resultColumn>

	<!-- Query Map -->
	<bean id="queryMap" class="org.springframework.beans.factory.config.MapFactoryBean">
	<property name="sourceMap">
	<map>
		
		<entry
 key="org.search.orgHierarchyIds"		>
			<value>
SELECT oh.id, oh.name 
FROM OrgHierarchy oh
</value>
		</entry>
		
		<entry
 key="org.search.hierarchiesOrgIsIn"		>
			<value>
SELECT hierarchy.id
 FROM Org org, in(org.type.orgHierarchies) hierarchy
 WHERE org.id = :org_queryParam_orgId
</value>
		</entry>
		
		<entry
 key="org.search.orgQuickViewByOrgType"		>
			<value>
SELECT org.id, org.shortName 
FROM Org org 
WHERE org.type.id = :org_queryParam_orgType
</value>
		</entry>
		
		<entry
 key="org.search.orgQuickViewByHierarchyShortName"		>
			<value>
SELECT org.id, org.shortName 
FROM Org org, in(org.type.orgHierarchies) hierarcy 
WHERE org.shortName like :org_queryParam_orgShortName 
and hierarcy.id = :org_queryParam_orgHierarchyId
</value>
		</entry>
		
		<entry
 key="org.search.orgQuickViewByRelationTypeOrgTypeRelatedOrgType"		>
			<value>
SELECT rel.relatedOrg.id, rel.relatedOrg.shortName 
FROM OrgOrgRelation rel 
WHERE rel.type.id = :org_queryParam_relationType 
AND rel.org.type.id = :org_queryParam_orgType 
AND rel.relatedOrg.type.id = :org_queryParam_relatedOrgType
</value>
		</entry>
		
		<entry
 key="org.search.orgQuickViewByRelationTypeRelatedOrgTypeOrgId"		>
			<value>
SELECT rel.relatedOrg.id, rel.relatedOrg.shortName 
FROM OrgOrgRelation rel 
WHERE rel.type.id = :org_queryParam_relationType 
AND rel.org.id = :org_queryParam_orgId 
AND rel.relatedOrg.type.id = :org_queryParam_relatedOrgType
</value>
		</entry>
		
		<entry
 key="org.search.orgByShortName"		>
		<!-- Why are we also searching on OR ORG_ID? -->
			<value>
SELECT org.id, org.shortName 
FROM Org org 
WHERE org.shortName like :org_queryParam_orgShortName
OR org.id = :org_queryParam_orgId
</value>
		</entry>
		
		<entry
 key="org.search.orgByShortNameAndType"		>
			<value>
SELECT org.id, org.shortName 
FROM Org org 
WHERE org.type.id = :org_queryParam_orgType 
AND (org.shortName like :org_queryParam_orgShortName 
         OR org.id = :org_queryParam_orgId)
</value>
		</entry>
		
		<entry
 key="org.search.orgQuickLongViewByFirstLetter"		>
			<value>
SELECT org.id, org.longName, org.type.id, hierarchy.name 
FROM Org org, in(org.type.orgHierarchies) hierarchy 
WHERE org.shortName like :org_queryParam_orgShortName 
OR org.longName like :org_queryParam_orgShortName
</value>
		</entry>
		
		<entry
 key="org.search.orgFullViewById"		>
			<value>
SELECT org.id, org.shortName, org.longName, org.type.id, hierarchy.name 
FROM Org org, in(org.type.orgHierarchies) hierarchy 
WHERE org.id = :org_queryParam_orgId
</value>
		</entry>
		
		<entry
 key="nestedSearchType"		>
			<value>
NO QUERY MAP ENTRY FOUND FOR THIS SEARCH
</value>
		</entry>
		
		<entry
 key="org.search.Name"		>
		<!-- No need to lower case the names and search parameters because LIKE is case insensitive

TODO: prioritize starts with matches -->
			<value>
SELECT org.id, org.type.id, org.state.id, org.shortName, org.longName
FROM Org org
WHERE (org.shortName like concat (&apos;%&apos;, :org_queryParam_NameLookupField, &apos;%&apos;)
or  org.longName like concat (&apos;%&apos;, :org_queryParam_NameLookupField, &apos;%&apos;)
and (org.type.id in (:org_queryParam_OrganizationTypes) 
or :org_queryParam_OrganizationTypes is null)
and (org.state.id in (:org_queryParam_OrganizationStates) 
or :(:org_queryParam_OrganizationStates is null)
</value>
		</entry>
		
		<entry
 key="org.search.AdvancedSearch"		>
		<!-- (1) Not sure "meta" is how to reference the metaInfo structure -->
			<value>
SELECT org.id, org.type.id, org.state.id, org.shortName, org.longName, org.sortName, org.meta.createTime
FROM Org org
WHERE (org.meta.createTime &gt;= :org_queryParam_CreatedSince or :org_queryParam_CreatedSince is null)
and (org.type.id in (:org_queryParam_OrganizationTypes) 
or :org_queryParam_OrganizationTypes is null)
and (org.state.id in (:org_queryParam_OrganizationStates) 
or :(:org_queryParam_OrganizationStates is null)
</value>
		</entry>
	</map>
	</property>
	</bean>
</beans>
