<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/dictionary-extension http://student.kuali.org/xsd/dictionary-extension/dictionary-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
">
<!-- *** Automatically Generated ***
by: org.kuali.student.dictionary.writer.dict.DictionaryModelWriter
Using:Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls   and: Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls
 -->
<import resource="classpath:lrc-creditInfo-dictionary-structure-config.xml"/>

<!-- ************************************** -->
<!-- object structure for object.creditInfo -->
<!-- ************************************** -->
<!-- Detailed information about a credit value. -->
<dict:objectStructure key="org.kuali.student.lum.lrc.dto.CreditInfo" id="object.creditInfo.abstract" abstract="true">
	<dict:typeRef bean="type.creditInfo.AcademicCredit"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lrc.dto.CreditInfo" id="object.creditInfo" parent="object.creditInfo.abstract"/>

<dict:type key="kuali.creditType.credit.degree" id="type.creditInfo.AcademicCredit.abstract" abstract="true">
	<dict:name>Academic Credit</dict:name>
	<dict:desc>College level credit that can typically be applied by a student to complete a degree</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.creditInfo.AcademicCredit"/>
</dict:type>
<dict:type key="kuali.creditType.credit.degree" id="type.creditInfo.AcademicCredit" parent="type.creditInfo.AcademicCredit.abstract"/>

<!-- **************************************************** -->
<!-- State for state.creditInfo.Academic Credit.(default) -->
<!-- **************************************************** -->

<dict:state key="*" id="state.creditInfo.AcademicCredit.abstract" abstract="true">
	<dict:fieldRef bean="dict.academic.credit.name"/>
	<dict:fieldRef bean="dict.academic.credit.desc"/>
	<dict:fieldRef bean="dict.academic.credit.value"/>
	<dict:fieldRef bean="dict.academic.credit.effectiveDate"/>
	<dict:fieldRef bean="dict.academic.credit.expirationDate"/>
	<dict:fieldRef bean="dict.academic.credit.type"/>
	<dict:fieldRef bean="dict.academic.credit.internal.id"/>
</dict:state>
<dict:state key="*" id="state.creditInfo.AcademicCredit" parent="state.creditInfo.AcademicCredit.abstract"/>


<!-- *************************************************************************** -->
<!-- object structure for object.field.creditInfo.desc.Academic Credit.(default) -->
<!-- *************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="object.field.creditInfo.desc.AcademicCredit.abstract" abstract="true">
	<dict:typeRef bean="type.field.creditInfo.desc.AcademicCredit"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="object.field.creditInfo.desc.AcademicCredit" parent="object.field.creditInfo.desc.AcademicCredit.abstract"/>

<dict:type key="*" id="type.field.creditInfo.desc.AcademicCredit.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
		<dict:stateRef bean="state.field.creditInfo.desc.AcademicCredit"/>
</dict:type>
<dict:type key="*" id="type.field.creditInfo.desc.AcademicCredit" parent="type.field.creditInfo.desc.AcademicCredit.abstract"/>

<!-- *********************************************************************************** -->
<!-- State for state.field.creditInfo.desc.Academic Credit.(default).(default).(default) -->
<!-- *********************************************************************************** -->

<dict:state key="*" id="state.field.creditInfo.desc.AcademicCredit.abstract" abstract="true">
	<dict:fieldRef bean="dict.academic.credit.desc.plain"/>
	<dict:fieldRef bean="dict.academic.credit.desc.formatted"/>
</dict:state>
<dict:state key="*" id="state.field.creditInfo.desc.AcademicCredit" parent="state.field.creditInfo.desc.AcademicCredit.abstract"/>


<!-- ******************************* -->
<!-- dict.academic.credit.desc.plain -->
<!-- ******************************* -->
<dict:field key="plain" id="dict.academic.credit.desc.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.academic.credit.desc.plain.fd"/>
	<dict:constraintDescriptorRef bean="dict.academic.credit.desc.plain.cd"/>
</dict:field>
<dict:field key="plain" id="dict.academic.credit.desc.plain" parent="dict.academic.credit.desc.plain.abstract"/>
<dict:fieldDescriptor id="dict.academic.credit.desc.plain.fd.abstract" abstract="true">
	<dict:name>academic.credit.desc.plain</dict:name>
	<dict:desc>academic.credit.desc.plain</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.academic.credit.desc.plain.fd" parent="dict.academic.credit.desc.plain.fd.abstract"/>
<dict:constraintDescriptor id="dict.academic.credit.desc.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraintRef bean="constraint.hidden"/>
	<dict:constraintRef bean="constraint.calc.plain.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="dict.academic.credit.desc.plain.cd" parent="dict.academic.credit.desc.plain.cd.abstract"/>

<!-- *********************************** -->
<!-- dict.academic.credit.desc.formatted -->
<!-- *********************************** -->
<dict:field key="formatted" id="dict.academic.credit.desc.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.academic.credit.desc.formatted.fd"/>
	<dict:constraintDescriptorRef bean="dict.academic.credit.desc.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="dict.academic.credit.desc.formatted" parent="dict.academic.credit.desc.formatted.abstract"/>
<dict:fieldDescriptor id="dict.academic.credit.desc.formatted.fd.abstract" abstract="true">
	<dict:name>academic.credit.desc.formatted</dict:name>
	<dict:desc>academic.credit.desc.formatted</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.academic.credit.desc.formatted.fd" parent="dict.academic.credit.desc.formatted.fd.abstract"/>
<dict:constraintDescriptor id="dict.academic.credit.desc.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="dict.academic.credit.desc.formatted.cd" parent="dict.academic.credit.desc.formatted.cd.abstract"/>

<!-- ************************* -->
<!-- dict.academic.credit.name -->
<!-- ************************* -->
<dict:field key="name" id="dict.academic.credit.name.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.academic.credit.name.fd"/>
	<dict:constraintDescriptorRef bean="dict.academic.credit.name.cd"/>
</dict:field>
<dict:field key="name" id="dict.academic.credit.name" parent="dict.academic.credit.name.abstract"/>
<dict:fieldDescriptor id="dict.academic.credit.name.fd.abstract" abstract="true">
	<dict:name>academic credit name</dict:name>
	<dict:desc>Name of this credit. This may have a direct relation to the combination of value and type fields.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.academic.credit.name.fd" parent="dict.academic.credit.name.fd.abstract"/>
<dict:constraintDescriptor id="dict.academic.credit.name.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.single.line.text"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="name" id="dict.academic.credit.name.cd" parent="dict.academic.credit.name.cd.abstract"/>

<!-- ************************* -->
<!-- dict.academic.credit.desc -->
<!-- ************************* -->
<dict:field key="desc" id="dict.academic.credit.desc.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.academic.credit.desc.fd"/>
	<dict:constraintDescriptorRef bean="dict.academic.credit.desc.cd"/>
</dict:field>
<dict:field key="desc" id="dict.academic.credit.desc" parent="dict.academic.credit.desc.abstract"/>
<dict:fieldDescriptor id="dict.academic.credit.desc.fd.abstract" abstract="true">
	<dict:name>academic credit desc</dict:name>
	<dict:desc>Description of this credit.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
	<dict:objectStructureRef bean="object.field.creditInfo.desc.AcademicCredit"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.academic.credit.desc.fd" parent="dict.academic.credit.desc.fd.abstract"/>
<dict:constraintDescriptor id="dict.academic.credit.desc.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="dict.academic.credit.desc.cd" parent="dict.academic.credit.desc.cd.abstract"/>

<!-- ************************** -->
<!-- dict.academic.credit.value -->
<!-- ************************** -->
<dict:field key="value" id="dict.academic.credit.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.academic.credit.value.fd"/>
	<dict:constraintDescriptorRef bean="dict.academic.credit.value.cd"/>
</dict:field>
<dict:field key="value" id="dict.academic.credit.value" parent="dict.academic.credit.value.abstract"/>
<dict:fieldDescriptor id="dict.academic.credit.value.fd.abstract" abstract="true">
	<dict:name>academic credit value</dict:name>
	<dict:desc>The number of the credits. This is typically numeric, but string is used to cover cases such as fractional and unbounded.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.academic.credit.value.fd" parent="dict.academic.credit.value.fd.abstract"/>
<dict:constraintDescriptor id="dict.academic.credit.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.single.line.text"/>
	<dict:constraintRef bean="constraint.integer"/>
	<dict:constraint key="in-line.constraint.for.dictionary.academic.credit.value">
		<dict:minValue>1</dict:minValue>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="dict.academic.credit.value.cd" parent="dict.academic.credit.value.cd.abstract"/>

<!-- ********************************** -->
<!-- dict.academic.credit.effectiveDate -->
<!-- ********************************** -->
<dict:field key="effectiveDate" id="dict.academic.credit.effectiveDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.academic.credit.effectiveDate.fd"/>
	<dict:constraintDescriptorRef bean="dict.academic.credit.effectiveDate.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="dict.academic.credit.effectiveDate" parent="dict.academic.credit.effectiveDate.abstract"/>
<dict:fieldDescriptor id="dict.academic.credit.effectiveDate.fd.abstract" abstract="true">
	<dict:name>academic credit effective date</dict:name>
	<dict:desc>Date and time that this credit value became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.academic.credit.effectiveDate.fd" parent="dict.academic.credit.effectiveDate.fd.abstract"/>
<dict:constraintDescriptor id="dict.academic.credit.effectiveDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="dict.academic.credit.effectiveDate.cd" parent="dict.academic.credit.effectiveDate.cd.abstract"/>

<!-- *********************************** -->
<!-- dict.academic.credit.expirationDate -->
<!-- *********************************** -->
<dict:field key="expirationDate" id="dict.academic.credit.expirationDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.academic.credit.expirationDate.fd"/>
	<dict:constraintDescriptorRef bean="dict.academic.credit.expirationDate.cd"/>
</dict:field>
<dict:field key="expirationDate" id="dict.academic.credit.expirationDate" parent="dict.academic.credit.expirationDate.abstract"/>
<dict:fieldDescriptor id="dict.academic.credit.expirationDate.fd.abstract" abstract="true">
	<dict:name>academic credit expiration date</dict:name>
	<dict:desc>Date and time that this credit value expires. This is a similar concept to the expiration date on enumerated values. If specified, this should be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.academic.credit.expirationDate.fd" parent="dict.academic.credit.expirationDate.fd.abstract"/>
<dict:constraintDescriptor id="dict.academic.credit.expirationDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.cross.greaterthan.effective.date"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="dict.academic.credit.expirationDate.cd" parent="dict.academic.credit.expirationDate.cd.abstract"/>

<!-- ************************* -->
<!-- dict.academic.credit.type -->
<!-- ************************* -->
<dict:field key="type" id="dict.academic.credit.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.academic.credit.type.fd"/>
	<dict:constraintDescriptorRef bean="dict.academic.credit.type.cd"/>
</dict:field>
<dict:field key="type" id="dict.academic.credit.type" parent="dict.academic.credit.type.abstract"/>
<dict:fieldDescriptor id="dict.academic.credit.type.fd.abstract" abstract="true">
	<dict:name>academic credit type</dict:name>
	<dict:desc>Unique identifier for a credit type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.academic.credit.type.fd" parent="dict.academic.credit.type.fd.abstract"/>
<dict:constraintDescriptor id="dict.academic.credit.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.hard.coded.academic.credit"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="dict.academic.credit.type.cd" parent="dict.academic.credit.type.cd.abstract"/>

<!-- ******************************** -->
<!-- dict.academic.credit.internal.id -->
<!-- ******************************** -->
<dict:field key="id" id="dict.academic.credit.internal.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="dict.academic.credit.internal.id.fd"/>
	<dict:constraintDescriptorRef bean="dict.academic.credit.internal.id.cd"/>
</dict:field>
<dict:field key="id" id="dict.academic.credit.internal.id" parent="dict.academic.credit.internal.id.abstract"/>
<dict:fieldDescriptor id="dict.academic.credit.internal.id.fd.abstract" abstract="true">
	<dict:name>academic credit internal id</dict:name>
	<dict:desc>Unique identifier for a credit value.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="dict.academic.credit.internal.id.fd" parent="dict.academic.credit.internal.id.fd.abstract"/>
<dict:constraintDescriptor id="dict.academic.credit.internal.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.hidden"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="dict.academic.credit.internal.id.cd" parent="dict.academic.credit.internal.id.cd.abstract"/>
</beans>
