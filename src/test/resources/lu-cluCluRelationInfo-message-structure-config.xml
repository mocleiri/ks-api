<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/dictionary-extension dictionary-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
">
<!-- *** Automatically Generated ***
on: Tue Feb 09 17:01:43 EST 2010
by: org.kuali.student.dictionary.writer.DictionaryModelWriter
Using:Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls   and: Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls
 -->
<import resource="constraints-dictionary-config.xml"/>

<!-- ********************************************** -->
<!-- object structure for object.cluCluRelationInfo -->
<!-- ********************************************** -->
<!-- Detailed information about a CLU to CLU relationship. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluCluRelationInfo" id="object.cluCluRelationInfo.abstract" abstract="true">
	<dict:typeRef bean="object.cluCluRelationInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluCluRelationInfo" id="object.cluCluRelationInfo" parent="object.cluCluRelationInfo.abstract"/>

<dict:type key="*" id="object.cluCluRelationInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.cluCluRelationInfo.type.DEFAULT.state.DEFAULT"/>
</dict:type>
<dict:type key="*" id="object.cluCluRelationInfo.type.DEFAULT" parent="object.cluCluRelationInfo.type.DEFAULT.abstract"/>

<!-- ******************************************************************* -->
<!-- fields for object.cluCluRelationInfo.type.(default).state.(default) -->
<!-- ******************************************************************* -->

<dict:state key="*" id="object.cluCluRelationInfo.type.DEFAULT.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.cluId"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.relatedCluId"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.isCluRelationRequired"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.effectiveDate"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.expirationDate"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.type"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.state"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.id"/>
</dict:state>
<dict:state key="*" id="object.cluCluRelationInfo.type.DEFAULT.state.DEFAULT" parent="object.cluCluRelationInfo.type.DEFAULT.state.DEFAULT.abstract"/>


<dict:field key="cluId" id="field.cluCluRelationInfo.cluId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.cluId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.cluId.cd"/>
</dict:field>
<dict:field key="cluId" id="field.cluCluRelationInfo.cluId" parent="field.cluCluRelationInfo.cluId.abstract"/>
<dict:fieldDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.fd.abstract" abstract="true">
	<dict:name>CLU Identifier</dict:name>
	<dict:desc>Unique identifier for a Canonical Learning Unit (CLU). This is the &quot;From&quot; or &quot;Parent&quot; in the relation.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.fd" parent="field.cluCluRelationInfo.cluId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing CLU -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.cluId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.cluId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.cd" parent="field.cluCluRelationInfo.cluId.cd.abstract"/>

<dict:field key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.relatedCluId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.relatedCluId.cd"/>
</dict:field>
<dict:field key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId" parent="field.cluCluRelationInfo.relatedCluId.abstract"/>
<dict:fieldDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.fd.abstract" abstract="true">
	<dict:name>Related CLU Identifier</dict:name>
	<dict:desc>Unique identifier for a Canonical Learning Unit (CLU). This is the &quot;To&quot; or &quot;Child&quot; of the relation.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.fd" parent="field.cluCluRelationInfo.relatedCluId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing CLU -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.relatedCluId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.cluId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.cd" parent="field.cluCluRelationInfo.relatedCluId.cd.abstract"/>

<dict:field key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.isCluRelationRequired.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.isCluRelationRequired.cd"/>
</dict:field>
<dict:field key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired" parent="field.cluCluRelationInfo.isCluRelationRequired.abstract"/>
<dict:fieldDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.fd.abstract" abstract="true">
	<dict:name>Is CLU Relation Required</dict:name>
	<dict:desc>Indicates if the relation is required upon instantiation of a LUI. Default is &quot;true&quot;.</dict:desc>
	<dict:dataType>boolean</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.fd" parent="field.cluCluRelationInfo.isCluRelationRequired.fd.abstract"/>
<!-- Required; Single valued (non-repeating); True or False -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.isCluRelationRequired.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.boolean"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.cd" parent="field.cluCluRelationInfo.isCluRelationRequired.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.effectiveDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.effectiveDate.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate" parent="field.cluCluRelationInfo.effectiveDate.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this CLU to CLU relationship became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.fd" parent="field.cluCluRelationInfo.effectiveDate.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.effectiveDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.cd" parent="field.cluCluRelationInfo.effectiveDate.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluCluRelationInfo.expirationDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.expirationDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.expirationDate.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluCluRelationInfo.expirationDate" parent="field.cluCluRelationInfo.expirationDate.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this CLU to CLU relationship expires. This is a similar concept to the expiration date on enumerated values. If specified, this should be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.fd" parent="field.cluCluRelationInfo.expirationDate.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.expirationDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.cd" parent="field.cluCluRelationInfo.expirationDate.cd.abstract"/>

<dict:field key="attributes" id="field.cluCluRelationInfo.attributes.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.cd"/>
</dict:field>
<dict:field key="attributes" id="field.cluCluRelationInfo.attributes" parent="field.cluCluRelationInfo.attributes.abstract"/>
<dict:fieldDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.fd.abstract" abstract="true">
	<dict:name>Generic/dynamic attributes</dict:name>
	<dict:desc>List of key/value pairs, typically used for dynamic attributes.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluCluRelationInfo.attributes.attributeInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.fd" parent="field.cluCluRelationInfo.attributes.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.cd" parent="field.cluCluRelationInfo.attributes.cd.abstract"/>

<!-- ***************************************************************************************************** -->
<!-- object structure for field.cluCluRelationInfo.attributes.type.(default).state.(default).attributeInfo -->
<!-- ***************************************************************************************************** -->
<!-- List of key/value pairs, typically used for dynamic attributes. -->
<dict:objectStructure key=".AttributeInfo" id="field.cluCluRelationInfo.attributes.attributeInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluCluRelationInfo.attributes.attributeInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key=".AttributeInfo" id="field.cluCluRelationInfo.attributes.attributeInfo" parent="field.cluCluRelationInfo.attributes.attributeInfo.abstract"/>

<dict:type key="*" id="field.cluCluRelationInfo.attributes.attributeInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.attributeInfo"/>
</dict:type>
<dict:type key="*" id="field.cluCluRelationInfo.attributes.attributeInfo.type.DEFAULT" parent="field.cluCluRelationInfo.attributes.attributeInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.(default).state.(default).attributeInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.attributeInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.attributeInfo.value"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.attributeInfo.key"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.attributeInfo" parent="field.cluCluRelationInfo.attributes.attributeInfo.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.value.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value" parent="field.cluCluRelationInfo.attributes.attributeInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.fd" parent="field.cluCluRelationInfo.attributes.attributeInfo.value.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.attributeInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.cd" parent="field.cluCluRelationInfo.attributes.attributeInfo.value.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.key.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key" parent="field.cluCluRelationInfo.attributes.attributeInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.fd" parent="field.cluCluRelationInfo.attributes.attributeInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.attributeInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.cd" parent="field.cluCluRelationInfo.attributes.attributeInfo.key.cd.abstract"/>

<dict:type key="kuali.lu.type.CreditCourse.dynamic.eye.color" id="field.cluCluRelationInfo.attributes.attributeInfo.type.EyeColor.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Eye Color</dict:name>
	<dict:desc>Captures the eye color of students expected to take this course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.attributeInfo.type.EyeColor.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.type.CreditCourse.dynamic.eye.color" id="field.cluCluRelationInfo.attributes.attributeInfo.type.EyeColor" parent="field.cluCluRelationInfo.attributes.attributeInfo.type.EyeColor.abstract"/>

<!-- ************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.(default).state.(default).attributeInfo.type.Eye Color.state.(default) -->
<!-- ************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.attributeInfo.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.attributeInfo.value.type.EyeColor.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.attributeInfo.key.type.EyeColor.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.attributeInfo.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.attributeInfo.type.EyeColor.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.value.type.EyeColor.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.value.type.EyeColor.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.attributeInfo.value.type.EyeColor.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.EyeColor.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.EyeColor.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.attributeInfo.value.type.EyeColor.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.EyeColor.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.EyeColor.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.attributeInfo.value.type.EyeColor.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.key.type.EyeColor.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.key.type.EyeColor.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.attributeInfo.key.type.EyeColor.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.EyeColor.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.EyeColor.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.attributeInfo.key.type.EyeColor.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.EyeColor.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.EyeColor.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.attributeInfo.key.type.EyeColor.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.lu.type.CreditCourse.dynamic.left.handed" id="field.cluCluRelationInfo.attributes.attributeInfo.type.LeftHanded.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Left Handed</dict:name>
	<dict:desc>Captures if the students are expected to be left handed who take this course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.attributeInfo.type.LeftHanded.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.type.CreditCourse.dynamic.left.handed" id="field.cluCluRelationInfo.attributes.attributeInfo.type.LeftHanded" parent="field.cluCluRelationInfo.attributes.attributeInfo.type.LeftHanded.abstract"/>

<!-- **************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.(default).state.(default).attributeInfo.type.Left Handed.state.(default) -->
<!-- **************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.attributeInfo.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.attributeInfo.value.type.LeftHanded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.attributeInfo.key.type.LeftHanded.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.attributeInfo.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.attributeInfo.type.LeftHanded.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.attributeInfo.value.type.LeftHanded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.attributeInfo.key.type.LeftHanded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd.abstract"/>

<!-- This sequence really belongs on both on CLU-LO and LO-LO relationships for Single Use Los - but the most recent version of the services with the relationships as not in use yet, so it has been put here as a temporary solution -->
<dict:type key="kuali.lo.type.SingleUse.dynamic.sequence" id="field.cluCluRelationInfo.attributes.attributeInfo.type.Sequence.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Sequence</dict:name>
	<dict:desc>Captures the sequence of an LO within a Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.attributeInfo.type.Sequence.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lo.type.SingleUse.dynamic.sequence" id="field.cluCluRelationInfo.attributes.attributeInfo.type.Sequence" parent="field.cluCluRelationInfo.attributes.attributeInfo.type.Sequence.abstract"/>

<!-- ************************************************************************************************************************* -->
<!-- fields for field.cluCluRelationInfo.attributes.type.(default).state.(default).attributeInfo.type.Sequence.state.(default) -->
<!-- ************************************************************************************************************************* -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.attributeInfo.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.attributeInfo.value.type.Sequence.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.attributeInfo.key.type.Sequence.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.attributeInfo.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.attributeInfo.type.Sequence.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.value.type.Sequence.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.value.type.Sequence.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.attributeInfo.value.type.Sequence.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.Sequence.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.Sequence.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.attributeInfo.value.type.Sequence.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.Sequence.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.attributeInfo.value.type.Sequence.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.attributeInfo.value.type.Sequence.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.key.type.Sequence.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.attributeInfo.key.type.Sequence.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.attributeInfo.key.type.Sequence.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.Sequence.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.Sequence.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.attributeInfo.key.type.Sequence.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.Sequence.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.attributeInfo.key.type.Sequence.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.attributeInfo.key.type.Sequence.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluCluRelationInfo.metaInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluCluRelationInfo.metaInfo" parent="field.cluCluRelationInfo.metaInfo.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluCluRelationInfo.metaInfo.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.fd" parent="field.cluCluRelationInfo.metaInfo.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.cd" parent="field.cluCluRelationInfo.metaInfo.cd.abstract"/>

<!-- ********************************************************************************************** -->
<!-- object structure for field.cluCluRelationInfo.metaInfo.type.(default).state.(default).metaInfo -->
<!-- ********************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluCluRelationInfo.metaInfo.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluCluRelationInfo.metaInfo.metaInfo" parent="field.cluCluRelationInfo.metaInfo.metaInfo.abstract"/>

<dict:type key="*" id="field.cluCluRelationInfo.metaInfo.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.metaInfo.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluCluRelationInfo.metaInfo.metaInfo.type.DEFAULT" parent="field.cluCluRelationInfo.metaInfo.metaInfo.type.DEFAULT.abstract"/>

<!-- ******************************************************************************************************************* -->
<!-- fields for field.cluCluRelationInfo.metaInfo.type.(default).state.(default).metaInfo.type.(default).state.(default) -->
<!-- ******************************************************************************************************************* -->

<dict:state key="*" id="field.cluCluRelationInfo.metaInfo.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.metaInfo.metaInfo" parent="field.cluCluRelationInfo.metaInfo.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluCluRelationInfo.metaInfo.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluCluRelationInfo.metaInfo.metaInfo.versionInd" parent="field.cluCluRelationInfo.metaInfo.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.metaInfo.versionInd.fd" parent="field.cluCluRelationInfo.metaInfo.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.metaInfo.versionInd.cd" parent="field.cluCluRelationInfo.metaInfo.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluCluRelationInfo.metaInfo.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluCluRelationInfo.metaInfo.metaInfo.createTime" parent="field.cluCluRelationInfo.metaInfo.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.metaInfo.createTime.fd" parent="field.cluCluRelationInfo.metaInfo.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.metaInfo.createTime.cd" parent="field.cluCluRelationInfo.metaInfo.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluCluRelationInfo.metaInfo.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluCluRelationInfo.metaInfo.metaInfo.createId" parent="field.cluCluRelationInfo.metaInfo.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.metaInfo.createId.fd" parent="field.cluCluRelationInfo.metaInfo.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.metaInfo.createId.cd" parent="field.cluCluRelationInfo.metaInfo.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluCluRelationInfo.metaInfo.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluCluRelationInfo.metaInfo.metaInfo.updateTime" parent="field.cluCluRelationInfo.metaInfo.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.metaInfo.updateTime.fd" parent="field.cluCluRelationInfo.metaInfo.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.metaInfo.updateTime.cd" parent="field.cluCluRelationInfo.metaInfo.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluCluRelationInfo.metaInfo.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluCluRelationInfo.metaInfo.metaInfo.updateId" parent="field.cluCluRelationInfo.metaInfo.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.metaInfo.updateId.fd" parent="field.cluCluRelationInfo.metaInfo.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.metaInfo.updateId.cd" parent="field.cluCluRelationInfo.metaInfo.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.cluCluRelationInfo.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.type.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.type.cd"/>
</dict:field>
<dict:field key="type" id="field.cluCluRelationInfo.type" parent="field.cluCluRelationInfo.type.abstract"/>
<dict:fieldDescriptor key="type" id="field.cluCluRelationInfo.type.fd.abstract" abstract="true">
	<dict:name>LU to LU Relation Type</dict:name>
	<dict:desc>Unique identifier for the LU to LU relation type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.cluCluRelationInfo.type.fd" parent="field.cluCluRelationInfo.type.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured lul-lu relation types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.lu.relation.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.cluCluRelationInfo.type.cd" parent="field.cluCluRelationInfo.type.cd.abstract"/>

<dict:field key="state" id="field.cluCluRelationInfo.state.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.state.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.state.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluCluRelationInfo.state" parent="field.cluCluRelationInfo.state.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluCluRelationInfo.state.fd.abstract" abstract="true">
	<dict:name>LU to LU Relation State</dict:name>
	<dict:desc>Identifier for the current status of a CLU to CLU relationship. The values for this field are constrained to those in the luLuRelationState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluCluRelationInfo.state.fd" parent="field.cluCluRelationInfo.state.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.state.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluCluRelationInfo.state.cd" parent="field.cluCluRelationInfo.state.cd.abstract"/>

<dict:field key="id" id="field.cluCluRelationInfo.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.id.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.id.cd"/>
</dict:field>
<dict:field key="id" id="field.cluCluRelationInfo.id" parent="field.cluCluRelationInfo.id.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluCluRelationInfo.id.fd.abstract" abstract="true">
	<dict:name>CLU to CLU Relation Identifier</dict:name>
	<dict:desc>Unique identifier for a CLU to CLU relationship. This is optional, due to the identifier being set at the time of creation. Once the relation has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluCluRelationInfo.id.fd" parent="field.cluCluRelationInfo.id.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluCluRelationInfo.id.cd" parent="field.cluCluRelationInfo.id.cd.abstract"/>

<!-- TODO: cross-check w/ SIMPLE -->
<dict:type key="kuali.lu.relation.type.course.format" id="object.cluCluRelationInfo.type.HasCourseFormat.abstract" abstract="true" parent="object.cluCluRelationInfo.type.DEFAULT.abstract">
	<dict:name>Has Course Format</dict:name>
	<dict:desc>Maintains relation betrween a course and the course format shell</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.cluCluRelationInfo.type.HasCourseFormat.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.relation.type.course.format" id="object.cluCluRelationInfo.type.HasCourseFormat" parent="object.cluCluRelationInfo.type.HasCourseFormat.abstract"/>

<!-- *************************************************************************** -->
<!-- fields for object.cluCluRelationInfo.type.Has Course Format.state.(default) -->
<!-- *************************************************************************** -->

<dict:state key="*" id="object.cluCluRelationInfo.type.HasCourseFormat.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.cluId.type.HasCourseFormat.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.relatedCluId.type.HasCourseFormat.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseFormat.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.effectiveDate.type.HasCourseFormat.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.expirationDate.type.HasCourseFormat.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.type.type.HasCourseFormat.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.state.type.HasCourseFormat.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.id.type.HasCourseFormat.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.cluCluRelationInfo.type.HasCourseFormat.state.DEFAULT" parent="object.cluCluRelationInfo.type.HasCourseFormat.state.DEFAULT.abstract"/>


<dict:field key="cluId" id="field.cluCluRelationInfo.cluId.type.HasCourseFormat.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.cluId.type.HasCourseFormat.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.cluId.type.HasCourseFormat.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="cluId" id="field.cluCluRelationInfo.cluId.type.HasCourseFormat.state.DEFAULT" parent="field.cluCluRelationInfo.cluId.type.HasCourseFormat.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.HasCourseFormat.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>CLU Identifier</dict:name>
	<dict:desc>Unique identifier for a Canonical Learning Unit (CLU). This is the &quot;From&quot; or &quot;Parent&quot; in the relation.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.HasCourseFormat.state.DEFAULT.fd" parent="field.cluCluRelationInfo.cluId.type.HasCourseFormat.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing CLU -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.cluId.type.HasCourseFormat.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.cluId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.HasCourseFormat.state.DEFAULT.cd" parent="field.cluCluRelationInfo.cluId.type.HasCourseFormat.state.DEFAULT.cd.abstract"/>

<dict:field key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasCourseFormat.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.relatedCluId.type.HasCourseFormat.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.relatedCluId.type.HasCourseFormat.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasCourseFormat.state.DEFAULT" parent="field.cluCluRelationInfo.relatedCluId.type.HasCourseFormat.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasCourseFormat.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Related CLU Identifier</dict:name>
	<dict:desc>Unique identifier for a Canonical Learning Unit (CLU). This is the &quot;To&quot; or &quot;Child&quot; of the relation.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasCourseFormat.state.DEFAULT.fd" parent="field.cluCluRelationInfo.relatedCluId.type.HasCourseFormat.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing CLU -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.relatedCluId.type.HasCourseFormat.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.cluId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasCourseFormat.state.DEFAULT.cd" parent="field.cluCluRelationInfo.relatedCluId.type.HasCourseFormat.state.DEFAULT.cd.abstract"/>

<dict:field key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseFormat.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseFormat.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseFormat.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseFormat.state.DEFAULT" parent="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseFormat.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseFormat.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Is CLU Relation Required</dict:name>
	<dict:desc>Indicates if the relation is required upon instantiation of a LUI. Default is &quot;true&quot;.</dict:desc>
	<dict:dataType>boolean</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseFormat.state.DEFAULT.fd" parent="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseFormat.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); True or False -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseFormat.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.boolean"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseFormat.state.DEFAULT.cd" parent="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseFormat.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasCourseFormat.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.effectiveDate.type.HasCourseFormat.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.effectiveDate.type.HasCourseFormat.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasCourseFormat.state.DEFAULT" parent="field.cluCluRelationInfo.effectiveDate.type.HasCourseFormat.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasCourseFormat.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this CLU to CLU relationship became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasCourseFormat.state.DEFAULT.fd" parent="field.cluCluRelationInfo.effectiveDate.type.HasCourseFormat.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.effectiveDate.type.HasCourseFormat.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasCourseFormat.state.DEFAULT.cd" parent="field.cluCluRelationInfo.effectiveDate.type.HasCourseFormat.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasCourseFormat.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.expirationDate.type.HasCourseFormat.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.expirationDate.type.HasCourseFormat.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasCourseFormat.state.DEFAULT" parent="field.cluCluRelationInfo.expirationDate.type.HasCourseFormat.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasCourseFormat.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this CLU to CLU relationship expires. This is a similar concept to the expiration date on enumerated values. If specified, this should be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasCourseFormat.state.DEFAULT.fd" parent="field.cluCluRelationInfo.expirationDate.type.HasCourseFormat.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.expirationDate.type.HasCourseFormat.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasCourseFormat.state.DEFAULT.cd" parent="field.cluCluRelationInfo.expirationDate.type.HasCourseFormat.state.DEFAULT.cd.abstract"/>

<dict:field key="attributes" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="attributes" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Generic/dynamic attributes</dict:name>
	<dict:desc>List of key/value pairs, typically used for dynamic attributes.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.cd.abstract"/>

<!-- ************************************************************************************************************* -->
<!-- object structure for field.cluCluRelationInfo.attributes.type.Has Course Format.state.(default).attributeInfo -->
<!-- ************************************************************************************************************* -->
<!-- List of key/value pairs, typically used for dynamic attributes. -->
<dict:objectStructure key=".AttributeInfo" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key=".AttributeInfo" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.abstract"/>

<dict:type key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo"/>
</dict:type>
<dict:type key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.DEFAULT.abstract"/>

<!-- ********************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Course Format.state.(default).attributeInfo.type.(default).state.(default) -->
<!-- ********************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.cd.abstract"/>

<dict:type key="kuali.lu.type.CreditCourse.dynamic.eye.color" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.EyeColor.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Eye Color</dict:name>
	<dict:desc>Captures the eye color of students expected to take this course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.type.CreditCourse.dynamic.eye.color" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.EyeColor" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.EyeColor.abstract"/>

<!-- ********************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Course Format.state.(default).attributeInfo.type.Eye Color.state.(default) -->
<!-- ********************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.lu.type.CreditCourse.dynamic.left.handed" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.LeftHanded.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Left Handed</dict:name>
	<dict:desc>Captures if the students are expected to be left handed who take this course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.type.CreditCourse.dynamic.left.handed" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.LeftHanded" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.LeftHanded.abstract"/>

<!-- ************************************************************************************************************************************ -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Course Format.state.(default).attributeInfo.type.Left Handed.state.(default) -->
<!-- ************************************************************************************************************************************ -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd.abstract"/>

<!-- This sequence really belongs on both on CLU-LO and LO-LO relationships for Single Use Los - but the most recent version of the services with the relationships as not in use yet, so it has been put here as a temporary solution -->
<dict:type key="kuali.lo.type.SingleUse.dynamic.sequence" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.Sequence.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Sequence</dict:name>
	<dict:desc>Captures the sequence of an LO within a Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lo.type.SingleUse.dynamic.sequence" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.Sequence" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.Sequence.abstract"/>

<!-- ********************************************************************************************************************************* -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Course Format.state.(default).attributeInfo.type.Sequence.state.(default) -->
<!-- ********************************************************************************************************************************* -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseFormat.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.cd.abstract"/>

<!-- ****************************************************************************************************** -->
<!-- object structure for field.cluCluRelationInfo.metaInfo.type.Has Course Format.state.(default).metaInfo -->
<!-- ****************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- *************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.metaInfo.type.Has Course Format.state.(default).metaInfo.type.(default).state.(default) -->
<!-- *************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.versionInd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.versionInd.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.versionInd.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createTime" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createTime.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createTime.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createId" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createId.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createId.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateTime" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateTime.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateTime.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateId" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateId.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateId.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseFormat.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.cluCluRelationInfo.type.type.HasCourseFormat.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.type.type.HasCourseFormat.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.type.type.HasCourseFormat.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.cluCluRelationInfo.type.type.HasCourseFormat.state.DEFAULT" parent="field.cluCluRelationInfo.type.type.HasCourseFormat.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.cluCluRelationInfo.type.type.HasCourseFormat.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>LU to LU Relation Type</dict:name>
	<dict:desc>Unique identifier for the LU to LU relation type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.cluCluRelationInfo.type.type.HasCourseFormat.state.DEFAULT.fd" parent="field.cluCluRelationInfo.type.type.HasCourseFormat.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured lul-lu relation types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.type.type.HasCourseFormat.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.lu.relation.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.cluCluRelationInfo.type.type.HasCourseFormat.state.DEFAULT.cd" parent="field.cluCluRelationInfo.type.type.HasCourseFormat.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.cluCluRelationInfo.state.type.HasCourseFormat.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.state.type.HasCourseFormat.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.state.type.HasCourseFormat.state.DEFAULT.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluCluRelationInfo.state.type.HasCourseFormat.state.DEFAULT" parent="field.cluCluRelationInfo.state.type.HasCourseFormat.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluCluRelationInfo.state.type.HasCourseFormat.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>LU to LU Relation State</dict:name>
	<dict:desc>Identifier for the current status of a CLU to CLU relationship. The values for this field are constrained to those in the luLuRelationState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluCluRelationInfo.state.type.HasCourseFormat.state.DEFAULT.fd" parent="field.cluCluRelationInfo.state.type.HasCourseFormat.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.state.type.HasCourseFormat.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluCluRelationInfo.state.type.HasCourseFormat.state.DEFAULT.cd" parent="field.cluCluRelationInfo.state.type.HasCourseFormat.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.cluCluRelationInfo.id.type.HasCourseFormat.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.id.type.HasCourseFormat.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.id.type.HasCourseFormat.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.cluCluRelationInfo.id.type.HasCourseFormat.state.DEFAULT" parent="field.cluCluRelationInfo.id.type.HasCourseFormat.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluCluRelationInfo.id.type.HasCourseFormat.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>CLU to CLU Relation Identifier</dict:name>
	<dict:desc>Unique identifier for a CLU to CLU relationship. This is optional, due to the identifier being set at the time of creation. Once the relation has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluCluRelationInfo.id.type.HasCourseFormat.state.DEFAULT.fd" parent="field.cluCluRelationInfo.id.type.HasCourseFormat.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.id.type.HasCourseFormat.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluCluRelationInfo.id.type.HasCourseFormat.state.DEFAULT.cd" parent="field.cluCluRelationInfo.id.type.HasCourseFormat.state.DEFAULT.cd.abstract"/>

<!-- TODO: cross-check w/ SIMPLE -->
<dict:type key="kuali.lu.relation.type.course.activity" id="object.cluCluRelationInfo.type.HasCourseActivity.abstract" abstract="true" parent="object.cluCluRelationInfo.type.DEFAULT.abstract">
	<dict:name>Has Course Activity</dict:name>
	<dict:desc>Maintains relation betrween a course format shell and each individual activity</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.cluCluRelationInfo.type.HasCourseActivity.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.relation.type.course.activity" id="object.cluCluRelationInfo.type.HasCourseActivity" parent="object.cluCluRelationInfo.type.HasCourseActivity.abstract"/>

<!-- ***************************************************************************** -->
<!-- fields for object.cluCluRelationInfo.type.Has Course Activity.state.(default) -->
<!-- ***************************************************************************** -->

<dict:state key="*" id="object.cluCluRelationInfo.type.HasCourseActivity.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.cluId.type.HasCourseActivity.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.relatedCluId.type.HasCourseActivity.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseActivity.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.effectiveDate.type.HasCourseActivity.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.expirationDate.type.HasCourseActivity.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.type.type.HasCourseActivity.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.state.type.HasCourseActivity.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.id.type.HasCourseActivity.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.cluCluRelationInfo.type.HasCourseActivity.state.DEFAULT" parent="object.cluCluRelationInfo.type.HasCourseActivity.state.DEFAULT.abstract"/>


<dict:field key="cluId" id="field.cluCluRelationInfo.cluId.type.HasCourseActivity.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.cluId.type.HasCourseActivity.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.cluId.type.HasCourseActivity.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="cluId" id="field.cluCluRelationInfo.cluId.type.HasCourseActivity.state.DEFAULT" parent="field.cluCluRelationInfo.cluId.type.HasCourseActivity.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.HasCourseActivity.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>CLU Identifier</dict:name>
	<dict:desc>Unique identifier for a Canonical Learning Unit (CLU). This is the &quot;From&quot; or &quot;Parent&quot; in the relation.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.HasCourseActivity.state.DEFAULT.fd" parent="field.cluCluRelationInfo.cluId.type.HasCourseActivity.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing CLU -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.cluId.type.HasCourseActivity.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.cluId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.HasCourseActivity.state.DEFAULT.cd" parent="field.cluCluRelationInfo.cluId.type.HasCourseActivity.state.DEFAULT.cd.abstract"/>

<dict:field key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasCourseActivity.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.relatedCluId.type.HasCourseActivity.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.relatedCluId.type.HasCourseActivity.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasCourseActivity.state.DEFAULT" parent="field.cluCluRelationInfo.relatedCluId.type.HasCourseActivity.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasCourseActivity.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Related CLU Identifier</dict:name>
	<dict:desc>Unique identifier for a Canonical Learning Unit (CLU). This is the &quot;To&quot; or &quot;Child&quot; of the relation.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasCourseActivity.state.DEFAULT.fd" parent="field.cluCluRelationInfo.relatedCluId.type.HasCourseActivity.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing CLU -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.relatedCluId.type.HasCourseActivity.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.cluId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasCourseActivity.state.DEFAULT.cd" parent="field.cluCluRelationInfo.relatedCluId.type.HasCourseActivity.state.DEFAULT.cd.abstract"/>

<dict:field key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseActivity.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseActivity.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseActivity.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseActivity.state.DEFAULT" parent="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseActivity.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseActivity.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Is CLU Relation Required</dict:name>
	<dict:desc>Indicates if the relation is required upon instantiation of a LUI. Default is &quot;true&quot;.</dict:desc>
	<dict:dataType>boolean</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseActivity.state.DEFAULT.fd" parent="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseActivity.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); True or False -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseActivity.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.boolean"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseActivity.state.DEFAULT.cd" parent="field.cluCluRelationInfo.isCluRelationRequired.type.HasCourseActivity.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasCourseActivity.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.effectiveDate.type.HasCourseActivity.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.effectiveDate.type.HasCourseActivity.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasCourseActivity.state.DEFAULT" parent="field.cluCluRelationInfo.effectiveDate.type.HasCourseActivity.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasCourseActivity.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this CLU to CLU relationship became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasCourseActivity.state.DEFAULT.fd" parent="field.cluCluRelationInfo.effectiveDate.type.HasCourseActivity.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.effectiveDate.type.HasCourseActivity.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasCourseActivity.state.DEFAULT.cd" parent="field.cluCluRelationInfo.effectiveDate.type.HasCourseActivity.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasCourseActivity.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.expirationDate.type.HasCourseActivity.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.expirationDate.type.HasCourseActivity.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasCourseActivity.state.DEFAULT" parent="field.cluCluRelationInfo.expirationDate.type.HasCourseActivity.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasCourseActivity.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this CLU to CLU relationship expires. This is a similar concept to the expiration date on enumerated values. If specified, this should be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasCourseActivity.state.DEFAULT.fd" parent="field.cluCluRelationInfo.expirationDate.type.HasCourseActivity.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.expirationDate.type.HasCourseActivity.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasCourseActivity.state.DEFAULT.cd" parent="field.cluCluRelationInfo.expirationDate.type.HasCourseActivity.state.DEFAULT.cd.abstract"/>

<dict:field key="attributes" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="attributes" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Generic/dynamic attributes</dict:name>
	<dict:desc>List of key/value pairs, typically used for dynamic attributes.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.cd.abstract"/>

<!-- *************************************************************************************************************** -->
<!-- object structure for field.cluCluRelationInfo.attributes.type.Has Course Activity.state.(default).attributeInfo -->
<!-- *************************************************************************************************************** -->
<!-- List of key/value pairs, typically used for dynamic attributes. -->
<dict:objectStructure key=".AttributeInfo" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key=".AttributeInfo" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.abstract"/>

<dict:type key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo"/>
</dict:type>
<dict:type key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************************ -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Course Activity.state.(default).attributeInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************************ -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.cd.abstract"/>

<dict:type key="kuali.lu.type.CreditCourse.dynamic.eye.color" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.EyeColor.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Eye Color</dict:name>
	<dict:desc>Captures the eye color of students expected to take this course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.type.CreditCourse.dynamic.eye.color" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.EyeColor" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.EyeColor.abstract"/>

<!-- ************************************************************************************************************************************ -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Course Activity.state.(default).attributeInfo.type.Eye Color.state.(default) -->
<!-- ************************************************************************************************************************************ -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.lu.type.CreditCourse.dynamic.left.handed" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.LeftHanded.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Left Handed</dict:name>
	<dict:desc>Captures if the students are expected to be left handed who take this course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.type.CreditCourse.dynamic.left.handed" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.LeftHanded" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.LeftHanded.abstract"/>

<!-- ************************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Course Activity.state.(default).attributeInfo.type.Left Handed.state.(default) -->
<!-- ************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd.abstract"/>

<!-- This sequence really belongs on both on CLU-LO and LO-LO relationships for Single Use Los - but the most recent version of the services with the relationships as not in use yet, so it has been put here as a temporary solution -->
<dict:type key="kuali.lo.type.SingleUse.dynamic.sequence" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.Sequence.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Sequence</dict:name>
	<dict:desc>Captures the sequence of an LO within a Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lo.type.SingleUse.dynamic.sequence" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.Sequence" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.Sequence.abstract"/>

<!-- *********************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Course Activity.state.(default).attributeInfo.type.Sequence.state.(default) -->
<!-- *********************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasCourseActivity.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************** -->
<!-- object structure for field.cluCluRelationInfo.metaInfo.type.Has Course Activity.state.(default).metaInfo -->
<!-- ******************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.metaInfo.type.Has Course Activity.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.versionInd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.versionInd.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.versionInd.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createTime" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createTime.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createTime.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createId" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createId.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createId.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateTime" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateTime.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateTime.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateId" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateId.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateId.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasCourseActivity.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.cluCluRelationInfo.type.type.HasCourseActivity.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.type.type.HasCourseActivity.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.type.type.HasCourseActivity.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.cluCluRelationInfo.type.type.HasCourseActivity.state.DEFAULT" parent="field.cluCluRelationInfo.type.type.HasCourseActivity.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.cluCluRelationInfo.type.type.HasCourseActivity.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>LU to LU Relation Type</dict:name>
	<dict:desc>Unique identifier for the LU to LU relation type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.cluCluRelationInfo.type.type.HasCourseActivity.state.DEFAULT.fd" parent="field.cluCluRelationInfo.type.type.HasCourseActivity.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured lul-lu relation types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.type.type.HasCourseActivity.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.lu.relation.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.cluCluRelationInfo.type.type.HasCourseActivity.state.DEFAULT.cd" parent="field.cluCluRelationInfo.type.type.HasCourseActivity.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.cluCluRelationInfo.state.type.HasCourseActivity.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.state.type.HasCourseActivity.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.state.type.HasCourseActivity.state.DEFAULT.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluCluRelationInfo.state.type.HasCourseActivity.state.DEFAULT" parent="field.cluCluRelationInfo.state.type.HasCourseActivity.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluCluRelationInfo.state.type.HasCourseActivity.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>LU to LU Relation State</dict:name>
	<dict:desc>Identifier for the current status of a CLU to CLU relationship. The values for this field are constrained to those in the luLuRelationState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluCluRelationInfo.state.type.HasCourseActivity.state.DEFAULT.fd" parent="field.cluCluRelationInfo.state.type.HasCourseActivity.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.state.type.HasCourseActivity.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluCluRelationInfo.state.type.HasCourseActivity.state.DEFAULT.cd" parent="field.cluCluRelationInfo.state.type.HasCourseActivity.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.cluCluRelationInfo.id.type.HasCourseActivity.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.id.type.HasCourseActivity.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.id.type.HasCourseActivity.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.cluCluRelationInfo.id.type.HasCourseActivity.state.DEFAULT" parent="field.cluCluRelationInfo.id.type.HasCourseActivity.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluCluRelationInfo.id.type.HasCourseActivity.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>CLU to CLU Relation Identifier</dict:name>
	<dict:desc>Unique identifier for a CLU to CLU relationship. This is optional, due to the identifier being set at the time of creation. Once the relation has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluCluRelationInfo.id.type.HasCourseActivity.state.DEFAULT.fd" parent="field.cluCluRelationInfo.id.type.HasCourseActivity.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.id.type.HasCourseActivity.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluCluRelationInfo.id.type.HasCourseActivity.state.DEFAULT.cd" parent="field.cluCluRelationInfo.id.type.HasCourseActivity.state.DEFAULT.cd.abstract"/>

<!-- TODO: cross-check w/ SIMPLE -->
<dict:type key="kuali.lu.relation.type.co-located" id="object.cluCluRelationInfo.type.Co-Located.abstract" abstract="true" parent="object.cluCluRelationInfo.type.DEFAULT.abstract">
	<dict:name>Co-Located</dict:name>
	<dict:desc>Maintains relations betrween different courses the meet together (are co-located)</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.cluCluRelationInfo.type.Co-Located.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.relation.type.co-located" id="object.cluCluRelationInfo.type.Co-Located" parent="object.cluCluRelationInfo.type.Co-Located.abstract"/>

<!-- ******************************************************************** -->
<!-- fields for object.cluCluRelationInfo.type.Co-Located.state.(default) -->
<!-- ******************************************************************** -->

<dict:state key="*" id="object.cluCluRelationInfo.type.Co-Located.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.cluId.type.Co-Located.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.relatedCluId.type.Co-Located.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.Co-Located.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.effectiveDate.type.Co-Located.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.expirationDate.type.Co-Located.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.type.type.Co-Located.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.state.type.Co-Located.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.id.type.Co-Located.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.cluCluRelationInfo.type.Co-Located.state.DEFAULT" parent="object.cluCluRelationInfo.type.Co-Located.state.DEFAULT.abstract"/>


<dict:field key="cluId" id="field.cluCluRelationInfo.cluId.type.Co-Located.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.cluId.type.Co-Located.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.cluId.type.Co-Located.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="cluId" id="field.cluCluRelationInfo.cluId.type.Co-Located.state.DEFAULT" parent="field.cluCluRelationInfo.cluId.type.Co-Located.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.Co-Located.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>CLU Identifier</dict:name>
	<dict:desc>Unique identifier for a Canonical Learning Unit (CLU). This is the &quot;From&quot; or &quot;Parent&quot; in the relation.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.Co-Located.state.DEFAULT.fd" parent="field.cluCluRelationInfo.cluId.type.Co-Located.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing CLU -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.cluId.type.Co-Located.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.cluId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.Co-Located.state.DEFAULT.cd" parent="field.cluCluRelationInfo.cluId.type.Co-Located.state.DEFAULT.cd.abstract"/>

<dict:field key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.Co-Located.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.relatedCluId.type.Co-Located.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.relatedCluId.type.Co-Located.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.Co-Located.state.DEFAULT" parent="field.cluCluRelationInfo.relatedCluId.type.Co-Located.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.Co-Located.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Related CLU Identifier</dict:name>
	<dict:desc>Unique identifier for a Canonical Learning Unit (CLU). This is the &quot;To&quot; or &quot;Child&quot; of the relation.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.Co-Located.state.DEFAULT.fd" parent="field.cluCluRelationInfo.relatedCluId.type.Co-Located.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing CLU -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.relatedCluId.type.Co-Located.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.cluId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.Co-Located.state.DEFAULT.cd" parent="field.cluCluRelationInfo.relatedCluId.type.Co-Located.state.DEFAULT.cd.abstract"/>

<dict:field key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.Co-Located.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.Co-Located.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.Co-Located.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.Co-Located.state.DEFAULT" parent="field.cluCluRelationInfo.isCluRelationRequired.type.Co-Located.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.Co-Located.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Is CLU Relation Required</dict:name>
	<dict:desc>Indicates if the relation is required upon instantiation of a LUI. Default is &quot;true&quot;.</dict:desc>
	<dict:dataType>boolean</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.Co-Located.state.DEFAULT.fd" parent="field.cluCluRelationInfo.isCluRelationRequired.type.Co-Located.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); True or False -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.isCluRelationRequired.type.Co-Located.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.boolean"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.Co-Located.state.DEFAULT.cd" parent="field.cluCluRelationInfo.isCluRelationRequired.type.Co-Located.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.Co-Located.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.effectiveDate.type.Co-Located.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.effectiveDate.type.Co-Located.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.Co-Located.state.DEFAULT" parent="field.cluCluRelationInfo.effectiveDate.type.Co-Located.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.Co-Located.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this CLU to CLU relationship became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.Co-Located.state.DEFAULT.fd" parent="field.cluCluRelationInfo.effectiveDate.type.Co-Located.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.effectiveDate.type.Co-Located.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.Co-Located.state.DEFAULT.cd" parent="field.cluCluRelationInfo.effectiveDate.type.Co-Located.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.Co-Located.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.expirationDate.type.Co-Located.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.expirationDate.type.Co-Located.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.Co-Located.state.DEFAULT" parent="field.cluCluRelationInfo.expirationDate.type.Co-Located.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.Co-Located.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this CLU to CLU relationship expires. This is a similar concept to the expiration date on enumerated values. If specified, this should be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.Co-Located.state.DEFAULT.fd" parent="field.cluCluRelationInfo.expirationDate.type.Co-Located.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.expirationDate.type.Co-Located.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.Co-Located.state.DEFAULT.cd" parent="field.cluCluRelationInfo.expirationDate.type.Co-Located.state.DEFAULT.cd.abstract"/>

<dict:field key="attributes" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="attributes" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Generic/dynamic attributes</dict:name>
	<dict:desc>List of key/value pairs, typically used for dynamic attributes.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.cd.abstract"/>

<!-- ****************************************************************************************************** -->
<!-- object structure for field.cluCluRelationInfo.attributes.type.Co-Located.state.(default).attributeInfo -->
<!-- ****************************************************************************************************** -->
<!-- List of key/value pairs, typically used for dynamic attributes. -->
<dict:objectStructure key=".AttributeInfo" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key=".AttributeInfo" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.abstract"/>

<dict:type key="*" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo"/>
</dict:type>
<dict:type key="*" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.DEFAULT.abstract"/>

<!-- *************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Co-Located.state.(default).attributeInfo.type.(default).state.(default) -->
<!-- *************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.fd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.cd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.fd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.cd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.cd.abstract"/>

<dict:type key="kuali.lu.type.CreditCourse.dynamic.eye.color" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.EyeColor.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Eye Color</dict:name>
	<dict:desc>Captures the eye color of students expected to take this course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.type.CreditCourse.dynamic.eye.color" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.EyeColor" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.EyeColor.abstract"/>

<!-- *************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Co-Located.state.(default).attributeInfo.type.Eye Color.state.(default) -->
<!-- *************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.lu.type.CreditCourse.dynamic.left.handed" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.LeftHanded.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Left Handed</dict:name>
	<dict:desc>Captures if the students are expected to be left handed who take this course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.type.CreditCourse.dynamic.left.handed" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.LeftHanded" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.LeftHanded.abstract"/>

<!-- ***************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Co-Located.state.(default).attributeInfo.type.Left Handed.state.(default) -->
<!-- ***************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd.abstract"/>

<!-- This sequence really belongs on both on CLU-LO and LO-LO relationships for Single Use Los - but the most recent version of the services with the relationships as not in use yet, so it has been put here as a temporary solution -->
<dict:type key="kuali.lo.type.SingleUse.dynamic.sequence" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.Sequence.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Sequence</dict:name>
	<dict:desc>Captures the sequence of an LO within a Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lo.type.SingleUse.dynamic.sequence" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.Sequence" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.Sequence.abstract"/>

<!-- ************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Co-Located.state.(default).attributeInfo.type.Sequence.state.(default) -->
<!-- ************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.Co-Located.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.fd" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.cd" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.cd.abstract"/>

<!-- *********************************************************************************************** -->
<!-- object structure for field.cluCluRelationInfo.metaInfo.type.Co-Located.state.(default).metaInfo -->
<!-- *********************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ******************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.metaInfo.type.Co-Located.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ******************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.versionInd" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.versionInd.fd" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.versionInd.cd" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createTime" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createTime.fd" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createTime.cd" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createId" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createId.fd" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createId.cd" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateTime" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateTime.fd" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateTime.cd" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateId" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateId.fd" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateId.cd" parent="field.cluCluRelationInfo.metaInfo.type.Co-Located.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.cluCluRelationInfo.type.type.Co-Located.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.type.type.Co-Located.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.type.type.Co-Located.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.cluCluRelationInfo.type.type.Co-Located.state.DEFAULT" parent="field.cluCluRelationInfo.type.type.Co-Located.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.cluCluRelationInfo.type.type.Co-Located.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>LU to LU Relation Type</dict:name>
	<dict:desc>Unique identifier for the LU to LU relation type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.cluCluRelationInfo.type.type.Co-Located.state.DEFAULT.fd" parent="field.cluCluRelationInfo.type.type.Co-Located.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured lul-lu relation types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.type.type.Co-Located.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.lu.relation.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.cluCluRelationInfo.type.type.Co-Located.state.DEFAULT.cd" parent="field.cluCluRelationInfo.type.type.Co-Located.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.cluCluRelationInfo.state.type.Co-Located.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.state.type.Co-Located.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.state.type.Co-Located.state.DEFAULT.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluCluRelationInfo.state.type.Co-Located.state.DEFAULT" parent="field.cluCluRelationInfo.state.type.Co-Located.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluCluRelationInfo.state.type.Co-Located.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>LU to LU Relation State</dict:name>
	<dict:desc>Identifier for the current status of a CLU to CLU relationship. The values for this field are constrained to those in the luLuRelationState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluCluRelationInfo.state.type.Co-Located.state.DEFAULT.fd" parent="field.cluCluRelationInfo.state.type.Co-Located.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.state.type.Co-Located.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluCluRelationInfo.state.type.Co-Located.state.DEFAULT.cd" parent="field.cluCluRelationInfo.state.type.Co-Located.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.cluCluRelationInfo.id.type.Co-Located.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.id.type.Co-Located.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.id.type.Co-Located.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.cluCluRelationInfo.id.type.Co-Located.state.DEFAULT" parent="field.cluCluRelationInfo.id.type.Co-Located.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluCluRelationInfo.id.type.Co-Located.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>CLU to CLU Relation Identifier</dict:name>
	<dict:desc>Unique identifier for a CLU to CLU relationship. This is optional, due to the identifier being set at the time of creation. Once the relation has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluCluRelationInfo.id.type.Co-Located.state.DEFAULT.fd" parent="field.cluCluRelationInfo.id.type.Co-Located.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.id.type.Co-Located.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluCluRelationInfo.id.type.Co-Located.state.DEFAULT.cd" parent="field.cluCluRelationInfo.id.type.Co-Located.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.lu.lu.relation.type.program.level" id="object.cluCluRelationInfo.type.HasProgramLevel.abstract" abstract="true" parent="object.cluCluRelationInfo.type.DEFAULT.abstract">
	<dict:name>Has Program Level</dict:name>
	<dict:desc>Miantains relationship between a program and program level</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.cluCluRelationInfo.type.HasProgramLevel.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.lu.relation.type.program.level" id="object.cluCluRelationInfo.type.HasProgramLevel" parent="object.cluCluRelationInfo.type.HasProgramLevel.abstract"/>

<!-- *************************************************************************** -->
<!-- fields for object.cluCluRelationInfo.type.Has Program Level.state.(default) -->
<!-- *************************************************************************** -->

<dict:state key="*" id="object.cluCluRelationInfo.type.HasProgramLevel.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.cluId.type.HasProgramLevel.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.relatedCluId.type.HasProgramLevel.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramLevel.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.effectiveDate.type.HasProgramLevel.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.expirationDate.type.HasProgramLevel.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.type.type.HasProgramLevel.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.state.type.HasProgramLevel.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.id.type.HasProgramLevel.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.cluCluRelationInfo.type.HasProgramLevel.state.DEFAULT" parent="object.cluCluRelationInfo.type.HasProgramLevel.state.DEFAULT.abstract"/>


<dict:field key="cluId" id="field.cluCluRelationInfo.cluId.type.HasProgramLevel.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.cluId.type.HasProgramLevel.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.cluId.type.HasProgramLevel.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="cluId" id="field.cluCluRelationInfo.cluId.type.HasProgramLevel.state.DEFAULT" parent="field.cluCluRelationInfo.cluId.type.HasProgramLevel.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.HasProgramLevel.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>CLU Identifier</dict:name>
	<dict:desc>Unique identifier for a Canonical Learning Unit (CLU). This is the &quot;From&quot; or &quot;Parent&quot; in the relation.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.HasProgramLevel.state.DEFAULT.fd" parent="field.cluCluRelationInfo.cluId.type.HasProgramLevel.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing CLU -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.cluId.type.HasProgramLevel.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.cluId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.HasProgramLevel.state.DEFAULT.cd" parent="field.cluCluRelationInfo.cluId.type.HasProgramLevel.state.DEFAULT.cd.abstract"/>

<dict:field key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasProgramLevel.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.relatedCluId.type.HasProgramLevel.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.relatedCluId.type.HasProgramLevel.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasProgramLevel.state.DEFAULT" parent="field.cluCluRelationInfo.relatedCluId.type.HasProgramLevel.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasProgramLevel.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Related CLU Identifier</dict:name>
	<dict:desc>Unique identifier for a Canonical Learning Unit (CLU). This is the &quot;To&quot; or &quot;Child&quot; of the relation.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasProgramLevel.state.DEFAULT.fd" parent="field.cluCluRelationInfo.relatedCluId.type.HasProgramLevel.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing CLU -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.relatedCluId.type.HasProgramLevel.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.cluId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasProgramLevel.state.DEFAULT.cd" parent="field.cluCluRelationInfo.relatedCluId.type.HasProgramLevel.state.DEFAULT.cd.abstract"/>

<dict:field key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramLevel.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramLevel.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramLevel.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramLevel.state.DEFAULT" parent="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramLevel.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramLevel.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Is CLU Relation Required</dict:name>
	<dict:desc>Indicates if the relation is required upon instantiation of a LUI. Default is &quot;true&quot;.</dict:desc>
	<dict:dataType>boolean</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramLevel.state.DEFAULT.fd" parent="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramLevel.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); True or False -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramLevel.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.boolean"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramLevel.state.DEFAULT.cd" parent="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramLevel.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasProgramLevel.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.effectiveDate.type.HasProgramLevel.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.effectiveDate.type.HasProgramLevel.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasProgramLevel.state.DEFAULT" parent="field.cluCluRelationInfo.effectiveDate.type.HasProgramLevel.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasProgramLevel.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this CLU to CLU relationship became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasProgramLevel.state.DEFAULT.fd" parent="field.cluCluRelationInfo.effectiveDate.type.HasProgramLevel.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.effectiveDate.type.HasProgramLevel.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasProgramLevel.state.DEFAULT.cd" parent="field.cluCluRelationInfo.effectiveDate.type.HasProgramLevel.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasProgramLevel.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.expirationDate.type.HasProgramLevel.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.expirationDate.type.HasProgramLevel.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasProgramLevel.state.DEFAULT" parent="field.cluCluRelationInfo.expirationDate.type.HasProgramLevel.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasProgramLevel.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this CLU to CLU relationship expires. This is a similar concept to the expiration date on enumerated values. If specified, this should be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasProgramLevel.state.DEFAULT.fd" parent="field.cluCluRelationInfo.expirationDate.type.HasProgramLevel.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.expirationDate.type.HasProgramLevel.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasProgramLevel.state.DEFAULT.cd" parent="field.cluCluRelationInfo.expirationDate.type.HasProgramLevel.state.DEFAULT.cd.abstract"/>

<dict:field key="attributes" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="attributes" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Generic/dynamic attributes</dict:name>
	<dict:desc>List of key/value pairs, typically used for dynamic attributes.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.cd.abstract"/>

<!-- ************************************************************************************************************* -->
<!-- object structure for field.cluCluRelationInfo.attributes.type.Has Program Level.state.(default).attributeInfo -->
<!-- ************************************************************************************************************* -->
<!-- List of key/value pairs, typically used for dynamic attributes. -->
<dict:objectStructure key=".AttributeInfo" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key=".AttributeInfo" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.abstract"/>

<dict:type key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo"/>
</dict:type>
<dict:type key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.DEFAULT.abstract"/>

<!-- ********************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Program Level.state.(default).attributeInfo.type.(default).state.(default) -->
<!-- ********************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.cd.abstract"/>

<dict:type key="kuali.lu.type.CreditCourse.dynamic.eye.color" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.EyeColor.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Eye Color</dict:name>
	<dict:desc>Captures the eye color of students expected to take this course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.type.CreditCourse.dynamic.eye.color" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.EyeColor" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.EyeColor.abstract"/>

<!-- ********************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Program Level.state.(default).attributeInfo.type.Eye Color.state.(default) -->
<!-- ********************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.lu.type.CreditCourse.dynamic.left.handed" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.LeftHanded.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Left Handed</dict:name>
	<dict:desc>Captures if the students are expected to be left handed who take this course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.type.CreditCourse.dynamic.left.handed" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.LeftHanded" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.LeftHanded.abstract"/>

<!-- ************************************************************************************************************************************ -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Program Level.state.(default).attributeInfo.type.Left Handed.state.(default) -->
<!-- ************************************************************************************************************************************ -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd.abstract"/>

<!-- This sequence really belongs on both on CLU-LO and LO-LO relationships for Single Use Los - but the most recent version of the services with the relationships as not in use yet, so it has been put here as a temporary solution -->
<dict:type key="kuali.lo.type.SingleUse.dynamic.sequence" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.Sequence.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Sequence</dict:name>
	<dict:desc>Captures the sequence of an LO within a Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lo.type.SingleUse.dynamic.sequence" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.Sequence" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.Sequence.abstract"/>

<!-- ********************************************************************************************************************************* -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Program Level.state.(default).attributeInfo.type.Sequence.state.(default) -->
<!-- ********************************************************************************************************************************* -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramLevel.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.cd.abstract"/>

<!-- ****************************************************************************************************** -->
<!-- object structure for field.cluCluRelationInfo.metaInfo.type.Has Program Level.state.(default).metaInfo -->
<!-- ****************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- *************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.metaInfo.type.Has Program Level.state.(default).metaInfo.type.(default).state.(default) -->
<!-- *************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.versionInd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.versionInd.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.versionInd.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createTime" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createTime.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createTime.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createId" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createId.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createId.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateTime" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateTime.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateTime.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateId" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateId.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateId.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramLevel.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.cluCluRelationInfo.type.type.HasProgramLevel.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.type.type.HasProgramLevel.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.type.type.HasProgramLevel.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.cluCluRelationInfo.type.type.HasProgramLevel.state.DEFAULT" parent="field.cluCluRelationInfo.type.type.HasProgramLevel.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.cluCluRelationInfo.type.type.HasProgramLevel.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>LU to LU Relation Type</dict:name>
	<dict:desc>Unique identifier for the LU to LU relation type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.cluCluRelationInfo.type.type.HasProgramLevel.state.DEFAULT.fd" parent="field.cluCluRelationInfo.type.type.HasProgramLevel.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured lul-lu relation types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.type.type.HasProgramLevel.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.lu.relation.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.cluCluRelationInfo.type.type.HasProgramLevel.state.DEFAULT.cd" parent="field.cluCluRelationInfo.type.type.HasProgramLevel.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.cluCluRelationInfo.state.type.HasProgramLevel.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.state.type.HasProgramLevel.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.state.type.HasProgramLevel.state.DEFAULT.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluCluRelationInfo.state.type.HasProgramLevel.state.DEFAULT" parent="field.cluCluRelationInfo.state.type.HasProgramLevel.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluCluRelationInfo.state.type.HasProgramLevel.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>LU to LU Relation State</dict:name>
	<dict:desc>Identifier for the current status of a CLU to CLU relationship. The values for this field are constrained to those in the luLuRelationState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluCluRelationInfo.state.type.HasProgramLevel.state.DEFAULT.fd" parent="field.cluCluRelationInfo.state.type.HasProgramLevel.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.state.type.HasProgramLevel.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluCluRelationInfo.state.type.HasProgramLevel.state.DEFAULT.cd" parent="field.cluCluRelationInfo.state.type.HasProgramLevel.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.cluCluRelationInfo.id.type.HasProgramLevel.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.id.type.HasProgramLevel.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.id.type.HasProgramLevel.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.cluCluRelationInfo.id.type.HasProgramLevel.state.DEFAULT" parent="field.cluCluRelationInfo.id.type.HasProgramLevel.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluCluRelationInfo.id.type.HasProgramLevel.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>CLU to CLU Relation Identifier</dict:name>
	<dict:desc>Unique identifier for a CLU to CLU relationship. This is optional, due to the identifier being set at the time of creation. Once the relation has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluCluRelationInfo.id.type.HasProgramLevel.state.DEFAULT.fd" parent="field.cluCluRelationInfo.id.type.HasProgramLevel.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.id.type.HasProgramLevel.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluCluRelationInfo.id.type.HasProgramLevel.state.DEFAULT.cd" parent="field.cluCluRelationInfo.id.type.HasProgramLevel.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.lu.lu.relation.type.program.type" id="object.cluCluRelationInfo.type.HasProgramType.abstract" abstract="true" parent="object.cluCluRelationInfo.type.DEFAULT.abstract">
	<dict:name>Has Program Type</dict:name>
	<dict:desc>Miantains relationship between a program and program type</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.cluCluRelationInfo.type.HasProgramType.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.lu.relation.type.program.type" id="object.cluCluRelationInfo.type.HasProgramType" parent="object.cluCluRelationInfo.type.HasProgramType.abstract"/>

<!-- ************************************************************************** -->
<!-- fields for object.cluCluRelationInfo.type.Has Program Type.state.(default) -->
<!-- ************************************************************************** -->

<dict:state key="*" id="object.cluCluRelationInfo.type.HasProgramType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.cluId.type.HasProgramType.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.relatedCluId.type.HasProgramType.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramType.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.effectiveDate.type.HasProgramType.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.expirationDate.type.HasProgramType.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.type.type.HasProgramType.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.state.type.HasProgramType.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.id.type.HasProgramType.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.cluCluRelationInfo.type.HasProgramType.state.DEFAULT" parent="object.cluCluRelationInfo.type.HasProgramType.state.DEFAULT.abstract"/>


<dict:field key="cluId" id="field.cluCluRelationInfo.cluId.type.HasProgramType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.cluId.type.HasProgramType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.cluId.type.HasProgramType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="cluId" id="field.cluCluRelationInfo.cluId.type.HasProgramType.state.DEFAULT" parent="field.cluCluRelationInfo.cluId.type.HasProgramType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.HasProgramType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>CLU Identifier</dict:name>
	<dict:desc>Unique identifier for a Canonical Learning Unit (CLU). This is the &quot;From&quot; or &quot;Parent&quot; in the relation.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.HasProgramType.state.DEFAULT.fd" parent="field.cluCluRelationInfo.cluId.type.HasProgramType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing CLU -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.cluId.type.HasProgramType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.cluId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="cluId" id="field.cluCluRelationInfo.cluId.type.HasProgramType.state.DEFAULT.cd" parent="field.cluCluRelationInfo.cluId.type.HasProgramType.state.DEFAULT.cd.abstract"/>

<dict:field key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasProgramType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.relatedCluId.type.HasProgramType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.relatedCluId.type.HasProgramType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasProgramType.state.DEFAULT" parent="field.cluCluRelationInfo.relatedCluId.type.HasProgramType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasProgramType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Related CLU Identifier</dict:name>
	<dict:desc>Unique identifier for a Canonical Learning Unit (CLU). This is the &quot;To&quot; or &quot;Child&quot; of the relation.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasProgramType.state.DEFAULT.fd" parent="field.cluCluRelationInfo.relatedCluId.type.HasProgramType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing CLU -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.relatedCluId.type.HasProgramType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.cluId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="relatedCluId" id="field.cluCluRelationInfo.relatedCluId.type.HasProgramType.state.DEFAULT.cd" parent="field.cluCluRelationInfo.relatedCluId.type.HasProgramType.state.DEFAULT.cd.abstract"/>

<dict:field key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramType.state.DEFAULT" parent="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Is CLU Relation Required</dict:name>
	<dict:desc>Indicates if the relation is required upon instantiation of a LUI. Default is &quot;true&quot;.</dict:desc>
	<dict:dataType>boolean</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramType.state.DEFAULT.fd" parent="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); True or False -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.boolean"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="isCluRelationRequired" id="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramType.state.DEFAULT.cd" parent="field.cluCluRelationInfo.isCluRelationRequired.type.HasProgramType.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasProgramType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.effectiveDate.type.HasProgramType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.effectiveDate.type.HasProgramType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasProgramType.state.DEFAULT" parent="field.cluCluRelationInfo.effectiveDate.type.HasProgramType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasProgramType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this CLU to CLU relationship became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasProgramType.state.DEFAULT.fd" parent="field.cluCluRelationInfo.effectiveDate.type.HasProgramType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.effectiveDate.type.HasProgramType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluCluRelationInfo.effectiveDate.type.HasProgramType.state.DEFAULT.cd" parent="field.cluCluRelationInfo.effectiveDate.type.HasProgramType.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasProgramType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.expirationDate.type.HasProgramType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.expirationDate.type.HasProgramType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasProgramType.state.DEFAULT" parent="field.cluCluRelationInfo.expirationDate.type.HasProgramType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasProgramType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this CLU to CLU relationship expires. This is a similar concept to the expiration date on enumerated values. If specified, this should be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasProgramType.state.DEFAULT.fd" parent="field.cluCluRelationInfo.expirationDate.type.HasProgramType.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.expirationDate.type.HasProgramType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluCluRelationInfo.expirationDate.type.HasProgramType.state.DEFAULT.cd" parent="field.cluCluRelationInfo.expirationDate.type.HasProgramType.state.DEFAULT.cd.abstract"/>

<dict:field key="attributes" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="attributes" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Generic/dynamic attributes</dict:name>
	<dict:desc>List of key/value pairs, typically used for dynamic attributes.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="attributes" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.cd.abstract"/>

<!-- ************************************************************************************************************ -->
<!-- object structure for field.cluCluRelationInfo.attributes.type.Has Program Type.state.(default).attributeInfo -->
<!-- ************************************************************************************************************ -->
<!-- List of key/value pairs, typically used for dynamic attributes. -->
<dict:objectStructure key=".AttributeInfo" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key=".AttributeInfo" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.abstract"/>

<dict:type key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo"/>
</dict:type>
<dict:type key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.DEFAULT.abstract"/>

<!-- ********************************************************************************************************************************* -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Program Type.state.(default).attributeInfo.type.(default).state.(default) -->
<!-- ********************************************************************************************************************************* -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.cd.abstract"/>

<dict:type key="kuali.lu.type.CreditCourse.dynamic.eye.color" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.EyeColor.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Eye Color</dict:name>
	<dict:desc>Captures the eye color of students expected to take this course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.type.CreditCourse.dynamic.eye.color" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.EyeColor" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.EyeColor.abstract"/>

<!-- ********************************************************************************************************************************* -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Program Type.state.(default).attributeInfo.type.Eye Color.state.(default) -->
<!-- ********************************************************************************************************************************* -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.EyeColor.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.EyeColor.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.EyeColor.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.lu.type.CreditCourse.dynamic.left.handed" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.LeftHanded.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Left Handed</dict:name>
	<dict:desc>Captures if the students are expected to be left handed who take this course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lu.type.CreditCourse.dynamic.left.handed" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.LeftHanded" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.LeftHanded.abstract"/>

<!-- *********************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Program Type.state.(default).attributeInfo.type.Left Handed.state.(default) -->
<!-- *********************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.LeftHanded.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.LeftHanded.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.LeftHanded.state.DEFAULT.cd.abstract"/>

<!-- This sequence really belongs on both on CLU-LO and LO-LO relationships for Single Use Los - but the most recent version of the services with the relationships as not in use yet, so it has been put here as a temporary solution -->
<dict:type key="kuali.lo.type.SingleUse.dynamic.sequence" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.Sequence.abstract" abstract="true" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.DEFAULT.abstract">
	<dict:name>Sequence</dict:name>
	<dict:desc>Captures the sequence of an LO within a Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.lo.type.SingleUse.dynamic.sequence" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.Sequence" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.Sequence.abstract"/>

<!-- ******************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.attributes.type.Has Program Type.state.(default).attributeInfo.type.Sequence.state.(default) -->
<!-- ******************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.type.Sequence.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Value</dict:name>
	<dict:desc>The value for this dynamic attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.attributeInfo.value">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.value.type.Sequence.state.DEFAULT.cd.abstract"/>

<!-- Shouldn't this be a "type" not a "key"?  I type describes the value, a key is just a pointer. -->
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd"/>
<dict:dynamic>true</dict:dynamic>
</dict:field>
<dict:field key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Attribute Type Identifier</dict:name>
	<dict:desc>The identifier for this attribute.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured dynamic field types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.dynamic.field.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd" parent="field.cluCluRelationInfo.attributes.type.HasProgramType.state.DEFAULT.attributeInfo.key.type.Sequence.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.cd.abstract"/>

<!-- ***************************************************************************************************** -->
<!-- object structure for field.cluCluRelationInfo.metaInfo.type.Has Program Type.state.(default).metaInfo -->
<!-- ***************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************** -->
<!-- fields for field.cluCluRelationInfo.metaInfo.type.Has Program Type.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************** -->

<dict:state key="*" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.versionInd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.versionInd.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.versionInd.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createTime" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createTime.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createTime.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createId" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createId.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createId.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateTime" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateTime.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateTime.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateId" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateId.fd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateId.cd" parent="field.cluCluRelationInfo.metaInfo.type.HasProgramType.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.cluCluRelationInfo.type.type.HasProgramType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.type.type.HasProgramType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.type.type.HasProgramType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.cluCluRelationInfo.type.type.HasProgramType.state.DEFAULT" parent="field.cluCluRelationInfo.type.type.HasProgramType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.cluCluRelationInfo.type.type.HasProgramType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>LU to LU Relation Type</dict:name>
	<dict:desc>Unique identifier for the LU to LU relation type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.cluCluRelationInfo.type.type.HasProgramType.state.DEFAULT.fd" parent="field.cluCluRelationInfo.type.type.HasProgramType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured lul-lu relation types -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.type.type.HasProgramType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.lu.relation.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.cluCluRelationInfo.type.type.HasProgramType.state.DEFAULT.cd" parent="field.cluCluRelationInfo.type.type.HasProgramType.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.cluCluRelationInfo.state.type.HasProgramType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.state.type.HasProgramType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.state.type.HasProgramType.state.DEFAULT.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluCluRelationInfo.state.type.HasProgramType.state.DEFAULT" parent="field.cluCluRelationInfo.state.type.HasProgramType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluCluRelationInfo.state.type.HasProgramType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>LU to LU Relation State</dict:name>
	<dict:desc>Identifier for the current status of a CLU to CLU relationship. The values for this field are constrained to those in the luLuRelationState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluCluRelationInfo.state.type.HasProgramType.state.DEFAULT.fd" parent="field.cluCluRelationInfo.state.type.HasProgramType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.state.type.HasProgramType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluCluRelationInfo.state.type.HasProgramType.state.DEFAULT.cd" parent="field.cluCluRelationInfo.state.type.HasProgramType.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.cluCluRelationInfo.id.type.HasProgramType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluCluRelationInfo.id.type.HasProgramType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluCluRelationInfo.id.type.HasProgramType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.cluCluRelationInfo.id.type.HasProgramType.state.DEFAULT" parent="field.cluCluRelationInfo.id.type.HasProgramType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluCluRelationInfo.id.type.HasProgramType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>CLU to CLU Relation Identifier</dict:name>
	<dict:desc>Unique identifier for a CLU to CLU relationship. This is optional, due to the identifier being set at the time of creation. Once the relation has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluCluRelationInfo.id.type.HasProgramType.state.DEFAULT.fd" parent="field.cluCluRelationInfo.id.type.HasProgramType.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluCluRelationInfo.id.type.HasProgramType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluCluRelationInfo.id.type.HasProgramType.state.DEFAULT.cd" parent="field.cluCluRelationInfo.id.type.HasProgramType.state.DEFAULT.cd.abstract"/>
</beans>
