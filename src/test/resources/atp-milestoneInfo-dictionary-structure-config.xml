<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/dictionary-extension http://student.kuali.org/xsd/dictionary-extension/dictionary-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
">
<!-- *** Automatically Generated ***
by: org.kuali.student.dictionary.writer.dict.DictionaryModelWriter
Using:Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls   and: Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls
 -->

<!-- ***************************************** -->
<!-- object structure for object.milestoneInfo -->
<!-- ***************************************** -->
<!-- Information about a milestone. -->
<dict:objectStructure key="org.kuali.student.core.atp.dto.MilestoneInfo" id="object.milestoneInfo.abstract" abstract="true">
	<dict:typeRef bean="type.milestoneInfo"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.atp.dto.MilestoneInfo" id="object.milestoneInfo" parent="object.milestoneInfo.abstract"/>

<dict:type key="*" id="type.milestoneInfo.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.milestoneInfo"/>
</dict:type>
<dict:type key="*" id="type.milestoneInfo" parent="type.milestoneInfo.abstract"/>

<!-- ************************************************* -->
<!-- State for state.milestoneInfo.(default).(default) -->
<!-- ************************************************* -->

<dict:state key="*" id="state.milestoneInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.milestoneInfo.name"/>
	<dict:fieldRef bean="field.milestoneInfo.desc"/>
	<dict:fieldRef bean="field.milestoneInfo.atpKey"/>
	<dict:fieldRef bean="field.milestoneInfo.milestoneDate"/>
	<dict:fieldRef bean="field.milestoneInfo.metaInfo"/>
	<dict:fieldRef bean="field.milestoneInfo.type"/>
	<dict:fieldRef bean="field.milestoneInfo.state"/>
	<dict:fieldRef bean="field.milestoneInfo.key"/>
</dict:state>
<dict:state key="*" id="state.milestoneInfo" parent="state.milestoneInfo.abstract"/>


<dict:field key="name" id="field.milestoneInfo.name.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.name.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.name.cd"/>
</dict:field>
<dict:field key="name" id="field.milestoneInfo.name" parent="field.milestoneInfo.name.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.name.fd.abstract" abstract="true">
	<dict:name>Milestone Name</dict:name>
	<dict:desc>Name of the milestone.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.name.fd" parent="field.milestoneInfo.name.fd.abstract"/>
<!-- Required; Single valued (non-repeating); A basic single line of text, no embedded carraige returns or tabs limited to 255 -->
<dict:constraintDescriptor id="field.milestoneInfo.name.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.single.line.text"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="name" id="field.milestoneInfo.name.cd" parent="field.milestoneInfo.name.cd.abstract"/>

<dict:field key="desc" id="field.milestoneInfo.desc.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.desc.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.desc.cd"/>
</dict:field>
<dict:field key="desc" id="field.milestoneInfo.desc" parent="field.milestoneInfo.desc.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.desc.fd.abstract" abstract="true">
	<dict:name>Milestone Description</dict:name>
	<dict:desc>Description of the milestone.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.milestoneInfo.desc"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.desc.fd" parent="field.milestoneInfo.desc.fd.abstract"/>
<!-- Optional; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.milestoneInfo.desc.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.milestoneInfo.desc.cd" parent="field.milestoneInfo.desc.cd.abstract"/>

<!-- ************************************************************************ -->
<!-- object structure for object.field.milestoneInfo.desc.(default).(default) -->
<!-- ************************************************************************ -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="object.field.milestoneInfo.desc.abstract" abstract="true">
	<dict:typeRef bean="type.field.milestoneInfo.desc"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="object.field.milestoneInfo.desc" parent="object.field.milestoneInfo.desc.abstract"/>

<dict:type key="*" id="type.field.milestoneInfo.desc.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.milestoneInfo.desc"/>
</dict:type>
<dict:type key="*" id="type.field.milestoneInfo.desc" parent="type.field.milestoneInfo.desc.abstract"/>

<!-- ******************************************************************************** -->
<!-- State for state.field.milestoneInfo.desc.(default).(default).(default).(default) -->
<!-- ******************************************************************************** -->

<dict:state key="*" id="state.field.milestoneInfo.desc.abstract" abstract="true">
	<dict:fieldRef bean="field.milestoneInfo.desc.plain"/>
	<dict:fieldRef bean="field.milestoneInfo.desc.formatted"/>
</dict:state>
<dict:state key="*" id="state.field.milestoneInfo.desc" parent="state.field.milestoneInfo.desc.abstract"/>


<dict:field key="plain" id="field.milestoneInfo.desc.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.desc.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.desc.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.milestoneInfo.desc.plain" parent="field.milestoneInfo.desc.plain.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.desc.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.desc.plain.fd" parent="field.milestoneInfo.desc.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.milestoneInfo.desc.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.milestoneInfo.desc.plain.cd" parent="field.milestoneInfo.desc.plain.cd.abstract"/>

<dict:field key="formatted" id="field.milestoneInfo.desc.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.desc.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.desc.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.milestoneInfo.desc.formatted" parent="field.milestoneInfo.desc.formatted.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.desc.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.desc.formatted.fd" parent="field.milestoneInfo.desc.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.milestoneInfo.desc.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.milestoneInfo.desc.formatted.cd" parent="field.milestoneInfo.desc.formatted.cd.abstract"/>

<dict:field key="atpKey" id="field.milestoneInfo.atpKey.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.atpKey.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.atpKey.cd"/>
</dict:field>
<dict:field key="atpKey" id="field.milestoneInfo.atpKey" parent="field.milestoneInfo.atpKey.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.atpKey.fd.abstract" abstract="true">
	<dict:name>Academic Time Period Identifier</dict:name>
	<dict:desc>Unique identifier for an Academic Time Period (ATP).</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.atpKey.fd" parent="field.milestoneInfo.atpKey.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali KEY; structured like a type but unique like and ID, used to identify configured objects. -->
<dict:constraintDescriptor id="field.milestoneInfo.atpKey.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.key"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="atpKey" id="field.milestoneInfo.atpKey.cd" parent="field.milestoneInfo.atpKey.cd.abstract"/>

<dict:field key="milestoneDate" id="field.milestoneInfo.milestoneDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.milestoneDate.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.milestoneDate.cd"/>
</dict:field>
<dict:field key="milestoneDate" id="field.milestoneInfo.milestoneDate" parent="field.milestoneInfo.milestoneDate.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.milestoneDate.fd.abstract" abstract="true">
	<dict:name>Milestone Date</dict:name>
	<dict:desc>Date and time of the milestone.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.milestoneDate.fd" parent="field.milestoneInfo.milestoneDate.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.milestoneInfo.milestoneDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="milestoneDate" id="field.milestoneInfo.milestoneDate.cd" parent="field.milestoneInfo.milestoneDate.cd.abstract"/>

<dict:field key="metaInfo" id="field.milestoneInfo.metaInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.metaInfo.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.metaInfo.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.milestoneInfo.metaInfo" parent="field.milestoneInfo.metaInfo.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.metaInfo.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.milestoneInfo.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.metaInfo.fd" parent="field.milestoneInfo.metaInfo.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali Meta Data: calculated by service, read-only; Read Only -->
<dict:constraintDescriptor id="field.milestoneInfo.metaInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.milestoneInfo.metaInfo.cd" parent="field.milestoneInfo.metaInfo.cd.abstract"/>

<!-- **************************************************************************** -->
<!-- object structure for object.field.milestoneInfo.metaInfo.(default).(default) -->
<!-- **************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="object.field.milestoneInfo.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="type.field.milestoneInfo.metaInfo"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="object.field.milestoneInfo.metaInfo" parent="object.field.milestoneInfo.metaInfo.abstract"/>

<dict:type key="*" id="type.field.milestoneInfo.metaInfo.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.milestoneInfo.metaInfo"/>
</dict:type>
<dict:type key="*" id="type.field.milestoneInfo.metaInfo" parent="type.field.milestoneInfo.metaInfo.abstract"/>

<!-- ************************************************************************************ -->
<!-- State for state.field.milestoneInfo.metaInfo.(default).(default).(default).(default) -->
<!-- ************************************************************************************ -->

<dict:state key="*" id="state.field.milestoneInfo.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.milestoneInfo.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.milestoneInfo.metaInfo.createTime"/>
	<dict:fieldRef bean="field.milestoneInfo.metaInfo.createId"/>
	<dict:fieldRef bean="field.milestoneInfo.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.milestoneInfo.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="state.field.milestoneInfo.metaInfo" parent="state.field.milestoneInfo.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.milestoneInfo.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.milestoneInfo.metaInfo.versionInd" parent="field.milestoneInfo.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.metaInfo.versionInd.fd" parent="field.milestoneInfo.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.milestoneInfo.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.milestoneInfo.metaInfo.versionInd.cd" parent="field.milestoneInfo.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.milestoneInfo.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.milestoneInfo.metaInfo.createTime" parent="field.milestoneInfo.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.metaInfo.createTime.fd" parent="field.milestoneInfo.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.milestoneInfo.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.milestoneInfo.metaInfo.createTime.cd" parent="field.milestoneInfo.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.milestoneInfo.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.milestoneInfo.metaInfo.createId" parent="field.milestoneInfo.metaInfo.createId.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.metaInfo.createId.fd" parent="field.milestoneInfo.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.milestoneInfo.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.milestoneInfo.metaInfo.createId.cd" parent="field.milestoneInfo.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.milestoneInfo.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.milestoneInfo.metaInfo.updateTime" parent="field.milestoneInfo.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.metaInfo.updateTime.fd" parent="field.milestoneInfo.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.milestoneInfo.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.milestoneInfo.metaInfo.updateTime.cd" parent="field.milestoneInfo.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.milestoneInfo.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.milestoneInfo.metaInfo.updateId" parent="field.milestoneInfo.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.metaInfo.updateId.fd" parent="field.milestoneInfo.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.milestoneInfo.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.milestoneInfo.metaInfo.updateId.cd" parent="field.milestoneInfo.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.milestoneInfo.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.type.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.type.cd"/>
</dict:field>
<dict:field key="type" id="field.milestoneInfo.type" parent="field.milestoneInfo.type.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.type.fd.abstract" abstract="true">
	<dict:name>Milestone Type</dict:name>
	<dict:desc>Unique identifier for a milestone type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.type.fd" parent="field.milestoneInfo.type.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured  time period milestone types -->
<dict:constraintDescriptor id="field.milestoneInfo.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.milestone.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.milestoneInfo.type.cd" parent="field.milestoneInfo.type.cd.abstract"/>

<dict:field key="state" id="field.milestoneInfo.state.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.state.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.state.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.milestoneInfo.state" parent="field.milestoneInfo.state.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.state.fd.abstract" abstract="true">
	<dict:name>Milestone State</dict:name>
	<dict:desc>The current status of the milestone. The values for this field are constrained to those in the milestoneState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.state.fd" parent="field.milestoneInfo.state.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.milestoneInfo.state.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.milestoneInfo.state.cd" parent="field.milestoneInfo.state.cd.abstract"/>

<dict:field key="key" id="field.milestoneInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.milestoneInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.milestoneInfo.key.cd"/>
</dict:field>
<dict:field key="key" id="field.milestoneInfo.key" parent="field.milestoneInfo.key.abstract"/>
<dict:fieldDescriptor id="field.milestoneInfo.key.fd.abstract" abstract="true">
	<dict:name>Milestone Key</dict:name>
	<dict:desc>Unique identifier for a milestone.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor id="field.milestoneInfo.key.fd" parent="field.milestoneInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali KEY; structured like a type but unique like and ID, used to identify configured objects. -->
<dict:constraintDescriptor id="field.milestoneInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.key"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.milestoneInfo.key.cd" parent="field.milestoneInfo.key.cd.abstract"/>
</beans>
