<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/dictionary-extension dictionary-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
">
<!-- *** Automatically Generated ***
on: Tue Feb 09 17:01:42 EST 2010
by: org.kuali.student.dictionary.writer.DictionaryModelWriter
Using:Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls   and: Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls
 -->
<import resource="constraints-dictionary-config.xml"/>

<!-- ***************************************** -->
<!-- object structure for object.cluResultInfo -->
<!-- ***************************************** -->
<!-- information about a CLU result. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluResultInfo" id="object.cluResultInfo.abstract" abstract="true">
	<dict:typeRef bean="object.cluResultInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluResultInfo" id="object.cluResultInfo" parent="object.cluResultInfo.abstract"/>

<dict:type key="*" id="object.cluResultInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.cluResultInfo.type.DEFAULT.state.DEFAULT"/>
</dict:type>
<dict:type key="*" id="object.cluResultInfo.type.DEFAULT" parent="object.cluResultInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************** -->
<!-- fields for object.cluResultInfo.type.(default).state.(default) -->
<!-- ************************************************************** -->

<dict:state key="*" id="object.cluResultInfo.type.DEFAULT.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.desc"/>
	<dict:fieldRef bean="field.cluResultInfo.cluId"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions"/>
	<dict:fieldRef bean="field.cluResultInfo.effectiveDate"/>
	<dict:fieldRef bean="field.cluResultInfo.expirationDate"/>
	<dict:fieldRef bean="field.cluResultInfo.metaInfo"/>
	<dict:fieldRef bean="field.cluResultInfo.type"/>
	<dict:fieldRef bean="field.cluResultInfo.state"/>
	<dict:fieldRef bean="field.cluResultInfo.id"/>
</dict:state>
<dict:state key="*" id="object.cluResultInfo.type.DEFAULT.state.DEFAULT" parent="object.cluResultInfo.type.DEFAULT.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.cluResultInfo.desc.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.desc.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.desc.cd"/>
</dict:field>
<dict:field key="desc" id="field.cluResultInfo.desc" parent="field.cluResultInfo.desc.abstract"/>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.desc.fd.abstract" abstract="true">
	<dict:name>CLU Result Description</dict:name>
	<dict:desc>Narrative description of the CLU result.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.desc.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.desc.fd" parent="field.cluResultInfo.desc.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluResultInfo.desc.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.cluResultInfo.desc.cd" parent="field.cluResultInfo.desc.cd.abstract"/>

<!-- ***************************************************************************************** -->
<!-- object structure for field.cluResultInfo.desc.type.(default).state.(default).richTextInfo -->
<!-- ***************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.desc.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.desc.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.desc.richTextInfo" parent="field.cluResultInfo.desc.richTextInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.desc.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.desc.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.desc.richTextInfo.type.DEFAULT" parent="field.cluResultInfo.desc.richTextInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.desc.type.(default).state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.desc.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.desc.richTextInfo.plain"/>
	<dict:fieldRef bean="field.cluResultInfo.desc.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.desc.richTextInfo" parent="field.cluResultInfo.desc.richTextInfo.abstract"/>


<dict:field key="plain" id="field.cluResultInfo.desc.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.desc.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.desc.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.cluResultInfo.desc.richTextInfo.plain" parent="field.cluResultInfo.desc.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.desc.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.desc.richTextInfo.plain.fd" parent="field.cluResultInfo.desc.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.cluResultInfo.desc.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.cluResultInfo.desc.richTextInfo.plain.cd" parent="field.cluResultInfo.desc.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.cluResultInfo.desc.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.desc.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.desc.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.cluResultInfo.desc.richTextInfo.formatted" parent="field.cluResultInfo.desc.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.desc.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.desc.richTextInfo.formatted.fd" parent="field.cluResultInfo.desc.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.cluResultInfo.desc.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.cluResultInfo.desc.richTextInfo.formatted.cd" parent="field.cluResultInfo.desc.richTextInfo.formatted.cd.abstract"/>

<dict:field key="cluId" id="field.cluResultInfo.cluId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.cluId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.cluId.cd"/>
</dict:field>
<dict:field key="cluId" id="field.cluResultInfo.cluId" parent="field.cluResultInfo.cluId.abstract"/>
<dict:fieldDescriptor key="cluId" id="field.cluResultInfo.cluId.fd.abstract" abstract="true">
	<dict:name>CLU Identifier</dict:name>
	<dict:desc>The cluId to which the CLU Result is linked.Unique identifier for a Canonical Learning Unit (CLU).</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="cluId" id="field.cluResultInfo.cluId.fd" parent="field.cluResultInfo.cluId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing CLU -->
<dict:constraintDescriptor id="field.cluResultInfo.cluId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.cluId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="cluId" id="field.cluResultInfo.cluId.cd" parent="field.cluResultInfo.cluId.cd.abstract"/>

<dict:field key="resultOptions" id="field.cluResultInfo.resultOptions.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.cd"/>
</dict:field>
<dict:field key="resultOptions" id="field.cluResultInfo.resultOptions" parent="field.cluResultInfo.resultOptions.abstract"/>
<dict:fieldDescriptor key="resultOptions" id="field.cluResultInfo.resultOptions.fd.abstract" abstract="true">
	<dict:name>Result Options</dict:name>
	<dict:desc>List of learning result option information.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.resultOptionInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultOptions" id="field.cluResultInfo.resultOptions.fd" parent="field.cluResultInfo.resultOptions.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultOptions" id="field.cluResultInfo.resultOptions.cd" parent="field.cluResultInfo.resultOptions.cd.abstract"/>

<!-- ****************************************************************************************************** -->
<!-- object structure for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo -->
<!-- ****************************************************************************************************** -->
<!-- information about a result option. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ResultOptionInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ResultOptionInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.resultOptionInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.type.DEFAULT.abstract"/>

<!-- *************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.type.(default).state.(default) -->
<!-- *************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.state"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.id"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.abstract"/>


<dict:field key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.cd"/>
</dict:field>
<dict:field key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.abstract"/>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.fd.abstract" abstract="true">
	<dict:name>Result Option Description</dict:name>
	<dict:desc>Narrative description of the result option.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.cd.abstract"/>

<!-- ******************************************************************************************************************************************************* -->
<!-- object structure for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.desc.type.(default).state.(default).richTextInfo -->
<!-- ******************************************************************************************************************************************************* -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.type.DEFAULT.abstract"/>

<!-- **************************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.desc.type.(default).state.(default).richTextInfo.type.(default).state.(default) -->
<!-- **************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.plain"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.abstract"/>


<dict:field key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.plain" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.plain.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.plain.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.formatted" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.formatted.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.formatted.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.richTextInfo.formatted.cd.abstract"/>

<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.cd"/>
</dict:field>
<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.abstract"/>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.fd.abstract" abstract="true">
	<dict:name>Result Usage Type</dict:name>
	<dict:desc>Unique identifier for a result usage type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.fd.abstract"/>
<!-- Required; Single valued (non-repeating); In list of confured resultUsage types -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.resultUsage.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.cd.abstract"/>

<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.cd"/>
</dict:field>
<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.abstract"/>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.fd.abstract" abstract="true">
	<dict:name>Result Component Id</dict:name>
	<dict:desc>Unique identifier for a result component.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an exisitn resultComponent -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.resultComponentId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate" parent="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this result option became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate" parent="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this result option expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali Meta Data: calculated by service, read-only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.cd.abstract"/>

<!-- ******************************************************************************************************************************************************* -->
<!-- object structure for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.metaInfo.type.(default).state.(default).metaInfo -->
<!-- ******************************************************************************************************************************************************* -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.type.DEFAULT.abstract"/>

<!-- **************************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.metaInfo.type.(default).state.(default).metaInfo.type.(default).state.(default) -->
<!-- **************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.versionInd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.versionInd.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.versionInd.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createTime" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createTime.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createTime.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createId" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createId.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createId.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateTime" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateTime.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateTime.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateId" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateId.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateId.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.metaInfo.updateId.cd.abstract"/>

<dict:field key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.state.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.state.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state" parent="field.cluResultInfo.resultOptions.resultOptionInfo.state.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.fd.abstract" abstract="true">
	<dict:name>Result Option State</dict:name>
	<dict:desc>The current status of the result option. The values for this field are constrained to those in the resultOptionState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.state.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.state.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.state.cd.abstract"/>

<dict:field key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.id.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.id.cd"/>
</dict:field>
<dict:field key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id" parent="field.cluResultInfo.resultOptions.resultOptionInfo.id.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.fd.abstract" abstract="true">
	<dict:name>Result Option Identifier</dict:name>
	<dict:desc>Unique identifier for a result option. This is optional, due to the identifier being set at the time of creation. Once the result option has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.id.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.id.cd.abstract"/>

<dict:type key="Kuali.resultUsageType.CreditAwarded" id="field.cluResultInfo.resultOptions.resultOptionInfo.type.Credittobeawarded.abstract" abstract="true" parent="field.cluResultInfo.resultOptions.resultOptionInfo.type.DEFAULT.abstract">
	<dict:name>Credit to be awarded</dict:name>
	<dict:desc>The amount of credit to be awarded if student passes the course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.type.Credittobeawarded.state.DEFAULT"/>
</dict:type>
<dict:type key="Kuali.resultUsageType.CreditAwarded" id="field.cluResultInfo.resultOptions.resultOptionInfo.type.Credittobeawarded" parent="field.cluResultInfo.resultOptions.resultOptionInfo.type.Credittobeawarded.abstract"/>

<!-- ************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.type.Credit to be awarded.state.(default) -->
<!-- ************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.type.Credittobeawarded.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option Description</dict:name>
	<dict:desc>Narrative description of the result option.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<!-- ****************************************************************************************************************************************************************** -->
<!-- object structure for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.desc.type.Credit to be awarded.state.(default).richTextInfo -->
<!-- ****************************************************************************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- *************************************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.desc.type.Credit to be awarded.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- *************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Usage Type</dict:name>
	<dict:desc>Unique identifier for a result usage type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); In list of confured resultUsage types -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.resultUsage.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Component Id</dict:name>
	<dict:desc>Unique identifier for a result component.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an exisitn resultComponent -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.resultComponentId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this result option became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this result option expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali Meta Data: calculated by service, read-only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<!-- ****************************************************************************************************************************************************************** -->
<!-- object structure for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.metaInfo.type.Credit to be awarded.state.(default).metaInfo -->
<!-- ****************************************************************************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- *************************************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.metaInfo.type.Credit to be awarded.state.(default).metaInfo.type.(default).state.(default) -->
<!-- *************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option State</dict:name>
	<dict:desc>The current status of the result option. The values for this field are constrained to those in the resultOptionState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option Identifier</dict:name>
	<dict:desc>Unique identifier for a result option. This is optional, due to the identifier being set at the time of creation. Once the result option has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<!-- TO DO: add to Simples -->
<dict:type key="kuali.resultUsageType.FinalGradeAwarded" id="field.cluResultInfo.resultOptions.resultOptionInfo.type.FinalGradetobeAwarded.abstract" abstract="true" parent="field.cluResultInfo.resultOptions.resultOptionInfo.type.DEFAULT.abstract">
	<dict:name>Final Grade to be Awarded</dict:name>
	<dict:desc>The final grade to be awarded to a student</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.type.FinalGradetobeAwarded.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.resultUsageType.FinalGradeAwarded" id="field.cluResultInfo.resultOptions.resultOptionInfo.type.FinalGradetobeAwarded" parent="field.cluResultInfo.resultOptions.resultOptionInfo.type.FinalGradetobeAwarded.abstract"/>

<!-- ******************************************************************************************************************************************* -->
<!-- fields for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.type.Final Grade to be Awarded.state.(default) -->
<!-- ******************************************************************************************************************************************* -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option Description</dict:name>
	<dict:desc>Narrative description of the result option.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<!-- *********************************************************************************************************************************************************************** -->
<!-- object structure for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.desc.type.Final Grade to be Awarded.state.(default).richTextInfo -->
<!-- *********************************************************************************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- ******************************************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.desc.type.Final Grade to be Awarded.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ******************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Usage Type</dict:name>
	<dict:desc>Unique identifier for a result usage type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); In list of confured resultUsage types -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.resultUsage.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Component Id</dict:name>
	<dict:desc>Unique identifier for a result component.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an exisitn resultComponent -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.resultComponentId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this result option became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this result option expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali Meta Data: calculated by service, read-only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<!-- *********************************************************************************************************************************************************************** -->
<!-- object structure for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.metaInfo.type.Final Grade to be Awarded.state.(default).metaInfo -->
<!-- *********************************************************************************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ******************************************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.metaInfo.type.Final Grade to be Awarded.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ******************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option State</dict:name>
	<dict:desc>The current status of the result option. The values for this field are constrained to those in the resultOptionState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option Identifier</dict:name>
	<dict:desc>Unique identifier for a result option. This is optional, due to the identifier being set at the time of creation. Once the result option has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<!-- TO DO: add to Simples -->
<dict:type key="kuali.resultUsageType.QualitativeAssess" id="field.cluResultInfo.resultOptions.resultOptionInfo.type.FinalQualitativeAssessment.abstract" abstract="true" parent="field.cluResultInfo.resultOptions.resultOptionInfo.type.DEFAULT.abstract">
	<dict:name>Final Qualitative Assessment</dict:name>
	<dict:desc>The final qualitative assessment to be given to a student</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.type.FinalQualitativeAssessment.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.resultUsageType.QualitativeAssess" id="field.cluResultInfo.resultOptions.resultOptionInfo.type.FinalQualitativeAssessment" parent="field.cluResultInfo.resultOptions.resultOptionInfo.type.FinalQualitativeAssessment.abstract"/>

<!-- ********************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.type.Final Qualitative Assessment.state.(default) -->
<!-- ********************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option Description</dict:name>
	<dict:desc>Narrative description of the result option.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<!-- ************************************************************************************************************************************************************************** -->
<!-- object structure for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.desc.type.Final Qualitative Assessment.state.(default).richTextInfo -->
<!-- ************************************************************************************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- *********************************************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.desc.type.Final Qualitative Assessment.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- *********************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Usage Type</dict:name>
	<dict:desc>Unique identifier for a result usage type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); In list of confured resultUsage types -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.resultUsage.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Component Id</dict:name>
	<dict:desc>Unique identifier for a result component.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an exisitn resultComponent -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.resultComponentId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this result option became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this result option expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali Meta Data: calculated by service, read-only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<!-- ************************************************************************************************************************************************************************** -->
<!-- object structure for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.metaInfo.type.Final Qualitative Assessment.state.(default).metaInfo -->
<!-- ************************************************************************************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- *********************************************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.(default).state.(default).resultOptionInfo.metaInfo.type.Final Qualitative Assessment.state.(default).metaInfo.type.(default).state.(default) -->
<!-- *********************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option State</dict:name>
	<dict:desc>The current status of the result option. The values for this field are constrained to those in the resultOptionState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option Identifier</dict:name>
	<dict:desc>Unique identifier for a result option. This is optional, due to the identifier being set at the time of creation. Once the result option has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluResultInfo.effectiveDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.effectiveDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.effectiveDate.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluResultInfo.effectiveDate" parent="field.cluResultInfo.effectiveDate.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.effectiveDate.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this CLU result became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.effectiveDate.fd" parent="field.cluResultInfo.effectiveDate.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.effectiveDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluResultInfo.effectiveDate.cd" parent="field.cluResultInfo.effectiveDate.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluResultInfo.expirationDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.expirationDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.expirationDate.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluResultInfo.expirationDate" parent="field.cluResultInfo.expirationDate.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.expirationDate.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this CLU result expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.expirationDate.fd" parent="field.cluResultInfo.expirationDate.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.expirationDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluResultInfo.expirationDate.cd" parent="field.cluResultInfo.expirationDate.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluResultInfo.metaInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.metaInfo.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.metaInfo.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluResultInfo.metaInfo" parent="field.cluResultInfo.metaInfo.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.metaInfo.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.metaInfo.metaInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.metaInfo.fd" parent="field.cluResultInfo.metaInfo.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali Meta Data: calculated by service, read-only -->
<dict:constraintDescriptor id="field.cluResultInfo.metaInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluResultInfo.metaInfo.cd" parent="field.cluResultInfo.metaInfo.cd.abstract"/>

<!-- ***************************************************************************************** -->
<!-- object structure for field.cluResultInfo.metaInfo.type.(default).state.(default).metaInfo -->
<!-- ***************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.metaInfo.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.metaInfo.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.metaInfo.metaInfo" parent="field.cluResultInfo.metaInfo.metaInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.metaInfo.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.metaInfo.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.metaInfo.metaInfo.type.DEFAULT" parent="field.cluResultInfo.metaInfo.metaInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.metaInfo.type.(default).state.(default).metaInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.metaInfo.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.metaInfo.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluResultInfo.metaInfo.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluResultInfo.metaInfo.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluResultInfo.metaInfo.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluResultInfo.metaInfo.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.metaInfo.metaInfo" parent="field.cluResultInfo.metaInfo.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluResultInfo.metaInfo.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.metaInfo.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.metaInfo.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluResultInfo.metaInfo.metaInfo.versionInd" parent="field.cluResultInfo.metaInfo.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.metaInfo.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.metaInfo.metaInfo.versionInd.fd" parent="field.cluResultInfo.metaInfo.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluResultInfo.metaInfo.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluResultInfo.metaInfo.metaInfo.versionInd.cd" parent="field.cluResultInfo.metaInfo.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluResultInfo.metaInfo.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.metaInfo.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.metaInfo.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluResultInfo.metaInfo.metaInfo.createTime" parent="field.cluResultInfo.metaInfo.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.metaInfo.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.metaInfo.metaInfo.createTime.fd" parent="field.cluResultInfo.metaInfo.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluResultInfo.metaInfo.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluResultInfo.metaInfo.metaInfo.createTime.cd" parent="field.cluResultInfo.metaInfo.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluResultInfo.metaInfo.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.metaInfo.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.metaInfo.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluResultInfo.metaInfo.metaInfo.createId" parent="field.cluResultInfo.metaInfo.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.metaInfo.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.metaInfo.metaInfo.createId.fd" parent="field.cluResultInfo.metaInfo.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.metaInfo.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluResultInfo.metaInfo.metaInfo.createId.cd" parent="field.cluResultInfo.metaInfo.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluResultInfo.metaInfo.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.metaInfo.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.metaInfo.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluResultInfo.metaInfo.metaInfo.updateTime" parent="field.cluResultInfo.metaInfo.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.metaInfo.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.metaInfo.metaInfo.updateTime.fd" parent="field.cluResultInfo.metaInfo.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluResultInfo.metaInfo.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluResultInfo.metaInfo.metaInfo.updateTime.cd" parent="field.cluResultInfo.metaInfo.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluResultInfo.metaInfo.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.metaInfo.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.metaInfo.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluResultInfo.metaInfo.metaInfo.updateId" parent="field.cluResultInfo.metaInfo.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.metaInfo.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.metaInfo.metaInfo.updateId.fd" parent="field.cluResultInfo.metaInfo.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.metaInfo.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluResultInfo.metaInfo.metaInfo.updateId.cd" parent="field.cluResultInfo.metaInfo.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.cluResultInfo.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.type.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.type.cd"/>
</dict:field>
<dict:field key="type" id="field.cluResultInfo.type" parent="field.cluResultInfo.type.abstract"/>
<dict:fieldDescriptor key="type" id="field.cluResultInfo.type.fd.abstract" abstract="true">
	<dict:name>Clu Result Type</dict:name>
	<dict:desc>Unique identifier for a clu learning result object type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.cluResultInfo.type.fd" parent="field.cluResultInfo.type.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); In list of configured cluResultTypes -->
<dict:constraintDescriptor id="field.cluResultInfo.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.cluResult.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.cluResultInfo.type.cd" parent="field.cluResultInfo.type.cd.abstract"/>

<dict:field key="state" id="field.cluResultInfo.state.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.state.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.state.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluResultInfo.state" parent="field.cluResultInfo.state.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.state.fd.abstract" abstract="true">
	<dict:name>CLU Result State</dict:name>
	<dict:desc>The current status of the CLU Result. The values for this field are constrained to those in the cluResultState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.state.fd" parent="field.cluResultInfo.state.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluResultInfo.state.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluResultInfo.state.cd" parent="field.cluResultInfo.state.cd.abstract"/>

<dict:field key="id" id="field.cluResultInfo.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.id.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.id.cd"/>
</dict:field>
<dict:field key="id" id="field.cluResultInfo.id" parent="field.cluResultInfo.id.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.id.fd.abstract" abstract="true">
	<dict:name>CLU Result Identifier</dict:name>
	<dict:desc>Unique identifier for a CLU result. This is optional, due to the identifier being set at the time of creation. Once the result set has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.id.fd" parent="field.cluResultInfo.id.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluResultInfo.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluResultInfo.id.cd" parent="field.cluResultInfo.id.cd.abstract"/>

<dict:type key="kuali.resultType.creditCourseResult" id="object.cluResultInfo.type.CreditCourseFinalResults.abstract" abstract="true" parent="object.cluResultInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Final Results</dict:name>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.cluResultInfo.type.CreditCourseFinalResults.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.resultType.creditCourseResult" id="object.cluResultInfo.type.CreditCourseFinalResults" parent="object.cluResultInfo.type.CreditCourseFinalResults.abstract"/>

<!-- ******************************************************************************** -->
<!-- fields for object.cluResultInfo.type.Credit Course Final Results.state.(default) -->
<!-- ******************************************************************************** -->

<dict:state key="*" id="object.cluResultInfo.type.CreditCourseFinalResults.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.cluId.type.CreditCourseFinalResults.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.effectiveDate.type.CreditCourseFinalResults.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.expirationDate.type.CreditCourseFinalResults.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.type.type.CreditCourseFinalResults.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.state.type.CreditCourseFinalResults.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.id.type.CreditCourseFinalResults.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.cluResultInfo.type.CreditCourseFinalResults.state.DEFAULT" parent="object.cluResultInfo.type.CreditCourseFinalResults.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT" parent="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>CLU Result Description</dict:name>
	<dict:desc>Narrative description of the CLU result.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.fd" parent="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.cd" parent="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract"/>

<!-- *********************************************************************************************************** -->
<!-- object structure for field.cluResultInfo.desc.type.Credit Course Final Results.state.(default).richTextInfo -->
<!-- *********************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo" parent="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- ******************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.desc.type.Credit Course Final Results.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ******************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo" parent="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.plain" parent="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.plain.fd" parent="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.plain.cd" parent="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.formatted" parent="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.formatted.fd" parent="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.formatted.cd" parent="field.cluResultInfo.desc.type.CreditCourseFinalResults.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="cluId" id="field.cluResultInfo.cluId.type.CreditCourseFinalResults.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.cluId.type.CreditCourseFinalResults.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.cluId.type.CreditCourseFinalResults.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="cluId" id="field.cluResultInfo.cluId.type.CreditCourseFinalResults.state.DEFAULT" parent="field.cluResultInfo.cluId.type.CreditCourseFinalResults.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="cluId" id="field.cluResultInfo.cluId.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>CLU Identifier</dict:name>
	<dict:desc>The cluId to which the CLU Result is linked.Unique identifier for a Canonical Learning Unit (CLU).</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="cluId" id="field.cluResultInfo.cluId.type.CreditCourseFinalResults.state.DEFAULT.fd" parent="field.cluResultInfo.cluId.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing CLU -->
<dict:constraintDescriptor id="field.cluResultInfo.cluId.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.cluId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="cluId" id="field.cluResultInfo.cluId.type.CreditCourseFinalResults.state.DEFAULT.cd" parent="field.cluResultInfo.cluId.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract"/>

<dict:field key="resultOptions" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="resultOptions" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="resultOptions" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Options</dict:name>
	<dict:desc>List of learning result option information.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultOptions" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultOptions" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract"/>

<!-- ************************************************************************************************************************ -->
<!-- object structure for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo -->
<!-- ************************************************************************************************************************ -->
<!-- information about a result option. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ResultOptionInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ResultOptionInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.DEFAULT.abstract"/>

<!-- ********************************************************************************************************************************************* -->
<!-- fields for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.type.(default).state.(default) -->
<!-- ********************************************************************************************************************************************* -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.abstract"/>


<dict:field key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.cd"/>
</dict:field>
<dict:field key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.abstract"/>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.fd.abstract" abstract="true">
	<dict:name>Result Option Description</dict:name>
	<dict:desc>Narrative description of the result option.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.cd.abstract"/>

<!-- ************************************************************************************************************************************************************************* -->
<!-- object structure for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.desc.type.(default).state.(default).richTextInfo -->
<!-- ************************************************************************************************************************************************************************* -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.type.DEFAULT.abstract"/>

<!-- ********************************************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.desc.type.(default).state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ********************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.plain"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.abstract"/>


<dict:field key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.plain" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.plain.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.plain.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.formatted" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.formatted.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.formatted.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.richTextInfo.formatted.cd.abstract"/>

<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.cd"/>
</dict:field>
<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.abstract"/>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.fd.abstract" abstract="true">
	<dict:name>Result Usage Type</dict:name>
	<dict:desc>Unique identifier for a result usage type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.fd.abstract"/>
<!-- Required; Single valued (non-repeating); In list of confured resultUsage types -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.resultUsage.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.cd.abstract"/>

<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.cd"/>
</dict:field>
<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.abstract"/>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.fd.abstract" abstract="true">
	<dict:name>Result Component Id</dict:name>
	<dict:desc>Unique identifier for a result component.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an exisitn resultComponent -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.resultComponentId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this result option became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this result option expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali Meta Data: calculated by service, read-only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.cd.abstract"/>

<!-- ************************************************************************************************************************************************************************* -->
<!-- object structure for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.metaInfo.type.(default).state.(default).metaInfo -->
<!-- ************************************************************************************************************************************************************************* -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.type.DEFAULT.abstract"/>

<!-- ********************************************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.metaInfo.type.(default).state.(default).metaInfo.type.(default).state.(default) -->
<!-- ********************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.versionInd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.versionInd.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.versionInd.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createTime" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createTime.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createTime.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createId" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createId.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createId.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateTime" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateTime.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateTime.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateId" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateId.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateId.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.metaInfo.updateId.cd.abstract"/>

<dict:field key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.fd.abstract" abstract="true">
	<dict:name>Result Option State</dict:name>
	<dict:desc>The current status of the result option. The values for this field are constrained to those in the resultOptionState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.cd.abstract"/>

<dict:field key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.cd"/>
</dict:field>
<dict:field key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.fd.abstract" abstract="true">
	<dict:name>Result Option Identifier</dict:name>
	<dict:desc>Unique identifier for a result option. This is optional, due to the identifier being set at the time of creation. Once the result option has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.cd.abstract"/>

<dict:type key="Kuali.resultUsageType.CreditAwarded" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.Credittobeawarded.abstract" abstract="true" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.DEFAULT.abstract">
	<dict:name>Credit to be awarded</dict:name>
	<dict:desc>The amount of credit to be awarded if student passes the course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.Credittobeawarded.state.DEFAULT"/>
</dict:type>
<dict:type key="Kuali.resultUsageType.CreditAwarded" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.Credittobeawarded" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.Credittobeawarded.abstract"/>

<!-- ******************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.type.Credit to be awarded.state.(default) -->
<!-- ******************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.Credittobeawarded.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option Description</dict:name>
	<dict:desc>Narrative description of the result option.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<!-- ************************************************************************************************************************************************************************************ -->
<!-- object structure for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.desc.type.Credit to be awarded.state.(default).richTextInfo -->
<!-- ************************************************************************************************************************************************************************************ -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- ********************************************************************************************************************************************************************************************************* -->
<!-- fields for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.desc.type.Credit to be awarded.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ********************************************************************************************************************************************************************************************************* -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.Credittobeawarded.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Usage Type</dict:name>
	<dict:desc>Unique identifier for a result usage type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); In list of confured resultUsage types -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.resultUsage.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Component Id</dict:name>
	<dict:desc>Unique identifier for a result component.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an exisitn resultComponent -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.resultComponentId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this result option became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this result option expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali Meta Data: calculated by service, read-only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<!-- ************************************************************************************************************************************************************************************ -->
<!-- object structure for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.metaInfo.type.Credit to be awarded.state.(default).metaInfo -->
<!-- ************************************************************************************************************************************************************************************ -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ********************************************************************************************************************************************************************************************************* -->
<!-- fields for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.metaInfo.type.Credit to be awarded.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ********************************************************************************************************************************************************************************************************* -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.Credittobeawarded.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option State</dict:name>
	<dict:desc>The current status of the result option. The values for this field are constrained to those in the resultOptionState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option Identifier</dict:name>
	<dict:desc>Unique identifier for a result option. This is optional, due to the identifier being set at the time of creation. Once the result option has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.Credittobeawarded.state.DEFAULT.cd.abstract"/>

<!-- TO DO: add to Simples -->
<dict:type key="kuali.resultUsageType.FinalGradeAwarded" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.FinalGradetobeAwarded.abstract" abstract="true" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.DEFAULT.abstract">
	<dict:name>Final Grade to be Awarded</dict:name>
	<dict:desc>The final grade to be awarded to a student</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.FinalGradetobeAwarded.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.resultUsageType.FinalGradeAwarded" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.FinalGradetobeAwarded" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.FinalGradetobeAwarded.abstract"/>

<!-- ************************************************************************************************************************************************************* -->
<!-- fields for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.type.Final Grade to be Awarded.state.(default) -->
<!-- ************************************************************************************************************************************************************* -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option Description</dict:name>
	<dict:desc>Narrative description of the result option.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<!-- ***************************************************************************************************************************************************************************************** -->
<!-- object structure for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.desc.type.Final Grade to be Awarded.state.(default).richTextInfo -->
<!-- ***************************************************************************************************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.desc.type.Final Grade to be Awarded.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalGradetobeAwarded.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Usage Type</dict:name>
	<dict:desc>Unique identifier for a result usage type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); In list of confured resultUsage types -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.resultUsage.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Component Id</dict:name>
	<dict:desc>Unique identifier for a result component.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an exisitn resultComponent -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.resultComponentId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this result option became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this result option expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali Meta Data: calculated by service, read-only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<!-- ***************************************************************************************************************************************************************************************** -->
<!-- object structure for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.metaInfo.type.Final Grade to be Awarded.state.(default).metaInfo -->
<!-- ***************************************************************************************************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.metaInfo.type.Final Grade to be Awarded.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalGradetobeAwarded.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option State</dict:name>
	<dict:desc>The current status of the result option. The values for this field are constrained to those in the resultOptionState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option Identifier</dict:name>
	<dict:desc>Unique identifier for a result option. This is optional, due to the identifier being set at the time of creation. Once the result option has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalGradetobeAwarded.state.DEFAULT.cd.abstract"/>

<!-- TO DO: add to Simples -->
<dict:type key="kuali.resultUsageType.QualitativeAssess" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.FinalQualitativeAssessment.abstract" abstract="true" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.DEFAULT.abstract">
	<dict:name>Final Qualitative Assessment</dict:name>
	<dict:desc>The final qualitative assessment to be given to a student</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.FinalQualitativeAssessment.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.resultUsageType.QualitativeAssess" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.FinalQualitativeAssessment" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.FinalQualitativeAssessment.abstract"/>

<!-- **************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.type.Final Qualitative Assessment.state.(default) -->
<!-- **************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option Description</dict:name>
	<dict:desc>Narrative description of the result option.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************************************************************************************************** -->
<!-- object structure for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.desc.type.Final Qualitative Assessment.state.(default).richTextInfo -->
<!-- ******************************************************************************************************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.desc.type.Final Qualitative Assessment.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.desc.type.FinalQualitativeAssessment.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Usage Type</dict:name>
	<dict:desc>Unique identifier for a result usage type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); In list of confured resultUsage types -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.resultUsage.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultUsageTypeKey" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultUsageTypeKey.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Component Id</dict:name>
	<dict:desc>Unique identifier for a result component.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an exisitn resultComponent -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.resultComponentId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="resultComponentId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.resultComponentId.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this result option became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.effectiveDate.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this result option expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.expirationDate.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali Meta Data: calculated by service, read-only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************************************************************************************************** -->
<!-- object structure for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.metaInfo.type.Final Qualitative Assessment.state.(default).metaInfo -->
<!-- ******************************************************************************************************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.resultOptions.type.Credit Course Final Results.state.(default).resultOptionInfo.metaInfo.type.Final Qualitative Assessment.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.metaInfo.type.FinalQualitativeAssessment.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option State</dict:name>
	<dict:desc>The current status of the result option. The values for this field are constrained to those in the resultOptionState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.state.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Result Option Identifier</dict:name>
	<dict:desc>Unique identifier for a result option. This is optional, due to the identifier being set at the time of creation. Once the result option has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.fd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.cd" parent="field.cluResultInfo.resultOptions.type.CreditCourseFinalResults.state.DEFAULT.resultOptionInfo.id.type.FinalQualitativeAssessment.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluResultInfo.effectiveDate.type.CreditCourseFinalResults.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.effectiveDate.type.CreditCourseFinalResults.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.effectiveDate.type.CreditCourseFinalResults.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluResultInfo.effectiveDate.type.CreditCourseFinalResults.state.DEFAULT" parent="field.cluResultInfo.effectiveDate.type.CreditCourseFinalResults.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.effectiveDate.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this CLU result became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluResultInfo.effectiveDate.type.CreditCourseFinalResults.state.DEFAULT.fd" parent="field.cluResultInfo.effectiveDate.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.effectiveDate.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluResultInfo.effectiveDate.type.CreditCourseFinalResults.state.DEFAULT.cd" parent="field.cluResultInfo.effectiveDate.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluResultInfo.expirationDate.type.CreditCourseFinalResults.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.expirationDate.type.CreditCourseFinalResults.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.expirationDate.type.CreditCourseFinalResults.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluResultInfo.expirationDate.type.CreditCourseFinalResults.state.DEFAULT" parent="field.cluResultInfo.expirationDate.type.CreditCourseFinalResults.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.expirationDate.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this CLU result expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluResultInfo.expirationDate.type.CreditCourseFinalResults.state.DEFAULT.fd" parent="field.cluResultInfo.expirationDate.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluResultInfo.expirationDate.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluResultInfo.expirationDate.type.CreditCourseFinalResults.state.DEFAULT.cd" parent="field.cluResultInfo.expirationDate.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.fd" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali Meta Data: calculated by service, read-only -->
<dict:constraintDescriptor id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.meta.data"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.cd" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract"/>

<!-- *********************************************************************************************************** -->
<!-- object structure for field.cluResultInfo.metaInfo.type.Credit Course Final Results.state.(default).metaInfo -->
<!-- *********************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ******************************************************************************************************************************** -->
<!-- fields for field.cluResultInfo.metaInfo.type.Credit Course Final Results.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ******************************************************************************************************************************** -->

<dict:state key="*" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.versionInd" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.versionInd.fd" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.versionInd.cd" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createTime" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createTime.fd" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createTime.cd" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createId" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createId.fd" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createId.cd" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateTime" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateTime.fd" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateTime.cd" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateId" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateId.fd" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateId.cd" parent="field.cluResultInfo.metaInfo.type.CreditCourseFinalResults.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.cluResultInfo.type.type.CreditCourseFinalResults.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.type.type.CreditCourseFinalResults.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.type.type.CreditCourseFinalResults.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.cluResultInfo.type.type.CreditCourseFinalResults.state.DEFAULT" parent="field.cluResultInfo.type.type.CreditCourseFinalResults.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.cluResultInfo.type.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Clu Result Type</dict:name>
	<dict:desc>Unique identifier for a clu learning result object type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.cluResultInfo.type.type.CreditCourseFinalResults.state.DEFAULT.fd" parent="field.cluResultInfo.type.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); In list of configured cluResultTypes -->
<dict:constraintDescriptor id="field.cluResultInfo.type.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.cluResult.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.cluResultInfo.type.type.CreditCourseFinalResults.state.DEFAULT.cd" parent="field.cluResultInfo.type.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.cluResultInfo.state.type.CreditCourseFinalResults.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.state.type.CreditCourseFinalResults.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.state.type.CreditCourseFinalResults.state.DEFAULT.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluResultInfo.state.type.CreditCourseFinalResults.state.DEFAULT" parent="field.cluResultInfo.state.type.CreditCourseFinalResults.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.state.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>CLU Result State</dict:name>
	<dict:desc>The current status of the CLU Result. The values for this field are constrained to those in the cluResultState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluResultInfo.state.type.CreditCourseFinalResults.state.DEFAULT.fd" parent="field.cluResultInfo.state.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluResultInfo.state.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluResultInfo.state.type.CreditCourseFinalResults.state.DEFAULT.cd" parent="field.cluResultInfo.state.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.cluResultInfo.id.type.CreditCourseFinalResults.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluResultInfo.id.type.CreditCourseFinalResults.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.cluResultInfo.id.type.CreditCourseFinalResults.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.cluResultInfo.id.type.CreditCourseFinalResults.state.DEFAULT" parent="field.cluResultInfo.id.type.CreditCourseFinalResults.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.id.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>CLU Result Identifier</dict:name>
	<dict:desc>Unique identifier for a CLU result. This is optional, due to the identifier being set at the time of creation. Once the result set has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluResultInfo.id.type.CreditCourseFinalResults.state.DEFAULT.fd" parent="field.cluResultInfo.id.type.CreditCourseFinalResults.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluResultInfo.id.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluResultInfo.id.type.CreditCourseFinalResults.state.DEFAULT.cd" parent="field.cluResultInfo.id.type.CreditCourseFinalResults.state.DEFAULT.cd.abstract"/>
</beans>
