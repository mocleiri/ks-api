<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/dictionary-extension dictionary-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
">
<!-- *** Automatically Generated ***
on: Tue Feb 09 17:01:45 EST 2010
by: org.kuali.student.dictionary.writer.DictionaryModelWriter
Using:Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls   and: Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls
 -->
<import resource="constraints-dictionary-config.xml"/>

<!-- ******************************************** -->
<!-- object structure for object.reqComponentInfo -->
<!-- ******************************************** -->
<!-- Information about a requirement component. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqComponentInfo" id="object.reqComponentInfo.abstract" abstract="true">
	<dict:typeRef bean="object.reqComponentInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqComponentInfo" id="object.reqComponentInfo" parent="object.reqComponentInfo.abstract"/>

<dict:type key="*" id="object.reqComponentInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.reqComponentInfo.type.DEFAULT.state.DEFAULT"/>
</dict:type>
<dict:type key="*" id="object.reqComponentInfo.type.DEFAULT" parent="object.reqComponentInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************** -->
<!-- fields for object.reqComponentInfo.type.(default).state.(default) -->
<!-- ***************************************************************** -->

<dict:state key="*" id="object.reqComponentInfo.type.DEFAULT.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField"/>
	<dict:fieldRef bean="field.reqComponentInfo.effectiveDate"/>
	<dict:fieldRef bean="field.reqComponentInfo.expirationDate"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo"/>
	<dict:fieldRef bean="field.reqComponentInfo.type"/>
	<dict:fieldRef bean="field.reqComponentInfo.state"/>
	<dict:fieldRef bean="field.reqComponentInfo.id"/>
</dict:state>
<dict:state key="*" id="object.reqComponentInfo.type.DEFAULT.state.DEFAULT" parent="object.reqComponentInfo.type.DEFAULT.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.reqComponentInfo.desc.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.cd"/>
</dict:field>
<dict:field key="desc" id="field.reqComponentInfo.desc" parent="field.reqComponentInfo.desc.abstract"/>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.fd.abstract" abstract="true">
	<dict:name>Requirement Component Description</dict:name>
	<dict:desc>Narrative description of the requirement component.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.desc.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.fd" parent="field.reqComponentInfo.desc.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.reqComponentInfo.desc.cd" parent="field.reqComponentInfo.desc.cd.abstract"/>

<!-- ******************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.desc.type.(default).state.(default).richTextInfo -->
<!-- ******************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.desc.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.richTextInfo" parent="field.reqComponentInfo.desc.richTextInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.desc.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.desc.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.desc.richTextInfo.type.DEFAULT" parent="field.reqComponentInfo.desc.richTextInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.desc.type.(default).state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.desc.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.richTextInfo.plain"/>
	<dict:fieldRef bean="field.reqComponentInfo.desc.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.desc.richTextInfo" parent="field.reqComponentInfo.desc.richTextInfo.abstract"/>


<dict:field key="plain" id="field.reqComponentInfo.desc.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.reqComponentInfo.desc.richTextInfo.plain" parent="field.reqComponentInfo.desc.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.richTextInfo.plain.fd" parent="field.reqComponentInfo.desc.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.reqComponentInfo.desc.richTextInfo.plain.cd" parent="field.reqComponentInfo.desc.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.reqComponentInfo.desc.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.reqComponentInfo.desc.richTextInfo.formatted" parent="field.reqComponentInfo.desc.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.richTextInfo.formatted.fd" parent="field.reqComponentInfo.desc.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.reqComponentInfo.desc.richTextInfo.formatted.cd" parent="field.reqComponentInfo.desc.richTextInfo.formatted.cd.abstract"/>

<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.cd"/>
</dict:field>
<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField" parent="field.reqComponentInfo.reqCompField.abstract"/>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field</dict:name>
	<dict:desc>Detailed information about a requirement component field value.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.fd" parent="field.reqComponentInfo.reqCompField.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.cd" parent="field.reqComponentInfo.reqCompField.cd.abstract"/>

<!-- ******************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.reqCompField.type.(default).state.(default).reqCompFieldInfo -->
<!-- ******************************************************************************************************** -->
<!-- Detailed information about a requirement component field value. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.(default).state.(default).reqCompFieldInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.cd.abstract"/>

<!-- The value must be a cluId -->
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseClu.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu</dict:name>
	<dict:desc>An Id of a Clu of type Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseClu" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseClu.abstract"/>

<!-- ************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.(default).state.(default).reqCompFieldInfo.type.Credit Course Clu.state.(default) -->
<!-- ************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<!-- The value must be a cluSetId -->
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseCluSet.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu Set</dict:name>
	<dict:desc>An Id of a Set of Credit Course Clus</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseCluSet" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseCluSet.abstract"/>

<!-- ***************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.(default).state.(default).reqCompFieldInfo.type.Credit Course Clu Set.state.(default) -->
<!-- ***************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.RequiredCount.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Required Count</dict:name>
	<dict:desc>A number to be compared to a count of clu&apos;s</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.RequiredCount.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.RequiredCount" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.RequiredCount.abstract"/>

<!-- ********************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.(default).state.(default).reqCompFieldInfo.type.Required Count.state.(default) -->
<!-- ********************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Final Grade Learning Result Definition</dict:name>
	<dict:desc>A credit course paired with a minimum grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract"/>

<!-- ************************************************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.reqCompField.type.(default).state.(default).reqCompFieldInfo.type.Credit Course Final Grade Learning Result Definition.state.(default) -->
<!-- ************************************************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.GPA.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>GPA</dict:name>
	<dict:desc>GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.GPA.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.GPA" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.GPA.abstract"/>

<!-- *********************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.(default).state.(default).reqCompFieldInfo.type.GPA.state.(default) -->
<!-- *********************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.GPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.GPA.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.TotalCredits.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Total Credits</dict:name>
	<dict:desc>Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.TotalCredits.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.TotalCredits" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.TotalCredits.abstract"/>

<!-- ********************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.(default).state.(default).reqCompFieldInfo.type.Total Credits.state.(default) -->
<!-- ********************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<!-- Enumerated list we have equal_to, not_equal_to, greater_than, less_than, greater_than_or_equal_to, less_than_or_equal_to
are we sure this isn't the operator used for Learning Result Definitions -->
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.Operator.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Operator</dict:name>
	<dict:desc>The operator use to compare other data fields</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.Operator.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.Operator" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.Operator.abstract"/>

<!-- **************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.(default).state.(default).reqCompFieldInfo.type.Operator.state.(default) -->
<!-- **************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.Operator.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.Operator.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract"/>

<!-- determines how counting is performed (credits/courses/etc) -->
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CountType.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Count Type</dict:name>
	<dict:desc>Type of counting</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CountType.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CountType" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CountType.abstract"/>

<!-- ****************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.(default).state.(default).reqCompFieldInfo.type.Count Type.state.(default) -->
<!-- ****************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CountType.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CountType.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.effectiveDate.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.effectiveDate.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate" parent="field.reqComponentInfo.effectiveDate.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this requirement component became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.fd" parent="field.reqComponentInfo.effectiveDate.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.effectiveDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.cd" parent="field.reqComponentInfo.effectiveDate.cd.abstract"/>

<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.expirationDate.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.expirationDate.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate" parent="field.reqComponentInfo.expirationDate.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this requirement component expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.fd" parent="field.reqComponentInfo.expirationDate.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.expirationDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.cd" parent="field.reqComponentInfo.expirationDate.cd.abstract"/>

<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo" parent="field.reqComponentInfo.metaInfo.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.metaInfo.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.fd" parent="field.reqComponentInfo.metaInfo.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.cd" parent="field.reqComponentInfo.metaInfo.cd.abstract"/>

<!-- ******************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.metaInfo.type.(default).state.(default).metaInfo -->
<!-- ******************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.metaInfo.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.metaInfo" parent="field.reqComponentInfo.metaInfo.metaInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.metaInfo.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.metaInfo.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.metaInfo.metaInfo.type.DEFAULT" parent="field.reqComponentInfo.metaInfo.metaInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.metaInfo.type.(default).state.(default).metaInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.metaInfo.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.metaInfo.createTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.metaInfo.createId"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.metaInfo.metaInfo" parent="field.reqComponentInfo.metaInfo.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.metaInfo.versionInd" parent="field.reqComponentInfo.metaInfo.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.metaInfo.versionInd.fd" parent="field.reqComponentInfo.metaInfo.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.metaInfo.versionInd.cd" parent="field.reqComponentInfo.metaInfo.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.metaInfo.createTime" parent="field.reqComponentInfo.metaInfo.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.metaInfo.createTime.fd" parent="field.reqComponentInfo.metaInfo.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.metaInfo.createTime.cd" parent="field.reqComponentInfo.metaInfo.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.reqComponentInfo.metaInfo.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.reqComponentInfo.metaInfo.metaInfo.createId" parent="field.reqComponentInfo.metaInfo.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.metaInfo.createId.fd" parent="field.reqComponentInfo.metaInfo.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.reqComponentInfo.metaInfo.metaInfo.createId.cd" parent="field.reqComponentInfo.metaInfo.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.metaInfo.updateTime" parent="field.reqComponentInfo.metaInfo.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.metaInfo.updateTime.fd" parent="field.reqComponentInfo.metaInfo.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.metaInfo.updateTime.cd" parent="field.reqComponentInfo.metaInfo.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.metaInfo.updateId" parent="field.reqComponentInfo.metaInfo.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.metaInfo.updateId.fd" parent="field.reqComponentInfo.metaInfo.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.metaInfo.updateId.cd" parent="field.reqComponentInfo.metaInfo.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.reqComponentInfo.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.type.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.type.cd"/>
</dict:field>
<dict:field key="type" id="field.reqComponentInfo.type" parent="field.reqComponentInfo.type.abstract"/>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.fd.abstract" abstract="true">
	<dict:name>Requirement Component Type</dict:name>
	<dict:desc>Unique identifier for a requirement component type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.fd" parent="field.reqComponentInfo.type.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component types -->
<dict:constraintDescriptor id="field.reqComponentInfo.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.reqComponentInfo.type.cd" parent="field.reqComponentInfo.type.cd.abstract"/>

<dict:field key="state" id="field.reqComponentInfo.state.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.state.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.state.cd"/>
</dict:field>
<dict:field key="state" id="field.reqComponentInfo.state" parent="field.reqComponentInfo.state.abstract"/>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.fd.abstract" abstract="true">
	<dict:name>Requirement Component State</dict:name>
	<dict:desc>The current status of the requirement component. The values for this field are constrained to those in the reqComponentState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.fd" parent="field.reqComponentInfo.state.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of valid lu requirement component states -->
<dict:constraintDescriptor id="field.reqComponentInfo.state.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.reqComponentInfo.state.cd" parent="field.reqComponentInfo.state.cd.abstract"/>

<dict:field key="id" id="field.reqComponentInfo.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.id.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.id.cd"/>
</dict:field>
<dict:field key="id" id="field.reqComponentInfo.id" parent="field.reqComponentInfo.id.abstract"/>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.fd.abstract" abstract="true">
	<dict:name>Requirement Component Identifier</dict:name>
	<dict:desc>Unique identifier for a requirement component. This is optional, due to the identifier being set at the time of creation. Once the requirement component has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.fd" parent="field.reqComponentInfo.id.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.reqComponentInfo.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.reqComponentInfo.id.cd" parent="field.reqComponentInfo.id.cd.abstract"/>

<dict:type key="kuali.reqCompType.requisite.*" id="object.reqComponentInfo.type.RequisiteRequirementComponents.abstract" abstract="true" parent="object.reqComponentInfo.type.DEFAULT.abstract">
	<dict:name>Requisite Requirement Components</dict:name>
	<dict:desc>This is a grouping of all the types that refer to a list of courses</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.reqComponentInfo.type.RequisiteRequirementComponents.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompType.requisite.*" id="object.reqComponentInfo.type.RequisiteRequirementComponents" parent="object.reqComponentInfo.type.RequisiteRequirementComponents.abstract"/>

<!-- **************************************************************************************** -->
<!-- fields for object.reqComponentInfo.type.Requisite Requirement Components.state.(default) -->
<!-- **************************************************************************************** -->

<dict:state key="*" id="object.reqComponentInfo.type.RequisiteRequirementComponents.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.effectiveDate.type.RequisiteRequirementComponents.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.expirationDate.type.RequisiteRequirementComponents.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.type.type.RequisiteRequirementComponents.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.state.type.RequisiteRequirementComponents.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.id.type.RequisiteRequirementComponents.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.reqComponentInfo.type.RequisiteRequirementComponents.state.DEFAULT" parent="object.reqComponentInfo.type.RequisiteRequirementComponents.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT" parent="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Description</dict:name>
	<dict:desc>Narrative description of the requirement component.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.fd" parent="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.cd" parent="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************************* -->
<!-- object structure for field.reqComponentInfo.desc.type.Requisite Requirement Components.state.(default).richTextInfo -->
<!-- ******************************************************************************************************************* -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- **************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.desc.type.Requisite Requirement Components.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- **************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.plain" parent="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.plain.fd" parent="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.plain.cd" parent="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.formatted" parent="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.formatted.fd" parent="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.formatted.cd" parent="field.reqComponentInfo.desc.type.RequisiteRequirementComponents.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field</dict:name>
	<dict:desc>Detailed information about a requirement component field value.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************************************* -->
<!-- object structure for field.reqComponentInfo.reqCompField.type.Requisite Requirement Components.state.(default).reqCompFieldInfo -->
<!-- ******************************************************************************************************************************* -->
<!-- Detailed information about a requirement component field value. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract"/>

<!-- **************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Requisite Requirement Components.state.(default).reqCompFieldInfo.type.(default).state.(default) -->
<!-- **************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.cd.abstract"/>

<!-- The value must be a cluId -->
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu</dict:name>
	<dict:desc>An Id of a Clu of type Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract"/>

<!-- ************************************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Requisite Requirement Components.state.(default).reqCompFieldInfo.type.Credit Course Clu.state.(default) -->
<!-- ************************************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<!-- The value must be a cluSetId -->
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu Set</dict:name>
	<dict:desc>An Id of a Set of Credit Course Clus</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract"/>

<!-- **************************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Requisite Requirement Components.state.(default).reqCompFieldInfo.type.Credit Course Clu Set.state.(default) -->
<!-- **************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Required Count</dict:name>
	<dict:desc>A number to be compared to a count of clu&apos;s</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.RequiredCount" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract"/>

<!-- ********************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Requisite Requirement Components.state.(default).reqCompFieldInfo.type.Required Count.state.(default) -->
<!-- ********************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Final Grade Learning Result Definition</dict:name>
	<dict:desc>A credit course paired with a minimum grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract"/>

<!-- *********************************************************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Requisite Requirement Components.state.(default).reqCompFieldInfo.type.Credit Course Final Grade Learning Result Definition.state.(default) -->
<!-- *********************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>GPA</dict:name>
	<dict:desc>GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.GPA" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract"/>

<!-- ********************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Requisite Requirement Components.state.(default).reqCompFieldInfo.type.GPA.state.(default) -->
<!-- ********************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Total Credits</dict:name>
	<dict:desc>Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.TotalCredits" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract"/>

<!-- ******************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Requisite Requirement Components.state.(default).reqCompFieldInfo.type.Total Credits.state.(default) -->
<!-- ******************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<!-- Enumerated list we have equal_to, not_equal_to, greater_than, less_than, greater_than_or_equal_to, less_than_or_equal_to
are we sure this isn't the operator used for Learning Result Definitions -->
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Operator</dict:name>
	<dict:desc>The operator use to compare other data fields</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.Operator" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract"/>

<!-- *************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Requisite Requirement Components.state.(default).reqCompFieldInfo.type.Operator.state.(default) -->
<!-- *************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract"/>

<!-- determines how counting is performed (credits/courses/etc) -->
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Count Type</dict:name>
	<dict:desc>Type of counting</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CountType" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract"/>

<!-- ***************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Requisite Requirement Components.state.(default).reqCompFieldInfo.type.Count Type.state.(default) -->
<!-- ***************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.RequisiteRequirementComponents.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.RequisiteRequirementComponents.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.RequisiteRequirementComponents.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.RequisiteRequirementComponents.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.RequisiteRequirementComponents.state.DEFAULT" parent="field.reqComponentInfo.effectiveDate.type.RequisiteRequirementComponents.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this requirement component became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.RequisiteRequirementComponents.state.DEFAULT.fd" parent="field.reqComponentInfo.effectiveDate.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.effectiveDate.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.RequisiteRequirementComponents.state.DEFAULT.cd" parent="field.reqComponentInfo.effectiveDate.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.RequisiteRequirementComponents.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.expirationDate.type.RequisiteRequirementComponents.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.expirationDate.type.RequisiteRequirementComponents.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.RequisiteRequirementComponents.state.DEFAULT" parent="field.reqComponentInfo.expirationDate.type.RequisiteRequirementComponents.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this requirement component expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.RequisiteRequirementComponents.state.DEFAULT.fd" parent="field.reqComponentInfo.expirationDate.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.expirationDate.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.RequisiteRequirementComponents.state.DEFAULT.cd" parent="field.reqComponentInfo.expirationDate.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.fd" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.cd" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************************* -->
<!-- object structure for field.reqComponentInfo.metaInfo.type.Requisite Requirement Components.state.(default).metaInfo -->
<!-- ******************************************************************************************************************* -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- **************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.metaInfo.type.Requisite Requirement Components.state.(default).metaInfo.type.(default).state.(default) -->
<!-- **************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.versionInd" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.versionInd.fd" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.versionInd.cd" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createTime" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createTime.fd" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createTime.cd" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createId" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createId.fd" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createId.cd" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateTime" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateTime.fd" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateTime.cd" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateId" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateId.fd" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateId.cd" parent="field.reqComponentInfo.metaInfo.type.RequisiteRequirementComponents.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.reqComponentInfo.type.type.RequisiteRequirementComponents.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.type.type.RequisiteRequirementComponents.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.type.type.RequisiteRequirementComponents.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.reqComponentInfo.type.type.RequisiteRequirementComponents.state.DEFAULT" parent="field.reqComponentInfo.type.type.RequisiteRequirementComponents.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Type</dict:name>
	<dict:desc>Unique identifier for a requirement component type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.RequisiteRequirementComponents.state.DEFAULT.fd" parent="field.reqComponentInfo.type.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component types -->
<dict:constraintDescriptor id="field.reqComponentInfo.type.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.reqComponentInfo.type.type.RequisiteRequirementComponents.state.DEFAULT.cd" parent="field.reqComponentInfo.type.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.reqComponentInfo.state.type.RequisiteRequirementComponents.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.state.type.RequisiteRequirementComponents.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.state.type.RequisiteRequirementComponents.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="state" id="field.reqComponentInfo.state.type.RequisiteRequirementComponents.state.DEFAULT" parent="field.reqComponentInfo.state.type.RequisiteRequirementComponents.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component State</dict:name>
	<dict:desc>The current status of the requirement component. The values for this field are constrained to those in the reqComponentState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.RequisiteRequirementComponents.state.DEFAULT.fd" parent="field.reqComponentInfo.state.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of valid lu requirement component states -->
<dict:constraintDescriptor id="field.reqComponentInfo.state.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.reqComponentInfo.state.type.RequisiteRequirementComponents.state.DEFAULT.cd" parent="field.reqComponentInfo.state.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.reqComponentInfo.id.type.RequisiteRequirementComponents.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.id.type.RequisiteRequirementComponents.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.id.type.RequisiteRequirementComponents.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.reqComponentInfo.id.type.RequisiteRequirementComponents.state.DEFAULT" parent="field.reqComponentInfo.id.type.RequisiteRequirementComponents.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Identifier</dict:name>
	<dict:desc>Unique identifier for a requirement component. This is optional, due to the identifier being set at the time of creation. Once the requirement component has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.RequisiteRequirementComponents.state.DEFAULT.fd" parent="field.reqComponentInfo.id.type.RequisiteRequirementComponents.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.reqComponentInfo.id.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.reqComponentInfo.id.type.RequisiteRequirementComponents.state.DEFAULT.cd" parent="field.reqComponentInfo.id.type.RequisiteRequirementComponents.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.reqCompType.requisite.courseList.none" id="object.reqComponentInfo.type.Noneofthesecourses.abstract" abstract="true" parent="object.reqComponentInfo.type.DEFAULT.abstract">
	<dict:name>None of these courses</dict:name>
	<dict:desc>Student must have completed none of the specified courses</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.reqComponentInfo.type.Noneofthesecourses.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompType.requisite.courseList.none" id="object.reqComponentInfo.type.Noneofthesecourses" parent="object.reqComponentInfo.type.Noneofthesecourses.abstract"/>

<!-- ***************************************************************************** -->
<!-- fields for object.reqComponentInfo.type.None of these courses.state.(default) -->
<!-- ***************************************************************************** -->

<dict:state key="*" id="object.reqComponentInfo.type.Noneofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.effectiveDate.type.Noneofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.expirationDate.type.Noneofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.type.type.Noneofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.state.type.Noneofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.id.type.Noneofthesecourses.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.reqComponentInfo.type.Noneofthesecourses.state.DEFAULT" parent="object.reqComponentInfo.type.Noneofthesecourses.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Description</dict:name>
	<dict:desc>Narrative description of the requirement component.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.desc.type.None of these courses.state.(default).richTextInfo -->
<!-- ******************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.desc.type.None of these courses.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.plain" parent="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.plain.fd" parent="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.plain.cd" parent="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.formatted" parent="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.formatted.fd" parent="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.formatted.cd" parent="field.reqComponentInfo.desc.type.Noneofthesecourses.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field</dict:name>
	<dict:desc>Detailed information about a requirement component field value.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.reqCompField.type.None of these courses.state.(default).reqCompFieldInfo -->
<!-- ******************************************************************************************************************** -->
<!-- Detailed information about a requirement component field value. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these courses.state.(default).reqCompFieldInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.cd.abstract"/>

<!-- The value must be a cluId -->
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu</dict:name>
	<dict:desc>An Id of a Clu of type Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract"/>

<!-- ************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these courses.state.(default).reqCompFieldInfo.type.Credit Course Clu.state.(default) -->
<!-- ************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<!-- The value must be a cluSetId -->
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu Set</dict:name>
	<dict:desc>An Id of a Set of Credit Course Clus</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract"/>

<!-- ***************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these courses.state.(default).reqCompFieldInfo.type.Credit Course Clu Set.state.(default) -->
<!-- ***************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Required Count</dict:name>
	<dict:desc>A number to be compared to a count of clu&apos;s</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract"/>

<!-- ********************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these courses.state.(default).reqCompFieldInfo.type.Required Count.state.(default) -->
<!-- ********************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Final Grade Learning Result Definition</dict:name>
	<dict:desc>A credit course paired with a minimum grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract"/>

<!-- ************************************************************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these courses.state.(default).reqCompFieldInfo.type.Credit Course Final Grade Learning Result Definition.state.(default) -->
<!-- ************************************************************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>GPA</dict:name>
	<dict:desc>GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract"/>

<!-- *********************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these courses.state.(default).reqCompFieldInfo.type.GPA.state.(default) -->
<!-- *********************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Total Credits</dict:name>
	<dict:desc>Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract"/>

<!-- ********************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these courses.state.(default).reqCompFieldInfo.type.Total Credits.state.(default) -->
<!-- ********************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<!-- Enumerated list we have equal_to, not_equal_to, greater_than, less_than, greater_than_or_equal_to, less_than_or_equal_to
are we sure this isn't the operator used for Learning Result Definitions -->
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Operator</dict:name>
	<dict:desc>The operator use to compare other data fields</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract"/>

<!-- **************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these courses.state.(default).reqCompFieldInfo.type.Operator.state.(default) -->
<!-- **************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract"/>

<!-- determines how counting is performed (credits/courses/etc) -->
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Count Type</dict:name>
	<dict:desc>Type of counting</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract"/>

<!-- ****************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these courses.state.(default).reqCompFieldInfo.type.Count Type.state.(default) -->
<!-- ****************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Noneofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Noneofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Noneofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Noneofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.effectiveDate.type.Noneofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Noneofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this requirement component became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Noneofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.effectiveDate.type.Noneofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.effectiveDate.type.Noneofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Noneofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.effectiveDate.type.Noneofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Noneofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Noneofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Noneofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Noneofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.expirationDate.type.Noneofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Noneofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this requirement component expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Noneofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.expirationDate.type.Noneofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.expirationDate.type.Noneofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Noneofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.expirationDate.type.Noneofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.metaInfo.type.None of these courses.state.(default).metaInfo -->
<!-- ******************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.metaInfo.type.None of these courses.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.versionInd" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.versionInd.fd" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.versionInd.cd" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createTime" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createTime.fd" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createTime.cd" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createId" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createId.fd" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createId.cd" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateTime" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateTime.fd" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateTime.cd" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateId" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateId.fd" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateId.cd" parent="field.reqComponentInfo.metaInfo.type.Noneofthesecourses.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.reqComponentInfo.type.type.Noneofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.type.type.Noneofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.type.type.Noneofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.reqComponentInfo.type.type.Noneofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.type.type.Noneofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Noneofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Type</dict:name>
	<dict:desc>Unique identifier for a requirement component type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Noneofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.type.type.Noneofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component types -->
<dict:constraintDescriptor id="field.reqComponentInfo.type.type.Noneofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.reqComponentInfo.type.type.Noneofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.type.type.Noneofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.reqComponentInfo.state.type.Noneofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.state.type.Noneofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.state.type.Noneofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="state" id="field.reqComponentInfo.state.type.Noneofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.state.type.Noneofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Noneofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component State</dict:name>
	<dict:desc>The current status of the requirement component. The values for this field are constrained to those in the reqComponentState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Noneofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.state.type.Noneofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of valid lu requirement component states -->
<dict:constraintDescriptor id="field.reqComponentInfo.state.type.Noneofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.reqComponentInfo.state.type.Noneofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.state.type.Noneofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.reqComponentInfo.id.type.Noneofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.id.type.Noneofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.id.type.Noneofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.reqComponentInfo.id.type.Noneofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.id.type.Noneofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Noneofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Identifier</dict:name>
	<dict:desc>Unique identifier for a requirement component. This is optional, due to the identifier being set at the time of creation. Once the requirement component has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Noneofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.id.type.Noneofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.reqComponentInfo.id.type.Noneofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.reqComponentInfo.id.type.Noneofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.id.type.Noneofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.reqCompType.requisite.courseList.coreq.oneof" id="object.reqComponentInfo.type.Oneofthesecourses(coreq).abstract" abstract="true" parent="object.reqComponentInfo.type.DEFAULT.abstract">
	<dict:name>One of these courses (coreq)</dict:name>
	<dict:desc>Student must be enrolled in one of the following courses</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.reqComponentInfo.type.Oneofthesecourses(coreq).state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompType.requisite.courseList.coreq.oneof" id="object.reqComponentInfo.type.Oneofthesecourses(coreq)" parent="object.reqComponentInfo.type.Oneofthesecourses(coreq).abstract"/>

<!-- ************************************************************************************ -->
<!-- fields for object.reqComponentInfo.type.One of these courses (coreq).state.(default) -->
<!-- ************************************************************************************ -->

<dict:state key="*" id="object.reqComponentInfo.type.Oneofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.effectiveDate.type.Oneofthesecourses(coreq).state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.expirationDate.type.Oneofthesecourses(coreq).state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.type.type.Oneofthesecourses(coreq).state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.state.type.Oneofthesecourses(coreq).state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.id.type.Oneofthesecourses(coreq).state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.reqComponentInfo.type.Oneofthesecourses(coreq).state.DEFAULT" parent="object.reqComponentInfo.type.Oneofthesecourses(coreq).state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Description</dict:name>
	<dict:desc>Narrative description of the requirement component.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<!-- *************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.desc.type.One of these courses (coreq).state.(default).richTextInfo -->
<!-- *************************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.desc.type.One of these courses (coreq).state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.plain" parent="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.fd" parent="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.cd" parent="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted" parent="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.fd" parent="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.cd" parent="field.reqComponentInfo.desc.type.Oneofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field</dict:name>
	<dict:desc>Detailed information about a requirement component field value.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<!-- *************************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.reqCompField.type.One of these courses (coreq).state.(default).reqCompFieldInfo -->
<!-- *************************************************************************************************************************** -->
<!-- Detailed information about a requirement component field value. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these courses (coreq).state.(default).reqCompFieldInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.cd.abstract"/>

<!-- The value must be a cluId -->
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu</dict:name>
	<dict:desc>An Id of a Clu of type Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract"/>

<!-- ******************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these courses (coreq).state.(default).reqCompFieldInfo.type.Credit Course Clu.state.(default) -->
<!-- ******************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<!-- The value must be a cluSetId -->
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu Set</dict:name>
	<dict:desc>An Id of a Set of Credit Course Clus</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract"/>

<!-- ************************************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these courses (coreq).state.(default).reqCompFieldInfo.type.Credit Course Clu Set.state.(default) -->
<!-- ************************************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Required Count</dict:name>
	<dict:desc>A number to be compared to a count of clu&apos;s</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.RequiredCount" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract"/>

<!-- ***************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these courses (coreq).state.(default).reqCompFieldInfo.type.Required Count.state.(default) -->
<!-- ***************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Final Grade Learning Result Definition</dict:name>
	<dict:desc>A credit course paired with a minimum grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract"/>

<!-- ******************************************************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these courses (coreq).state.(default).reqCompFieldInfo.type.Credit Course Final Grade Learning Result Definition.state.(default) -->
<!-- ******************************************************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.GPA.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>GPA</dict:name>
	<dict:desc>GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.GPA" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.GPA.abstract"/>

<!-- ****************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these courses (coreq).state.(default).reqCompFieldInfo.type.GPA.state.(default) -->
<!-- ****************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Total Credits</dict:name>
	<dict:desc>Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.TotalCredits" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract"/>

<!-- **************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these courses (coreq).state.(default).reqCompFieldInfo.type.Total Credits.state.(default) -->
<!-- **************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<!-- Enumerated list we have equal_to, not_equal_to, greater_than, less_than, greater_than_or_equal_to, less_than_or_equal_to
are we sure this isn't the operator used for Learning Result Definitions -->
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.Operator.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Operator</dict:name>
	<dict:desc>The operator use to compare other data fields</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.Operator" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.Operator.abstract"/>

<!-- *********************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these courses (coreq).state.(default).reqCompFieldInfo.type.Operator.state.(default) -->
<!-- *********************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract"/>

<!-- determines how counting is performed (credits/courses/etc) -->
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CountType.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Count Type</dict:name>
	<dict:desc>Type of counting</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CountType" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CountType.abstract"/>

<!-- ************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these courses (coreq).state.(default).reqCompFieldInfo.type.Count Type.state.(default) -->
<!-- ************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Oneofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Oneofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.effectiveDate.type.Oneofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this requirement component became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.effectiveDate.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.effectiveDate.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.effectiveDate.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Oneofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Oneofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.expirationDate.type.Oneofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this requirement component expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.expirationDate.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.expirationDate.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.expirationDate.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<!-- *************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.metaInfo.type.One of these courses (coreq).state.(default).metaInfo -->
<!-- *************************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.type.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.metaInfo.type.One of these courses (coreq).state.(default).metaInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.fd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.cd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createTime" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.fd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.cd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createId" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createId.fd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createId.cd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.fd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.cd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateId" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.fd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.cd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.reqComponentInfo.type.type.Oneofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.type.type.Oneofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.type.type.Oneofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.reqComponentInfo.type.type.Oneofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.type.type.Oneofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Type</dict:name>
	<dict:desc>Unique identifier for a requirement component type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Oneofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.type.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component types -->
<dict:constraintDescriptor id="field.reqComponentInfo.type.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.reqComponentInfo.type.type.Oneofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.type.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.reqComponentInfo.state.type.Oneofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.state.type.Oneofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.state.type.Oneofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="state" id="field.reqComponentInfo.state.type.Oneofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.state.type.Oneofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component State</dict:name>
	<dict:desc>The current status of the requirement component. The values for this field are constrained to those in the reqComponentState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Oneofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.state.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of valid lu requirement component states -->
<dict:constraintDescriptor id="field.reqComponentInfo.state.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.reqComponentInfo.state.type.Oneofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.state.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.reqComponentInfo.id.type.Oneofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.id.type.Oneofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.id.type.Oneofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.reqComponentInfo.id.type.Oneofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.id.type.Oneofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Identifier</dict:name>
	<dict:desc>Unique identifier for a requirement component. This is optional, due to the identifier being set at the time of creation. Once the requirement component has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Oneofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.id.type.Oneofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.reqComponentInfo.id.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.reqComponentInfo.id.type.Oneofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.id.type.Oneofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.reqCompType.requisite.courseList.coreq.all" id="object.reqComponentInfo.type.Allofthesecourses(coreq).abstract" abstract="true" parent="object.reqComponentInfo.type.DEFAULT.abstract">
	<dict:name>All of these courses (coreq)</dict:name>
	<dict:desc>Student must be enrolled in all of the following courses</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.reqComponentInfo.type.Allofthesecourses(coreq).state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompType.requisite.courseList.coreq.all" id="object.reqComponentInfo.type.Allofthesecourses(coreq)" parent="object.reqComponentInfo.type.Allofthesecourses(coreq).abstract"/>

<!-- ************************************************************************************ -->
<!-- fields for object.reqComponentInfo.type.All of these courses (coreq).state.(default) -->
<!-- ************************************************************************************ -->

<dict:state key="*" id="object.reqComponentInfo.type.Allofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.effectiveDate.type.Allofthesecourses(coreq).state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.expirationDate.type.Allofthesecourses(coreq).state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.type.type.Allofthesecourses(coreq).state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.state.type.Allofthesecourses(coreq).state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.id.type.Allofthesecourses(coreq).state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.reqComponentInfo.type.Allofthesecourses(coreq).state.DEFAULT" parent="object.reqComponentInfo.type.Allofthesecourses(coreq).state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Description</dict:name>
	<dict:desc>Narrative description of the requirement component.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<!-- *************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.desc.type.All of these courses (coreq).state.(default).richTextInfo -->
<!-- *************************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.desc.type.All of these courses (coreq).state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.plain" parent="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.fd" parent="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.cd" parent="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted" parent="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.fd" parent="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.cd" parent="field.reqComponentInfo.desc.type.Allofthesecourses(coreq).state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field</dict:name>
	<dict:desc>Detailed information about a requirement component field value.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<!-- *************************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.reqCompField.type.All of these courses (coreq).state.(default).reqCompFieldInfo -->
<!-- *************************************************************************************************************************** -->
<!-- Detailed information about a requirement component field value. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses (coreq).state.(default).reqCompFieldInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.cd.abstract"/>

<!-- The value must be a cluId -->
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu</dict:name>
	<dict:desc>An Id of a Clu of type Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract"/>

<!-- ******************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses (coreq).state.(default).reqCompFieldInfo.type.Credit Course Clu.state.(default) -->
<!-- ******************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<!-- The value must be a cluSetId -->
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu Set</dict:name>
	<dict:desc>An Id of a Set of Credit Course Clus</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract"/>

<!-- ************************************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses (coreq).state.(default).reqCompFieldInfo.type.Credit Course Clu Set.state.(default) -->
<!-- ************************************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Required Count</dict:name>
	<dict:desc>A number to be compared to a count of clu&apos;s</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.RequiredCount" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract"/>

<!-- ***************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses (coreq).state.(default).reqCompFieldInfo.type.Required Count.state.(default) -->
<!-- ***************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Final Grade Learning Result Definition</dict:name>
	<dict:desc>A credit course paired with a minimum grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract"/>

<!-- ******************************************************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses (coreq).state.(default).reqCompFieldInfo.type.Credit Course Final Grade Learning Result Definition.state.(default) -->
<!-- ******************************************************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.GPA.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>GPA</dict:name>
	<dict:desc>GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.GPA" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.GPA.abstract"/>

<!-- ****************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses (coreq).state.(default).reqCompFieldInfo.type.GPA.state.(default) -->
<!-- ****************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Total Credits</dict:name>
	<dict:desc>Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.TotalCredits" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract"/>

<!-- **************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses (coreq).state.(default).reqCompFieldInfo.type.Total Credits.state.(default) -->
<!-- **************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<!-- Enumerated list we have equal_to, not_equal_to, greater_than, less_than, greater_than_or_equal_to, less_than_or_equal_to
are we sure this isn't the operator used for Learning Result Definitions -->
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.Operator.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Operator</dict:name>
	<dict:desc>The operator use to compare other data fields</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.Operator" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.Operator.abstract"/>

<!-- *********************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses (coreq).state.(default).reqCompFieldInfo.type.Operator.state.(default) -->
<!-- *********************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract"/>

<!-- determines how counting is performed (credits/courses/etc) -->
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CountType.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Count Type</dict:name>
	<dict:desc>Type of counting</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CountType" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CountType.abstract"/>

<!-- ************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses (coreq).state.(default).reqCompFieldInfo.type.Count Type.state.(default) -->
<!-- ************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses(coreq).state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Allofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Allofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Allofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Allofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.effectiveDate.type.Allofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this requirement component became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Allofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.effectiveDate.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.effectiveDate.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Allofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.effectiveDate.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Allofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Allofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Allofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Allofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.expirationDate.type.Allofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this requirement component expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Allofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.expirationDate.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.expirationDate.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Allofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.expirationDate.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<!-- *************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.metaInfo.type.All of these courses (coreq).state.(default).metaInfo -->
<!-- *************************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.type.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.metaInfo.type.All of these courses (coreq).state.(default).metaInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.fd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.cd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createTime" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.fd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.cd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createId" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createId.fd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createId.cd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.fd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.cd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateId" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.fd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.cd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses(coreq).state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.reqComponentInfo.type.type.Allofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.type.type.Allofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.type.type.Allofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.reqComponentInfo.type.type.Allofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.type.type.Allofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Type</dict:name>
	<dict:desc>Unique identifier for a requirement component type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Allofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.type.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component types -->
<dict:constraintDescriptor id="field.reqComponentInfo.type.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.reqComponentInfo.type.type.Allofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.type.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.reqComponentInfo.state.type.Allofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.state.type.Allofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.state.type.Allofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="state" id="field.reqComponentInfo.state.type.Allofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.state.type.Allofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component State</dict:name>
	<dict:desc>The current status of the requirement component. The values for this field are constrained to those in the reqComponentState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Allofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.state.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of valid lu requirement component states -->
<dict:constraintDescriptor id="field.reqComponentInfo.state.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.reqComponentInfo.state.type.Allofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.state.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.reqComponentInfo.id.type.Allofthesecourses(coreq).state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.id.type.Allofthesecourses(coreq).state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.id.type.Allofthesecourses(coreq).state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.reqComponentInfo.id.type.Allofthesecourses(coreq).state.DEFAULT" parent="field.reqComponentInfo.id.type.Allofthesecourses(coreq).state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Identifier</dict:name>
	<dict:desc>Unique identifier for a requirement component. This is optional, due to the identifier being set at the time of creation. Once the requirement component has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Allofthesecourses(coreq).state.DEFAULT.fd" parent="field.reqComponentInfo.id.type.Allofthesecourses(coreq).state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.reqComponentInfo.id.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.reqComponentInfo.id.type.Allofthesecourses(coreq).state.DEFAULT.cd" parent="field.reqComponentInfo.id.type.Allofthesecourses(coreq).state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.reqCompType.requisite.courseList.all" id="object.reqComponentInfo.type.Allofthesecourses.abstract" abstract="true" parent="object.reqComponentInfo.type.DEFAULT.abstract">
	<dict:name>All of these courses</dict:name>
	<dict:desc>Student must take all of the specified courses</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.reqComponentInfo.type.Allofthesecourses.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompType.requisite.courseList.all" id="object.reqComponentInfo.type.Allofthesecourses" parent="object.reqComponentInfo.type.Allofthesecourses.abstract"/>

<!-- **************************************************************************** -->
<!-- fields for object.reqComponentInfo.type.All of these courses.state.(default) -->
<!-- **************************************************************************** -->

<dict:state key="*" id="object.reqComponentInfo.type.Allofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.effectiveDate.type.Allofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.expirationDate.type.Allofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.type.type.Allofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.state.type.Allofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.id.type.Allofthesecourses.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.reqComponentInfo.type.Allofthesecourses.state.DEFAULT" parent="object.reqComponentInfo.type.Allofthesecourses.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Description</dict:name>
	<dict:desc>Narrative description of the requirement component.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************* -->
<!-- object structure for field.reqComponentInfo.desc.type.All of these courses.state.(default).richTextInfo -->
<!-- ******************************************************************************************************* -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- **************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.desc.type.All of these courses.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- **************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.plain" parent="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.plain.fd" parent="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.plain.cd" parent="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.formatted" parent="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.formatted.fd" parent="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.formatted.cd" parent="field.reqComponentInfo.desc.type.Allofthesecourses.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field</dict:name>
	<dict:desc>Detailed information about a requirement component field value.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************************* -->
<!-- object structure for field.reqComponentInfo.reqCompField.type.All of these courses.state.(default).reqCompFieldInfo -->
<!-- ******************************************************************************************************************* -->
<!-- Detailed information about a requirement component field value. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract"/>

<!-- **************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses.state.(default).reqCompFieldInfo.type.(default).state.(default) -->
<!-- **************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.cd.abstract"/>

<!-- The value must be a cluId -->
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu</dict:name>
	<dict:desc>An Id of a Clu of type Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract"/>

<!-- ************************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses.state.(default).reqCompFieldInfo.type.Credit Course Clu.state.(default) -->
<!-- ************************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<!-- The value must be a cluSetId -->
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu Set</dict:name>
	<dict:desc>An Id of a Set of Credit Course Clus</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract"/>

<!-- **************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses.state.(default).reqCompFieldInfo.type.Credit Course Clu Set.state.(default) -->
<!-- **************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Required Count</dict:name>
	<dict:desc>A number to be compared to a count of clu&apos;s</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract"/>

<!-- ********************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses.state.(default).reqCompFieldInfo.type.Required Count.state.(default) -->
<!-- ********************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Final Grade Learning Result Definition</dict:name>
	<dict:desc>A credit course paired with a minimum grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract"/>

<!-- *********************************************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses.state.(default).reqCompFieldInfo.type.Credit Course Final Grade Learning Result Definition.state.(default) -->
<!-- *********************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>GPA</dict:name>
	<dict:desc>GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract"/>

<!-- ********************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses.state.(default).reqCompFieldInfo.type.GPA.state.(default) -->
<!-- ********************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Total Credits</dict:name>
	<dict:desc>Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract"/>

<!-- ******************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses.state.(default).reqCompFieldInfo.type.Total Credits.state.(default) -->
<!-- ******************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<!-- Enumerated list we have equal_to, not_equal_to, greater_than, less_than, greater_than_or_equal_to, less_than_or_equal_to
are we sure this isn't the operator used for Learning Result Definitions -->
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Operator</dict:name>
	<dict:desc>The operator use to compare other data fields</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract"/>

<!-- *************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses.state.(default).reqCompFieldInfo.type.Operator.state.(default) -->
<!-- *************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract"/>

<!-- determines how counting is performed (credits/courses/etc) -->
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Count Type</dict:name>
	<dict:desc>Type of counting</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract"/>

<!-- ***************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.All of these courses.state.(default).reqCompFieldInfo.type.Count Type.state.(default) -->
<!-- ***************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Allofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Allofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Allofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Allofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Allofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.effectiveDate.type.Allofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Allofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this requirement component became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Allofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.effectiveDate.type.Allofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.effectiveDate.type.Allofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Allofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.effectiveDate.type.Allofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Allofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Allofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Allofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Allofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.expirationDate.type.Allofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Allofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this requirement component expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Allofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.expirationDate.type.Allofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.expirationDate.type.Allofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Allofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.expirationDate.type.Allofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************* -->
<!-- object structure for field.reqComponentInfo.metaInfo.type.All of these courses.state.(default).metaInfo -->
<!-- ******************************************************************************************************* -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- **************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.metaInfo.type.All of these courses.state.(default).metaInfo.type.(default).state.(default) -->
<!-- **************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.versionInd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.versionInd.fd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.versionInd.cd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createTime" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createTime.fd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createTime.cd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createId" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createId.fd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createId.cd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateTime" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateTime.fd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateTime.cd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateId" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateId.fd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateId.cd" parent="field.reqComponentInfo.metaInfo.type.Allofthesecourses.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.reqComponentInfo.type.type.Allofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.type.type.Allofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.type.type.Allofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.reqComponentInfo.type.type.Allofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.type.type.Allofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Allofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Type</dict:name>
	<dict:desc>Unique identifier for a requirement component type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Allofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.type.type.Allofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component types -->
<dict:constraintDescriptor id="field.reqComponentInfo.type.type.Allofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.reqComponentInfo.type.type.Allofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.type.type.Allofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.reqComponentInfo.state.type.Allofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.state.type.Allofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.state.type.Allofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="state" id="field.reqComponentInfo.state.type.Allofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.state.type.Allofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Allofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component State</dict:name>
	<dict:desc>The current status of the requirement component. The values for this field are constrained to those in the reqComponentState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Allofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.state.type.Allofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of valid lu requirement component states -->
<dict:constraintDescriptor id="field.reqComponentInfo.state.type.Allofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.reqComponentInfo.state.type.Allofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.state.type.Allofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.reqComponentInfo.id.type.Allofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.id.type.Allofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.id.type.Allofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.reqComponentInfo.id.type.Allofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.id.type.Allofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Allofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Identifier</dict:name>
	<dict:desc>Unique identifier for a requirement component. This is optional, due to the identifier being set at the time of creation. Once the requirement component has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Allofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.id.type.Allofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.reqComponentInfo.id.type.Allofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.reqComponentInfo.id.type.Allofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.id.type.Allofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.reqCompType.requisite.courseList.1of2" id="object.reqComponentInfo.type.Oneofthesetwocourses.abstract" abstract="true" parent="object.reqComponentInfo.type.DEFAULT.abstract">
	<dict:name>One of these two courses</dict:name>
	<dict:desc>Student must take one of two specified courses</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.reqComponentInfo.type.Oneofthesetwocourses.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompType.requisite.courseList.1of2" id="object.reqComponentInfo.type.Oneofthesetwocourses" parent="object.reqComponentInfo.type.Oneofthesetwocourses.abstract"/>

<!-- ******************************************************************************** -->
<!-- fields for object.reqComponentInfo.type.One of these two courses.state.(default) -->
<!-- ******************************************************************************** -->

<dict:state key="*" id="object.reqComponentInfo.type.Oneofthesetwocourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.effectiveDate.type.Oneofthesetwocourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.expirationDate.type.Oneofthesetwocourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.type.type.Oneofthesetwocourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.state.type.Oneofthesetwocourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.id.type.Oneofthesetwocourses.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.reqComponentInfo.type.Oneofthesetwocourses.state.DEFAULT" parent="object.reqComponentInfo.type.Oneofthesetwocourses.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT" parent="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Description</dict:name>
	<dict:desc>Narrative description of the requirement component.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.fd" parent="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.cd" parent="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract"/>

<!-- *********************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.desc.type.One of these two courses.state.(default).richTextInfo -->
<!-- *********************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- ******************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.desc.type.One of these two courses.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ******************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.plain" parent="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.plain.fd" parent="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.plain.cd" parent="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.formatted" parent="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.formatted.fd" parent="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.formatted.cd" parent="field.reqComponentInfo.desc.type.Oneofthesetwocourses.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field</dict:name>
	<dict:desc>Detailed information about a requirement component field value.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract"/>

<!-- *********************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.reqCompField.type.One of these two courses.state.(default).reqCompFieldInfo -->
<!-- *********************************************************************************************************************** -->
<!-- Detailed information about a requirement component field value. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract"/>

<!-- ******************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these two courses.state.(default).reqCompFieldInfo.type.(default).state.(default) -->
<!-- ******************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.cd.abstract"/>

<!-- The value must be a cluId -->
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu</dict:name>
	<dict:desc>An Id of a Clu of type Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract"/>

<!-- **************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these two courses.state.(default).reqCompFieldInfo.type.Credit Course Clu.state.(default) -->
<!-- **************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<!-- The value must be a cluSetId -->
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu Set</dict:name>
	<dict:desc>An Id of a Set of Credit Course Clus</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract"/>

<!-- ******************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these two courses.state.(default).reqCompFieldInfo.type.Credit Course Clu Set.state.(default) -->
<!-- ******************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Required Count</dict:name>
	<dict:desc>A number to be compared to a count of clu&apos;s</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract"/>

<!-- ************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these two courses.state.(default).reqCompFieldInfo.type.Required Count.state.(default) -->
<!-- ************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Final Grade Learning Result Definition</dict:name>
	<dict:desc>A credit course paired with a minimum grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract"/>

<!-- *************************************************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these two courses.state.(default).reqCompFieldInfo.type.Credit Course Final Grade Learning Result Definition.state.(default) -->
<!-- *************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>GPA</dict:name>
	<dict:desc>GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.GPA" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract"/>

<!-- ************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these two courses.state.(default).reqCompFieldInfo.type.GPA.state.(default) -->
<!-- ************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Total Credits</dict:name>
	<dict:desc>Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract"/>

<!-- ************************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these two courses.state.(default).reqCompFieldInfo.type.Total Credits.state.(default) -->
<!-- ************************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<!-- Enumerated list we have equal_to, not_equal_to, greater_than, less_than, greater_than_or_equal_to, less_than_or_equal_to
are we sure this isn't the operator used for Learning Result Definitions -->
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Operator</dict:name>
	<dict:desc>The operator use to compare other data fields</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.Operator" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract"/>

<!-- ******************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these two courses.state.(default).reqCompFieldInfo.type.Operator.state.(default) -->
<!-- ******************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract"/>

<!-- determines how counting is performed (credits/courses/etc) -->
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Count Type</dict:name>
	<dict:desc>Type of counting</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CountType" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract"/>

<!-- ********************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these two courses.state.(default).reqCompFieldInfo.type.Count Type.state.(default) -->
<!-- ********************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneofthesetwocourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneofthesetwocourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Oneofthesetwocourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Oneofthesetwocourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneofthesetwocourses.state.DEFAULT" parent="field.reqComponentInfo.effectiveDate.type.Oneofthesetwocourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this requirement component became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneofthesetwocourses.state.DEFAULT.fd" parent="field.reqComponentInfo.effectiveDate.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.effectiveDate.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneofthesetwocourses.state.DEFAULT.cd" parent="field.reqComponentInfo.effectiveDate.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneofthesetwocourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Oneofthesetwocourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Oneofthesetwocourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneofthesetwocourses.state.DEFAULT" parent="field.reqComponentInfo.expirationDate.type.Oneofthesetwocourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this requirement component expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneofthesetwocourses.state.DEFAULT.fd" parent="field.reqComponentInfo.expirationDate.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.expirationDate.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneofthesetwocourses.state.DEFAULT.cd" parent="field.reqComponentInfo.expirationDate.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.fd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.cd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract"/>

<!-- *********************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.metaInfo.type.One of these two courses.state.(default).metaInfo -->
<!-- *********************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ******************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.metaInfo.type.One of these two courses.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ******************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.versionInd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.versionInd.fd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.versionInd.cd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createTime" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createTime.fd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createTime.cd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createId" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createId.fd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createId.cd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateTime" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateTime.fd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateTime.cd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateId" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateId.fd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateId.cd" parent="field.reqComponentInfo.metaInfo.type.Oneofthesetwocourses.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.reqComponentInfo.type.type.Oneofthesetwocourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.type.type.Oneofthesetwocourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.type.type.Oneofthesetwocourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.reqComponentInfo.type.type.Oneofthesetwocourses.state.DEFAULT" parent="field.reqComponentInfo.type.type.Oneofthesetwocourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Type</dict:name>
	<dict:desc>Unique identifier for a requirement component type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Oneofthesetwocourses.state.DEFAULT.fd" parent="field.reqComponentInfo.type.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component types -->
<dict:constraintDescriptor id="field.reqComponentInfo.type.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.reqComponentInfo.type.type.Oneofthesetwocourses.state.DEFAULT.cd" parent="field.reqComponentInfo.type.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.reqComponentInfo.state.type.Oneofthesetwocourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.state.type.Oneofthesetwocourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.state.type.Oneofthesetwocourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="state" id="field.reqComponentInfo.state.type.Oneofthesetwocourses.state.DEFAULT" parent="field.reqComponentInfo.state.type.Oneofthesetwocourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component State</dict:name>
	<dict:desc>The current status of the requirement component. The values for this field are constrained to those in the reqComponentState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Oneofthesetwocourses.state.DEFAULT.fd" parent="field.reqComponentInfo.state.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of valid lu requirement component states -->
<dict:constraintDescriptor id="field.reqComponentInfo.state.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.reqComponentInfo.state.type.Oneofthesetwocourses.state.DEFAULT.cd" parent="field.reqComponentInfo.state.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.reqComponentInfo.id.type.Oneofthesetwocourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.id.type.Oneofthesetwocourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.id.type.Oneofthesetwocourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.reqComponentInfo.id.type.Oneofthesetwocourses.state.DEFAULT" parent="field.reqComponentInfo.id.type.Oneofthesetwocourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Identifier</dict:name>
	<dict:desc>Unique identifier for a requirement component. This is optional, due to the identifier being set at the time of creation. Once the requirement component has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Oneofthesetwocourses.state.DEFAULT.fd" parent="field.reqComponentInfo.id.type.Oneofthesetwocourses.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.reqComponentInfo.id.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.reqComponentInfo.id.type.Oneofthesetwocourses.state.DEFAULT.cd" parent="field.reqComponentInfo.id.type.Oneofthesetwocourses.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.reqCompType.requisite.courseList.nof" id="object.reqComponentInfo.type.Nofthesecourses.abstract" abstract="true" parent="object.reqComponentInfo.type.DEFAULT.abstract">
	<dict:name>N of these courses</dict:name>
	<dict:desc>Student must take &lt;n&gt; courses from the specified courses</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.reqComponentInfo.type.Nofthesecourses.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompType.requisite.courseList.nof" id="object.reqComponentInfo.type.Nofthesecourses" parent="object.reqComponentInfo.type.Nofthesecourses.abstract"/>

<!-- ************************************************************************** -->
<!-- fields for object.reqComponentInfo.type.N of these courses.state.(default) -->
<!-- ************************************************************************** -->

<dict:state key="*" id="object.reqComponentInfo.type.Nofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.effectiveDate.type.Nofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.expirationDate.type.Nofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.type.type.Nofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.state.type.Nofthesecourses.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.id.type.Nofthesecourses.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.reqComponentInfo.type.Nofthesecourses.state.DEFAULT" parent="object.reqComponentInfo.type.Nofthesecourses.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Description</dict:name>
	<dict:desc>Narrative description of the requirement component.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.cd.abstract"/>

<!-- ***************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.desc.type.N of these courses.state.(default).richTextInfo -->
<!-- ***************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.desc.type.N of these courses.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.plain" parent="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.plain.fd" parent="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.plain.cd" parent="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.formatted" parent="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.formatted.fd" parent="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.formatted.cd" parent="field.reqComponentInfo.desc.type.Nofthesecourses.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field</dict:name>
	<dict:desc>Detailed information about a requirement component field value.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.cd.abstract"/>

<!-- ***************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.reqCompField.type.N of these courses.state.(default).reqCompFieldInfo -->
<!-- ***************************************************************************************************************** -->
<!-- Detailed information about a requirement component field value. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.N of these courses.state.(default).reqCompFieldInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.cd.abstract"/>

<!-- The value must be a cluId -->
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu</dict:name>
	<dict:desc>An Id of a Clu of type Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract"/>

<!-- ********************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.N of these courses.state.(default).reqCompFieldInfo.type.Credit Course Clu.state.(default) -->
<!-- ********************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<!-- The value must be a cluSetId -->
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu Set</dict:name>
	<dict:desc>An Id of a Set of Credit Course Clus</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract"/>

<!-- ************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.N of these courses.state.(default).reqCompFieldInfo.type.Credit Course Clu Set.state.(default) -->
<!-- ************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Required Count</dict:name>
	<dict:desc>A number to be compared to a count of clu&apos;s</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract"/>

<!-- ******************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.N of these courses.state.(default).reqCompFieldInfo.type.Required Count.state.(default) -->
<!-- ******************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Final Grade Learning Result Definition</dict:name>
	<dict:desc>A credit course paired with a minimum grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract"/>

<!-- ********************************************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.N of these courses.state.(default).reqCompFieldInfo.type.Credit Course Final Grade Learning Result Definition.state.(default) -->
<!-- ********************************************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>GPA</dict:name>
	<dict:desc>GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract"/>

<!-- ******************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.N of these courses.state.(default).reqCompFieldInfo.type.GPA.state.(default) -->
<!-- ******************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Total Credits</dict:name>
	<dict:desc>Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract"/>

<!-- ****************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.N of these courses.state.(default).reqCompFieldInfo.type.Total Credits.state.(default) -->
<!-- ****************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<!-- Enumerated list we have equal_to, not_equal_to, greater_than, less_than, greater_than_or_equal_to, less_than_or_equal_to
are we sure this isn't the operator used for Learning Result Definitions -->
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Operator</dict:name>
	<dict:desc>The operator use to compare other data fields</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract"/>

<!-- ************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.N of these courses.state.(default).reqCompFieldInfo.type.Operator.state.(default) -->
<!-- ************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract"/>

<!-- determines how counting is performed (credits/courses/etc) -->
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Count Type</dict:name>
	<dict:desc>Type of counting</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract"/>

<!-- *************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.N of these courses.state.(default).reqCompFieldInfo.type.Count Type.state.(default) -->
<!-- *************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Nofthesecourses.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Nofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Nofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Nofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Nofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.effectiveDate.type.Nofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Nofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this requirement component became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Nofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.effectiveDate.type.Nofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.effectiveDate.type.Nofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Nofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.effectiveDate.type.Nofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Nofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Nofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Nofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Nofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.expirationDate.type.Nofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Nofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this requirement component expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Nofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.expirationDate.type.Nofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.expirationDate.type.Nofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Nofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.expirationDate.type.Nofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.cd.abstract"/>

<!-- ***************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.metaInfo.type.N of these courses.state.(default).metaInfo -->
<!-- ***************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.metaInfo.type.N of these courses.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.versionInd" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.versionInd.fd" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.versionInd.cd" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createTime" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createTime.fd" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createTime.cd" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createId" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createId.fd" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createId.cd" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateTime" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateTime.fd" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateTime.cd" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateId" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateId.fd" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateId.cd" parent="field.reqComponentInfo.metaInfo.type.Nofthesecourses.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.reqComponentInfo.type.type.Nofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.type.type.Nofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.type.type.Nofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.reqComponentInfo.type.type.Nofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.type.type.Nofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Nofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Type</dict:name>
	<dict:desc>Unique identifier for a requirement component type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Nofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.type.type.Nofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component types -->
<dict:constraintDescriptor id="field.reqComponentInfo.type.type.Nofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.reqComponentInfo.type.type.Nofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.type.type.Nofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.reqComponentInfo.state.type.Nofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.state.type.Nofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.state.type.Nofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="state" id="field.reqComponentInfo.state.type.Nofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.state.type.Nofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Nofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component State</dict:name>
	<dict:desc>The current status of the requirement component. The values for this field are constrained to those in the reqComponentState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Nofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.state.type.Nofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of valid lu requirement component states -->
<dict:constraintDescriptor id="field.reqComponentInfo.state.type.Nofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.reqComponentInfo.state.type.Nofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.state.type.Nofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.reqComponentInfo.id.type.Nofthesecourses.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.id.type.Nofthesecourses.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.id.type.Nofthesecourses.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.reqComponentInfo.id.type.Nofthesecourses.state.DEFAULT" parent="field.reqComponentInfo.id.type.Nofthesecourses.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Nofthesecourses.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Identifier</dict:name>
	<dict:desc>Unique identifier for a requirement component. This is optional, due to the identifier being set at the time of creation. Once the requirement component has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Nofthesecourses.state.DEFAULT.fd" parent="field.reqComponentInfo.id.type.Nofthesecourses.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.reqComponentInfo.id.type.Nofthesecourses.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.reqComponentInfo.id.type.Nofthesecourses.state.DEFAULT.cd" parent="field.reqComponentInfo.id.type.Nofthesecourses.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.reqCompType.requisite.overall.gpa" id="object.reqComponentInfo.type.MinimumoverallGPA.abstract" abstract="true" parent="object.reqComponentInfo.type.DEFAULT.abstract">
	<dict:name>Minimum overall GPA</dict:name>
	<dict:desc>Student needs to have attained a minimum specified GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.reqComponentInfo.type.MinimumoverallGPA.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompType.requisite.overall.gpa" id="object.reqComponentInfo.type.MinimumoverallGPA" parent="object.reqComponentInfo.type.MinimumoverallGPA.abstract"/>

<!-- *************************************************************************** -->
<!-- fields for object.reqComponentInfo.type.Minimum overall GPA.state.(default) -->
<!-- *************************************************************************** -->

<dict:state key="*" id="object.reqComponentInfo.type.MinimumoverallGPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.effectiveDate.type.MinimumoverallGPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.expirationDate.type.MinimumoverallGPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.type.type.MinimumoverallGPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.state.type.MinimumoverallGPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.id.type.MinimumoverallGPA.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.reqComponentInfo.type.MinimumoverallGPA.state.DEFAULT" parent="object.reqComponentInfo.type.MinimumoverallGPA.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT" parent="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Description</dict:name>
	<dict:desc>Narrative description of the requirement component.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.fd" parent="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.cd" parent="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.cd.abstract"/>

<!-- ****************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.desc.type.Minimum overall GPA.state.(default).richTextInfo -->
<!-- ****************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- *************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.desc.type.Minimum overall GPA.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- *************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.plain" parent="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.plain.fd" parent="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.plain.cd" parent="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.formatted" parent="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.formatted.fd" parent="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.formatted.cd" parent="field.reqComponentInfo.desc.type.MinimumoverallGPA.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field</dict:name>
	<dict:desc>Detailed information about a requirement component field value.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.cd.abstract"/>

<!-- ****************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.reqCompField.type.Minimum overall GPA.state.(default).reqCompFieldInfo -->
<!-- ****************************************************************************************************************** -->
<!-- Detailed information about a requirement component field value. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract"/>

<!-- *************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall GPA.state.(default).reqCompFieldInfo.type.(default).state.(default) -->
<!-- *************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.cd.abstract"/>

<!-- The value must be a cluId -->
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu</dict:name>
	<dict:desc>An Id of a Clu of type Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract"/>

<!-- *********************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall GPA.state.(default).reqCompFieldInfo.type.Credit Course Clu.state.(default) -->
<!-- *********************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<!-- The value must be a cluSetId -->
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu Set</dict:name>
	<dict:desc>An Id of a Set of Credit Course Clus</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract"/>

<!-- *************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall GPA.state.(default).reqCompFieldInfo.type.Credit Course Clu Set.state.(default) -->
<!-- *************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Required Count</dict:name>
	<dict:desc>A number to be compared to a count of clu&apos;s</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.RequiredCount" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract"/>

<!-- ******************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall GPA.state.(default).reqCompFieldInfo.type.Required Count.state.(default) -->
<!-- ******************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Final Grade Learning Result Definition</dict:name>
	<dict:desc>A credit course paired with a minimum grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract"/>

<!-- ********************************************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall GPA.state.(default).reqCompFieldInfo.type.Credit Course Final Grade Learning Result Definition.state.(default) -->
<!-- ********************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>GPA</dict:name>
	<dict:desc>GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.GPA" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract"/>

<!-- ********************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall GPA.state.(default).reqCompFieldInfo.type.GPA.state.(default) -->
<!-- ********************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Total Credits</dict:name>
	<dict:desc>Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.TotalCredits" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract"/>

<!-- ******************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall GPA.state.(default).reqCompFieldInfo.type.Total Credits.state.(default) -->
<!-- ******************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<!-- Enumerated list we have equal_to, not_equal_to, greater_than, less_than, greater_than_or_equal_to, less_than_or_equal_to
are we sure this isn't the operator used for Learning Result Definitions -->
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Operator</dict:name>
	<dict:desc>The operator use to compare other data fields</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.Operator" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract"/>

<!-- ************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall GPA.state.(default).reqCompFieldInfo.type.Operator.state.(default) -->
<!-- ************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract"/>

<!-- determines how counting is performed (credits/courses/etc) -->
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Count Type</dict:name>
	<dict:desc>Type of counting</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CountType" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract"/>

<!-- **************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall GPA.state.(default).reqCompFieldInfo.type.Count Type.state.(default) -->
<!-- **************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.MinimumoverallGPA.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.MinimumoverallGPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.MinimumoverallGPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.MinimumoverallGPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.MinimumoverallGPA.state.DEFAULT" parent="field.reqComponentInfo.effectiveDate.type.MinimumoverallGPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.MinimumoverallGPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this requirement component became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.MinimumoverallGPA.state.DEFAULT.fd" parent="field.reqComponentInfo.effectiveDate.type.MinimumoverallGPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.effectiveDate.type.MinimumoverallGPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.MinimumoverallGPA.state.DEFAULT.cd" parent="field.reqComponentInfo.effectiveDate.type.MinimumoverallGPA.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.MinimumoverallGPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.expirationDate.type.MinimumoverallGPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.expirationDate.type.MinimumoverallGPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.MinimumoverallGPA.state.DEFAULT" parent="field.reqComponentInfo.expirationDate.type.MinimumoverallGPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.MinimumoverallGPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this requirement component expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.MinimumoverallGPA.state.DEFAULT.fd" parent="field.reqComponentInfo.expirationDate.type.MinimumoverallGPA.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.expirationDate.type.MinimumoverallGPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.MinimumoverallGPA.state.DEFAULT.cd" parent="field.reqComponentInfo.expirationDate.type.MinimumoverallGPA.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.fd" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.cd" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.cd.abstract"/>

<!-- ****************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.metaInfo.type.Minimum overall GPA.state.(default).metaInfo -->
<!-- ****************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- *************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.metaInfo.type.Minimum overall GPA.state.(default).metaInfo.type.(default).state.(default) -->
<!-- *************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.versionInd" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.versionInd.fd" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.versionInd.cd" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createTime" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createTime.fd" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createTime.cd" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createId" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createId.fd" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createId.cd" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateTime" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateTime.fd" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateTime.cd" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateId" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateId.fd" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateId.cd" parent="field.reqComponentInfo.metaInfo.type.MinimumoverallGPA.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.reqComponentInfo.type.type.MinimumoverallGPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.type.type.MinimumoverallGPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.type.type.MinimumoverallGPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.reqComponentInfo.type.type.MinimumoverallGPA.state.DEFAULT" parent="field.reqComponentInfo.type.type.MinimumoverallGPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.MinimumoverallGPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Type</dict:name>
	<dict:desc>Unique identifier for a requirement component type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.MinimumoverallGPA.state.DEFAULT.fd" parent="field.reqComponentInfo.type.type.MinimumoverallGPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component types -->
<dict:constraintDescriptor id="field.reqComponentInfo.type.type.MinimumoverallGPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.reqComponentInfo.type.type.MinimumoverallGPA.state.DEFAULT.cd" parent="field.reqComponentInfo.type.type.MinimumoverallGPA.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.reqComponentInfo.state.type.MinimumoverallGPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.state.type.MinimumoverallGPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.state.type.MinimumoverallGPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="state" id="field.reqComponentInfo.state.type.MinimumoverallGPA.state.DEFAULT" parent="field.reqComponentInfo.state.type.MinimumoverallGPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.MinimumoverallGPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component State</dict:name>
	<dict:desc>The current status of the requirement component. The values for this field are constrained to those in the reqComponentState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.MinimumoverallGPA.state.DEFAULT.fd" parent="field.reqComponentInfo.state.type.MinimumoverallGPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of valid lu requirement component states -->
<dict:constraintDescriptor id="field.reqComponentInfo.state.type.MinimumoverallGPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.reqComponentInfo.state.type.MinimumoverallGPA.state.DEFAULT.cd" parent="field.reqComponentInfo.state.type.MinimumoverallGPA.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.reqComponentInfo.id.type.MinimumoverallGPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.id.type.MinimumoverallGPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.id.type.MinimumoverallGPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.reqComponentInfo.id.type.MinimumoverallGPA.state.DEFAULT" parent="field.reqComponentInfo.id.type.MinimumoverallGPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.MinimumoverallGPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Identifier</dict:name>
	<dict:desc>Unique identifier for a requirement component. This is optional, due to the identifier being set at the time of creation. Once the requirement component has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.MinimumoverallGPA.state.DEFAULT.fd" parent="field.reqComponentInfo.id.type.MinimumoverallGPA.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.reqComponentInfo.id.type.MinimumoverallGPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.reqComponentInfo.id.type.MinimumoverallGPA.state.DEFAULT.cd" parent="field.reqComponentInfo.id.type.MinimumoverallGPA.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.reqCompType.requisite.overall.credit" id="object.reqComponentInfo.type.Minimumoveralltotalcredits.abstract" abstract="true" parent="object.reqComponentInfo.type.DEFAULT.abstract">
	<dict:name>Minimum overall total credits</dict:name>
	<dict:desc>Student needs to have earned a minimum specified Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.reqComponentInfo.type.Minimumoveralltotalcredits.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompType.requisite.overall.credit" id="object.reqComponentInfo.type.Minimumoveralltotalcredits" parent="object.reqComponentInfo.type.Minimumoveralltotalcredits.abstract"/>

<!-- ************************************************************************************* -->
<!-- fields for object.reqComponentInfo.type.Minimum overall total credits.state.(default) -->
<!-- ************************************************************************************* -->

<dict:state key="*" id="object.reqComponentInfo.type.Minimumoveralltotalcredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.effectiveDate.type.Minimumoveralltotalcredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.expirationDate.type.Minimumoveralltotalcredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.type.type.Minimumoveralltotalcredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.state.type.Minimumoveralltotalcredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.id.type.Minimumoveralltotalcredits.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.reqComponentInfo.type.Minimumoveralltotalcredits.state.DEFAULT" parent="object.reqComponentInfo.type.Minimumoveralltotalcredits.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT" parent="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Description</dict:name>
	<dict:desc>Narrative description of the requirement component.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.fd" parent="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.cd" parent="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract"/>

<!-- **************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.desc.type.Minimum overall total credits.state.(default).richTextInfo -->
<!-- **************************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.desc.type.Minimum overall total credits.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.plain" parent="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.plain.fd" parent="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.plain.cd" parent="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.formatted" parent="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.formatted.fd" parent="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.formatted.cd" parent="field.reqComponentInfo.desc.type.Minimumoveralltotalcredits.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field</dict:name>
	<dict:desc>Detailed information about a requirement component field value.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract"/>

<!-- **************************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.reqCompField.type.Minimum overall total credits.state.(default).reqCompFieldInfo -->
<!-- **************************************************************************************************************************** -->
<!-- Detailed information about a requirement component field value. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall total credits.state.(default).reqCompFieldInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.cd.abstract"/>

<!-- The value must be a cluId -->
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu</dict:name>
	<dict:desc>An Id of a Clu of type Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract"/>

<!-- ********************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall total credits.state.(default).reqCompFieldInfo.type.Credit Course Clu.state.(default) -->
<!-- ********************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<!-- The value must be a cluSetId -->
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu Set</dict:name>
	<dict:desc>An Id of a Set of Credit Course Clus</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract"/>

<!-- ************************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall total credits.state.(default).reqCompFieldInfo.type.Credit Course Clu Set.state.(default) -->
<!-- ************************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Required Count</dict:name>
	<dict:desc>A number to be compared to a count of clu&apos;s</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.RequiredCount" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract"/>

<!-- ****************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall total credits.state.(default).reqCompFieldInfo.type.Required Count.state.(default) -->
<!-- ****************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Final Grade Learning Result Definition</dict:name>
	<dict:desc>A credit course paired with a minimum grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract"/>

<!-- ******************************************************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall total credits.state.(default).reqCompFieldInfo.type.Credit Course Final Grade Learning Result Definition.state.(default) -->
<!-- ******************************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>GPA</dict:name>
	<dict:desc>GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.GPA" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract"/>

<!-- ******************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall total credits.state.(default).reqCompFieldInfo.type.GPA.state.(default) -->
<!-- ******************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Total Credits</dict:name>
	<dict:desc>Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.TotalCredits" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract"/>

<!-- ***************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall total credits.state.(default).reqCompFieldInfo.type.Total Credits.state.(default) -->
<!-- ***************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<!-- Enumerated list we have equal_to, not_equal_to, greater_than, less_than, greater_than_or_equal_to, less_than_or_equal_to
are we sure this isn't the operator used for Learning Result Definitions -->
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Operator</dict:name>
	<dict:desc>The operator use to compare other data fields</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.Operator" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract"/>

<!-- ************************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall total credits.state.(default).reqCompFieldInfo.type.Operator.state.(default) -->
<!-- ************************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract"/>

<!-- determines how counting is performed (credits/courses/etc) -->
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Count Type</dict:name>
	<dict:desc>Type of counting</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CountType" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract"/>

<!-- ************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Minimum overall total credits.state.(default).reqCompFieldInfo.type.Count Type.state.(default) -->
<!-- ************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Minimumoveralltotalcredits.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Minimumoveralltotalcredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Minimumoveralltotalcredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Minimumoveralltotalcredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Minimumoveralltotalcredits.state.DEFAULT" parent="field.reqComponentInfo.effectiveDate.type.Minimumoveralltotalcredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this requirement component became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Minimumoveralltotalcredits.state.DEFAULT.fd" parent="field.reqComponentInfo.effectiveDate.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.effectiveDate.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Minimumoveralltotalcredits.state.DEFAULT.cd" parent="field.reqComponentInfo.effectiveDate.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Minimumoveralltotalcredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Minimumoveralltotalcredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Minimumoveralltotalcredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Minimumoveralltotalcredits.state.DEFAULT" parent="field.reqComponentInfo.expirationDate.type.Minimumoveralltotalcredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this requirement component expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Minimumoveralltotalcredits.state.DEFAULT.fd" parent="field.reqComponentInfo.expirationDate.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.expirationDate.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Minimumoveralltotalcredits.state.DEFAULT.cd" parent="field.reqComponentInfo.expirationDate.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.fd" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.cd" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract"/>

<!-- **************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.metaInfo.type.Minimum overall total credits.state.(default).metaInfo -->
<!-- **************************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.metaInfo.type.Minimum overall total credits.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.versionInd" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.versionInd.fd" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.versionInd.cd" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createTime" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createTime.fd" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createTime.cd" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createId" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createId.fd" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createId.cd" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateTime" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateTime.fd" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateTime.cd" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateId" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateId.fd" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateId.cd" parent="field.reqComponentInfo.metaInfo.type.Minimumoveralltotalcredits.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.reqComponentInfo.type.type.Minimumoveralltotalcredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.type.type.Minimumoveralltotalcredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.type.type.Minimumoveralltotalcredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.reqComponentInfo.type.type.Minimumoveralltotalcredits.state.DEFAULT" parent="field.reqComponentInfo.type.type.Minimumoveralltotalcredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Type</dict:name>
	<dict:desc>Unique identifier for a requirement component type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Minimumoveralltotalcredits.state.DEFAULT.fd" parent="field.reqComponentInfo.type.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component types -->
<dict:constraintDescriptor id="field.reqComponentInfo.type.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.reqComponentInfo.type.type.Minimumoveralltotalcredits.state.DEFAULT.cd" parent="field.reqComponentInfo.type.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.reqComponentInfo.state.type.Minimumoveralltotalcredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.state.type.Minimumoveralltotalcredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.state.type.Minimumoveralltotalcredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="state" id="field.reqComponentInfo.state.type.Minimumoveralltotalcredits.state.DEFAULT" parent="field.reqComponentInfo.state.type.Minimumoveralltotalcredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component State</dict:name>
	<dict:desc>The current status of the requirement component. The values for this field are constrained to those in the reqComponentState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Minimumoveralltotalcredits.state.DEFAULT.fd" parent="field.reqComponentInfo.state.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of valid lu requirement component states -->
<dict:constraintDescriptor id="field.reqComponentInfo.state.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.reqComponentInfo.state.type.Minimumoveralltotalcredits.state.DEFAULT.cd" parent="field.reqComponentInfo.state.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.reqComponentInfo.id.type.Minimumoveralltotalcredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.id.type.Minimumoveralltotalcredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.id.type.Minimumoveralltotalcredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.reqComponentInfo.id.type.Minimumoveralltotalcredits.state.DEFAULT" parent="field.reqComponentInfo.id.type.Minimumoveralltotalcredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Identifier</dict:name>
	<dict:desc>Unique identifier for a requirement component. This is optional, due to the identifier being set at the time of creation. Once the requirement component has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Minimumoveralltotalcredits.state.DEFAULT.fd" parent="field.reqComponentInfo.id.type.Minimumoveralltotalcredits.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.reqComponentInfo.id.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.reqComponentInfo.id.type.Minimumoveralltotalcredits.state.DEFAULT.cd" parent="field.reqComponentInfo.id.type.Minimumoveralltotalcredits.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.reqCompType.requisite.grdCondCourseList" id="object.reqComponentInfo.type.Coursecompletedwithminimumspecifiedgrade.abstract" abstract="true" parent="object.reqComponentInfo.type.DEFAULT.abstract">
	<dict:name>Course completed with minimum specified grade</dict:name>
	<dict:desc>Student must have completed the specified course with a minium specified grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.reqComponentInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompType.requisite.grdCondCourseList" id="object.reqComponentInfo.type.Coursecompletedwithminimumspecifiedgrade" parent="object.reqComponentInfo.type.Coursecompletedwithminimumspecifiedgrade.abstract"/>

<!-- ***************************************************************************************************** -->
<!-- fields for object.reqComponentInfo.type.Course completed with minimum specified grade.state.(default) -->
<!-- ***************************************************************************************************** -->

<dict:state key="*" id="object.reqComponentInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.effectiveDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.expirationDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.type.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.state.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.id.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.reqComponentInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT" parent="object.reqComponentInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT" parent="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Description</dict:name>
	<dict:desc>Narrative description of the requirement component.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd" parent="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd" parent="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.desc.type.Course completed with minimum specified grade.state.(default).richTextInfo -->
<!-- ******************************************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.desc.type.Course completed with minimum specified grade.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.plain" parent="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.plain.fd" parent="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.plain.cd" parent="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.formatted" parent="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.formatted.fd" parent="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.formatted.cd" parent="field.reqComponentInfo.desc.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field</dict:name>
	<dict:desc>Detailed information about a requirement component field value.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.reqCompField.type.Course completed with minimum specified grade.state.(default).reqCompFieldInfo -->
<!-- ******************************************************************************************************************************************** -->
<!-- Detailed information about a requirement component field value. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Course completed with minimum specified grade.state.(default).reqCompFieldInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.cd.abstract"/>

<!-- The value must be a cluId -->
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu</dict:name>
	<dict:desc>An Id of a Clu of type Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract"/>

<!-- ************************************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Course completed with minimum specified grade.state.(default).reqCompFieldInfo.type.Credit Course Clu.state.(default) -->
<!-- ************************************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<!-- The value must be a cluSetId -->
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu Set</dict:name>
	<dict:desc>An Id of a Set of Credit Course Clus</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract"/>

<!-- ***************************************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Course completed with minimum specified grade.state.(default).reqCompFieldInfo.type.Credit Course Clu Set.state.(default) -->
<!-- ***************************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Required Count</dict:name>
	<dict:desc>A number to be compared to a count of clu&apos;s</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.RequiredCount" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract"/>

<!-- ********************************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Course completed with minimum specified grade.state.(default).reqCompFieldInfo.type.Required Count.state.(default) -->
<!-- ********************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Final Grade Learning Result Definition</dict:name>
	<dict:desc>A credit course paired with a minimum grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract"/>

<!-- ************************************************************************************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Course completed with minimum specified grade.state.(default).reqCompFieldInfo.type.Credit Course Final Grade Learning Result Definition.state.(default) -->
<!-- ************************************************************************************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>GPA</dict:name>
	<dict:desc>GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.GPA" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract"/>

<!-- *********************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Course completed with minimum specified grade.state.(default).reqCompFieldInfo.type.GPA.state.(default) -->
<!-- *********************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Total Credits</dict:name>
	<dict:desc>Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.TotalCredits" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract"/>

<!-- ********************************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Course completed with minimum specified grade.state.(default).reqCompFieldInfo.type.Total Credits.state.(default) -->
<!-- ********************************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<!-- Enumerated list we have equal_to, not_equal_to, greater_than, less_than, greater_than_or_equal_to, less_than_or_equal_to
are we sure this isn't the operator used for Learning Result Definitions -->
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Operator</dict:name>
	<dict:desc>The operator use to compare other data fields</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.Operator" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract"/>

<!-- **************************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Course completed with minimum specified grade.state.(default).reqCompFieldInfo.type.Operator.state.(default) -->
<!-- **************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract"/>

<!-- determines how counting is performed (credits/courses/etc) -->
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Count Type</dict:name>
	<dict:desc>Type of counting</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CountType" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract"/>

<!-- ****************************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.Course completed with minimum specified grade.state.(default).reqCompFieldInfo.type.Count Type.state.(default) -->
<!-- ****************************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT" parent="field.reqComponentInfo.effectiveDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this requirement component became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd" parent="field.reqComponentInfo.effectiveDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.effectiveDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd" parent="field.reqComponentInfo.effectiveDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT" parent="field.reqComponentInfo.expirationDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this requirement component expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd" parent="field.reqComponentInfo.expirationDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.expirationDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd" parent="field.reqComponentInfo.expirationDate.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.metaInfo.type.Course completed with minimum specified grade.state.(default).metaInfo -->
<!-- ******************************************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.metaInfo.type.Course completed with minimum specified grade.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.versionInd" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.versionInd.fd" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.versionInd.cd" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createTime" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createTime.fd" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createTime.cd" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createId" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createId.fd" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createId.cd" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateTime" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateTime.fd" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateTime.cd" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateId" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateId.fd" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateId.cd" parent="field.reqComponentInfo.metaInfo.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.reqComponentInfo.type.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.type.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.type.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.reqComponentInfo.type.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT" parent="field.reqComponentInfo.type.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Type</dict:name>
	<dict:desc>Unique identifier for a requirement component type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd" parent="field.reqComponentInfo.type.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component types -->
<dict:constraintDescriptor id="field.reqComponentInfo.type.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.reqComponentInfo.type.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd" parent="field.reqComponentInfo.type.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.reqComponentInfo.state.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.state.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.state.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="state" id="field.reqComponentInfo.state.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT" parent="field.reqComponentInfo.state.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component State</dict:name>
	<dict:desc>The current status of the requirement component. The values for this field are constrained to those in the reqComponentState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd" parent="field.reqComponentInfo.state.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of valid lu requirement component states -->
<dict:constraintDescriptor id="field.reqComponentInfo.state.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.reqComponentInfo.state.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd" parent="field.reqComponentInfo.state.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.reqComponentInfo.id.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.id.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.id.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.reqComponentInfo.id.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT" parent="field.reqComponentInfo.id.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Identifier</dict:name>
	<dict:desc>Unique identifier for a requirement component. This is optional, due to the identifier being set at the time of creation. Once the requirement component has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd" parent="field.reqComponentInfo.id.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.reqComponentInfo.id.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.reqComponentInfo.id.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd" parent="field.reqComponentInfo.id.type.Coursecompletedwithminimumspecifiedgrade.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.reqCompType.requisite.programList.oneof" id="object.reqComponentInfo.type.Oneoftheseprograms.abstract" abstract="true" parent="object.reqComponentInfo.type.DEFAULT.abstract">
	<dict:name>One of these programs</dict:name>
	<dict:desc>Enrollment is limited to students in the following programs</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.reqComponentInfo.type.Oneoftheseprograms.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompType.requisite.programList.oneof" id="object.reqComponentInfo.type.Oneoftheseprograms" parent="object.reqComponentInfo.type.Oneoftheseprograms.abstract"/>

<!-- ***************************************************************************** -->
<!-- fields for object.reqComponentInfo.type.One of these programs.state.(default) -->
<!-- ***************************************************************************** -->

<dict:state key="*" id="object.reqComponentInfo.type.Oneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.effectiveDate.type.Oneoftheseprograms.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.expirationDate.type.Oneoftheseprograms.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.type.type.Oneoftheseprograms.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.state.type.Oneoftheseprograms.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.id.type.Oneoftheseprograms.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.reqComponentInfo.type.Oneoftheseprograms.state.DEFAULT" parent="object.reqComponentInfo.type.Oneoftheseprograms.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Description</dict:name>
	<dict:desc>Narrative description of the requirement component.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.desc.type.One of these programs.state.(default).richTextInfo -->
<!-- ******************************************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.desc.type.One of these programs.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.plain" parent="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.plain.fd" parent="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.plain.cd" parent="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.formatted" parent="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.formatted.fd" parent="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.formatted.cd" parent="field.reqComponentInfo.desc.type.Oneoftheseprograms.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field</dict:name>
	<dict:desc>Detailed information about a requirement component field value.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.reqCompField.type.One of these programs.state.(default).reqCompFieldInfo -->
<!-- ******************************************************************************************************************** -->
<!-- Detailed information about a requirement component field value. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these programs.state.(default).reqCompFieldInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.cd.abstract"/>

<!-- The value must be a cluId -->
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu</dict:name>
	<dict:desc>An Id of a Clu of type Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract"/>

<!-- ************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these programs.state.(default).reqCompFieldInfo.type.Credit Course Clu.state.(default) -->
<!-- ************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<!-- The value must be a cluSetId -->
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu Set</dict:name>
	<dict:desc>An Id of a Set of Credit Course Clus</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract"/>

<!-- ***************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these programs.state.(default).reqCompFieldInfo.type.Credit Course Clu Set.state.(default) -->
<!-- ***************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Required Count</dict:name>
	<dict:desc>A number to be compared to a count of clu&apos;s</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.RequiredCount" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract"/>

<!-- ********************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these programs.state.(default).reqCompFieldInfo.type.Required Count.state.(default) -->
<!-- ********************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Final Grade Learning Result Definition</dict:name>
	<dict:desc>A credit course paired with a minimum grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract"/>

<!-- ************************************************************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these programs.state.(default).reqCompFieldInfo.type.Credit Course Final Grade Learning Result Definition.state.(default) -->
<!-- ************************************************************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>GPA</dict:name>
	<dict:desc>GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.GPA" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract"/>

<!-- *********************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these programs.state.(default).reqCompFieldInfo.type.GPA.state.(default) -->
<!-- *********************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Total Credits</dict:name>
	<dict:desc>Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.TotalCredits" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract"/>

<!-- ********************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these programs.state.(default).reqCompFieldInfo.type.Total Credits.state.(default) -->
<!-- ********************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<!-- Enumerated list we have equal_to, not_equal_to, greater_than, less_than, greater_than_or_equal_to, less_than_or_equal_to
are we sure this isn't the operator used for Learning Result Definitions -->
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Operator</dict:name>
	<dict:desc>The operator use to compare other data fields</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.Operator" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract"/>

<!-- **************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these programs.state.(default).reqCompFieldInfo.type.Operator.state.(default) -->
<!-- **************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract"/>

<!-- determines how counting is performed (credits/courses/etc) -->
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Count Type</dict:name>
	<dict:desc>Type of counting</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CountType" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract"/>

<!-- ****************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.One of these programs.state.(default).reqCompFieldInfo.type.Count Type.state.(default) -->
<!-- ****************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Oneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Oneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Oneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.effectiveDate.type.Oneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this requirement component became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.effectiveDate.type.Oneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.effectiveDate.type.Oneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Oneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.effectiveDate.type.Oneoftheseprograms.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Oneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Oneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.expirationDate.type.Oneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this requirement component expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.expirationDate.type.Oneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.expirationDate.type.Oneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Oneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.expirationDate.type.Oneoftheseprograms.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.cd.abstract"/>

<!-- ******************************************************************************************************** -->
<!-- object structure for field.reqComponentInfo.metaInfo.type.One of these programs.state.(default).metaInfo -->
<!-- ******************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ***************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.metaInfo.type.One of these programs.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ***************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.versionInd" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.versionInd.fd" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.versionInd.cd" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createTime" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createTime.fd" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createTime.cd" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createId" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createId.fd" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createId.cd" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateTime" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateTime.fd" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateTime.cd" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateId" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateId.fd" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateId.cd" parent="field.reqComponentInfo.metaInfo.type.Oneoftheseprograms.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.reqComponentInfo.type.type.Oneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.type.type.Oneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.type.type.Oneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.reqComponentInfo.type.type.Oneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.type.type.Oneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Oneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Type</dict:name>
	<dict:desc>Unique identifier for a requirement component type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Oneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.type.type.Oneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component types -->
<dict:constraintDescriptor id="field.reqComponentInfo.type.type.Oneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.reqComponentInfo.type.type.Oneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.type.type.Oneoftheseprograms.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.reqComponentInfo.state.type.Oneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.state.type.Oneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.state.type.Oneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="state" id="field.reqComponentInfo.state.type.Oneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.state.type.Oneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Oneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component State</dict:name>
	<dict:desc>The current status of the requirement component. The values for this field are constrained to those in the reqComponentState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Oneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.state.type.Oneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of valid lu requirement component states -->
<dict:constraintDescriptor id="field.reqComponentInfo.state.type.Oneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.reqComponentInfo.state.type.Oneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.state.type.Oneoftheseprograms.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.reqComponentInfo.id.type.Oneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.id.type.Oneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.id.type.Oneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.reqComponentInfo.id.type.Oneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.id.type.Oneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Oneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Identifier</dict:name>
	<dict:desc>Unique identifier for a requirement component. This is optional, due to the identifier being set at the time of creation. Once the requirement component has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Oneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.id.type.Oneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.reqComponentInfo.id.type.Oneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.reqComponentInfo.id.type.Oneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.id.type.Oneoftheseprograms.state.DEFAULT.cd.abstract"/>

<dict:type key="kuali.reqCompType.requisite.programList.none" id="object.reqComponentInfo.type.Noneoftheseprograms.abstract" abstract="true" parent="object.reqComponentInfo.type.DEFAULT.abstract">
	<dict:name>None of these programs</dict:name>
	<dict:desc>Enrollment is not available to students in the following programs</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="object.reqComponentInfo.type.Noneoftheseprograms.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompType.requisite.programList.none" id="object.reqComponentInfo.type.Noneoftheseprograms" parent="object.reqComponentInfo.type.Noneoftheseprograms.abstract"/>

<!-- ****************************************************************************** -->
<!-- fields for object.reqComponentInfo.type.None of these programs.state.(default) -->
<!-- ****************************************************************************** -->

<dict:state key="*" id="object.reqComponentInfo.type.Noneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.effectiveDate.type.Noneoftheseprograms.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.expirationDate.type.Noneoftheseprograms.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.type.type.Noneoftheseprograms.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.state.type.Noneoftheseprograms.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.id.type.Noneoftheseprograms.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="object.reqComponentInfo.type.Noneoftheseprograms.state.DEFAULT" parent="object.reqComponentInfo.type.Noneoftheseprograms.state.DEFAULT.abstract"/>


<dict:field key="desc" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="desc" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Description</dict:name>
	<dict:desc>Narrative description of the requirement component.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.cd.abstract"/>

<!-- ********************************************************************************************************* -->
<!-- object structure for field.reqComponentInfo.desc.type.None of these programs.state.(default).richTextInfo -->
<!-- ********************************************************************************************************* -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.type.DEFAULT" parent="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.type.DEFAULT.abstract"/>

<!-- ****************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.desc.type.None of these programs.state.(default).richTextInfo.type.(default).state.(default) -->
<!-- ****************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.plain"/>
	<dict:fieldRef bean="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.formatted"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo" parent="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.abstract"/>


<dict:field key="plain" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.plain" parent="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.plain.fd" parent="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.plain.cd" parent="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.plain.cd.abstract"/>

<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.formatted" parent="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.formatted.fd" parent="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.formatted.cd" parent="field.reqComponentInfo.desc.type.Noneoftheseprograms.state.DEFAULT.richTextInfo.formatted.cd.abstract"/>

<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field</dict:name>
	<dict:desc>Detailed information about a requirement component field value.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="reqCompField" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.cd.abstract"/>

<!-- ********************************************************************************************************************* -->
<!-- object structure for field.reqComponentInfo.reqCompField.type.None of these programs.state.(default).reqCompFieldInfo -->
<!-- ********************************************************************************************************************* -->
<!-- Detailed information about a requirement component field value. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.ReqCompFieldInfo" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract"/>

<!-- ****************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these programs.state.(default).reqCompFieldInfo.type.(default).state.(default) -->
<!-- ****************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.cd.abstract"/>

<!-- The value must be a cluId -->
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu</dict:name>
	<dict:desc>An Id of a Clu of type Credit Course</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.abstract"/>

<!-- ************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these programs.state.(default).reqCompFieldInfo.type.Credit Course Clu.state.(default) -->
<!-- ************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseClu.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseClu.state.DEFAULT.cd.abstract"/>

<!-- The value must be a cluSetId -->
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Clu Set</dict:name>
	<dict:desc>An Id of a Set of Credit Course Clus</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.credit.course.set" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.abstract"/>

<!-- ****************************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these programs.state.(default).reqCompFieldInfo.type.Credit Course Clu Set.state.(default) -->
<!-- ****************************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseCluSet.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseCluSet.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Required Count</dict:name>
	<dict:desc>A number to be compared to a count of clu&apos;s</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.requiredCount" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.RequiredCount" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.abstract"/>

<!-- *********************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these programs.state.(default).reqCompFieldInfo.type.Required Count.state.(default) -->
<!-- *********************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.RequiredCount.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.RequiredCount.state.DEFAULT.cd.abstract"/>

<!-- The value must be an integer -->
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Credit Course Final Grade Learning Result Definition</dict:name>
	<dict:desc>A credit course paired with a minimum grade</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.lrd.credit.course.final.grade" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.abstract"/>

<!-- ************************************************************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these programs.state.(default).reqCompFieldInfo.type.Credit Course Final Grade Learning Result Definition.state.(default) -->
<!-- ************************************************************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CreditCourseFinalGradeLearningResultDefinition.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>GPA</dict:name>
	<dict:desc>GPA</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.gpa" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.GPA" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.GPA.abstract"/>

<!-- ************************************************************************************************************************************ -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these programs.state.(default).reqCompFieldInfo.type.GPA.state.(default) -->
<!-- ************************************************************************************************************************************ -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.GPA.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.GPA.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.GPA.state.DEFAULT.cd.abstract"/>

<!-- The value must be a number -->
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Total Credits</dict:name>
	<dict:desc>Total Credits</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.overall.totalCredits" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.TotalCredits" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.abstract"/>

<!-- ********************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these programs.state.(default).reqCompFieldInfo.type.Total Credits.state.(default) -->
<!-- ********************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.TotalCredits.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.TotalCredits.state.DEFAULT.cd.abstract"/>

<!-- Enumerated list we have equal_to, not_equal_to, greater_than, less_than, greater_than_or_equal_to, less_than_or_equal_to
are we sure this isn't the operator used for Learning Result Definitions -->
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Operator</dict:name>
	<dict:desc>The operator use to compare other data fields</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.operator" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.Operator" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.Operator.abstract"/>

<!-- ***************************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these programs.state.(default).reqCompFieldInfo.type.Operator.state.(default) -->
<!-- ***************************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.Operator.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.Operator.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.Operator.state.DEFAULT.cd.abstract"/>

<!-- determines how counting is performed (credits/courses/etc) -->
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract" abstract="true" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.DEFAULT.abstract">
	<dict:name>Count Type</dict:name>
	<dict:desc>Type of counting</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT"/>
</dict:type>
<dict:type key="kuali.reqCompFieldType.countType" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CountType" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CountType.abstract"/>

<!-- ******************************************************************************************************************************************* -->
<!-- fields for field.reqComponentInfo.reqCompField.type.None of these programs.state.(default).reqCompFieldInfo.type.Count Type.state.(default) -->
<!-- ******************************************************************************************************************************************* -->

<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT"/>
	<dict:fieldRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.type.CountType.state.DEFAULT.abstract"/>


<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Value</dict:name>
	<dict:desc>Value for this requirement component field.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.value.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Field Type Key</dict:name>
	<dict:desc>Unique identifier for a requirement component field type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component field keys -->
<dict:constraintDescriptor id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.field.keys"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="key" id="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd" parent="field.reqComponentInfo.reqCompField.type.Noneoftheseprograms.state.DEFAULT.reqCompFieldInfo.key.type.CountType.state.DEFAULT.cd.abstract"/>

<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Noneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Noneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.effectiveDate.type.Noneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Noneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.effectiveDate.type.Noneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Noneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time that this requirement component became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Noneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.effectiveDate.type.Noneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.effectiveDate.type.Noneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.reqComponentInfo.effectiveDate.type.Noneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.effectiveDate.type.Noneoftheseprograms.state.DEFAULT.cd.abstract"/>

<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Noneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Noneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.expirationDate.type.Noneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Noneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.expirationDate.type.Noneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Noneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this requirement component expires. This is a similar concept to the expiration date on enumerated values. If specified, this must be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Noneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.expirationDate.type.Noneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.reqComponentInfo.expirationDate.type.Noneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.reqComponentInfo.expirationDate.type.Noneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.expirationDate.type.Noneoftheseprograms.state.DEFAULT.cd.abstract"/>

<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>complex</dict:dataType>
		<dict:objectStructureRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.cd.abstract"/>

<!-- ********************************************************************************************************* -->
<!-- object structure for field.reqComponentInfo.metaInfo.type.None of these programs.state.(default).metaInfo -->
<!-- ********************************************************************************************************* -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.type.DEFAULT"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.abstract"/>

<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.type.DEFAULT.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo"/>
</dict:type>
<dict:type key="*" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.type.DEFAULT" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.type.DEFAULT.abstract"/>

<!-- ****************************************************************************************************************************** -->
<!-- fields for field.reqComponentInfo.metaInfo.type.None of these programs.state.(default).metaInfo.type.(default).state.(default) -->
<!-- ****************************************************************************************************************************** -->

<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createId"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.versionInd" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.versionInd.fd" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.versionInd.cd" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createTime" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createTime.fd" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createTime.cd" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createId" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createId.fd" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createId.cd" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateTime" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateTime.fd" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateTime.cd" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateId" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateId.fd" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateId.cd" parent="field.reqComponentInfo.metaInfo.type.Noneoftheseprograms.state.DEFAULT.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.reqComponentInfo.type.type.Noneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.type.type.Noneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.type.type.Noneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="type" id="field.reqComponentInfo.type.type.Noneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.type.type.Noneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Noneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Type</dict:name>
	<dict:desc>Unique identifier for a requirement component type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.reqComponentInfo.type.type.Noneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.type.type.Noneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of valid lu requirement component types -->
<dict:constraintDescriptor id="field.reqComponentInfo.type.type.Noneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.reqComponentInfo.type.type.Noneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.type.type.Noneoftheseprograms.state.DEFAULT.cd.abstract"/>

<dict:field key="state" id="field.reqComponentInfo.state.type.Noneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.state.type.Noneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.state.type.Noneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="state" id="field.reqComponentInfo.state.type.Noneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.state.type.Noneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Noneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component State</dict:name>
	<dict:desc>The current status of the requirement component. The values for this field are constrained to those in the reqComponentState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.reqComponentInfo.state.type.Noneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.state.type.Noneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of valid lu requirement component states -->
<dict:constraintDescriptor id="field.reqComponentInfo.state.type.Noneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.requirement.component.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.reqComponentInfo.state.type.Noneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.state.type.Noneoftheseprograms.state.DEFAULT.cd.abstract"/>

<dict:field key="id" id="field.reqComponentInfo.id.type.Noneoftheseprograms.state.DEFAULT.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.reqComponentInfo.id.type.Noneoftheseprograms.state.DEFAULT.fd"/>
	<dict:constraintDescriptorRef bean="field.reqComponentInfo.id.type.Noneoftheseprograms.state.DEFAULT.cd"/>
</dict:field>
<dict:field key="id" id="field.reqComponentInfo.id.type.Noneoftheseprograms.state.DEFAULT" parent="field.reqComponentInfo.id.type.Noneoftheseprograms.state.DEFAULT.abstract"/>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Noneoftheseprograms.state.DEFAULT.fd.abstract" abstract="true">
	<dict:name>Requirement Component Identifier</dict:name>
	<dict:desc>Unique identifier for a requirement component. This is optional, due to the identifier being set at the time of creation. Once the requirement component has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.reqComponentInfo.id.type.Noneoftheseprograms.state.DEFAULT.fd" parent="field.reqComponentInfo.id.type.Noneoftheseprograms.state.DEFAULT.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.reqComponentInfo.id.type.Noneoftheseprograms.state.DEFAULT.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.reqComponentInfo.id.type.Noneoftheseprograms.state.DEFAULT.cd" parent="field.reqComponentInfo.id.type.Noneoftheseprograms.state.DEFAULT.cd.abstract"/>
</beans>
