<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/dictionary-extension dictionary-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
">
<!-- *** Automatically Generated ***
on: Tue Feb 02 13:57:52 EST 2010
by: org.kuali.student.dictionary.writer.DictionaryModelWriter
Using:Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls   and: Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls
 -->
import src/test/resources/constraints-dictionary-config-generated-excel.xml
	
	<dict:objectStructure key="org.kuali.student.core.document.dto.DocumentInfo">
		<!-- Detailed information about a document. -->
		<dict:type key="kuali.document.type.file">
		<!-- A document that contains an uploaded file -->
		<!-- NOT IN SIMPLES - services said they will make the change to the type as documented in jira item 121 -->
			<dict:state key="Active">
			<!-- document is active -->
			<!-- TODO: Add to simple spec -->
				
				<dict:field id="file.name" key="name">
					<dict:fieldDescriptor>
						<dict:name>file name</dict:name>
						<dict:desc>file name</dict:desc>
						<dict:dataType>string</dict:dataType>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="constraint.required"/>
							<dict:constraintRef bean="constraint.single"/>
							<dict:constraintRef bean="constraint.single.line.text"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field id="file.fileName" key="fileName">
					<dict:fieldDescriptor>
						<dict:name>file fileName</dict:name>
						<dict:desc>file fileName</dict:desc>
						<dict:dataType>string</dict:dataType>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="constraint.optional"/>
							<dict:constraintRef bean="constraint.single"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field id="file.desc" key="desc">
					<dict:fieldDescriptor>
						<dict:name>file desc</dict:name>
						<dict:desc>file desc</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo">
								<!-- Complex type supporting both a plain text and formatted version of a string. -->
								<dict:type key="kuali.not.applicable">
								<!-- Not applicable -->
								<!-- (n/a) -->
									<dict:state key="(n/a)">
									<!-- Not applicable -->
										
										<dict:field id="file.desc.plain" key="plain">
											<dict:fieldDescriptor>
												<dict:name>file desc plain text</dict:name>
												<dict:desc>file desc plain text</dict:desc>
												<dict:dataType>string</dict:dataType>
												<dict:readOnly>true</dict:readOnly>
											</dict:fieldDescriptor>
											<dict:constraintDescriptor>
													<dict:constraintRef bean="constraint.read.only"/>
													<dict:constraintRef bean="constraint.single"/>
													<dict:constraintRef bean="constraint.multi.line.text"/>
													<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain" id="constraint.">
														<dict:maxLength>(unbounded)</dict:maxLength>
														</dict:constraint>
											</dict:constraintDescriptor>
										</dict:field>
										
										<dict:field id="file.desc.formatted" key="formatted">
											<dict:fieldDescriptor>
												<dict:name>file desc formatted</dict:name>
												<dict:desc>file desc formatted</dict:desc>
												<dict:dataType>string</dict:dataType>
											</dict:fieldDescriptor>
											<dict:constraintDescriptor>
													<dict:constraintRef bean="constraint.optional"/>
													<dict:constraintRef bean="constraint.single"/>
													<dict:constraintRef bean="constraint.rich.text"/>
													<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted" id="constraint.">
														<dict:maxLength>(unbounded)</dict:maxLength>
														</dict:constraint>
											</dict:constraintDescriptor>
										</dict:field>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="constraint.optional"/>
							<dict:constraintRef bean="constraint.single"/>
							<dict:constraintRef bean="constraint.hidden"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field id="file.effectiveDate" key="effectiveDate">
					<dict:fieldDescriptor>
						<dict:name>file effectiveDate</dict:name>
						<dict:desc>file effectiveDate</dict:desc>
						<dict:dataType>dateTime</dict:dataType>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="constraint.required"/>
							<dict:constraintRef bean="constraint.single"/>
							<dict:constraintRef bean="constraint.date.time"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field id="file.expirationDate" key="expirationDate">
					<dict:fieldDescriptor>
						<dict:name>file expirationDate</dict:name>
						<dict:desc>file expirationDate</dict:desc>
						<dict:dataType>dateTime</dict:dataType>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="constraint.optional"/>
							<dict:constraintRef bean="constraint.single"/>
							<dict:constraintRef bean="constraint.date.time"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field id="file.attributes" key="attributes">
					<dict:fieldDescriptor>
						<dict:name>file attributes</dict:name>
						<dict:desc>file attributes</dict:desc>
						<dict:dataType>complex</dict:dataType>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="constraint.optional"/>
							<dict:constraintRef bean="constraint.single"/>
							<dict:constraintRef bean="constraint.not.used"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field id="file.metaInfo" key="metaInfo">
					<dict:fieldDescriptor>
						<dict:name>file metaInfo</dict:name>
						<dict:desc>file metaInfo</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo">
								<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
								<dict:type key="kuali.not.applicable">
								<!-- Not applicable -->
								<!-- (n/a) -->
									<dict:state key="(n/a)">
									<!-- Not applicable -->
										
										<dict:field id="file.meta.versionInd" key="versionInd">
											<dict:fieldDescriptor>
												<dict:name>file meta versionInd</dict:name>
												<dict:desc>Version number for this file</dict:desc>
												<dict:dataType>string</dict:dataType>
												<dict:readOnly>true</dict:readOnly>
											</dict:fieldDescriptor>
											<dict:constraintDescriptor>
													<dict:constraintRef bean="constraint.required"/>
													<dict:constraintRef bean="constraint.single"/>
													<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
													<dict:constraintRef bean="constraint.read.only"/>
													<dict:constraintRef bean="constraint.hidden"/>
											</dict:constraintDescriptor>
										</dict:field>
										
										<dict:field id="file.meta.createTime" key="createTime">
											<dict:fieldDescriptor>
												<dict:name>file meta createTime</dict:name>
												<dict:desc>Date-time this file was created</dict:desc>
												<dict:dataType>dateTime</dict:dataType>
											</dict:fieldDescriptor>
											<dict:constraintDescriptor>
													<dict:constraintRef bean="constraint.required"/>
													<dict:constraintRef bean="constraint.single"/>
													<dict:constraintRef bean="constraint.date.time"/>
													<dict:constraintRef bean="constraint.default.now"/>
											</dict:constraintDescriptor>
										</dict:field>
										
										<dict:field id="file.meta.createId" key="createId">
											<dict:fieldDescriptor>
												<dict:name>file meta createId</dict:name>
												<dict:desc>Principal of the persion who first created this file</dict:desc>
												<dict:dataType>string</dict:dataType>
												<dict:readOnly>true</dict:readOnly>
											</dict:fieldDescriptor>
											<dict:constraintDescriptor>
													<dict:constraintRef bean="constraint.read.only"/>
													<dict:constraintRef bean="constraint.single"/>
													<dict:constraintRef bean="constraint.related.principalId"/>
													<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
											</dict:constraintDescriptor>
										</dict:field>
										
										<dict:field id="file.meta.updateTime" key="updateTime">
											<dict:fieldDescriptor>
												<dict:name>file meta updateTime</dict:name>
												<dict:desc>Date-time this  file was last updated</dict:desc>
												<dict:dataType>dateTime</dict:dataType>
											</dict:fieldDescriptor>
											<dict:constraintDescriptor>
													<dict:constraintRef bean="constraint.required"/>
													<dict:constraintRef bean="constraint.single"/>
													<dict:constraintRef bean="constraint.date.time"/>
													<dict:constraintRef bean="constraint.calc.now"/>
											</dict:constraintDescriptor>
										</dict:field>
										
										<dict:field id="file.meta.updateId" key="updateId">
											<dict:fieldDescriptor>
												<dict:name>file meta updateId</dict:name>
												<dict:desc>Principal of the persion who last updated this  file</dict:desc>
												<dict:dataType>string</dict:dataType>
												<dict:readOnly>true</dict:readOnly>
											</dict:fieldDescriptor>
											<dict:constraintDescriptor>
													<dict:constraintRef bean="constraint.read.only"/>
													<dict:constraintRef bean="constraint.single"/>
													<dict:constraintRef bean="constraint.related.principalId"/>
													<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
											</dict:constraintDescriptor>
										</dict:field>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="constraint.optional"/>
							<dict:constraintRef bean="constraint.single"/>
							<dict:constraintRef bean="constraint.kuali.meta.data"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field id="file.type" key="type">
					<dict:fieldDescriptor>
						<dict:name>file type</dict:name>
						<dict:desc>file type</dict:desc>
						<dict:dataType>string</dict:dataType>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="constraint.required"/>
							<dict:constraintRef bean="constraint.single"/>
							<dict:constraintRef bean="constraint.kuali.type"/>
							<dict:constraintRef bean="constraint.hard.coded.file"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field id="file.state" key="state">
					<dict:fieldDescriptor>
						<dict:name>file state</dict:name>
						<dict:desc>file state</dict:desc>
						<dict:dataType>string</dict:dataType>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="constraint.required"/>
							<dict:constraintRef bean="constraint.single"/>
							<dict:constraintRef bean="constraint.kuali.state"/>
					</dict:constraintDescriptor>
					<dict:selector>true</dict:selector>
				</dict:field>
				
				<dict:field id="file.internal.id" key="id">
					<dict:fieldDescriptor>
						<dict:name>file internal id</dict:name>
						<dict:desc>file internal id</dict:desc>
						<dict:dataType>string</dict:dataType>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="constraint.optional"/>
							<dict:constraintRef bean="constraint.single"/>
							<dict:constraintRef bean="constraint.kuali.id"/>
							<dict:constraintRef bean="constraint.hidden"/>
					</dict:constraintDescriptor>
				</dict:field>
			</dict:state>
			<dict:state key="Inactive">
			<!-- document is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="file.name"/>
				<dict:fieldRef bean="file.fileName"/>
				<dict:fieldRef bean="file.desc"/>
				<dict:fieldRef bean="file.effectiveDate"/>
				<dict:fieldRef bean="file.expirationDate"/>
				<dict:fieldRef bean="file.attributes"/>
				<dict:fieldRef bean="file.metaInfo"/>
				<dict:fieldRef bean="file.type"/>
				<dict:fieldRef bean="file.state"/>
				<dict:fieldRef bean="file.internal.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
</beans>
