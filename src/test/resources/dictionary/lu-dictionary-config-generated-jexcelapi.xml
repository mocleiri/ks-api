<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/dictionary-extension dictionary-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
">

	<dict:constraint key="required" id="required" serverSide="false">
		<!-- Required -->
		<dict:minOccurs>1</dict:minOccurs>
		</dict:constraint>

	<dict:constraint key="optional" id="optional" serverSide="false">
		<!-- Optional -->
		<!-- Used to override a previous required constraint.  Also implied by the absence of a required constraint -->
		<dict:minOccurs>0</dict:minOccurs>
		</dict:constraint>

	<dict:constraint key="not.used" id="not.used" serverSide="false">
		<!-- Not Used -->
		<dict:minOccurs>0</dict:minOccurs>
		<dict:maxOccurs>0</dict:maxOccurs>
		</dict:constraint>

	<dict:constraint key="repeating" id="repeating" serverSide="false">
		<!-- Repeating -->
		<!-- Nine 9's get translated as "(unbounded)" -->
		<dict:maxOccurs>(unbounded)</dict:maxOccurs>
		</dict:constraint>

	<dict:constraint key="single" id="single" serverSide="false">
		<!-- Single valued (non-repeating) -->
		<!-- Used to override a repeating constraint -->
		<dict:maxOccurs>1</dict:maxOccurs>
		</dict:constraint>

	<dict:constraint key="code" id="code" serverSide="false">
		<!-- Alphanumeric code, hypen and period. -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[A-Za-z0-9.-]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="code.uppercase" id="code.uppercase" serverSide="false">
		<!-- uppercase alphanumeric code, hypen and period. -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[A-Z0-9.-]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="code.lowercase" id="code.lowercase" serverSide="false">
		<!-- lowercase alphanumeric code, hypen and period. -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[a-z0-9.-]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="single.line.text" id="single.line.text" serverSide="false">
		<!-- A basic single line of text, no embedded carraige returns or tabs limited to 255 -->
		<!-- old reg ex was "[A-Za-z0-9.-;;'&%$#@!]* -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>255</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[\p{Print} ]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="letter" id="letter" serverSide="false">
		<!-- letters only -->
		<dict:validChars>
		<dict:value>regex:[A-Za-z]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="size.one" id="size.one" serverSide="false">
		<!-- Only one character -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>1</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="size.two" id="size.two" serverSide="false">
		<!-- Two characters both must be filled out. -->
		<dict:minLength>2</dict:minLength>
		<dict:maxLength>2</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="size.up.to.two" id="size.up.to.two" serverSide="false">
		<!-- Up to 2 characters long -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>2</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="no.linefeeds" id="no.linefeeds" serverSide="false">
		<!-- Any character EXCEPT carraige returns and line feeds -->
		<dict:validChars>
		<dict:value>regex:[^\n\r]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="no.tabs" id="no.tabs" serverSide="false">
		<!-- Any character EXCEPT a tab -->
		<dict:validChars>
		<dict:value>regex:[^\t]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="multi.line.text" id="multi.line.text" serverSide="false">
		<!-- Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
		<!-- old reg ex was [A-Za-z0-9.-;;'&%$#@!\n\r\t]* -->
		<dict:minLength>1</dict:minLength>
		<dict:validChars>
		<dict:value>regex:[\p{Print}\p{Blank}\n\r]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="rich.text" id="rich.text" serverSide="false">
		<!-- Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
		<!-- Not sure if characterset for rich text is the same for regular text but just interpretted differently.  I.e. html is plain text interpreted differently. -->
		<dict:minLength>1</dict:minLength>
		<dict:validChars>
		<dict:value>regex:[\p{Print}\p{Blank}\n\r]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="date" id="date" serverSide="false">
		<!-- Date -->
		<!-- http://regexlib.com/REDetails.aspx?regexp_id=760 (but not sure) -->
		<dict:minLength>10</dict:minLength>
		<dict:maxLength>10</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="date.time" id="date.time" serverSide="false">
		<!-- Date-Time -->
		<!-- http://regexlib.com/REDetails.aspx?regexp_id=1966 (but not sure) -->
		<dict:minLength>19</dict:minLength>
		<dict:maxLength>19</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="integer" id="integer" serverSide="false">
		<!-- Integer -->
		<!-- http://regexlib.com/REDetails.aspx?regexp_id=14 -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>10</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:^(\+|-)?\d+$</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="non-negative.integer" id="non-negative.integer" serverSide="false">
		<!-- Non-Negative Integer -->
		<!-- http://regexlib.com/REDetails.aspx?regexp_id=13 -->
		<dict:minValue>0</dict:minValue>
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>10</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:^\d+$</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="decimal" id="decimal" serverSide="false">
		<!-- decimal number -->
		<!-- http://regexlib.com/REDetails.aspx?regexp_id=117 -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>10</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:^[-+]?\d+(\.\d+)?$</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="non.negative.decimal" id="non.negative.decimal" serverSide="false">
		<!-- non-negative decimal number -->
		<!-- http://regexlib.com/REDetails.aspx?regexp_id=117 -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>10</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:^[-+]?\d+(\.\d+)?$</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="amount" id="amount" serverSide="false">
		<!-- Amount field -->
		<!-- http://regexlib.com/REDetails.aspx?regexp_id=131 -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>10</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:^\$?\d+(\.(\d{2}))?$</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="url" id="url" serverSide="false">
		<!-- Uniform Resource Locator -->
		<!-- http://regexlib.com/REDetails.aspx?regexp_id=96 -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>2083</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;amp;:/~\+#]*[\w\-\@?^=%&amp;amp;/~\+#])?</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="boolean" id="boolean" serverSide="false">
		<!-- True or False -->
		<!-- http://regexlib.com/REDetails.aspx?regexp_id=905 -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>5</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[Ff]+(alse)?|[Tt]+(rue)</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="kuali.id" id="kuali.id" serverSide="true">
		<!-- Kuali ID; calculated by service on add, then read-only. -->
		<!-- MinOccur on ID's of 1 may not work because it is missing on the create -->
		<dict:minOccurs>1</dict:minOccurs>
		<dict:maxOccurs>1</dict:maxOccurs>
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>36</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="kuali.key" id="kuali.key" serverSide="true">
		<!-- Kuali KEY; structured like a type but unique like and ID, used to identify configured objects. -->
		<dict:minOccurs>1</dict:minOccurs>
		<dict:maxOccurs>1</dict:maxOccurs>
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[A-Za-z0-9.-]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="kuali.type" id="kuali.type" serverSide="true">
		<!-- Kuali TYPE: required on add, then read-only -->
		<dict:minOccurs>1</dict:minOccurs>
		<dict:maxOccurs>1</dict:maxOccurs>
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[A-Za-z0-9.-]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="kuali.state" id="kuali.state" serverSide="true">
		<!-- Kuali STATE -->
		<dict:minOccurs>1</dict:minOccurs>
		<dict:maxOccurs>1</dict:maxOccurs>
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>30</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[A-Za-z0-9.-]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="kuali.meta.data" id="kuali.meta.data" serverSide="true">
		<!-- Kuali Meta Data: calculated by service, read-only -->
		<!-- MinOccur on Meta data structures may not 1 not work because it is not supplied  on the create -->
		<dict:minOccurs>1</dict:minOccurs>
		<dict:maxOccurs>1</dict:maxOccurs>
		</dict:constraint>

	<dict:constraint key="related.cluId" id="related.cluId" serverSide="true">
		<!-- Id of an existing CLU -->
		<!-- Requires special logic to check that the ID supplied actually exists -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>36</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="related.clu.set.id" id="related.clu.set.id" serverSide="true">
		<!-- Id of an existing CLU Set Id -->
		<!-- Requires special logic to check that the ID supplied actually exists -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>36</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="related.orgId" id="related.orgId" serverSide="true">
		<!-- Id of an existing ORG -->
		<!-- Requires special logic to check that the ID supplied actually exists -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>36</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="related.principalId" id="related.principalId" serverSide="true">
		<!-- Id of an existing PRINCIPAL -->
		<!-- Requires special logic to check that the ID supplied actually exists -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>36</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="related.personId" id="related.personId" serverSide="true">
		<!-- Id of an existing PERSON -->
		<!-- Requires special logic to check that the ID supplied actually exists -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>36</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="related.gradekey" id="related.gradekey" serverSide="true">
		<!-- Key of an existing Grade -->
		<!-- Requires special logic to check that the key supplied actuall exists -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[A-Za-z0-9.-]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="related.creditkey" id="related.creditkey" serverSide="true">
		<!-- Key of an existing Credit -->
		<!-- Requires special logic to check that the key supplied actuall exists -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[A-Za-z0-9.-]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="related.credentialkey" id="related.credentialkey" serverSide="true">
		<!-- Key of an existin Credential -->
		<!-- Requires special logic to check that the key supplied actuall exists -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[A-Za-z0-9.-]*</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="related.proposal" id="related.proposal" serverSide="true">
		<!-- Id of an existing PROPOSAL -->
		<!-- Requires special logic to check that the ID supplied actually exists -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>36</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="related.document" id="related.document" serverSide="true">
		<!-- Id of an existing DOCUMENT -->
		<!-- Requires special logic to check that the ID supplied actually exists -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>36</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="lu.types" id="lu.types" serverSide="false">
		<!-- In list of configured learning unit types -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.lu.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lu.identifier.types" id="lu.identifier.types" serverSide="false">
		<!-- In list of configured clu identifier types -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.lu.identifier.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lu.activity.types" id="lu.activity.types" serverSide="false">
		<!-- In a list of configured activity LuTypes -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.lu.activity.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="duration.types" id="duration.types" serverSide="false">
		<!-- In list of configured duration types -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.durationTypes">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="instructional.format.types" id="instructional.format.types" serverSide="false">
		<!-- In list of configured instructional formats -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>30</dict:maxLength>
		<dict:lookup search="kuali.enum.type.instructionalFormatTypes">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="season.types" id="season.types" serverSide="false">
		<!-- In list of configured seasons -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.seasonTypes">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="atp.types" id="atp.types" serverSide="false">
		<!-- In list of configured  time period types -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.atpTypes">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="dynamic.field.types" id="dynamic.field.types" serverSide="false">
		<!-- In list of configured dynamic field types -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.dynamicFieldTypes">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lu.lu.relation.types" id="lu.lu.relation.types" serverSide="false">
		<!-- In list of configured lul-lu relation types -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.lu.lu.relation.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lu.code.types" id="lu.code.types" serverSide="false">
		<!-- In list of configured classification codes used for LU -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.lu.code.type">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="currency.types" id="currency.types" serverSide="false">
		<!-- In list of configured currency types -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.currency.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lo.types" id="lo.types" serverSide="false">
		<!-- In list of confured lo types -->
		<!-- TO DO: add to SimpleS -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.lo.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lo.hierarchies" id="lo.hierarchies" serverSide="false">
		<!-- In list of configured lo hierarchies -->
		<!-- TO DO: add to SimpleS -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.lo.hierarchies">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="resultUsage.types" id="resultUsage.types" serverSide="false">
		<!-- In list of confured resultUsage types -->
		<!-- TO DO: add to Simple Spec -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.resultUsage.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="proposal.types" id="proposal.types" serverSide="false">
		<!-- In a list of configured proposal types -->
		<!-- TO DO: add to SimpleS -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.proposal.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="course.proposal.types" id="course.proposal.types" serverSide="false">
		<!-- In a list of configured course proposal types -->
		<!-- TO DO: add to SimpleS -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.course.proposal.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="reference.types" id="reference.types" serverSide="false">
		<!-- In a list of configured reference types -->
		<!-- TO DO: add to SimpleS -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>60</dict:maxLength>
		<dict:lookup search="kuali.enum.type.reference.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lu.states" id="lu.states" serverSide="false">
		<!-- In list of configured learning unit states -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>30</dict:maxLength>
		<dict:lookup search="kuali.enum.type.lu.states">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lu.identifier.states" id="lu.identifier.states" serverSide="false">
		<!-- In list of configured clu identifier states -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>30</dict:maxLength>
		<dict:lookup search="kuali.enum.type.lu.identifier.states">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="subject.areas" id="subject.areas" serverSide="false">
		<!-- In list of configured subject areas -->
		<dict:minLength>4</dict:minLength>
		<dict:maxLength>4</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[A-Z]*</dict:value>
		</dict:validChars>
		<dict:lookup search="kuali.enum.type.subjectArea">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="available.course.numbers" id="available.course.numbers" serverSide="false">
		<!-- In list of configured available course numbers -->
		<dict:minLength>3</dict:minLength>
		<dict:maxLength>3</dict:maxLength>
		<dict:validChars>
		<dict:value>regex:[0-9]*</dict:value>
		</dict:validChars>
		<dict:lookup search="kuali.enum.type.availableNumbers">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="offering.campuses" id="offering.campuses" serverSide="false">
		<!-- In list of configured offering campuses -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>30</dict:maxLength>
		<dict:lookup search="kuali.enum.type.offeringCampuses">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="unit.types" id="unit.types" serverSide="false">
		<!-- In list of configured unit types -->
		<!-- Although called a type, this is not a formal type in kuali student like an lu type, for example it may be changeable after being added. -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>10</dict:maxLength>
		<dict:lookup search="kuali.enum.type.validUnitTypes">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="eye.colors" id="eye.colors" serverSide="false">
		<!-- In a list of configured eye colors -->
		<!-- Blue, Brown, Green, Hazel, etc -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>10</dict:maxLength>
		<dict:lookup search="kuali.enum.type.validEyeColors">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="grade.scales" id="grade.scales" serverSide="false">
		<!-- In a list of configured grading scales -->
		<dict:lookup search="kuali.enum.type.grade.scales">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="effective.date.atps" id="effective.date.atps" serverSide="false">
		<!-- In a list of configured ATPs -->
		<!-- Not entirely sure what to call this. There is also a kuali.enum.type.EffectiveDateATPs defined for the which is backed by this enumeration (its further constrained) but I don't know that it needs to be represented that way. -->
		<dict:lookup search="kuali.enum.type.ATPsByDate">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="hard.coded.type.credit.course" id="hard.coded.type.credit.course" serverSide="true">
		<!-- Must be "kuali.lu.type.CreditCourse" -->
		<dict:validChars>
		<dict:value>regex:kuali\.lu\.type\.CreditCourse</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.type.credit.course.format.shell" id="hard.coded.type.credit.course.format.shell">
		<!-- Must be "kuali.lu.type.CreditCourseFormatShell" -->
		<dict:validChars>
		<dict:value>regex:kuali\.lu\.type\.CreditCourseFormatShell</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.official" id="hard.coded.official" serverSide="true">
		<!-- Must be "kuali.lu.type.CreditCourse.identifier.official" -->
		<dict:validChars>
		<dict:value>regex:kuali\.lu\.type\.CreditCourse\.identifier\.official</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.active" id="hard.coded.active" serverSide="true">
		<!-- Must be "active" -->
		<dict:validChars>
		<dict:value>regex:active</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.cross-listed" id="hard.coded.cross-listed" serverSide="true">
		<!-- Must be "kuali.lu.type.CreditCourse.identifier.cross-listed" -->
		<dict:validChars>
		<dict:value>regex:kuali\.lu\.type\.CreditCourse\.identifier\.cross-listed</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.co-located" id="hard.coded.co-located" serverSide="true">
		<!-- Must be "kuali.lu.relation.type.co-located" -->
		<dict:validChars>
		<dict:value>regex:kuali\.lu\.relation\.type\.co-located</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.lulurelation.courseformat" id="hard.coded.lulurelation.courseformat" serverSide="true">
		<!-- Must be "kuali.lu.lu.relation.type.hasCourseFormat" -->
		<dict:validChars>
		<dict:value>regex:kulai\.lu\.lu\.relation\.type\.hasCourseFormat</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.version" id="hard.coded.version" serverSide="true">
		<!-- Must be "kuali.lu.type.CreditCourse.identifier.version" -->
		<dict:validChars>
		<dict:value>regex:kuali\.lu\.type\.CreditCourse\.identifier\.version</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.zero" id="hard.coded.zero" serverSide="true">
		<!-- Must be 0 -->
		<dict:validChars>
		<dict:value>regex:0</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.one" id="hard.coded.one" serverSide="true">
		<!-- Must be 1 -->
		<dict:validChars>
		<dict:value>regex:1</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.true" id="hard.coded.true" serverSide="true">
		<!-- Must be TRUE -->
		<dict:validChars>
		<dict:value>regex:true</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.false" id="hard.coded.false" serverSide="true">
		<!-- Must be FALSE -->
		<dict:validChars>
		<dict:value>regex:false</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.eye.color" id="hard.coded.eye.color" serverSide="true">
		<!-- Must be "kuali.lu.type.CreditCourse.dynamic.eye.color" -->
		<dict:validChars>
		<dict:value>regex:kuali\.lu\.type\.CreditCourse\.dynamic\.eye\.color</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.left.handed" id="hard.coded.left.handed" serverSide="true">
		<!-- Must be "kuali.lu.type.CreditCourse.dynamic.left.handed" -->
		<dict:validChars>
		<dict:value>regex:kuali\.lu\.type\.CreditCourse\.dynamic\.left\.handed</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.informal.lo" id="hard.coded.informal.lo" serverSide="true">
		<!-- must be "kuali.lo.type.informal" -->
		<dict:validChars>
		<dict:value>regex:kuali\.lo\.type\.informal</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.Instructor-defined.lo.hierarchy" id="hard.coded.Instructor-defined.lo.hierarchy" serverSide="true">
		<!-- Must be "kuali.loHierarchy.key.instructor" -->
		<dict:validChars>
		<dict:value>regex:kuali\.loHierarchy\.key\.instructor</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.credit.awarded.resultUsage" id="hard.coded.credit.awarded.resultUsage" serverSide="true">
		<!-- must be "Kuali.resultUsageType.CreditAwarded" -->
		<dict:validChars>
		<dict:value>regex:Kuali\.resultUsageType\.CreditAwarded</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.fixed.credit" id="hard.coded.fixed.credit" serverSide="true">
		<!-- Must be "kuali.resultComponentType.credit.degree.fixed" -->
		<dict:validChars>
		<dict:value>regex:kuali\.resultComponentType\.credit\.degree\.fixed</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.variable.credit" id="hard.coded.variable.credit" serverSide="true">
		<!-- Must be "kuali.resultComponentType.credit.degree.range" -->
		<dict:validChars>
		<dict:value>regex:kuali\.resultComponentType\.credit\.degree\.range</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.final.grade" id="hard.coded.final.grade" serverSide="true">
		<!-- Must be"kuali.resultComponentType.finalGrade" -->
		<dict:validChars>
		<dict:value>regex:kuali\.resultComponentType\.finalGrade</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.academic.credit" id="hard.coded.academic.credit" serverSide="true">
		<!-- Must be "kuali.creditType.credit.degree" -->
		<dict:validChars>
		<dict:value>regex:kuali\.creditType\.credit\.degree</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.final.qualitative.result.Usage" id="hard.coded.final.qualitative.result.Usage" serverSide="true">
		<!-- Must be "kuali.resultComponentType.finalQualitative" -->
		<dict:validChars>
		<dict:value>regex:kuali\.resultComponentType\.finalQualitative</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.final.grad.awarded.resultUsage" id="hard.coded.final.grad.awarded.resultUsage" serverSide="true">
		<!-- Must be "Must be "kuali.resultUsageType.finalGradeAwarded"" -->
		<dict:validChars>
		<dict:value>regex:kuali\.resultUsageType\.finalGradeAwarded</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.letter.grade" id="hard.coded.letter.grade" serverSide="true">
		<!-- Must be "kuali.gradeType.Letter" -->
		<dict:validChars>
		<dict:value>regex:kuali\.gradeType\.Letter</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.pass-fail.grade" id="hard.coded.pass-fail.grade" serverSide="true">
		<!-- Must be "kuali.gradeType.Pass-Fail" -->
		<dict:validChars>
		<dict:value>regex:kuali\.gradeType\.Pass-Fail</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.final.qualitative" id="hard.coded.final.qualitative" serverSide="true">
		<!-- Must be"kuali.resultComponentType.finalQualitative" -->
		<dict:validChars>
		<dict:value>regex:kuali\.resultComponentType\.finalQualitative</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.referenceType.CLU" id="hard.coded.referenceType.CLU" serverSide="true">
		<!-- Must be "kuali.referenceType.CLU" -->
		<dict:validChars>
		<dict:value>regex:kuali.referenceType.CLU</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.referenceType.Proposal" id="hard.coded.referenceType.Proposal" serverSide="true">
		<!-- Must be "kuali.referenceType.proposal" -->
		<dict:validChars>
		<dict:value>regex:kuali.referenceType.proposal</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.group.proposal" id="hard.coded.group.proposal" serverSide="true">
		<!-- Must be "kuali.proposal.type.group" -->
		<dict:validChars>
		<dict:value>regex:kuali.proposal.type.group</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.syllabus" id="hard.coded.syllabus" serverSide="true">
		<!-- Must be"kuali.proposal.ProposalDocRelationType.syllabus" -->
		<dict:validChars>
		<dict:value>regex:kuali.proposal.ProposalDocRelationType.syllabus</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.other.document" id="hard.coded.other.document" serverSide="true">
		<!-- Must be"kuali.proposal.ProposalDocRelationType.other" -->
		<dict:validChars>
		<dict:value>regex:kuali.proposal.ProposalDocRelationType.other</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.file" id="hard.coded.file" serverSide="true">
		<!-- Must be"kuali.document.type.file" -->
		<dict:validChars>
		<dict:value>regex:kuali.document.type.file</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.course.proposal.doc.category" id="hard.coded.course.proposal.doc.category" serverSide="true">
		<!-- Must be"kuali.document.category.courseProposal.Doc.Category" -->
		<dict:validChars>
		<dict:value>regex:kuali.document.category.courseProposal.Doc.Category</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="has.course.format.relation.lu.types" id="has.course.format.relation.lu.types" serverSide="false">
		<!-- constrains the required LuType of the clu referenced by cluCluRelationInfo.cluID for a Has Course Format relation -->
		<!-- TO DO: add the enumeration to simples -->
		<dict:lookup search="kuali.enum.type.validLuTypesForLuLuRelationType">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="is.course.format.relation.lu.types" id="is.course.format.relation.lu.types" serverSide="false">
		<!-- constrains the required LuType of clu referenced by cluCluRelationInfo.relatedCluId for a has course format relation -->
		<!-- TO DO: add the enumeration to simples -->
		<dict:lookup search="kuali.enum.type.validRelatedLuTypesForLuLuRelationType">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="contains.relation.lu.types" id="contains.relation.lu.types" serverSide="false">
		<!-- constrains the required LuType of the clu referenced by cluCluRelationInfo.cluID for a "Contains" relation -->
		<!-- TO DO: add the enumeration to simples -->
		<dict:lookup search="kuali.enum.type.validLuTypesForLuLuRelationType">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="contained.by.relation.lu.types" id="contained.by.relation.lu.types" serverSide="false">
		<!-- constrains the required LuType of the clu referenced by cluCluRelationInfo.relatedCluID for a "Contain" relation -->
		<!-- TO DO: add the enumeration to simples -->
		<dict:lookup search="kuali.enum.type.validRelatedLuTypesForLuLuRelationType">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="valid.duration.types" id="valid.duration.types" serverSide="false">
		<!-- In a list of duration types configured by LuType -->
		<dict:lookup search="kuali.enum.type.ValidDurationTypes">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="valid.atp.types" id="valid.atp.types">
		<!-- In a list of atp types configured by LuType -->
		<!-- TO DO: add this enumeration to the simples -->
		<dict:lookup search="kuali.enum.type.validAtpTypes">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lu.statement.operators" id="lu.statement.operators" serverSide="false">
		<!-- In list of configured lu statement operators (AND and OR) -->
		<!-- Hard coded to be AND or OR -->
		<dict:lookup search="kuali.enum.type.lu.statement.operators">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lu.statement.types" id="lu.statement.types" serverSide="false">
		<!-- In list of valid lu statement types -->
		<!-- See LuStatementInfo types defined on the Types tab -->
		<dict:lookup search="kuali.enum.type.lu.statement.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lu.statement.states" id="lu.statement.states" serverSide="false">
		<!-- In list of valid lu statement states -->
		<!-- See LuStatementInfo states defined on the States tab -->
		<dict:lookup search="kuali.enum.type.lu.statement.states">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="related.luStatementd" id="related.luStatementd" serverSide="true">
		<!-- Id of an existing LU Statement -->
		<!-- Requires special logic to check that the ID supplied actually exists -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>36</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="related.requirementComponentId" id="related.requirementComponentId" serverSide="true">
		<!-- Id of an existing requirement component -->
		<!-- Requires special logic to check that the ID supplied actually exists -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>36</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="lu.requirement.component.types" id="lu.requirement.component.types" serverSide="false">
		<!-- In list of valid lu requirement component types -->
		<!-- See reqComponentInfo types defined on the Types tab -->
		<dict:lookup search="kuali.enum.type.lu.requirement.component.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="dictionary.field.descriptor.field.types" id="dictionary.field.descriptor.field.types" serverSide="false">
		<!-- In list of valid data types fof fields that are supported by the validator -->
		<!-- Valid values are: complex, string, date, dateTime, boolean, integer, & long -->
		<dict:lookup search="kuali.enum.type.dictionary.field.descriptor.field.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="dictionary.enumeration.keys" id="dictionary.enumeration.keys" serverSide="false">
		<!-- In list of the keys for all valid enumerations known to the system -->
		<!-- See the lookup column of this spreadsheet!!!!! -->
		<dict:lookup search="kuali.enum.type.dictionary.enumeration.type.keys">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="dictionary.enumeration.context.keys" id="dictionary.enumeration.context.keys" serverSide="false">
		<!-- In list of the keys for all valid enumeration contexts known to the system -->
		<!-- See the lookupContext column of this spreadsheet!!!!! -->
		<dict:lookup search="kuali.enum.type.dictionary.enumeration.context.type.keys">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lu.requirement.component.states" id="lu.requirement.component.states" serverSide="false">
		<!-- In list of valid lu requirement component states -->
		<!-- See reqComponentInfo states defined on the States tab -->
		<dict:lookup search="kuali.enum.type.lu.requirement.component.states">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lu.requirement.component.field.keys" id="lu.requirement.component.field.keys" serverSide="false">
		<!-- In list of valid lu requirement component field keys -->
		<!-- See the reqCompFieldTypeInfo keys defined on the Types tab -->
		<dict:lookup search="kuali.enum.type.lu.requirement.component.field.keys">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="search.types" id="search.types" serverSide="false">
		<!-- In list of valid search types -->
		<!-- See all the searches defined in the simple specs -->
		<dict:lookup search="kuali.enum.type.search.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="query.param.value.types" id="query.param.value.types" serverSide="false">
		<!-- In list of valid query parameter types for searches -->
		<!-- See all the searches defined in the simple specs -->
		<dict:lookup search="kuali.enum.type.query.param.value.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lrd.types" id="lrd.types" serverSide="false">
		<!-- In list of valid learning result definition types -->
		<!-- See the lrd types defined in this spreadsheet -->
		<dict:lookup search="kuali.enum.type.lrc.lrd.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="learning.result.scale.types" id="learning.result.scale.types" serverSide="false">
		<!-- In list of valid learning result scale types -->
		<!-- See the scale types defined in this spreadsheet -->
		<dict:lookup search="kuali.enum.type.lrc.scale.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="lrd.operators" id="lrd.operators" serverSide="false">
		<!-- In list of configured learning result definition operators (=, >, < etc) -->
		<!-- Hard coded to be equal_to, not_equal_to, greater_than, less_than, greater_than_or_equal_to, less_than_or_equal_to -->
		<dict:lookup search="kuali.enum.type.lrd.operators">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="related.lrdId" id="related.lrdId" serverSide="true">
		<!-- Id of an existing learning result definition -->
		<!-- Requires special logic to check that the ID supplied actually exists -->
		<dict:minLength>1</dict:minLength>
		<dict:maxLength>36</dict:maxLength>
		</dict:constraint>

	<dict:constraint key="hard.coded.credit.course.clu" id="hard.coded.credit.course.clu" serverSide="true">
		<!-- Must be"kuali.reqCompFieldType.credit.course" -->
		<dict:validChars>
		<dict:value>regex:kuali\.reqCompFieldType\.credit\.course</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.credit.course.clu.set" id="hard.coded.credit.course.clu.set" serverSide="true">
		<!-- Must be"kuali.reqCompFieldType.credit.course.set" -->
		<dict:validChars>
		<dict:value>regex:kuali\.reqCompFieldType\.credit\.course\.set</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.required.count" id="hard.coded.required.count" serverSide="true">
		<!-- Must be"kuali.reqCompFieldType.requiredCount" -->
		<dict:validChars>
		<dict:value>regex:kuali\.reqCompFieldType\.requiredCount</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.lrd.credit.course.final.grade" id="hard.coded.lrd.credit.course.final.grade" serverSide="true">
		<!-- Must be"kuali.reqCompFieldType. -->
		<dict:validChars>
		<dict:value>regex:kuali\.reqCompFieldType\.lrd\.credit\.course\.final\.grade</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.overall.gpa" id="hard.coded.overall.gpa" serverSide="true">
		<!-- Must be"kuali.reqCompFieldType. -->
		<dict:validChars>
		<dict:value>regex:kuali\.reqCompFieldType\.overall\.gpa</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.overall.totalCredits" id="hard.coded.overall.totalCredits" serverSide="true">
		<!-- Must be"kuali.reqCompFieldType. -->
		<dict:validChars>
		<dict:value>regex:kuali\.reqCompFieldType\.overall\.totalCredits</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.operator" id="hard.coded.operator" serverSide="true">
		<!-- Must be"kuali.reqCompFieldType. -->
		<dict:validChars>
		<dict:value>regex:kuali\.reqCompFieldType\.operator</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="hard.coded.countType" id="hard.coded.countType" serverSide="true">
		<!-- Must be"kuali.reqCompFieldType. -->
		<dict:validChars>
		<dict:value>regex:kuali\.reqCompFieldType\.countType</dict:value>
		</dict:validChars>
		</dict:constraint>

	<dict:constraint key="clu.set.types" id="clu.set.types" serverSide="false">
		<!-- In list of valid clu set types -->
		<!-- See cluSetInfo states defined on the Types tab -->
		<dict:lookup search="kuali.enum.type.lu.clu.set.types">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="clu.set.states" id="clu.set.states" serverSide="false">
		<!-- In list of valid clu set states -->
		<!-- See cluSetInfo states defined on the States tab -->
		<dict:lookup search="kuali.enum.type.lu.clu.set.states">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>

	<dict:constraint key="valid.credit.course.clu.set.search.types" id="valid.credit.course.clu.set.search.types" serverSide="false">
		<!-- In list of search times that return credit courses or clu sets of credit courses -->
		<!-- Has just one value for now and that is "kuali.lu.searchTypes.CoursesForDynamicCLUSet" but that will expand in the future. -->
		<dict:lookup search="kuali.enum.search.type.credit.course">
		<dict:lookupKey field="(none)" mapsTo="(none)"/>
		</dict:lookup>
		</dict:constraint>
	
	<dict:objectStructure key="cluInfo">
		<!-- Detailed information about a single CLU. -->
		<dict:type key="kuali.lu.type.CreditCourse">
		<!-- A course offered for academic credit -->
		<!-- Subject, Academic Course -->
			<dict:state key="template">
			<!-- A template holds configuration for defaults for creating a new course -->
				<dict:fieldRef bean="course.official"/>
				<dict:fieldRef bean="course.alternateIdentifiers"/>
				<dict:fieldRef bean="course.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.studySubjectArea"/>
				<dict:fieldRef bean="course.desc.template"/>
				<dict:fieldRef bean="course.rationale"/>
				<dict:fieldRef bean="course.campusLocation"/>
				<dict:fieldRef bean="course.accreditation"/>
				<dict:fieldRef bean="course.primaryAdminOrg"/>
				<dict:fieldRef bean="course.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.primaryInstructor"/>
				<dict:fieldRef bean="course.instructors"/>
				<dict:fieldRef bean="course.expectedFirstAtp"/>
				<dict:fieldRef bean="course.effectiveDate"/>
				<dict:fieldRef bean="course.expirationDate"/>
				<dict:fieldRef bean="course.total.contact.hours"/>
				<dict:fieldRef bean="course.duration"/>
				<dict:fieldRef bean="course.canCreateLui"/>
				<dict:fieldRef bean="course.referenceURL"/>
				<dict:fieldRef bean="course.luCodes"/>
				<dict:fieldRef bean="course.publishingInfo"/>
				<dict:fieldRef bean="course.nextReviewPeriod"/>
				<dict:fieldRef bean="course.isEnrollable"/>
				<dict:fieldRef bean="course.seasons"/>
				<dict:fieldRef bean="course.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.feeInfo"/>
				<dict:fieldRef bean="course.accountingInfo"/>
				<dict:fieldRef bean="course.dynamic.attributes"/>
				<dict:fieldRef bean="course.meta"/>
				<dict:fieldRef bean="course.type"/>
				<dict:fieldRef bean="course.state"/>
				<dict:fieldRef bean="course.internal.id"/>
			</dict:state>
			<dict:state key="explore">
			<!-- Exploratory/Private scratch pad -->
			<!-- Not sure if this is needed but UC mentions some ability for professors to create proposals within their own space -->
				
				<dict:field key="officialIdentifier">
					<dict:fieldDescriptor>
						<dict:name>course no</dict:name>
						<dict:desc>course no</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="cluIdentifierInfo">
								<!-- Detailed information about the human readable form of a CLU Identifier -->
								<dict:type key="kuali.lu.type.CreditCourse.identifier.official">
								<!-- This identifier holds the official identifier for this course -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.official.no"/>
										<dict:fieldRef bean="course.official.transcriptTitle"/>
										<dict:fieldRef bean="course.official.catalogTitle"/>
										<dict:fieldRef bean="course.official.level"/>
										<dict:fieldRef bean="course.official.subjectArea.explore"/>
										<dict:fieldRef bean="course.official.numberPart.explore"/>
										<dict:fieldRef bean="course.official.version"/>
										<dict:fieldRef bean="course.official.adminOrg"/>
										<dict:fieldRef bean="course.official.type"/>
										<dict:fieldRef bean="course.official.state"/>
										<dict:fieldRef bean="course.official.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.official.no"/>
										<dict:fieldRef bean="course.official.transcriptTitle"/>
										<dict:fieldRef bean="course.official.catalogTitle"/>
										<dict:fieldRef bean="course.official.level"/>
										<dict:fieldRef bean="course.official.subjectArea.explore"/>
										<dict:fieldRef bean="course.official.numberPart.explore"/>
										<dict:fieldRef bean="course.official.version"/>
										<dict:fieldRef bean="course.official.adminOrg"/>
										<dict:fieldRef bean="course.official.type"/>
										<dict:fieldRef bean="course.official.state"/>
										<dict:fieldRef bean="course.official.internal.id"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="required"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="exactly.one.official.identifier"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field key="alternateIdentifiers">
					<dict:fieldDescriptor>
						<dict:name>course alternateIdentifiers</dict:name>
						<dict:desc>course alternate ids</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="cluIdentifierInfo">
								<!-- Detailed information about the human readable form of a CLU Identifier -->
								<dict:type key="kuali.lu.type.CreditCourse.identifier.cross-listed">
								<!-- This identifier holds the cross-listed identifiers for this course -->
								<!-- (MIT's meaning of joint) -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.cross-listed.no"/>
										<dict:fieldRef bean="course.cross-listed.transcriptTitle"/>
										<dict:fieldRef bean="course.cross-listed.catalogTitle"/>
										<dict:fieldRef bean="course.cross-listed.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.explore"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.explore"/>
										<dict:fieldRef bean="course.cross-listed.version"/>
										<dict:fieldRef bean="course.cross-listed.adminOrg"/>
										<dict:fieldRef bean="course.cross-listed.type"/>
										<dict:fieldRef bean="course.cross-listed.state"/>
										<dict:fieldRef bean="course.cross-listed.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.cross-listed.no"/>
										<dict:fieldRef bean="course.cross-listed.transcriptTitle"/>
										<dict:fieldRef bean="course.cross-listed.catalogTitle"/>
										<dict:fieldRef bean="course.cross-listed.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.explore"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.explore"/>
										<dict:fieldRef bean="course.cross-listed.version"/>
										<dict:fieldRef bean="course.cross-listed.adminOrg"/>
										<dict:fieldRef bean="course.cross-listed.type"/>
										<dict:fieldRef bean="course.cross-listed.state"/>
										<dict:fieldRef bean="course.cross-listed.internal.id"/>
									</dict:state>
								</dict:type>
								<dict:type key="kuali.lu.type.CreditCourse.identifier.version">
								<!-- This identifier holds the version information for courses that have multiple versions -->
								<!-- Variation -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.version.no"/>
										<dict:fieldRef bean="course.version.transcriptTitle"/>
										<dict:fieldRef bean="course.version.catalogTitle"/>
										<dict:fieldRef bean="course.version.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.explore"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.explore"/>
										<dict:fieldRef bean="course.version.version"/>
										<dict:fieldRef bean="course.version.adminOrg"/>
										<dict:fieldRef bean="course.version.type"/>
										<dict:fieldRef bean="course.version.state"/>
										<dict:fieldRef bean="course.version.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.version.no"/>
										<dict:fieldRef bean="course.version.transcriptTitle"/>
										<dict:fieldRef bean="course.version.catalogTitle"/>
										<dict:fieldRef bean="course.version.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.explore"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.explore"/>
										<dict:fieldRef bean="course.version.version"/>
										<dict:fieldRef bean="course.version.adminOrg"/>
										<dict:fieldRef bean="course.version.type"/>
										<dict:fieldRef bean="course.version.state"/>
										<dict:fieldRef bean="course.version.internal.id"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="repeating"/>
							<dict:constraintRef bean="zero.or.more.cross-listed.identifiers.zero.or.more.version.identifiers"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.studySubjectArea"/>
				
				<dict:field key="desc">
					<dict:fieldDescriptor>
						<dict:name>course desc</dict:name>
						<dict:desc>dscription</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="richTextInfo">
								<!-- Complex type supporting both a plain text and formatted version of a string. -->
								<dict:type key="kuali.not.applicable">
								<!-- Not applicable -->
								<!-- (n/a) -->
									<dict:state key="(n/a)">
									<!-- Not applicable -->
										<dict:fieldRef bean="course.desc.plain.explore"/>
										<dict:fieldRef bean="course.desc.formatted.explore"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="optional"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field key="marketingDesc">
					<!-- Rationale is stored in the Marketing Description for now -->
					<dict:fieldDescriptor>
						<dict:name>course rationale</dict:name>
						<dict:desc>rationale</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="richTextInfo">
								<!-- Complex type supporting both a plain text and formatted version of a string. -->
								<dict:type key="kuali.not.applicable">
								<!-- Not applicable -->
								<!-- (n/a) -->
									<dict:state key="(n/a)">
									<!-- Not applicable -->
										<dict:fieldRef bean="course.rationale.plain.explore"/>
										<dict:fieldRef bean="course.rationale.formatted.explore"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="required"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.campusLocation"/>
				<dict:fieldRef bean="course.accreditation"/>
				<dict:fieldRef bean="course.primaryAdminOrg"/>
				<dict:fieldRef bean="course.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.primaryInstructor"/>
				<dict:fieldRef bean="course.instructors"/>
				<dict:fieldRef bean="course.expectedFirstAtp"/>
				<dict:fieldRef bean="course.effectiveDate"/>
				<dict:fieldRef bean="course.expirationDate"/>
				<dict:fieldRef bean="course.total.contact.hours"/>
				<dict:fieldRef bean="course.duration"/>
				<dict:fieldRef bean="course.canCreateLui"/>
				<dict:fieldRef bean="course.referenceURL"/>
				<dict:fieldRef bean="course.luCodes"/>
				<dict:fieldRef bean="course.publishingInfo"/>
				<dict:fieldRef bean="course.nextReviewPeriod"/>
				<dict:fieldRef bean="course.isEnrollable"/>
				<dict:fieldRef bean="course.seasons"/>
				<dict:fieldRef bean="course.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.feeInfo"/>
				<dict:fieldRef bean="course.accountingInfo"/>
				<dict:fieldRef bean="course.dynamic.attributes"/>
				<dict:fieldRef bean="course.meta"/>
				<dict:fieldRef bean="course.type"/>
				<dict:fieldRef bean="course.state"/>
				<dict:fieldRef bean="course.internal.id"/>
			</dict:state>
			<dict:state key="draft">
			<!-- Entered as draft but not yet submitted -->
				
				<dict:field key="officialIdentifier">
					<dict:fieldDescriptor>
						<dict:name>course no</dict:name>
						<dict:desc>course no</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="cluIdentifierInfo">
								<!-- Detailed information about the human readable form of a CLU Identifier -->
								<dict:type key="kuali.lu.type.CreditCourse.identifier.official">
								<!-- This identifier holds the official identifier for this course -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.official.no"/>
										<dict:fieldRef bean="course.official.transcriptTitle.draft"/>
										<dict:fieldRef bean="course.official.catalogTitle.draft"/>
										<dict:fieldRef bean="course.official.level"/>
										<dict:fieldRef bean="course.official.subjectArea.draft"/>
										<dict:fieldRef bean="course.official.numberPart.draft"/>
										<dict:fieldRef bean="course.official.version"/>
										<dict:fieldRef bean="course.official.adminOrg"/>
										<dict:fieldRef bean="course.official.type"/>
										<dict:fieldRef bean="course.official.state"/>
										<dict:fieldRef bean="course.official.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.official.no"/>
										<dict:fieldRef bean="course.official.transcriptTitle.draft"/>
										<dict:fieldRef bean="course.official.catalogTitle.draft"/>
										<dict:fieldRef bean="course.official.level"/>
										<dict:fieldRef bean="course.official.subjectArea.draft"/>
										<dict:fieldRef bean="course.official.numberPart.draft"/>
										<dict:fieldRef bean="course.official.version"/>
										<dict:fieldRef bean="course.official.adminOrg"/>
										<dict:fieldRef bean="course.official.type"/>
										<dict:fieldRef bean="course.official.state"/>
										<dict:fieldRef bean="course.official.internal.id"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="required"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="exactly.one.official.identifier"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field key="alternateIdentifiers">
					<dict:fieldDescriptor>
						<dict:name>course alternateIdentifiers</dict:name>
						<dict:desc>course alternate ids</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="cluIdentifierInfo">
								<!-- Detailed information about the human readable form of a CLU Identifier -->
								<dict:type key="kuali.lu.type.CreditCourse.identifier.cross-listed">
								<!-- This identifier holds the cross-listed identifiers for this course -->
								<!-- (MIT's meaning of joint) -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.cross-listed.no"/>
										<dict:fieldRef bean="course.version.transcriptTitle.draft"/>
										<dict:fieldRef bean="course.cross-listed.catalogTitle"/>
										<dict:fieldRef bean="course.cross-listed.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.draft"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.draft"/>
										<dict:fieldRef bean="course.version.version.draft"/>
										<dict:fieldRef bean="course.cross-listed.adminOrg.draft"/>
										<dict:fieldRef bean="course.cross-listed.type"/>
										<dict:fieldRef bean="course.cross-listed.state"/>
										<dict:fieldRef bean="course.cross-listed.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.cross-listed.no"/>
										<dict:fieldRef bean="course.version.transcriptTitle.draft"/>
										<dict:fieldRef bean="course.cross-listed.catalogTitle"/>
										<dict:fieldRef bean="course.cross-listed.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.draft"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.draft"/>
										<dict:fieldRef bean="course.version.version.draft"/>
										<dict:fieldRef bean="course.cross-listed.adminOrg.draft"/>
										<dict:fieldRef bean="course.cross-listed.type"/>
										<dict:fieldRef bean="course.cross-listed.state"/>
										<dict:fieldRef bean="course.cross-listed.internal.id"/>
									</dict:state>
								</dict:type>
								<dict:type key="kuali.lu.type.CreditCourse.identifier.version">
								<!-- This identifier holds the version information for courses that have multiple versions -->
								<!-- Variation -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.version.no"/>
										<dict:fieldRef bean="course.version.transcriptTitle.draft"/>
										<dict:fieldRef bean="course.version.catalogTitle"/>
										<dict:fieldRef bean="course.version.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.draft"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.draft"/>
										<dict:fieldRef bean="course.version.version.draft"/>
										<dict:fieldRef bean="course.cross-listed.adminOrg.draft"/>
										<dict:fieldRef bean="course.version.type"/>
										<dict:fieldRef bean="course.version.state"/>
										<dict:fieldRef bean="course.version.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.version.no"/>
										<dict:fieldRef bean="course.version.transcriptTitle.draft"/>
										<dict:fieldRef bean="course.version.catalogTitle"/>
										<dict:fieldRef bean="course.version.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.draft"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.draft"/>
										<dict:fieldRef bean="course.version.version.draft"/>
										<dict:fieldRef bean="course.cross-listed.adminOrg.draft"/>
										<dict:fieldRef bean="course.version.type"/>
										<dict:fieldRef bean="course.version.state"/>
										<dict:fieldRef bean="course.version.internal.id"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="repeating"/>
							<dict:constraintRef bean="zero.or.more.cross-listed.identifiers.zero.or.more.version.identifiers"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.studySubjectArea"/>
				
				<dict:field key="desc">
					<dict:fieldDescriptor>
						<dict:name>course desc</dict:name>
						<dict:desc>dscription</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="richTextInfo">
								<!-- Complex type supporting both a plain text and formatted version of a string. -->
								<dict:type key="kuali.not.applicable">
								<!-- Not applicable -->
								<!-- (n/a) -->
									<dict:state key="(n/a)">
									<!-- Not applicable -->
										<dict:fieldRef bean="course.desc.plain.draft"/>
										<dict:fieldRef bean="course.desc.formatted.draft"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="optional"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field key="marketingDesc">
					<!-- Rationale is stored in the Marketing Description for now -->
					<dict:fieldDescriptor>
						<dict:name>course rationale</dict:name>
						<dict:desc>rationale</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="richTextInfo">
								<!-- Complex type supporting both a plain text and formatted version of a string. -->
								<dict:type key="kuali.not.applicable">
								<!-- Not applicable -->
								<!-- (n/a) -->
									<dict:state key="(n/a)">
									<!-- Not applicable -->
										<dict:fieldRef bean="course.rationale.plain.draft"/>
										<dict:fieldRef bean="course.rationale.formatted.draft"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="optional"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.campusLocation.draft"/>
				<dict:fieldRef bean="course.accreditation"/>
				<dict:fieldRef bean="course.primaryAdminOrg"/>
				<dict:fieldRef bean="course.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.primaryInstructor"/>
				<dict:fieldRef bean="course.instructors"/>
				<dict:fieldRef bean="course.expectedFirstAtp"/>
				<dict:fieldRef bean="course.effectiveDate"/>
				<dict:fieldRef bean="course.expirationDate"/>
				<dict:fieldRef bean="course.total.contact.hours"/>
				
				<dict:field key="stdDuration">
					<dict:fieldDescriptor>
						<dict:name>course duration</dict:name>
						<dict:desc>duration</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="timeAmountInfo">
								<!-- Detailed information about an amount of time including both the type of units and the quantity. -->
								<dict:type key="kuali.not.applicable">
								<!-- Not applicable -->
								<!-- (n/a) -->
									<dict:state key="(n/a)">
									<!-- Not applicable -->
										<dict:fieldRef bean="course.duration.units.draft"/>
										<dict:fieldRef bean="course.duration.no"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="optional"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.canCreateLui"/>
				<dict:fieldRef bean="course.referenceURL"/>
				<dict:fieldRef bean="course.luCodes"/>
				<dict:fieldRef bean="course.publishingInfo"/>
				<dict:fieldRef bean="course.nextReviewPeriod"/>
				<dict:fieldRef bean="course.isEnrollable"/>
				<dict:fieldRef bean="course.seasons.draft"/>
				<dict:fieldRef bean="course.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.feeInfo"/>
				<dict:fieldRef bean="course.accountingInfo"/>
				<dict:fieldRef bean="course.dynamic.attributes"/>
				<dict:fieldRef bean="course.meta"/>
				<dict:fieldRef bean="course.type"/>
				<dict:fieldRef bean="course.state"/>
				<dict:fieldRef bean="course.internal.id"/>
			</dict:state>
			<dict:state key="submitted">
			<!-- Submitted but not yet approved -->
				
				<dict:field key="officialIdentifier">
					<dict:fieldDescriptor>
						<dict:name>course no</dict:name>
						<dict:desc>course no</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="cluIdentifierInfo">
								<!-- Detailed information about the human readable form of a CLU Identifier -->
								<dict:type key="kuali.lu.type.CreditCourse.identifier.official">
								<!-- This identifier holds the official identifier for this course -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.official.no"/>
										<dict:fieldRef bean="course.official.transcriptTitle"/>
										<dict:fieldRef bean="course.official.catalogTitle"/>
										<dict:fieldRef bean="course.official.level"/>
										<dict:fieldRef bean="course.official.subjectArea.submitted"/>
										<dict:fieldRef bean="course.official.numberPart.submitted"/>
										<dict:fieldRef bean="course.official.version"/>
										<dict:fieldRef bean="course.official.adminOrg"/>
										<dict:fieldRef bean="course.official.type"/>
										<dict:fieldRef bean="course.official.state"/>
										<dict:fieldRef bean="course.official.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.official.no"/>
										<dict:fieldRef bean="course.official.transcriptTitle"/>
										<dict:fieldRef bean="course.official.catalogTitle"/>
										<dict:fieldRef bean="course.official.level"/>
										<dict:fieldRef bean="course.official.subjectArea.submitted"/>
										<dict:fieldRef bean="course.official.numberPart.submitted"/>
										<dict:fieldRef bean="course.official.version"/>
										<dict:fieldRef bean="course.official.adminOrg"/>
										<dict:fieldRef bean="course.official.type"/>
										<dict:fieldRef bean="course.official.state"/>
										<dict:fieldRef bean="course.official.internal.id"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="required"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="exactly.one.official.identifier"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field key="alternateIdentifiers">
					<dict:fieldDescriptor>
						<dict:name>course alternateIdentifiers</dict:name>
						<dict:desc>course alternate ids</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="cluIdentifierInfo">
								<!-- Detailed information about the human readable form of a CLU Identifier -->
								<dict:type key="kuali.lu.type.CreditCourse.identifier.cross-listed">
								<!-- This identifier holds the cross-listed identifiers for this course -->
								<!-- (MIT's meaning of joint) -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.cross-listed.no"/>
										<dict:fieldRef bean="course.cross-listed.transcriptTitle"/>
										<dict:fieldRef bean="course.cross-listed.catalogTitle"/>
										<dict:fieldRef bean="course.cross-listed.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.submitted"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.submitted"/>
										<dict:fieldRef bean="course.cross-listed.version"/>
										<dict:fieldRef bean="course.cross-listed.adminOrg"/>
										<dict:fieldRef bean="course.cross-listed.type"/>
										<dict:fieldRef bean="course.cross-listed.state"/>
										<dict:fieldRef bean="course.cross-listed.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.cross-listed.no"/>
										<dict:fieldRef bean="course.cross-listed.transcriptTitle"/>
										<dict:fieldRef bean="course.cross-listed.catalogTitle"/>
										<dict:fieldRef bean="course.cross-listed.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.submitted"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.submitted"/>
										<dict:fieldRef bean="course.cross-listed.version"/>
										<dict:fieldRef bean="course.cross-listed.adminOrg"/>
										<dict:fieldRef bean="course.cross-listed.type"/>
										<dict:fieldRef bean="course.cross-listed.state"/>
										<dict:fieldRef bean="course.cross-listed.internal.id"/>
									</dict:state>
								</dict:type>
								<dict:type key="kuali.lu.type.CreditCourse.identifier.version">
								<!-- This identifier holds the version information for courses that have multiple versions -->
								<!-- Variation -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.version.no"/>
										<dict:fieldRef bean="course.version.transcriptTitle"/>
										<dict:fieldRef bean="course.version.catalogTitle"/>
										<dict:fieldRef bean="course.version.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.submitted"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.submitted"/>
										<dict:fieldRef bean="course.version.version"/>
										<dict:fieldRef bean="course.version.adminOrg"/>
										<dict:fieldRef bean="course.version.type"/>
										<dict:fieldRef bean="course.version.state"/>
										<dict:fieldRef bean="course.version.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.version.no"/>
										<dict:fieldRef bean="course.version.transcriptTitle"/>
										<dict:fieldRef bean="course.version.catalogTitle"/>
										<dict:fieldRef bean="course.version.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.submitted"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.submitted"/>
										<dict:fieldRef bean="course.version.version"/>
										<dict:fieldRef bean="course.version.adminOrg"/>
										<dict:fieldRef bean="course.version.type"/>
										<dict:fieldRef bean="course.version.state"/>
										<dict:fieldRef bean="course.version.internal.id"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="repeating"/>
							<dict:constraintRef bean="zero.or.more.cross-listed.identifiers.zero.or.more.version.identifiers"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.studySubjectArea"/>
				<dict:fieldRef bean="course.desc"/>
				<dict:fieldRef bean="course.rationale"/>
				<dict:fieldRef bean="course.campusLocation"/>
				<dict:fieldRef bean="course.accreditation"/>
				<dict:fieldRef bean="course.primaryAdminOrg"/>
				<dict:fieldRef bean="course.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.primaryInstructor"/>
				<dict:fieldRef bean="course.instructors"/>
				<dict:fieldRef bean="course.expectedFirstAtp"/>
				<dict:fieldRef bean="course.effectiveDate"/>
				<dict:fieldRef bean="course.expirationDate"/>
				<dict:fieldRef bean="course.total.contact.hours"/>
				<dict:fieldRef bean="course.duration"/>
				<dict:fieldRef bean="course.canCreateLui"/>
				<dict:fieldRef bean="course.referenceURL"/>
				<dict:fieldRef bean="course.luCodes"/>
				<dict:fieldRef bean="course.publishingInfo"/>
				<dict:fieldRef bean="course.nextReviewPeriod"/>
				<dict:fieldRef bean="course.isEnrollable"/>
				<dict:fieldRef bean="course.seasons"/>
				<dict:fieldRef bean="course.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.feeInfo"/>
				<dict:fieldRef bean="course.accountingInfo"/>
				<dict:fieldRef bean="course.dynamic.attributes"/>
				<dict:fieldRef bean="course.meta"/>
				<dict:fieldRef bean="course.type"/>
				<dict:fieldRef bean="course.state"/>
				<dict:fieldRef bean="course.internal.id"/>
			</dict:state>
			<dict:state key="withdrawn">
			<!-- Withdrawn (anytime before activated) -->
				
				<dict:field key="officialIdentifier">
					<dict:fieldDescriptor>
						<dict:name>course no</dict:name>
						<dict:desc>course no</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="cluIdentifierInfo">
								<!-- Detailed information about the human readable form of a CLU Identifier -->
								<dict:type key="kuali.lu.type.CreditCourse.identifier.official">
								<!-- This identifier holds the official identifier for this course -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.official.no"/>
										<dict:fieldRef bean="course.official.transcriptTitle"/>
										<dict:fieldRef bean="course.official.catalogTitle"/>
										<dict:fieldRef bean="course.official.level"/>
										<dict:fieldRef bean="course.official.subjectArea.withdrawn"/>
										<dict:fieldRef bean="course.official.numberPart.withdrawn"/>
										<dict:fieldRef bean="course.official.version"/>
										<dict:fieldRef bean="course.official.adminOrg"/>
										<dict:fieldRef bean="course.official.type"/>
										<dict:fieldRef bean="course.official.state"/>
										<dict:fieldRef bean="course.official.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.official.no"/>
										<dict:fieldRef bean="course.official.transcriptTitle"/>
										<dict:fieldRef bean="course.official.catalogTitle"/>
										<dict:fieldRef bean="course.official.level"/>
										<dict:fieldRef bean="course.official.subjectArea.withdrawn"/>
										<dict:fieldRef bean="course.official.numberPart.withdrawn"/>
										<dict:fieldRef bean="course.official.version"/>
										<dict:fieldRef bean="course.official.adminOrg"/>
										<dict:fieldRef bean="course.official.type"/>
										<dict:fieldRef bean="course.official.state"/>
										<dict:fieldRef bean="course.official.internal.id"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="required"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="exactly.one.official.identifier"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field key="alternateIdentifiers">
					<dict:fieldDescriptor>
						<dict:name>course alternateIdentifiers</dict:name>
						<dict:desc>course alternate ids</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="cluIdentifierInfo">
								<!-- Detailed information about the human readable form of a CLU Identifier -->
								<dict:type key="kuali.lu.type.CreditCourse.identifier.cross-listed">
								<!-- This identifier holds the cross-listed identifiers for this course -->
								<!-- (MIT's meaning of joint) -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.cross-listed.no"/>
										<dict:fieldRef bean="course.cross-listed.transcriptTitle"/>
										<dict:fieldRef bean="course.cross-listed.catalogTitle"/>
										<dict:fieldRef bean="course.cross-listed.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.withdrawn"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.withdrawn"/>
										<dict:fieldRef bean="course.cross-listed.version"/>
										<dict:fieldRef bean="course.cross-listed.adminOrg"/>
										<dict:fieldRef bean="course.cross-listed.type"/>
										<dict:fieldRef bean="course.cross-listed.state"/>
										<dict:fieldRef bean="course.cross-listed.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.cross-listed.no"/>
										<dict:fieldRef bean="course.cross-listed.transcriptTitle"/>
										<dict:fieldRef bean="course.cross-listed.catalogTitle"/>
										<dict:fieldRef bean="course.cross-listed.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.withdrawn"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.withdrawn"/>
										<dict:fieldRef bean="course.cross-listed.version"/>
										<dict:fieldRef bean="course.cross-listed.adminOrg"/>
										<dict:fieldRef bean="course.cross-listed.type"/>
										<dict:fieldRef bean="course.cross-listed.state"/>
										<dict:fieldRef bean="course.cross-listed.internal.id"/>
									</dict:state>
								</dict:type>
								<dict:type key="kuali.lu.type.CreditCourse.identifier.version">
								<!-- This identifier holds the version information for courses that have multiple versions -->
								<!-- Variation -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.version.no"/>
										<dict:fieldRef bean="course.version.transcriptTitle"/>
										<dict:fieldRef bean="course.version.catalogTitle"/>
										<dict:fieldRef bean="course.version.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.withdrawn"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.withdrawn"/>
										<dict:fieldRef bean="course.version.version"/>
										<dict:fieldRef bean="course.version.adminOrg"/>
										<dict:fieldRef bean="course.version.type"/>
										<dict:fieldRef bean="course.version.state"/>
										<dict:fieldRef bean="course.version.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.version.no"/>
										<dict:fieldRef bean="course.version.transcriptTitle"/>
										<dict:fieldRef bean="course.version.catalogTitle"/>
										<dict:fieldRef bean="course.version.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.withdrawn"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.withdrawn"/>
										<dict:fieldRef bean="course.version.version"/>
										<dict:fieldRef bean="course.version.adminOrg"/>
										<dict:fieldRef bean="course.version.type"/>
										<dict:fieldRef bean="course.version.state"/>
										<dict:fieldRef bean="course.version.internal.id"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="repeating"/>
							<dict:constraintRef bean="zero.or.more.cross-listed.identifiers.zero.or.more.version.identifiers"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.studySubjectArea"/>
				<dict:fieldRef bean="course.desc"/>
				<dict:fieldRef bean="course.rationale"/>
				<dict:fieldRef bean="course.campusLocation"/>
				<dict:fieldRef bean="course.accreditation"/>
				<dict:fieldRef bean="course.primaryAdminOrg"/>
				<dict:fieldRef bean="course.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.primaryInstructor"/>
				<dict:fieldRef bean="course.instructors"/>
				<dict:fieldRef bean="course.expectedFirstAtp"/>
				<dict:fieldRef bean="course.effectiveDate"/>
				<dict:fieldRef bean="course.expirationDate"/>
				<dict:fieldRef bean="course.total.contact.hours"/>
				<dict:fieldRef bean="course.duration"/>
				<dict:fieldRef bean="course.canCreateLui"/>
				<dict:fieldRef bean="course.referenceURL"/>
				<dict:fieldRef bean="course.luCodes"/>
				<dict:fieldRef bean="course.publishingInfo"/>
				<dict:fieldRef bean="course.nextReviewPeriod"/>
				<dict:fieldRef bean="course.isEnrollable"/>
				<dict:fieldRef bean="course.seasons"/>
				<dict:fieldRef bean="course.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.feeInfo"/>
				<dict:fieldRef bean="course.accountingInfo"/>
				<dict:fieldRef bean="course.dynamic.attributes"/>
				<dict:fieldRef bean="course.meta"/>
				<dict:fieldRef bean="course.type"/>
				<dict:fieldRef bean="course.state"/>
				<dict:fieldRef bean="course.internal.id"/>
			</dict:state>
			<dict:state key="approved">
			<!-- Approved -->
				<dict:fieldRef bean="course.official"/>
				<dict:fieldRef bean="course.alternateIdentifiers"/>
				<dict:fieldRef bean="course.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.studySubjectArea"/>
				<dict:fieldRef bean="course.desc"/>
				<dict:fieldRef bean="course.rationale"/>
				<dict:fieldRef bean="course.campusLocation"/>
				<dict:fieldRef bean="course.accreditation"/>
				<dict:fieldRef bean="course.primaryAdminOrg"/>
				<dict:fieldRef bean="course.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.primaryInstructor"/>
				<dict:fieldRef bean="course.instructors"/>
				<dict:fieldRef bean="course.expectedFirstAtp"/>
				<dict:fieldRef bean="course.effectiveDate"/>
				<dict:fieldRef bean="course.expirationDate"/>
				<dict:fieldRef bean="course.total.contact.hours"/>
				<dict:fieldRef bean="course.duration"/>
				<dict:fieldRef bean="course.canCreateLui"/>
				<dict:fieldRef bean="course.referenceURL"/>
				<dict:fieldRef bean="course.luCodes"/>
				<dict:fieldRef bean="course.publishingInfo"/>
				<dict:fieldRef bean="course.nextReviewPeriod"/>
				<dict:fieldRef bean="course.isEnrollable"/>
				<dict:fieldRef bean="course.seasons"/>
				<dict:fieldRef bean="course.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.feeInfo"/>
				<dict:fieldRef bean="course.accountingInfo"/>
				<dict:fieldRef bean="course.dynamic.attributes"/>
				<dict:fieldRef bean="course.meta"/>
				<dict:fieldRef bean="course.type"/>
				<dict:fieldRef bean="course.state"/>
				<dict:fieldRef bean="course.internal.id"/>
			</dict:state>
			<dict:state key="rejected">
			<!-- Not approved (rejected) -->
			<!-- Do we need here some indication of why it was not approved?  I.e. disapproved vs. not acted on because submitted too late, etc. -->
				
				<dict:field key="officialIdentifier">
					<dict:fieldDescriptor>
						<dict:name>course no</dict:name>
						<dict:desc>course no</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="cluIdentifierInfo">
								<!-- Detailed information about the human readable form of a CLU Identifier -->
								<dict:type key="kuali.lu.type.CreditCourse.identifier.official">
								<!-- This identifier holds the official identifier for this course -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.official.no"/>
										<dict:fieldRef bean="course.official.transcriptTitle"/>
										<dict:fieldRef bean="course.official.catalogTitle"/>
										<dict:fieldRef bean="course.official.level"/>
										<dict:fieldRef bean="course.official.subjectArea.rejected"/>
										<dict:fieldRef bean="course.official.numberPart.rejected"/>
										<dict:fieldRef bean="course.official.version"/>
										<dict:fieldRef bean="course.official.adminOrg"/>
										<dict:fieldRef bean="course.official.type"/>
										<dict:fieldRef bean="course.official.state"/>
										<dict:fieldRef bean="course.official.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.official.no"/>
										<dict:fieldRef bean="course.official.transcriptTitle"/>
										<dict:fieldRef bean="course.official.catalogTitle"/>
										<dict:fieldRef bean="course.official.level"/>
										<dict:fieldRef bean="course.official.subjectArea.rejected"/>
										<dict:fieldRef bean="course.official.numberPart.rejected"/>
										<dict:fieldRef bean="course.official.version"/>
										<dict:fieldRef bean="course.official.adminOrg"/>
										<dict:fieldRef bean="course.official.type"/>
										<dict:fieldRef bean="course.official.state"/>
										<dict:fieldRef bean="course.official.internal.id"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="required"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="exactly.one.official.identifier"/>
					</dict:constraintDescriptor>
				</dict:field>
				
				<dict:field key="alternateIdentifiers">
					<dict:fieldDescriptor>
						<dict:name>course alternateIdentifiers</dict:name>
						<dict:desc>course alternate ids</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="cluIdentifierInfo">
								<!-- Detailed information about the human readable form of a CLU Identifier -->
								<dict:type key="kuali.lu.type.CreditCourse.identifier.cross-listed">
								<!-- This identifier holds the cross-listed identifiers for this course -->
								<!-- (MIT's meaning of joint) -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.cross-listed.no"/>
										<dict:fieldRef bean="course.cross-listed.transcriptTitle"/>
										<dict:fieldRef bean="course.cross-listed.catalogTitle"/>
										<dict:fieldRef bean="course.cross-listed.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.rejected"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.rejected"/>
										<dict:fieldRef bean="course.cross-listed.version"/>
										<dict:fieldRef bean="course.cross-listed.adminOrg"/>
										<dict:fieldRef bean="course.cross-listed.type"/>
										<dict:fieldRef bean="course.cross-listed.state"/>
										<dict:fieldRef bean="course.cross-listed.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.cross-listed.no"/>
										<dict:fieldRef bean="course.cross-listed.transcriptTitle"/>
										<dict:fieldRef bean="course.cross-listed.catalogTitle"/>
										<dict:fieldRef bean="course.cross-listed.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.rejected"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.rejected"/>
										<dict:fieldRef bean="course.cross-listed.version"/>
										<dict:fieldRef bean="course.cross-listed.adminOrg"/>
										<dict:fieldRef bean="course.cross-listed.type"/>
										<dict:fieldRef bean="course.cross-listed.state"/>
										<dict:fieldRef bean="course.cross-listed.internal.id"/>
									</dict:state>
								</dict:type>
								<dict:type key="kuali.lu.type.CreditCourse.identifier.version">
								<!-- This identifier holds the version information for courses that have multiple versions -->
								<!-- Variation -->
									<dict:state key="active">
									<!-- Identifier is active -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.version.no"/>
										<dict:fieldRef bean="course.version.transcriptTitle"/>
										<dict:fieldRef bean="course.version.catalogTitle"/>
										<dict:fieldRef bean="course.version.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.rejected"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.rejected"/>
										<dict:fieldRef bean="course.version.version"/>
										<dict:fieldRef bean="course.version.adminOrg"/>
										<dict:fieldRef bean="course.version.type"/>
										<dict:fieldRef bean="course.version.state"/>
										<dict:fieldRef bean="course.version.internal.id"/>
									</dict:state>
									<dict:state key="inactive">
									<!-- Identifier is inactive -->
									<!-- TODO: Add to simple spec -->
										<dict:fieldRef bean="course.version.no"/>
										<dict:fieldRef bean="course.version.transcriptTitle"/>
										<dict:fieldRef bean="course.version.catalogTitle"/>
										<dict:fieldRef bean="course.version.level"/>
										<dict:fieldRef bean="course.cross-listed.subjectArea.rejected"/>
										<dict:fieldRef bean="course.cross-listed.numberPart.rejected"/>
										<dict:fieldRef bean="course.version.version"/>
										<dict:fieldRef bean="course.version.adminOrg"/>
										<dict:fieldRef bean="course.version.type"/>
										<dict:fieldRef bean="course.version.state"/>
										<dict:fieldRef bean="course.version.internal.id"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="repeating"/>
							<dict:constraintRef bean="zero.or.more.cross-listed.identifiers.zero.or.more.version.identifiers"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.studySubjectArea"/>
				<dict:fieldRef bean="course.desc"/>
				<dict:fieldRef bean="course.rationale"/>
				<dict:fieldRef bean="course.campusLocation"/>
				<dict:fieldRef bean="course.accreditation"/>
				<dict:fieldRef bean="course.primaryAdminOrg"/>
				<dict:fieldRef bean="course.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.primaryInstructor"/>
				<dict:fieldRef bean="course.instructors"/>
				<dict:fieldRef bean="course.expectedFirstAtp"/>
				<dict:fieldRef bean="course.effectiveDate"/>
				<dict:fieldRef bean="course.expirationDate"/>
				<dict:fieldRef bean="course.total.contact.hours"/>
				<dict:fieldRef bean="course.duration"/>
				<dict:fieldRef bean="course.canCreateLui"/>
				<dict:fieldRef bean="course.referenceURL"/>
				<dict:fieldRef bean="course.luCodes"/>
				<dict:fieldRef bean="course.publishingInfo"/>
				<dict:fieldRef bean="course.nextReviewPeriod"/>
				<dict:fieldRef bean="course.isEnrollable"/>
				<dict:fieldRef bean="course.seasons"/>
				<dict:fieldRef bean="course.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.feeInfo"/>
				<dict:fieldRef bean="course.accountingInfo"/>
				<dict:fieldRef bean="course.dynamic.attributes"/>
				<dict:fieldRef bean="course.meta"/>
				<dict:fieldRef bean="course.type"/>
				<dict:fieldRef bean="course.state"/>
				<dict:fieldRef bean="course.internal.id"/>
			</dict:state>
			<dict:state key="activated">
			<!-- Activated and ready to be published -->
				<dict:fieldRef bean="course.official"/>
				<dict:fieldRef bean="course.alternateIdentifiers"/>
				<dict:fieldRef bean="course.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.studySubjectArea"/>
				<dict:fieldRef bean="course.desc"/>
				<dict:fieldRef bean="course.rationale"/>
				<dict:fieldRef bean="course.campusLocation"/>
				<dict:fieldRef bean="course.accreditation"/>
				<dict:fieldRef bean="course.primaryAdminOrg"/>
				<dict:fieldRef bean="course.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.primaryInstructor"/>
				<dict:fieldRef bean="course.instructors"/>
				<dict:fieldRef bean="course.expectedFirstAtp"/>
				<dict:fieldRef bean="course.effectiveDate"/>
				<dict:fieldRef bean="course.expirationDate"/>
				<dict:fieldRef bean="course.total.contact.hours"/>
				<dict:fieldRef bean="course.duration"/>
				<dict:fieldRef bean="course.canCreateLui"/>
				<dict:fieldRef bean="course.referenceURL"/>
				<dict:fieldRef bean="course.luCodes"/>
				<dict:fieldRef bean="course.publishingInfo"/>
				<dict:fieldRef bean="course.nextReviewPeriod"/>
				<dict:fieldRef bean="course.isEnrollable"/>
				<dict:fieldRef bean="course.seasons"/>
				<dict:fieldRef bean="course.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.feeInfo"/>
				<dict:fieldRef bean="course.accountingInfo"/>
				<dict:fieldRef bean="course.dynamic.attributes"/>
				<dict:fieldRef bean="course.meta"/>
				<dict:fieldRef bean="course.type"/>
				<dict:fieldRef bean="course.state"/>
				<dict:fieldRef bean="course.internal.id"/>
			</dict:state>
			<dict:state key="retired">
			<!-- Retired/No longer active -->
			<!-- Do we need/want to differentiate here between retiring a course simply because it will no longer be taught and retiring a version of a course because it has been superceded by a newer version. -->
				<dict:fieldRef bean="course.official"/>
				<dict:fieldRef bean="course.alternateIdentifiers"/>
				<dict:fieldRef bean="course.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.studySubjectArea"/>
				<dict:fieldRef bean="course.desc"/>
				<dict:fieldRef bean="course.rationale"/>
				<dict:fieldRef bean="course.campusLocation"/>
				<dict:fieldRef bean="course.accreditation"/>
				<dict:fieldRef bean="course.primaryAdminOrg"/>
				<dict:fieldRef bean="course.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.primaryInstructor"/>
				<dict:fieldRef bean="course.instructors"/>
				<dict:fieldRef bean="course.expectedFirstAtp"/>
				<dict:fieldRef bean="course.effectiveDate"/>
				<dict:fieldRef bean="course.expirationDate.retired"/>
				<dict:fieldRef bean="course.total.contact.hours"/>
				<dict:fieldRef bean="course.duration"/>
				<dict:fieldRef bean="course.canCreateLui"/>
				<dict:fieldRef bean="course.referenceURL"/>
				<dict:fieldRef bean="course.luCodes"/>
				<dict:fieldRef bean="course.publishingInfo"/>
				<dict:fieldRef bean="course.nextReviewPeriod"/>
				<dict:fieldRef bean="course.isEnrollable"/>
				<dict:fieldRef bean="course.seasons"/>
				<dict:fieldRef bean="course.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.feeInfo"/>
				<dict:fieldRef bean="course.accountingInfo"/>
				<dict:fieldRef bean="course.dynamic.attributes"/>
				<dict:fieldRef bean="course.meta"/>
				<dict:fieldRef bean="course.type"/>
				<dict:fieldRef bean="course.state"/>
				<dict:fieldRef bean="course.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.lu.type.CreditCourseFormatShell">
		<!-- This is really just a container to attach the activities for a given course format (each credit course can have multiple course formats each with a set of activities) -->
		<!-- Delivery methods -->
			<dict:state key="template">
			<!-- A template holds configuration for defaults for creating a new course -->
				<dict:fieldRef bean="course.format.official"/>
				<dict:fieldRef bean="course.format.alternateIdentifiers"/>
				<dict:fieldRef bean="course.format.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.format.studySubjectArea"/>
				<dict:fieldRef bean="course.format.desc"/>
				<dict:fieldRef bean="course.format.marketingDesc"/>
				<dict:fieldRef bean="course.format.campusLocations"/>
				<dict:fieldRef bean="course.format.accreditation"/>
				<dict:fieldRef bean="course.format.primaryAdminOrg"/>
				<dict:fieldRef bean="course.format.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.format.primaryInstructor"/>
				<dict:fieldRef bean="course.format.instructors"/>
				<dict:fieldRef bean="course.format.expectedFirstAtp"/>
				<dict:fieldRef bean="course.format.effectiveDate"/>
				<dict:fieldRef bean="course.format.expirationDate"/>
				<dict:fieldRef bean="course.format.total.contact.hours"/>
				<dict:fieldRef bean="course.format.duration"/>
				<dict:fieldRef bean="course.format.canCreateLui"/>
				<dict:fieldRef bean="course.format.referenceURL"/>
				<dict:fieldRef bean="course.format.luCodes"/>
				<dict:fieldRef bean="course.format.publishingInfo"/>
				<dict:fieldRef bean="course.format.nextReviewPeriod"/>
				<dict:fieldRef bean="course.format.isEnrollable"/>
				<dict:fieldRef bean="course.format.offeredAtpTypes"/>
				<dict:fieldRef bean="course.format.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.format.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.format.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.format.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.format.feeInfo"/>
				<dict:fieldRef bean="course.format.accountingInfo"/>
				<dict:fieldRef bean="course.format.attributes"/>
				<dict:fieldRef bean="course.format.metaInfo"/>
				<dict:fieldRef bean="course.format.type"/>
				<dict:fieldRef bean="course.format.state"/>
				<dict:fieldRef bean="course.format.internal.id"/>
			</dict:state>
			<dict:state key="explore">
			<!-- Exploratory/Private scratch pad -->
			<!-- Not sure if this is needed but UC mentions some ability for professors to create proposals within their own space -->
				<dict:fieldRef bean="course.format.official"/>
				<dict:fieldRef bean="course.format.alternateIdentifiers"/>
				<dict:fieldRef bean="course.format.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.format.studySubjectArea"/>
				<dict:fieldRef bean="course.format.desc"/>
				<dict:fieldRef bean="course.format.marketingDesc"/>
				<dict:fieldRef bean="course.format.campusLocations"/>
				<dict:fieldRef bean="course.format.accreditation"/>
				<dict:fieldRef bean="course.format.primaryAdminOrg"/>
				<dict:fieldRef bean="course.format.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.format.primaryInstructor"/>
				<dict:fieldRef bean="course.format.instructors"/>
				<dict:fieldRef bean="course.format.expectedFirstAtp"/>
				<dict:fieldRef bean="course.format.effectiveDate"/>
				<dict:fieldRef bean="course.format.expirationDate"/>
				<dict:fieldRef bean="course.format.total.contact.hours"/>
				<dict:fieldRef bean="course.format.duration"/>
				<dict:fieldRef bean="course.format.canCreateLui"/>
				<dict:fieldRef bean="course.format.referenceURL"/>
				<dict:fieldRef bean="course.format.luCodes"/>
				<dict:fieldRef bean="course.format.publishingInfo"/>
				<dict:fieldRef bean="course.format.nextReviewPeriod"/>
				<dict:fieldRef bean="course.format.isEnrollable"/>
				<dict:fieldRef bean="course.format.offeredAtpTypes"/>
				<dict:fieldRef bean="course.format.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.format.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.format.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.format.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.format.feeInfo"/>
				<dict:fieldRef bean="course.format.accountingInfo"/>
				<dict:fieldRef bean="course.format.attributes"/>
				<dict:fieldRef bean="course.format.metaInfo"/>
				<dict:fieldRef bean="course.format.type"/>
				<dict:fieldRef bean="course.format.state"/>
				<dict:fieldRef bean="course.format.internal.id"/>
			</dict:state>
			<dict:state key="draft">
			<!-- Entered as draft but not yet submitted -->
				<dict:fieldRef bean="course.format.official"/>
				<dict:fieldRef bean="course.format.alternateIdentifiers"/>
				<dict:fieldRef bean="course.format.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.format.studySubjectArea"/>
				<dict:fieldRef bean="course.format.desc"/>
				<dict:fieldRef bean="course.format.marketingDesc"/>
				<dict:fieldRef bean="course.format.campusLocations"/>
				<dict:fieldRef bean="course.format.accreditation"/>
				<dict:fieldRef bean="course.format.primaryAdminOrg"/>
				<dict:fieldRef bean="course.format.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.format.primaryInstructor"/>
				<dict:fieldRef bean="course.format.instructors"/>
				<dict:fieldRef bean="course.format.expectedFirstAtp"/>
				<dict:fieldRef bean="course.format.effectiveDate"/>
				<dict:fieldRef bean="course.format.expirationDate"/>
				<dict:fieldRef bean="course.format.total.contact.hours"/>
				<dict:fieldRef bean="course.format.duration"/>
				<dict:fieldRef bean="course.format.canCreateLui"/>
				<dict:fieldRef bean="course.format.referenceURL"/>
				<dict:fieldRef bean="course.format.luCodes"/>
				<dict:fieldRef bean="course.format.publishingInfo"/>
				<dict:fieldRef bean="course.format.nextReviewPeriod"/>
				<dict:fieldRef bean="course.format.isEnrollable"/>
				<dict:fieldRef bean="course.format.offeredAtpTypes"/>
				<dict:fieldRef bean="course.format.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.format.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.format.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.format.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.format.feeInfo"/>
				<dict:fieldRef bean="course.format.accountingInfo"/>
				<dict:fieldRef bean="course.format.attributes"/>
				<dict:fieldRef bean="course.format.metaInfo"/>
				<dict:fieldRef bean="course.format.type"/>
				<dict:fieldRef bean="course.format.state"/>
				<dict:fieldRef bean="course.format.internal.id"/>
			</dict:state>
			<dict:state key="submitted">
			<!-- Submitted but not yet approved -->
				<dict:fieldRef bean="course.format.official"/>
				<dict:fieldRef bean="course.format.alternateIdentifiers"/>
				<dict:fieldRef bean="course.format.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.format.studySubjectArea"/>
				<dict:fieldRef bean="course.format.desc"/>
				<dict:fieldRef bean="course.format.marketingDesc"/>
				<dict:fieldRef bean="course.format.campusLocations"/>
				<dict:fieldRef bean="course.format.accreditation"/>
				<dict:fieldRef bean="course.format.primaryAdminOrg"/>
				<dict:fieldRef bean="course.format.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.format.primaryInstructor"/>
				<dict:fieldRef bean="course.format.instructors"/>
				<dict:fieldRef bean="course.format.expectedFirstAtp"/>
				<dict:fieldRef bean="course.format.effectiveDate"/>
				<dict:fieldRef bean="course.format.expirationDate"/>
				<dict:fieldRef bean="course.format.total.contact.hours"/>
				<dict:fieldRef bean="course.format.duration"/>
				<dict:fieldRef bean="course.format.canCreateLui"/>
				<dict:fieldRef bean="course.format.referenceURL"/>
				<dict:fieldRef bean="course.format.luCodes"/>
				<dict:fieldRef bean="course.format.publishingInfo"/>
				<dict:fieldRef bean="course.format.nextReviewPeriod"/>
				<dict:fieldRef bean="course.format.isEnrollable"/>
				<dict:fieldRef bean="course.format.offeredAtpTypes"/>
				<dict:fieldRef bean="course.format.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.format.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.format.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.format.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.format.feeInfo"/>
				<dict:fieldRef bean="course.format.accountingInfo"/>
				<dict:fieldRef bean="course.format.attributes"/>
				<dict:fieldRef bean="course.format.metaInfo"/>
				<dict:fieldRef bean="course.format.type"/>
				<dict:fieldRef bean="course.format.state"/>
				<dict:fieldRef bean="course.format.internal.id"/>
			</dict:state>
			<dict:state key="withdrawn">
			<!-- Withdrawn (anytime before activated) -->
				<dict:fieldRef bean="course.format.official"/>
				<dict:fieldRef bean="course.format.alternateIdentifiers"/>
				<dict:fieldRef bean="course.format.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.format.studySubjectArea"/>
				<dict:fieldRef bean="course.format.desc"/>
				<dict:fieldRef bean="course.format.marketingDesc"/>
				<dict:fieldRef bean="course.format.campusLocations"/>
				<dict:fieldRef bean="course.format.accreditation"/>
				<dict:fieldRef bean="course.format.primaryAdminOrg"/>
				<dict:fieldRef bean="course.format.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.format.primaryInstructor"/>
				<dict:fieldRef bean="course.format.instructors"/>
				<dict:fieldRef bean="course.format.expectedFirstAtp"/>
				<dict:fieldRef bean="course.format.effectiveDate"/>
				<dict:fieldRef bean="course.format.expirationDate"/>
				<dict:fieldRef bean="course.format.total.contact.hours"/>
				<dict:fieldRef bean="course.format.duration"/>
				<dict:fieldRef bean="course.format.canCreateLui"/>
				<dict:fieldRef bean="course.format.referenceURL"/>
				<dict:fieldRef bean="course.format.luCodes"/>
				<dict:fieldRef bean="course.format.publishingInfo"/>
				<dict:fieldRef bean="course.format.nextReviewPeriod"/>
				<dict:fieldRef bean="course.format.isEnrollable"/>
				<dict:fieldRef bean="course.format.offeredAtpTypes"/>
				<dict:fieldRef bean="course.format.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.format.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.format.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.format.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.format.feeInfo"/>
				<dict:fieldRef bean="course.format.accountingInfo"/>
				<dict:fieldRef bean="course.format.attributes"/>
				<dict:fieldRef bean="course.format.metaInfo"/>
				<dict:fieldRef bean="course.format.type"/>
				<dict:fieldRef bean="course.format.state"/>
				<dict:fieldRef bean="course.format.internal.id"/>
			</dict:state>
			<dict:state key="approved">
			<!-- Approved -->
				<dict:fieldRef bean="course.format.official"/>
				<dict:fieldRef bean="course.format.alternateIdentifiers"/>
				<dict:fieldRef bean="course.format.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.format.studySubjectArea"/>
				<dict:fieldRef bean="course.format.desc"/>
				<dict:fieldRef bean="course.format.marketingDesc"/>
				<dict:fieldRef bean="course.format.campusLocations"/>
				<dict:fieldRef bean="course.format.accreditation"/>
				<dict:fieldRef bean="course.format.primaryAdminOrg"/>
				<dict:fieldRef bean="course.format.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.format.primaryInstructor"/>
				<dict:fieldRef bean="course.format.instructors"/>
				<dict:fieldRef bean="course.format.expectedFirstAtp"/>
				<dict:fieldRef bean="course.format.effectiveDate"/>
				<dict:fieldRef bean="course.format.expirationDate"/>
				<dict:fieldRef bean="course.format.total.contact.hours"/>
				<dict:fieldRef bean="course.format.duration"/>
				<dict:fieldRef bean="course.format.canCreateLui"/>
				<dict:fieldRef bean="course.format.referenceURL"/>
				<dict:fieldRef bean="course.format.luCodes"/>
				<dict:fieldRef bean="course.format.publishingInfo"/>
				<dict:fieldRef bean="course.format.nextReviewPeriod"/>
				<dict:fieldRef bean="course.format.isEnrollable"/>
				<dict:fieldRef bean="course.format.offeredAtpTypes"/>
				<dict:fieldRef bean="course.format.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.format.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.format.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.format.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.format.feeInfo"/>
				<dict:fieldRef bean="course.format.accountingInfo"/>
				<dict:fieldRef bean="course.format.attributes"/>
				<dict:fieldRef bean="course.format.metaInfo"/>
				<dict:fieldRef bean="course.format.type"/>
				<dict:fieldRef bean="course.format.state"/>
				<dict:fieldRef bean="course.format.internal.id"/>
			</dict:state>
			<dict:state key="rejected">
			<!-- Not approved (rejected) -->
			<!-- Do we need here some indication of why it was not approved?  I.e. disapproved vs. not acted on because submitted too late, etc. -->
				<dict:fieldRef bean="course.format.official"/>
				<dict:fieldRef bean="course.format.alternateIdentifiers"/>
				<dict:fieldRef bean="course.format.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.format.studySubjectArea"/>
				<dict:fieldRef bean="course.format.desc"/>
				<dict:fieldRef bean="course.format.marketingDesc"/>
				<dict:fieldRef bean="course.format.campusLocations"/>
				<dict:fieldRef bean="course.format.accreditation"/>
				<dict:fieldRef bean="course.format.primaryAdminOrg"/>
				<dict:fieldRef bean="course.format.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.format.primaryInstructor"/>
				<dict:fieldRef bean="course.format.instructors"/>
				<dict:fieldRef bean="course.format.expectedFirstAtp"/>
				<dict:fieldRef bean="course.format.effectiveDate"/>
				<dict:fieldRef bean="course.format.expirationDate"/>
				<dict:fieldRef bean="course.format.total.contact.hours"/>
				<dict:fieldRef bean="course.format.duration"/>
				<dict:fieldRef bean="course.format.canCreateLui"/>
				<dict:fieldRef bean="course.format.referenceURL"/>
				<dict:fieldRef bean="course.format.luCodes"/>
				<dict:fieldRef bean="course.format.publishingInfo"/>
				<dict:fieldRef bean="course.format.nextReviewPeriod"/>
				<dict:fieldRef bean="course.format.isEnrollable"/>
				<dict:fieldRef bean="course.format.offeredAtpTypes"/>
				<dict:fieldRef bean="course.format.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.format.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.format.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.format.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.format.feeInfo"/>
				<dict:fieldRef bean="course.format.accountingInfo"/>
				<dict:fieldRef bean="course.format.attributes"/>
				<dict:fieldRef bean="course.format.metaInfo"/>
				<dict:fieldRef bean="course.format.type"/>
				<dict:fieldRef bean="course.format.state"/>
				<dict:fieldRef bean="course.format.internal.id"/>
			</dict:state>
			<dict:state key="activated">
			<!-- Activated and ready to be published -->
				<dict:fieldRef bean="course.format.official"/>
				<dict:fieldRef bean="course.format.alternateIdentifiers"/>
				<dict:fieldRef bean="course.format.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.format.studySubjectArea"/>
				<dict:fieldRef bean="course.format.desc"/>
				<dict:fieldRef bean="course.format.marketingDesc"/>
				<dict:fieldRef bean="course.format.campusLocations"/>
				<dict:fieldRef bean="course.format.accreditation"/>
				<dict:fieldRef bean="course.format.primaryAdminOrg"/>
				<dict:fieldRef bean="course.format.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.format.primaryInstructor"/>
				<dict:fieldRef bean="course.format.instructors"/>
				<dict:fieldRef bean="course.format.expectedFirstAtp"/>
				<dict:fieldRef bean="course.format.effectiveDate"/>
				<dict:fieldRef bean="course.format.expirationDate"/>
				<dict:fieldRef bean="course.format.total.contact.hours"/>
				<dict:fieldRef bean="course.format.duration"/>
				<dict:fieldRef bean="course.format.canCreateLui"/>
				<dict:fieldRef bean="course.format.referenceURL"/>
				<dict:fieldRef bean="course.format.luCodes"/>
				<dict:fieldRef bean="course.format.publishingInfo"/>
				<dict:fieldRef bean="course.format.nextReviewPeriod"/>
				<dict:fieldRef bean="course.format.isEnrollable"/>
				<dict:fieldRef bean="course.format.offeredAtpTypes"/>
				<dict:fieldRef bean="course.format.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.format.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.format.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.format.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.format.feeInfo"/>
				<dict:fieldRef bean="course.format.accountingInfo"/>
				<dict:fieldRef bean="course.format.attributes"/>
				<dict:fieldRef bean="course.format.metaInfo"/>
				<dict:fieldRef bean="course.format.type"/>
				<dict:fieldRef bean="course.format.state"/>
				<dict:fieldRef bean="course.format.internal.id"/>
			</dict:state>
			<dict:state key="retired">
			<!-- Retired/No longer active -->
			<!-- Do we need/want to differentiate here between retiring a course simply because it will no longer be taught and retiring a version of a course because it has been superceded by a newer version. -->
				<dict:fieldRef bean="course.format.official"/>
				<dict:fieldRef bean="course.format.alternateIdentifiers"/>
				<dict:fieldRef bean="course.format.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.format.studySubjectArea"/>
				<dict:fieldRef bean="course.format.desc"/>
				<dict:fieldRef bean="course.format.marketingDesc"/>
				<dict:fieldRef bean="course.format.campusLocations"/>
				<dict:fieldRef bean="course.format.accreditation"/>
				<dict:fieldRef bean="course.format.primaryAdminOrg"/>
				<dict:fieldRef bean="course.format.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.format.primaryInstructor"/>
				<dict:fieldRef bean="course.format.instructors"/>
				<dict:fieldRef bean="course.format.expectedFirstAtp"/>
				<dict:fieldRef bean="course.format.effectiveDate"/>
				<dict:fieldRef bean="course.format.expirationDate"/>
				<dict:fieldRef bean="course.format.total.contact.hours"/>
				<dict:fieldRef bean="course.format.duration"/>
				<dict:fieldRef bean="course.format.canCreateLui"/>
				<dict:fieldRef bean="course.format.referenceURL"/>
				<dict:fieldRef bean="course.format.luCodes"/>
				<dict:fieldRef bean="course.format.publishingInfo"/>
				<dict:fieldRef bean="course.format.nextReviewPeriod"/>
				<dict:fieldRef bean="course.format.isEnrollable"/>
				<dict:fieldRef bean="course.format.offeredAtpTypes"/>
				<dict:fieldRef bean="course.format.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.format.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.format.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.format.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.format.feeInfo"/>
				<dict:fieldRef bean="course.format.accountingInfo"/>
				<dict:fieldRef bean="course.format.attributes"/>
				<dict:fieldRef bean="course.format.metaInfo"/>
				<dict:fieldRef bean="course.format.type"/>
				<dict:fieldRef bean="course.format.state"/>
				<dict:fieldRef bean="course.format.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.lu.type.activity.Lab">
		<!-- Student working on projects in a defined laboratory space.  Instructors are on-hand for students to ask questions and guidance. -->
			<dict:state key="template">
			<!-- A template holds configuration for defaults for creating a new course -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="explore">
			<!-- Exploratory/Private scratch pad -->
			<!-- Not sure if this is needed but UC mentions some ability for professors to create proposals within their own space -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="draft">
			<!-- Entered as draft but not yet submitted -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				
				<dict:field key="intensity">
					<dict:fieldDescriptor>
						<dict:name>course activity contact hours</dict:name>
						<dict:desc>contact hours</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="amountInfo">
								<!-- Detailed information about an amount including both the type of units and the quantity. -->
								<dict:type key="kuali.not.applicable">
								<!-- Not applicable -->
								<!-- (n/a) -->
									<dict:state key="(n/a)">
									<!-- Not applicable -->
										<dict:fieldRef bean="course.activity.contact.hours.per.draft"/>
										<dict:fieldRef bean="course.activity.contact.hours.no.draft"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="optional"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="submitted">
			<!-- Submitted but not yet approved -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="withdrawn">
			<!-- Withdrawn (anytime before activated) -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="approved">
			<!-- Approved -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="rejected">
			<!-- Not approved (rejected) -->
			<!-- Do we need here some indication of why it was not approved?  I.e. disapproved vs. not acted on because submitted too late, etc. -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="activated">
			<!-- Activated and ready to be published -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="retired">
			<!-- Retired/No longer active -->
			<!-- Do we need/want to differentiate here between retiring a course simply because it will no longer be taught and retiring a version of a course because it has been superceded by a newer version. -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.lu.type.activity.Tutorial">
		<!-- Supplementary (or remedial) individualized instruction, Extra meetings for the review or elaboration of course materials -->
		<!-- Supplement, workshop, TA Help Session, Extra Lessons, Problem Session -->
			<dict:state key="template">
			<!-- A template holds configuration for defaults for creating a new course -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="explore">
			<!-- Exploratory/Private scratch pad -->
			<!-- Not sure if this is needed but UC mentions some ability for professors to create proposals within their own space -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="draft">
			<!-- Entered as draft but not yet submitted -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				
				<dict:field key="intensity">
					<dict:fieldDescriptor>
						<dict:name>course activity contact hours</dict:name>
						<dict:desc>contact hours</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="amountInfo">
								<!-- Detailed information about an amount including both the type of units and the quantity. -->
								<dict:type key="kuali.not.applicable">
								<!-- Not applicable -->
								<!-- (n/a) -->
									<dict:state key="(n/a)">
									<!-- Not applicable -->
										<dict:fieldRef bean="course.activity.contact.hours.per.draft"/>
										<dict:fieldRef bean="course.activity.contact.hours.no.draft"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="optional"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="submitted">
			<!-- Submitted but not yet approved -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="withdrawn">
			<!-- Withdrawn (anytime before activated) -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="approved">
			<!-- Approved -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="rejected">
			<!-- Not approved (rejected) -->
			<!-- Do we need here some indication of why it was not approved?  I.e. disapproved vs. not acted on because submitted too late, etc. -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="activated">
			<!-- Activated and ready to be published -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="retired">
			<!-- Retired/No longer active -->
			<!-- Do we need/want to differentiate here between retiring a course simply because it will no longer be taught and retiring a version of a course because it has been superceded by a newer version. -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.lu.type.activity.Lecture">
		<!-- Instructor presentation of course materials -->
		<!-- Classroom based -->
			<dict:state key="template">
			<!-- A template holds configuration for defaults for creating a new course -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="explore">
			<!-- Exploratory/Private scratch pad -->
			<!-- Not sure if this is needed but UC mentions some ability for professors to create proposals within their own space -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="draft">
			<!-- Entered as draft but not yet submitted -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				
				<dict:field key="intensity">
					<dict:fieldDescriptor>
						<dict:name>course activity contact hours</dict:name>
						<dict:desc>contact hours</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="amountInfo">
								<!-- Detailed information about an amount including both the type of units and the quantity. -->
								<dict:type key="kuali.not.applicable">
								<!-- Not applicable -->
								<!-- (n/a) -->
									<dict:state key="(n/a)">
									<!-- Not applicable -->
										<dict:fieldRef bean="course.activity.contact.hours.per.draft"/>
										<dict:fieldRef bean="course.activity.contact.hours.no.draft"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="optional"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="submitted">
			<!-- Submitted but not yet approved -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="withdrawn">
			<!-- Withdrawn (anytime before activated) -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="approved">
			<!-- Approved -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="rejected">
			<!-- Not approved (rejected) -->
			<!-- Do we need here some indication of why it was not approved?  I.e. disapproved vs. not acted on because submitted too late, etc. -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="activated">
			<!-- Activated and ready to be published -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="retired">
			<!-- Retired/No longer active -->
			<!-- Do we need/want to differentiate here between retiring a course simply because it will no longer be taught and retiring a version of a course because it has been superceded by a newer version. -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.lu.type.activity.Discussion">
		<!-- The exchange of opinions or questions on course material -->
		<!-- Seminar Style, Roundtable Discussion -->
			<dict:state key="template">
			<!-- A template holds configuration for defaults for creating a new course -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="explore">
			<!-- Exploratory/Private scratch pad -->
			<!-- Not sure if this is needed but UC mentions some ability for professors to create proposals within their own space -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="draft">
			<!-- Entered as draft but not yet submitted -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				
				<dict:field key="intensity">
					<dict:fieldDescriptor>
						<dict:name>course activity contact hours</dict:name>
						<dict:desc>contact hours</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="amountInfo">
								<!-- Detailed information about an amount including both the type of units and the quantity. -->
								<dict:type key="kuali.not.applicable">
								<!-- Not applicable -->
								<!-- (n/a) -->
									<dict:state key="(n/a)">
									<!-- Not applicable -->
										<dict:fieldRef bean="course.activity.contact.hours.per.draft"/>
										<dict:fieldRef bean="course.activity.contact.hours.no.draft"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="optional"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="submitted">
			<!-- Submitted but not yet approved -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="withdrawn">
			<!-- Withdrawn (anytime before activated) -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="approved">
			<!-- Approved -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="rejected">
			<!-- Not approved (rejected) -->
			<!-- Do we need here some indication of why it was not approved?  I.e. disapproved vs. not acted on because submitted too late, etc. -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="activated">
			<!-- Activated and ready to be published -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="retired">
			<!-- Retired/No longer active -->
			<!-- Do we need/want to differentiate here between retiring a course simply because it will no longer be taught and retiring a version of a course because it has been superceded by a newer version. -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.lu.type.activity.Directed">
		<!-- Provides students with a way to complete a  class or other area of focussed studies.  Directed study may be individualized method or in a group. -->
		<!-- Directed Honours, Directed Research, Directed Readings, Honours Essay, Honours Study Semester -->
			<dict:state key="template">
			<!-- A template holds configuration for defaults for creating a new course -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="explore">
			<!-- Exploratory/Private scratch pad -->
			<!-- Not sure if this is needed but UC mentions some ability for professors to create proposals within their own space -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="draft">
			<!-- Entered as draft but not yet submitted -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				
				<dict:field key="intensity">
					<dict:fieldDescriptor>
						<dict:name>course activity contact hours</dict:name>
						<dict:desc>contact hours</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="amountInfo">
								<!-- Detailed information about an amount including both the type of units and the quantity. -->
								<dict:type key="kuali.not.applicable">
								<!-- Not applicable -->
								<!-- (n/a) -->
									<dict:state key="(n/a)">
									<!-- Not applicable -->
										<dict:fieldRef bean="course.activity.contact.hours.per.draft"/>
										<dict:fieldRef bean="course.activity.contact.hours.no.draft"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="optional"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="submitted">
			<!-- Submitted but not yet approved -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="withdrawn">
			<!-- Withdrawn (anytime before activated) -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="approved">
			<!-- Approved -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="rejected">
			<!-- Not approved (rejected) -->
			<!-- Do we need here some indication of why it was not approved?  I.e. disapproved vs. not acted on because submitted too late, etc. -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="activated">
			<!-- Activated and ready to be published -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="retired">
			<!-- Retired/No longer active -->
			<!-- Do we need/want to differentiate here between retiring a course simply because it will no longer be taught and retiring a version of a course because it has been superceded by a newer version. -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.lu.type.activity.WebDiscuss">
		<!-- Web-based or technologically-mediated activities replacing standard discussion sections -->
		<!-- Blog, Chat, Discussion Group, Learning Management System, LMS -->
			<dict:state key="template">
			<!-- A template holds configuration for defaults for creating a new course -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="explore">
			<!-- Exploratory/Private scratch pad -->
			<!-- Not sure if this is needed but UC mentions some ability for professors to create proposals within their own space -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="draft">
			<!-- Entered as draft but not yet submitted -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				
				<dict:field key="intensity">
					<dict:fieldDescriptor>
						<dict:name>course activity contact hours</dict:name>
						<dict:desc>contact hours</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="amountInfo">
								<!-- Detailed information about an amount including both the type of units and the quantity. -->
								<dict:type key="kuali.not.applicable">
								<!-- Not applicable -->
								<!-- (n/a) -->
									<dict:state key="(n/a)">
									<!-- Not applicable -->
										<dict:fieldRef bean="course.activity.contact.hours.per.draft"/>
										<dict:fieldRef bean="course.activity.contact.hours.no.draft"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="optional"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="submitted">
			<!-- Submitted but not yet approved -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="withdrawn">
			<!-- Withdrawn (anytime before activated) -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="approved">
			<!-- Approved -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="rejected">
			<!-- Not approved (rejected) -->
			<!-- Do we need here some indication of why it was not approved?  I.e. disapproved vs. not acted on because submitted too late, etc. -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="activated">
			<!-- Activated and ready to be published -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="retired">
			<!-- Retired/No longer active -->
			<!-- Do we need/want to differentiate here between retiring a course simply because it will no longer be taught and retiring a version of a course because it has been superceded by a newer version. -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.lu.type.activity.WebLecture">
		<!-- Web-based or technologically-mediated activities replacing standard lectures -->
			<dict:state key="template">
			<!-- A template holds configuration for defaults for creating a new course -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="explore">
			<!-- Exploratory/Private scratch pad -->
			<!-- Not sure if this is needed but UC mentions some ability for professors to create proposals within their own space -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="draft">
			<!-- Entered as draft but not yet submitted -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				
				<dict:field key="intensity">
					<dict:fieldDescriptor>
						<dict:name>course activity contact hours</dict:name>
						<dict:desc>contact hours</dict:desc>
						<dict:dataType>complex</dict:dataType>
							
							<dict:objectStructure key="amountInfo">
								<!-- Detailed information about an amount including both the type of units and the quantity. -->
								<dict:type key="kuali.not.applicable">
								<!-- Not applicable -->
								<!-- (n/a) -->
									<dict:state key="(n/a)">
									<!-- Not applicable -->
										<dict:fieldRef bean="course.activity.contact.hours.per.draft"/>
										<dict:fieldRef bean="course.activity.contact.hours.no.draft"/>
									</dict:state>
								</dict:type>
							</dict:objectStructure>
					</dict:fieldDescriptor>
					<dict:constraintDescriptor>
							<dict:constraintRef bean="optional"/>
							<dict:constraintRef bean="single"/>
							<dict:constraintRef bean="optional"/>
					</dict:constraintDescriptor>
				</dict:field>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="submitted">
			<!-- Submitted but not yet approved -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="withdrawn">
			<!-- Withdrawn (anytime before activated) -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="approved">
			<!-- Approved -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="rejected">
			<!-- Not approved (rejected) -->
			<!-- Do we need here some indication of why it was not approved?  I.e. disapproved vs. not acted on because submitted too late, etc. -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="activated">
			<!-- Activated and ready to be published -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
			<dict:state key="retired">
			<!-- Retired/No longer active -->
			<!-- Do we need/want to differentiate here between retiring a course simply because it will no longer be taught and retiring a version of a course because it has been superceded by a newer version. -->
				<dict:fieldRef bean="course.activity.official"/>
				<dict:fieldRef bean="course.activity.alternateIdentifiers"/>
				<dict:fieldRef bean="course.activity.academicSubjectOrgs"/>
				<dict:fieldRef bean="course.activity.studySubjectArea"/>
				<dict:fieldRef bean="course.activity.desc"/>
				<dict:fieldRef bean="course.activity.marketingDesc"/>
				<dict:fieldRef bean="course.activity.campusLocationList"/>
				<dict:fieldRef bean="course.activity.accreditation"/>
				<dict:fieldRef bean="course.activity.primaryAdminOrg"/>
				<dict:fieldRef bean="course.activity.alternateAdminOrgs"/>
				<dict:fieldRef bean="course.activity.primaryInstructor"/>
				<dict:fieldRef bean="course.activity.instructors"/>
				<dict:fieldRef bean="course.activity.expectedFirstAtp"/>
				<dict:fieldRef bean="course.activity.effectiveDate"/>
				<dict:fieldRef bean="course.activity.expirationDate"/>
				<dict:fieldRef bean="course.activity.contact.hours"/>
				<dict:fieldRef bean="course.activity.duration"/>
				<dict:fieldRef bean="course.activity.canCreateLui"/>
				<dict:fieldRef bean="course.activity.referenceURL"/>
				<dict:fieldRef bean="course.activity.luCodes"/>
				<dict:fieldRef bean="course.activity.publishingInfo"/>
				<dict:fieldRef bean="course.activity.nextReviewPeriod"/>
				<dict:fieldRef bean="course.activity.isEnrollable"/>
				<dict:fieldRef bean="course.activity.offeredAtpTypes"/>
				<dict:fieldRef bean="course.activity.hasEarlyDropDeadline"/>
				<dict:fieldRef bean="course.activity.defaultEnrollmentEstimate"/>
				<dict:fieldRef bean="course.activity.defaultMaximumEnrollment"/>
				<dict:fieldRef bean="course.activity.isHazardousForDisabledStudents"/>
				<dict:fieldRef bean="course.activity.feeInfo"/>
				<dict:fieldRef bean="course.activity.accountingInfo"/>
				<dict:fieldRef bean="course.activity.attributes"/>
				<dict:fieldRef bean="course.activity.metaInfo"/>
				<dict:fieldRef bean="course.activity.type"/>
				<dict:fieldRef bean="course.activity.state"/>
				<dict:fieldRef bean="course.activity.internal.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
	
	<dict:objectStructure key="cluResultInfo">
		<!-- information about a CLU result. -->
		<dict:type key="kuali.resultType.creditCourseResult">
			<dict:state key="active">
			<!-- cluResult is active -->
			<!-- States have not been thought through for results, these are intial stakes - will need to ADD TO Simples -->
				<dict:fieldRef bean="course.final.results.desc"/>
				<dict:fieldRef bean="course.final.results.cluId"/>
				<dict:fieldRef bean="course.final.results.options"/>
				<dict:fieldRef bean="course.final.results.effectiveDate"/>
				<dict:fieldRef bean="course.final.results.expirationDate"/>
				<dict:fieldRef bean="course.final.results.metaInfo"/>
				<dict:fieldRef bean="course.final.results.state"/>
				<dict:fieldRef bean="course.final.results.type"/>
				<dict:fieldRef bean="course.final.results.internal.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- clurResult is inactive -->
			<!-- States have not been thought through for results, these are intial stakes - will need to ADD TO Simples -->
				<dict:fieldRef bean="course.final.results.desc"/>
				<dict:fieldRef bean="course.final.results.cluId"/>
				<dict:fieldRef bean="course.final.results.options"/>
				<dict:fieldRef bean="course.final.results.effectiveDate"/>
				<dict:fieldRef bean="course.final.results.expirationDate"/>
				<dict:fieldRef bean="course.final.results.metaInfo"/>
				<dict:fieldRef bean="course.final.results.state"/>
				<dict:fieldRef bean="course.final.results.type"/>
				<dict:fieldRef bean="course.final.results.internal.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
	
	<dict:objectStructure key="cluCluRelationInfo">
		<!-- Detailed information about a CLU to CLU relationship. -->
		<dict:type key="kuali.lu.relation.type.co-located">
		<!-- Maintains relations betrween different courses the meet together (are co-located) -->
		<!-- Meets with, Joint (but not MIT's meaning of joint) -->
		<!-- TODO: cross-check w/ SIMPLE -->
			<dict:state key="active">
			<!-- Relation is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="colocated.course.relation.course.internal.id1"/>
				<dict:fieldRef bean="colocated.course.relation.course.internal.id2"/>
				<dict:fieldRef bean="colocated.course.relation.required"/>
				<dict:fieldRef bean="colocated.course.relation.expirationDate"/>
				<dict:fieldRef bean="colocated.course.relation.effectiveDate"/>
				<dict:fieldRef bean="colocated.course.relation.attributes"/>
				<dict:fieldRef bean="colocated.course.relation.metainfo"/>
				<dict:fieldRef bean="colocated.course.relation.relation.type"/>
				<dict:fieldRef bean="colocated.course.relation.relation.state"/>
				<dict:fieldRef bean="colocated.course.relation.relation.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- Relation is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="colocated.course.relation.course.internal.id1"/>
				<dict:fieldRef bean="colocated.course.relation.course.internal.id2"/>
				<dict:fieldRef bean="colocated.course.relation.required"/>
				<dict:fieldRef bean="colocated.course.relation.expirationDate"/>
				<dict:fieldRef bean="colocated.course.relation.effectiveDate"/>
				<dict:fieldRef bean="colocated.course.relation.attributes"/>
				<dict:fieldRef bean="colocated.course.relation.metainfo"/>
				<dict:fieldRef bean="colocated.course.relation.relation.type"/>
				<dict:fieldRef bean="colocated.course.relation.relation.state"/>
				<dict:fieldRef bean="colocated.course.relation.relation.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.lu.relation.type.course.format">
		<!-- Maintains relation betrween a course and the course format shell -->
		<!-- TODO: cross-check w/ SIMPLE -->
			<dict:state key="active">
			<!-- Relation is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="course.format.relation.course.internal.id"/>
				<dict:fieldRef bean="course.format.relation.formatshell.internal.id"/>
				<dict:fieldRef bean="course.format.relation.required"/>
				<dict:fieldRef bean="course.format.relation.expirationDate"/>
				<dict:fieldRef bean="course.format.relation.effectiveDate"/>
				<dict:fieldRef bean="course.format.relation.attributes"/>
				<dict:fieldRef bean="course.format.relation.metainfo"/>
				<dict:fieldRef bean="course.format.relation.relation.type"/>
				<dict:fieldRef bean="course.format.relation.relation.state"/>
				<dict:fieldRef bean="course.format.relation.relation.internal.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- Relation is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="course.format.relation.course.internal.id"/>
				<dict:fieldRef bean="course.format.relation.formatshell.internal.id"/>
				<dict:fieldRef bean="course.format.relation.required"/>
				<dict:fieldRef bean="course.format.relation.expirationDate"/>
				<dict:fieldRef bean="course.format.relation.effectiveDate"/>
				<dict:fieldRef bean="course.format.relation.attributes"/>
				<dict:fieldRef bean="course.format.relation.metainfo"/>
				<dict:fieldRef bean="course.format.relation.relation.type"/>
				<dict:fieldRef bean="course.format.relation.relation.state"/>
				<dict:fieldRef bean="course.format.relation.relation.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.lu.relation.type.course.activity">
		<!-- Maintains relation betrween a course format shell and each individual activity -->
		<!-- Lecture, Lab, Recitation, etc -->
		<!-- TODO: cross-check w/ SIMPLE -->
			<dict:state key="active">
			<!-- Relation is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="course.activity.relation.course.internal.id"/>
				<dict:fieldRef bean="course.activity.relation.activityshell.internal.id"/>
				<dict:fieldRef bean="course.activity.relation.required"/>
				<dict:fieldRef bean="course.activity.relation.expirationDate"/>
				<dict:fieldRef bean="course.activity.relation.effectiveDate"/>
				<dict:fieldRef bean="course.activity.relation.attributes"/>
				<dict:fieldRef bean="course.activity.relation.metainfo"/>
				<dict:fieldRef bean="course.activity.relation.relation.type"/>
				<dict:fieldRef bean="course.activity.relation.relation.state"/>
				<dict:fieldRef bean="course.activity.relation.relation.internal.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- Relation is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="course.activity.relation.course.internal.id"/>
				<dict:fieldRef bean="course.activity.relation.activityshell.internal.id"/>
				<dict:fieldRef bean="course.activity.relation.required"/>
				<dict:fieldRef bean="course.activity.relation.expirationDate"/>
				<dict:fieldRef bean="course.activity.relation.effectiveDate"/>
				<dict:fieldRef bean="course.activity.relation.attributes"/>
				<dict:fieldRef bean="course.activity.relation.metainfo"/>
				<dict:fieldRef bean="course.activity.relation.relation.type"/>
				<dict:fieldRef bean="course.activity.relation.relation.state"/>
				<dict:fieldRef bean="course.activity.relation.relation.internal.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
	
	<dict:objectStructure key="loInfo">
		<!-- Detailed information about a learning objective -->
		<dict:type key="kuali.lo.type.informal">
		<!-- LO created in support of programs or courses, e.g., faculty-inspired additional LO for a course -->
			<dict:state key="active">
			<!-- Lo is active -->
			<!-- TODO: add to simple spec -->
				<dict:fieldRef bean="informal.lo.name"/>
				<dict:fieldRef bean="informal.lo.desc"/>
				<dict:fieldRef bean="informal.lo.loHierarchy"/>
				<dict:fieldRef bean="informal.lo.effectiveDate"/>
				<dict:fieldRef bean="informal.lo.expirationDate"/>
				<dict:fieldRef bean="informal.lo.attributes"/>
				<dict:fieldRef bean="informal.lo.metaInfo"/>
				<dict:fieldRef bean="informal.lo.type"/>
				<dict:fieldRef bean="informal.lo.state"/>
				<dict:fieldRef bean="informal.lo.internal.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- Lo is inactive -->
			<!-- TODO: add to simple spec -->
				<dict:fieldRef bean="informal.lo.name"/>
				<dict:fieldRef bean="informal.lo.desc"/>
				<dict:fieldRef bean="informal.lo.loHierarchy"/>
				<dict:fieldRef bean="informal.lo.effectiveDate"/>
				<dict:fieldRef bean="informal.lo.expirationDate"/>
				<dict:fieldRef bean="informal.lo.attributes"/>
				<dict:fieldRef bean="informal.lo.metaInfo"/>
				<dict:fieldRef bean="informal.lo.type"/>
				<dict:fieldRef bean="informal.lo.state"/>
				<dict:fieldRef bean="informal.lo.internal.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
	
	<dict:objectStructure key="creditInfo">
		<!-- Detailed information about a credit value. -->
		<dict:type key="kuali.creditType.credit.degree">
		<!-- College level credit that can typically be applied by a student to complete a degree -->
			<dict:state key="(n/a)">
			<!-- Not applicable -->
				<dict:fieldRef bean="academic.credit.name"/>
				<dict:fieldRef bean="academic.credit.desc"/>
				<dict:fieldRef bean="academic.credit.value"/>
				<dict:fieldRef bean="academic.credit.effectiveDate"/>
				<dict:fieldRef bean="academic.credit.expirationDate"/>
				<dict:fieldRef bean="academic.credit.attributes"/>
				<dict:fieldRef bean="academic.credit.type"/>
				<dict:fieldRef bean="academic.credit.internal.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
	
	<dict:objectStructure key="gradeInfo">
		<!-- Detailed information about a grade value. -->
		<dict:type key="kuali.gradeType.Letter">
		<!-- A Letter used as a grade (e.g. A, B, C, D, F) -->
		<!-- TO DO: add to Simples -->
			<dict:state key="(n/a)">
			<!-- Not applicable -->
				<dict:fieldRef bean="letter.grade.name"/>
				<dict:fieldRef bean="letter.grade.value"/>
				<dict:fieldRef bean="letter.grade.scaleKey"/>
				<dict:fieldRef bean="letter.grade.rank"/>
				<dict:fieldRef bean="letter.grade.effectiveDate"/>
				<dict:fieldRef bean="letter.grade.expirationDate"/>
				<dict:fieldRef bean="letter.grade.attributes"/>
				<dict:fieldRef bean="letter.grade.type"/>
				<dict:fieldRef bean="letter.grade.key"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.gradeType.Pass-Fail">
		<!-- Pass or Fail -->
		<!-- TO DO: add to Simples -->
			<dict:state key="(n/a)">
			<!-- Not applicable -->
				<dict:fieldRef bean="pass-fail.grade.name"/>
				<dict:fieldRef bean="pass-fail.grade.value"/>
				<dict:fieldRef bean="pass-fail.grade.scaleKey"/>
				<dict:fieldRef bean="pass-fail.grade.rank"/>
				<dict:fieldRef bean="pass-fail.grade.effectiveDate"/>
				<dict:fieldRef bean="pass-fail.grade.expirationDate"/>
				<dict:fieldRef bean="pass-fail.grade.attributes"/>
				<dict:fieldRef bean="pass-fail.grade.type"/>
				<dict:fieldRef bean="pass-fail.grade.key"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.gradeType.Qualitative">
		<!-- A qualitative grade type -->
		<!-- TO DO: add to Simples -->
			<dict:state key="(n/a)">
			<!-- Not applicable -->
				<dict:fieldRef bean="qualitative.grade.name"/>
				<dict:fieldRef bean="qualitative.grade.value"/>
				<dict:fieldRef bean="qualitative.grade.scaleKey"/>
				<dict:fieldRef bean="qualitative.grade.rank"/>
				<dict:fieldRef bean="qualitative.grade.effectiveDate"/>
				<dict:fieldRef bean="qualitative.grade.expirationDate"/>
				<dict:fieldRef bean="qualitative.grade.attributes"/>
				<dict:fieldRef bean="qualitative.grade.type"/>
				<dict:fieldRef bean="qualitative.grade.key"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
	
	<dict:objectStructure key="resultComponentInfo">
		<!-- Detailed information about a result component. -->
		<dict:type key="kuali.resultComponentType.credit.degree.fixed">
		<!-- This records a single fixed number of credits that are awarded if the student passes the course. -->
		<!-- TO DO: Fix Simples name -->
			<dict:state key="active">
			<!-- resultComponent is active -->
			<!-- States have not been thought through for results, these are intial stakes - will need to ADD TO Simples -->
				<dict:fieldRef bean="fixed.credits.name"/>
				<dict:fieldRef bean="fixed.credits.desc"/>
				<dict:fieldRef bean="fixed.credits.resultValueIds"/>
				<dict:fieldRef bean="fixed.credits.effectiveDate"/>
				<dict:fieldRef bean="fixed.credits.expirationDate"/>
				<dict:fieldRef bean="fixed.credits.attributes"/>
				<dict:fieldRef bean="fixed.credits.metaInfo"/>
				<dict:fieldRef bean="fixed.credits.type"/>
				<dict:fieldRef bean="fixed.credits.state"/>
				<dict:fieldRef bean="fixed.credits.internal.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- resultComponent is inactive -->
			<!-- States have not been thought through for results, these are intial stakes - will need to ADD TO Simples -->
				<dict:fieldRef bean="fixed.credits.name"/>
				<dict:fieldRef bean="fixed.credits.desc"/>
				<dict:fieldRef bean="fixed.credits.resultValueIds"/>
				<dict:fieldRef bean="fixed.credits.effectiveDate"/>
				<dict:fieldRef bean="fixed.credits.expirationDate"/>
				<dict:fieldRef bean="fixed.credits.attributes"/>
				<dict:fieldRef bean="fixed.credits.metaInfo"/>
				<dict:fieldRef bean="fixed.credits.type"/>
				<dict:fieldRef bean="fixed.credits.state"/>
				<dict:fieldRef bean="fixed.credits.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.resultComponentType.credit.degree.range">
		<!-- This records a range of number of credits that can be awarded for this course. -->
		<!-- TO DO: Fix Simples name -->
			<dict:state key="active">
			<!-- resultComponent is active -->
			<!-- States have not been thought through for results, these are intial stakes - will need to ADD TO Simples -->
				<dict:fieldRef bean="variable.credits.name"/>
				<dict:fieldRef bean="variable.credits.desc"/>
				<dict:fieldRef bean="variable.credits.resultValueIds"/>
				<dict:fieldRef bean="variable.credits.effectiveDate"/>
				<dict:fieldRef bean="variable.credits.expirationDate"/>
				<dict:fieldRef bean="variable.credits.attributes"/>
				<dict:fieldRef bean="variable.credits.metaInfo"/>
				<dict:fieldRef bean="variable.credits.type"/>
				<dict:fieldRef bean="variable.credits.state"/>
				<dict:fieldRef bean="variable.credits.internal.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- resultComponent is inactive -->
			<!-- States have not been thought through for results, these are intial stakes - will need to ADD TO Simples -->
				<dict:fieldRef bean="variable.credits.name"/>
				<dict:fieldRef bean="variable.credits.desc"/>
				<dict:fieldRef bean="variable.credits.resultValueIds"/>
				<dict:fieldRef bean="variable.credits.effectiveDate"/>
				<dict:fieldRef bean="variable.credits.expirationDate"/>
				<dict:fieldRef bean="variable.credits.attributes"/>
				<dict:fieldRef bean="variable.credits.metaInfo"/>
				<dict:fieldRef bean="variable.credits.type"/>
				<dict:fieldRef bean="variable.credits.state"/>
				<dict:fieldRef bean="variable.credits.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.resultComponentType.finalGrade">
		<!-- This records that a final grade is a result for this course -->
		<!-- TO DO: add to Simples -->
			<dict:state key="active">
			<!-- resultComponent is active -->
			<!-- States have not been thought through for results, these are intial stakes - will need to ADD TO Simples -->
				<dict:fieldRef bean="final.grades.name"/>
				<dict:fieldRef bean="final.grades.desc"/>
				<dict:fieldRef bean="final.grades.resultValueIds"/>
				<dict:fieldRef bean="final.grades.effectiveDate"/>
				<dict:fieldRef bean="final.grades.expirationDate"/>
				<dict:fieldRef bean="final.grades.attributes"/>
				<dict:fieldRef bean="final.grades.metaInfo"/>
				<dict:fieldRef bean="final.grades.type"/>
				<dict:fieldRef bean="final.grades.state"/>
				<dict:fieldRef bean="final.grades.internal.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- resultComponent is inactive -->
			<!-- States have not been thought through for results, these are intial stakes - will need to ADD TO Simples -->
				<dict:fieldRef bean="final.grades.name"/>
				<dict:fieldRef bean="final.grades.desc"/>
				<dict:fieldRef bean="final.grades.resultValueIds"/>
				<dict:fieldRef bean="final.grades.effectiveDate"/>
				<dict:fieldRef bean="final.grades.expirationDate"/>
				<dict:fieldRef bean="final.grades.attributes"/>
				<dict:fieldRef bean="final.grades.metaInfo"/>
				<dict:fieldRef bean="final.grades.type"/>
				<dict:fieldRef bean="final.grades.state"/>
				<dict:fieldRef bean="final.grades.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.resultComponentType.finalQualitative">
		<!-- This records that a Qualitative assessment is possible for this course -->
		<!-- TO DO: add to Simples -->
			<dict:state key="active">
			<!-- resultComponent is active -->
			<!-- States have not been thought through for results, these are intial stakes - will need to ADD TO Simples -->
				<dict:fieldRef bean="final.qualitative.name"/>
				<dict:fieldRef bean="final.qualitative.desc"/>
				<dict:fieldRef bean="final.qualitative.resultValueIds"/>
				<dict:fieldRef bean="final.qualitative.effectiveDate"/>
				<dict:fieldRef bean="final.qualitative.expirationDate"/>
				<dict:fieldRef bean="final.qualitative.attributes"/>
				<dict:fieldRef bean="final.qualitative.metaInfo"/>
				<dict:fieldRef bean="final.qualitative.type"/>
				<dict:fieldRef bean="final.qualitative.state"/>
				<dict:fieldRef bean="final.qualitative.internal.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- resultComponent is inactive -->
			<!-- States have not been thought through for results, these are intial stakes - will need to ADD TO Simples -->
				<dict:fieldRef bean="final.qualitative.name"/>
				<dict:fieldRef bean="final.qualitative.desc"/>
				<dict:fieldRef bean="final.qualitative.resultValueIds"/>
				<dict:fieldRef bean="final.qualitative.effectiveDate"/>
				<dict:fieldRef bean="final.qualitative.expirationDate"/>
				<dict:fieldRef bean="final.qualitative.attributes"/>
				<dict:fieldRef bean="final.qualitative.metaInfo"/>
				<dict:fieldRef bean="final.qualitative.type"/>
				<dict:fieldRef bean="final.qualitative.state"/>
				<dict:fieldRef bean="final.qualitative.internal.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
	
	<dict:objectStructure key="luStatementInfo">
		<!-- Detailed information about a single LU statement. -->
		<dict:type key="kuali.luStatementType.req.corequisite">
		<!-- Rules that describe the need for concurrent enrollment in two courses. -->
			<dict:state key="active">
			<!-- Statement is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.statement.name"/>
				<dict:fieldRef bean="requisite.statement.desc"/>
				<dict:fieldRef bean="requisite.statement.operator"/>
				<dict:fieldRef bean="requisite.statement.sub.statements"/>
				<dict:fieldRef bean="requisite.statement.components"/>
				<dict:fieldRef bean="requisite.statement.attributes"/>
				<dict:fieldRef bean="requisite.statement.metainfo"/>
				<dict:fieldRef bean="requisite.statement.type"/>
				<dict:fieldRef bean="requisite.statement.state"/>
				<dict:fieldRef bean="requisite.statement.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- Statement is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.statement.name"/>
				<dict:fieldRef bean="requisite.statement.desc"/>
				<dict:fieldRef bean="requisite.statement.operator"/>
				<dict:fieldRef bean="requisite.statement.sub.statements"/>
				<dict:fieldRef bean="requisite.statement.components"/>
				<dict:fieldRef bean="requisite.statement.attributes"/>
				<dict:fieldRef bean="requisite.statement.metainfo"/>
				<dict:fieldRef bean="requisite.statement.type"/>
				<dict:fieldRef bean="requisite.statement.state"/>
				<dict:fieldRef bean="requisite.statement.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.luStatementType.req.antirequisite">
		<!-- Rules identifying a specific course or level of attainment which, if already successfully completed, does not permit registration for credit in another desired course, or which may not be taken for credit concurrently with another course -->
			<dict:state key="active">
			<!-- Statement is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.statement.name"/>
				<dict:fieldRef bean="requisite.statement.desc"/>
				<dict:fieldRef bean="requisite.statement.operator"/>
				<dict:fieldRef bean="requisite.statement.sub.statements"/>
				<dict:fieldRef bean="requisite.statement.components"/>
				<dict:fieldRef bean="requisite.statement.attributes"/>
				<dict:fieldRef bean="requisite.statement.metainfo"/>
				<dict:fieldRef bean="requisite.statement.type"/>
				<dict:fieldRef bean="requisite.statement.state"/>
				<dict:fieldRef bean="requisite.statement.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- Statement is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.statement.name"/>
				<dict:fieldRef bean="requisite.statement.desc"/>
				<dict:fieldRef bean="requisite.statement.operator"/>
				<dict:fieldRef bean="requisite.statement.sub.statements"/>
				<dict:fieldRef bean="requisite.statement.components"/>
				<dict:fieldRef bean="requisite.statement.attributes"/>
				<dict:fieldRef bean="requisite.statement.metainfo"/>
				<dict:fieldRef bean="requisite.statement.type"/>
				<dict:fieldRef bean="requisite.statement.state"/>
				<dict:fieldRef bean="requisite.statement.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.luStatementType.req.enrollmentRestriction">
		<!-- Rules other than perquisites that limit or restrict students from enrolling in a course that do not strictly deal with the student's academic ability to handle the material. -->
			<dict:state key="active">
			<!-- Statement is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.statement.name"/>
				<dict:fieldRef bean="requisite.statement.desc"/>
				<dict:fieldRef bean="requisite.statement.operator"/>
				<dict:fieldRef bean="requisite.statement.sub.statements"/>
				<dict:fieldRef bean="requisite.statement.components"/>
				<dict:fieldRef bean="requisite.statement.attributes"/>
				<dict:fieldRef bean="requisite.statement.metainfo"/>
				<dict:fieldRef bean="requisite.statement.type"/>
				<dict:fieldRef bean="requisite.statement.state"/>
				<dict:fieldRef bean="requisite.statement.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- Statement is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.statement.name"/>
				<dict:fieldRef bean="requisite.statement.desc"/>
				<dict:fieldRef bean="requisite.statement.operator"/>
				<dict:fieldRef bean="requisite.statement.sub.statements"/>
				<dict:fieldRef bean="requisite.statement.components"/>
				<dict:fieldRef bean="requisite.statement.attributes"/>
				<dict:fieldRef bean="requisite.statement.metainfo"/>
				<dict:fieldRef bean="requisite.statement.type"/>
				<dict:fieldRef bean="requisite.statement.state"/>
				<dict:fieldRef bean="requisite.statement.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
	
	<dict:objectStructure key="reqComponentInfo">
		<!-- Information about a requirement component. -->
		<dict:type key="kuali.reqCompType.requisite.courseList.coreq.oneof">
		<!-- Student must be enrolled in one of the following courses -->
			<dict:state key="active">
			<!-- requirement componenent is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- requirement componenent is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.reqCompType.requisite.programList.none">
		<!-- Enrollment is not available to students in the following programs -->
			<dict:state key="active">
			<!-- requirement componenent is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- requirement componenent is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.reqCompType.requisite.courseList.1of2">
		<!-- Student must take one of two specified courses -->
			<dict:state key="active">
			<!-- requirement componenent is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- requirement componenent is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.reqCompType.requisite.courseList.all">
		<!-- Student must take all of the specified courses -->
			<dict:state key="active">
			<!-- requirement componenent is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- requirement componenent is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.reqCompType.requisite.programList.oneof">
		<!-- Enrollment is limited to students in the following programs -->
			<dict:state key="active">
			<!-- requirement componenent is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- requirement componenent is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.reqCompType.requisite.grdCondCourseList">
		<!-- Student must have completed the specified course with a minium specified grade -->
			<dict:state key="active">
			<!-- requirement componenent is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- requirement componenent is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.reqCompType.requisite.overall.credit">
		<!-- Student needs to have earned a minimum specified Total Credits -->
			<dict:state key="active">
			<!-- requirement componenent is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- requirement componenent is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.reqCompType.requisite.courseList.coreq.all">
		<!-- Student must be enrolled in all of the following courses -->
			<dict:state key="active">
			<!-- requirement componenent is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- requirement componenent is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.reqCompType.requisite.overall.gpa">
		<!-- Student needs to have attained a minimum specified GPA -->
			<dict:state key="active">
			<!-- requirement componenent is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- requirement componenent is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.reqCompType.requisite.courseList.nof">
		<!-- Student must take <n> courses from the specified courses -->
			<dict:state key="active">
			<!-- requirement componenent is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- requirement componenent is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="requisite.req.component.desc"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses.coreq"/>
				<dict:fieldRef bean="requisite.req.component.field.all.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.n.of.courses"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.gpa"/>
				<dict:fieldRef bean="requisite.req.component.field.mininum.overall.total.credits"/>
				<dict:fieldRef bean="requisite.req.component.field.lrd.credit.course.final.grade"/>
				<dict:fieldRef bean="requisite.req.component.field.one.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.field.none.of.programs"/>
				<dict:fieldRef bean="requisite.req.component.effectiveDate"/>
				<dict:fieldRef bean="requisite.req.component.expirationDate"/>
				<dict:fieldRef bean="requisite.req.component.metaInfo"/>
				<dict:fieldRef bean="requisite.req.component.type"/>
				<dict:fieldRef bean="requisite.req.component.state"/>
				<dict:fieldRef bean="requisite.req.component.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
	
	<dict:objectStructure key="cluSetInfo">
		<!-- Detailed information about a single CLU Set. -->
		<dict:type key="kuali.cluSet.type.CreditCourse">
		<!-- Sets composed of credit courses -->
			<dict:state key="active">
			<!-- clu set is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="credit.course.set.name"/>
				<dict:fieldRef bean="credit.course.set.description"/>
				<dict:fieldRef bean="credit.course.set.effectiveDate"/>
				<dict:fieldRef bean="credit.course.set.expirationDate"/>
				<dict:fieldRef bean="credit.course.set.dynanic"/>
				<dict:fieldRef bean="credit.course.set.credit.course.set.ids"/>
				<dict:fieldRef bean="credit.course.set.credit.course.ids"/>
				<dict:fieldRef bean="credit.course.set.attributes"/>
				<dict:fieldRef bean="credit.course.set.metaInfo"/>
				<dict:fieldRef bean="credit.course.set.type"/>
				<dict:fieldRef bean="credit.course.set.state"/>
				<dict:fieldRef bean="credit.course.set.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- clu set is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="credit.course.set.name"/>
				<dict:fieldRef bean="credit.course.set.description"/>
				<dict:fieldRef bean="credit.course.set.effectiveDate"/>
				<dict:fieldRef bean="credit.course.set.expirationDate"/>
				<dict:fieldRef bean="credit.course.set.dynanic"/>
				<dict:fieldRef bean="credit.course.set.credit.course.set.ids"/>
				<dict:fieldRef bean="credit.course.set.credit.course.ids"/>
				<dict:fieldRef bean="credit.course.set.attributes"/>
				<dict:fieldRef bean="credit.course.set.metaInfo"/>
				<dict:fieldRef bean="credit.course.set.type"/>
				<dict:fieldRef bean="credit.course.set.state"/>
				<dict:fieldRef bean="credit.course.set.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
	
	<dict:objectStructure key="lrDefinitionInfo">
		<!-- Detailed information about a learning result definition. -->
		<dict:type key="kuali.lrc.lrd.CreditCourseFinalGrade">
		<!-- This defines getting the result of a final grade in a credi course -->
		<!-- (n/a) -->
		<!-- TODO: update simples -->
			<dict:state key="(n/a)">
			<!-- Not applicable -->
			<!-- not sure why it has no state field but it should, at least active/inactive -->
				<dict:fieldRef bean="credit.course.with.final.grade.name"/>
				<dict:fieldRef bean="credit.course.with.final.grade.desc"/>
				<dict:fieldRef bean="credit.course.with.final.grade.type"/>
				<dict:fieldRef bean="credit.course.with.final.grade.scale"/>
				<dict:fieldRef bean="credit.course.with.final.grade.gradeKey"/>
				<dict:fieldRef bean="credit.course.with.final.grade.operator"/>
				<dict:fieldRef bean="credit.course.with.final.grade.dynamic.attributes"/>
				<dict:fieldRef bean="credit.course.with.final.grade.metaInfo"/>
				<dict:fieldRef bean="credit.course.with.final.grade.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.lrc.lrd.OverallProgramGPA">
		<!-- This defines the calculated GPA result of enrollment in the overall program -->
		<!-- (n/a) -->
		<!-- For now we have to live without defining "Overall" even though it is a fuzzy word.. What if a person was in multiple overall programs sequentially (undergrad then grad) or parallel (dual major)?  Which program?
TODO: update simples -->
			<dict:state key="(n/a)">
			<!-- Not applicable -->
			<!-- not sure why it has no state field but it should, at least active/inactive -->
				<dict:fieldRef bean="gpa.in.overall.program.name"/>
				<dict:fieldRef bean="gpa.in.overall.program.desc"/>
				<dict:fieldRef bean="gpa.in.overall.program.type"/>
				<dict:fieldRef bean="gpa.in.overall.program.scale"/>
				<dict:fieldRef bean="gpa.in.overall.program.gpa"/>
				<dict:fieldRef bean="gpa.in.overall.program.operator"/>
				<dict:fieldRef bean="gpa.in.overall.program.dynamic.attributes"/>
				<dict:fieldRef bean="gpa.in.overall.program.metaInfo"/>
				<dict:fieldRef bean="gpa.in.overall.program.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.lrc.lrd.OverallProgramTotalCredits">
		<!-- This defines the calculated Total Credits result of enrollment in the overall program. -->
		<!-- (n/a) -->
		<!-- For now we have to live without defining "Overall" even though it is a fuzzy word.. What if a person was in multiple overall programs sequentially (undergrad then grad) or parallel (dual major)?  Which program?
TODO: update simples -->
			<dict:state key="(n/a)">
			<!-- Not applicable -->
			<!-- not sure why it has no state field but it should, at least active/inactive -->
				<dict:fieldRef bean="total.credits.in.overall.program.name"/>
				<dict:fieldRef bean="total.credits.in.overall.program.desc"/>
				<dict:fieldRef bean="total.credits.in.overall.program.type"/>
				<dict:fieldRef bean="total.credits.in.overall.program.scale"/>
				<dict:fieldRef bean="total.credits.in.overall.program.gpa"/>
				<dict:fieldRef bean="total.credits.in.overall.program.operator"/>
				<dict:fieldRef bean="total.credits.in.overall.program.dynamic.attributes"/>
				<dict:fieldRef bean="total.credits.in.overall.program.metaInfo"/>
				<dict:fieldRef bean="total.credits.in.overall.program.internal.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
	
	<dict:objectStructure key="proposalInfo">
		<!-- Detailed information about a proposal. -->
		<dict:type key="kuali.proposal.type.course.modify">
		<!-- Proposal to modify an existing Credit Course -->
		<!-- do these really need to be course specific? -->
			<dict:state key="draft.private">
			<!-- Exploratory/Private scratch pad -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale.draft.private"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="draft.public">
			<!-- Entered as draft but not yet submitted -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale.draft.public"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="submitted">
			<!-- Submitted but not yet approved -->
			<!-- NOT IN SIMPLEs -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="approve">
			<!-- Approved -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="not approved">
			<!-- Not approved -->
			<!-- not sure if we will have to create different declined states for different types of rejections -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="withdrawn">
			<!-- Withdrawn (anytime before published) -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="retired">
			<!-- Retired/No longer active -->
			<!-- we may have to differentiate between 'retired' and proposals that are simply 'older versions' -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- Inactive -->
			<!-- used for proposals created as part of revision history - not sure if we need -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.proposal.type.course.retire">
		<!-- Proposal to retire an existing Credit Course -->
		<!-- do these really need to be course specific? -->
			<dict:state key="draft.private">
			<!-- Exploratory/Private scratch pad -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale.draft.private"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="draft.public">
			<!-- Entered as draft but not yet submitted -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale.draft.public"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="submitted">
			<!-- Submitted but not yet approved -->
			<!-- NOT IN SIMPLEs -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="approve">
			<!-- Approved -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="not approved">
			<!-- Not approved -->
			<!-- not sure if we will have to create different declined states for different types of rejections -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="withdrawn">
			<!-- Withdrawn (anytime before published) -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="retired">
			<!-- Retired/No longer active -->
			<!-- we may have to differentiate between 'retired' and proposals that are simply 'older versions' -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- Inactive -->
			<!-- used for proposals created as part of revision history - not sure if we need -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.proposal.type.course.reinstate">
		<!-- Proposal to bring an existing Credit Course out of retirement -->
		<!-- do these really need to be course specific? -->
			<dict:state key="draft.private">
			<!-- Exploratory/Private scratch pad -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale.draft.private"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="draft.public">
			<!-- Entered as draft but not yet submitted -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale.draft.public"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="submitted">
			<!-- Submitted but not yet approved -->
			<!-- NOT IN SIMPLEs -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="approve">
			<!-- Approved -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="not approved">
			<!-- Not approved -->
			<!-- not sure if we will have to create different declined states for different types of rejections -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="withdrawn">
			<!-- Withdrawn (anytime before published) -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="retired">
			<!-- Retired/No longer active -->
			<!-- we may have to differentiate between 'retired' and proposals that are simply 'older versions' -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- Inactive -->
			<!-- used for proposals created as part of revision history - not sure if we need -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.proposal.type.course.create">
		<!-- Proposal to create a new Credit Course -->
		<!-- changed keys - need CHANGE IN SMPLES -->
			<dict:state key="draft.private">
			<!-- Exploratory/Private scratch pad -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale.draft.private"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="draft.public">
			<!-- Entered as draft but not yet submitted -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale.draft.public"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="submitted">
			<!-- Submitted but not yet approved -->
			<!-- NOT IN SIMPLEs -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="approve">
			<!-- Approved -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="not approved">
			<!-- Not approved -->
			<!-- not sure if we will have to create different declined states for different types of rejections -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="withdrawn">
			<!-- Withdrawn (anytime before published) -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="retired">
			<!-- Retired/No longer active -->
			<!-- we may have to differentiate between 'retired' and proposals that are simply 'older versions' -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- Inactive -->
			<!-- used for proposals created as part of revision history - not sure if we need -->
				<dict:fieldRef bean="all.course.proposals.name"/>
				<dict:fieldRef bean="all.course.proposals.proposerPerson"/>
				<dict:fieldRef bean="all.course.proposals.proposerOrg"/>
				<dict:fieldRef bean="all.course.proposals.proposalReferenceType"/>
				<dict:fieldRef bean="all.course.proposals.proposalReference"/>
				<dict:fieldRef bean="all.course.proposals.rationale"/>
				<dict:fieldRef bean="all.course.proposals.detailDesc"/>
				<dict:fieldRef bean="all.course.proposals.effectiveDate"/>
				<dict:fieldRef bean="all.course.proposals.expirationDate"/>
				<dict:fieldRef bean="all.course.proposals.attributes"/>
				<dict:fieldRef bean="all.course.proposals.metaInfo"/>
				<dict:fieldRef bean="all.course.proposals.type"/>
				<dict:fieldRef bean="all.course.proposals.state"/>
				<dict:fieldRef bean="all.course.proposals.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.proposal.type.group">
		<!-- A  group of proposals -->
		<!-- do these really need to be course specific? -->
			<dict:state key="draft.private">
			<!-- Exploratory/Private scratch pad -->
				<dict:fieldRef bean="group.proposal.name"/>
				<dict:fieldRef bean="group.proposal.proposerPerson"/>
				<dict:fieldRef bean="group.proposal.proposerOrg"/>
				<dict:fieldRef bean="group.proposal.proposalReferenceType"/>
				<dict:fieldRef bean="group.proposal.proposalReference"/>
				<dict:fieldRef bean="group.proposal.rationale.draft.private"/>
				<dict:fieldRef bean="group.proposal.detailDesc"/>
				<dict:fieldRef bean="group.proposal.effectiveDate"/>
				<dict:fieldRef bean="group.proposal.expirationDate"/>
				<dict:fieldRef bean="group.proposal.attributes"/>
				<dict:fieldRef bean="group.proposal.metaInfo"/>
				<dict:fieldRef bean="group.proposal.type"/>
				<dict:fieldRef bean="group.proposal.state"/>
				<dict:fieldRef bean="group.proposal.internal.id"/>
			</dict:state>
			<dict:state key="draft.public">
			<!-- Entered as draft but not yet submitted -->
				<dict:fieldRef bean="group.proposal.name"/>
				<dict:fieldRef bean="group.proposal.proposerPerson"/>
				<dict:fieldRef bean="group.proposal.proposerOrg"/>
				<dict:fieldRef bean="group.proposal.proposalReferenceType"/>
				<dict:fieldRef bean="group.proposal.proposalReference"/>
				<dict:fieldRef bean="group.proposal.rationale.draft.public"/>
				<dict:fieldRef bean="group.proposal.detailDesc"/>
				<dict:fieldRef bean="group.proposal.effectiveDate"/>
				<dict:fieldRef bean="group.proposal.expirationDate"/>
				<dict:fieldRef bean="group.proposal.attributes"/>
				<dict:fieldRef bean="group.proposal.metaInfo"/>
				<dict:fieldRef bean="group.proposal.type"/>
				<dict:fieldRef bean="group.proposal.state"/>
				<dict:fieldRef bean="group.proposal.internal.id"/>
			</dict:state>
			<dict:state key="submitted">
			<!-- Submitted but not yet approved -->
			<!-- NOT IN SIMPLEs -->
				<dict:fieldRef bean="group.proposal.name"/>
				<dict:fieldRef bean="group.proposal.proposerPerson"/>
				<dict:fieldRef bean="group.proposal.proposerOrg"/>
				<dict:fieldRef bean="group.proposal.proposalReferenceType"/>
				<dict:fieldRef bean="group.proposal.proposalReference"/>
				<dict:fieldRef bean="group.proposal.rationale"/>
				<dict:fieldRef bean="group.proposal.detailDesc"/>
				<dict:fieldRef bean="group.proposal.effectiveDate"/>
				<dict:fieldRef bean="group.proposal.expirationDate"/>
				<dict:fieldRef bean="group.proposal.attributes"/>
				<dict:fieldRef bean="group.proposal.metaInfo"/>
				<dict:fieldRef bean="group.proposal.type"/>
				<dict:fieldRef bean="group.proposal.state"/>
				<dict:fieldRef bean="group.proposal.internal.id"/>
			</dict:state>
			<dict:state key="approve">
			<!-- Approved -->
				<dict:fieldRef bean="group.proposal.name"/>
				<dict:fieldRef bean="group.proposal.proposerPerson"/>
				<dict:fieldRef bean="group.proposal.proposerOrg"/>
				<dict:fieldRef bean="group.proposal.proposalReferenceType"/>
				<dict:fieldRef bean="group.proposal.proposalReference"/>
				<dict:fieldRef bean="group.proposal.rationale"/>
				<dict:fieldRef bean="group.proposal.detailDesc"/>
				<dict:fieldRef bean="group.proposal.effectiveDate"/>
				<dict:fieldRef bean="group.proposal.expirationDate"/>
				<dict:fieldRef bean="group.proposal.attributes"/>
				<dict:fieldRef bean="group.proposal.metaInfo"/>
				<dict:fieldRef bean="group.proposal.type"/>
				<dict:fieldRef bean="group.proposal.state"/>
				<dict:fieldRef bean="group.proposal.internal.id"/>
			</dict:state>
			<dict:state key="not approved">
			<!-- Not approved -->
			<!-- not sure if we will have to create different declined states for different types of rejections -->
				<dict:fieldRef bean="group.proposal.name"/>
				<dict:fieldRef bean="group.proposal.proposerPerson"/>
				<dict:fieldRef bean="group.proposal.proposerOrg"/>
				<dict:fieldRef bean="group.proposal.proposalReferenceType"/>
				<dict:fieldRef bean="group.proposal.proposalReference"/>
				<dict:fieldRef bean="group.proposal.rationale"/>
				<dict:fieldRef bean="group.proposal.detailDesc"/>
				<dict:fieldRef bean="group.proposal.effectiveDate"/>
				<dict:fieldRef bean="group.proposal.expirationDate"/>
				<dict:fieldRef bean="group.proposal.attributes"/>
				<dict:fieldRef bean="group.proposal.metaInfo"/>
				<dict:fieldRef bean="group.proposal.type"/>
				<dict:fieldRef bean="group.proposal.state"/>
				<dict:fieldRef bean="group.proposal.internal.id"/>
			</dict:state>
			<dict:state key="withdrawn">
			<!-- Withdrawn (anytime before published) -->
				<dict:fieldRef bean="group.proposal.name"/>
				<dict:fieldRef bean="group.proposal.proposerPerson"/>
				<dict:fieldRef bean="group.proposal.proposerOrg"/>
				<dict:fieldRef bean="group.proposal.proposalReferenceType"/>
				<dict:fieldRef bean="group.proposal.proposalReference"/>
				<dict:fieldRef bean="group.proposal.rationale"/>
				<dict:fieldRef bean="group.proposal.detailDesc"/>
				<dict:fieldRef bean="group.proposal.effectiveDate"/>
				<dict:fieldRef bean="group.proposal.expirationDate"/>
				<dict:fieldRef bean="group.proposal.attributes"/>
				<dict:fieldRef bean="group.proposal.metaInfo"/>
				<dict:fieldRef bean="group.proposal.type"/>
				<dict:fieldRef bean="group.proposal.state"/>
				<dict:fieldRef bean="group.proposal.internal.id"/>
			</dict:state>
			<dict:state key="retired">
			<!-- Retired/No longer active -->
			<!-- we may have to differentiate between 'retired' and proposals that are simply 'older versions' -->
				<dict:fieldRef bean="group.proposal.name"/>
				<dict:fieldRef bean="group.proposal.proposerPerson"/>
				<dict:fieldRef bean="group.proposal.proposerOrg"/>
				<dict:fieldRef bean="group.proposal.proposalReferenceType"/>
				<dict:fieldRef bean="group.proposal.proposalReference"/>
				<dict:fieldRef bean="group.proposal.rationale"/>
				<dict:fieldRef bean="group.proposal.detailDesc"/>
				<dict:fieldRef bean="group.proposal.effectiveDate"/>
				<dict:fieldRef bean="group.proposal.expirationDate"/>
				<dict:fieldRef bean="group.proposal.attributes"/>
				<dict:fieldRef bean="group.proposal.metaInfo"/>
				<dict:fieldRef bean="group.proposal.type"/>
				<dict:fieldRef bean="group.proposal.state"/>
				<dict:fieldRef bean="group.proposal.internal.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- Inactive -->
			<!-- used for proposals created as part of revision history - not sure if we need -->
				<dict:fieldRef bean="group.proposal.name"/>
				<dict:fieldRef bean="group.proposal.proposerPerson"/>
				<dict:fieldRef bean="group.proposal.proposerOrg"/>
				<dict:fieldRef bean="group.proposal.proposalReferenceType"/>
				<dict:fieldRef bean="group.proposal.proposalReference"/>
				<dict:fieldRef bean="group.proposal.rationale"/>
				<dict:fieldRef bean="group.proposal.detailDesc"/>
				<dict:fieldRef bean="group.proposal.effectiveDate"/>
				<dict:fieldRef bean="group.proposal.expirationDate"/>
				<dict:fieldRef bean="group.proposal.attributes"/>
				<dict:fieldRef bean="group.proposal.metaInfo"/>
				<dict:fieldRef bean="group.proposal.type"/>
				<dict:fieldRef bean="group.proposal.state"/>
				<dict:fieldRef bean="group.proposal.internal.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
	
	<dict:objectStructure key="proposalDocRelationInfo">
		<!-- Information about the proposal to document relation. -->
		<dict:type key="kuali.proposal.ProposalDocRelationType.syllabus">
		<!-- a syllabus for the clu being proposed -->
			<dict:state key="Active">
			<!-- proposal Doc Relation is Active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="syllabus.proposalId"/>
				<dict:fieldRef bean="syllabus.documentId"/>
				<dict:fieldRef bean="syllabus.title"/>
				<dict:fieldRef bean="syllabus.desc"/>
				<dict:fieldRef bean="syllabus.effectiveDate"/>
				<dict:fieldRef bean="syllabus.expirationDate"/>
				<dict:fieldRef bean="syllabus.attributes"/>
				<dict:fieldRef bean="syllabus.metaInfo"/>
				<dict:fieldRef bean="syllabus.type"/>
				<dict:fieldRef bean="syllabus.state"/>
				<dict:fieldRef bean="syllabus.internal.id"/>
			</dict:state>
			<dict:state key="Inactive">
			<!-- proposal Doc Relation is Inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="syllabus.proposalId"/>
				<dict:fieldRef bean="syllabus.documentId"/>
				<dict:fieldRef bean="syllabus.title"/>
				<dict:fieldRef bean="syllabus.desc"/>
				<dict:fieldRef bean="syllabus.effectiveDate"/>
				<dict:fieldRef bean="syllabus.expirationDate"/>
				<dict:fieldRef bean="syllabus.attributes"/>
				<dict:fieldRef bean="syllabus.metaInfo"/>
				<dict:fieldRef bean="syllabus.type"/>
				<dict:fieldRef bean="syllabus.state"/>
				<dict:fieldRef bean="syllabus.internal.id"/>
			</dict:state>
		</dict:type>
		<dict:type key="kuali.proposal.ProposalDocRelationType.other">
		<!-- supporting documentation does not fit into another category -->
			<dict:state key="Active">
			<!-- proposal Doc Relation is Active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="other.attachment.proposalId"/>
				<dict:fieldRef bean="other.attachment.documentId"/>
				<dict:fieldRef bean="other.attachment.title"/>
				<dict:fieldRef bean="other.attachment.desc"/>
				<dict:fieldRef bean="other.attachment.effectiveDate"/>
				<dict:fieldRef bean="other.attachment.expirationDate"/>
				<dict:fieldRef bean="other.attachment.attributes"/>
				<dict:fieldRef bean="other.attachment.metaInfo"/>
				<dict:fieldRef bean="other.attachment.type"/>
				<dict:fieldRef bean="other.attachment.state"/>
				<dict:fieldRef bean="other.attachment.internal.id"/>
			</dict:state>
			<dict:state key="Inactive">
			<!-- proposal Doc Relation is Inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="other.attachment.proposalId"/>
				<dict:fieldRef bean="other.attachment.documentId"/>
				<dict:fieldRef bean="other.attachment.title"/>
				<dict:fieldRef bean="other.attachment.desc"/>
				<dict:fieldRef bean="other.attachment.effectiveDate"/>
				<dict:fieldRef bean="other.attachment.expirationDate"/>
				<dict:fieldRef bean="other.attachment.attributes"/>
				<dict:fieldRef bean="other.attachment.metaInfo"/>
				<dict:fieldRef bean="other.attachment.type"/>
				<dict:fieldRef bean="other.attachment.state"/>
				<dict:fieldRef bean="other.attachment.internal.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
	
	<dict:objectStructure key="documentInfo">
		<!-- Detailed information about a document. -->
		<dict:type key="kuali.document.type.file">
		<!-- A document that contains an uploaded file -->
		<!-- NOT IN SIMPLES - services said they will make the change to the type as documented in jira item 121 -->
			<dict:state key="Active">
			<!-- document is active -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="file.name"/>
				<dict:fieldRef bean="file.fileName"/>
				<dict:fieldRef bean="file.desc"/>
				<dict:fieldRef bean="file.effectiveDate"/>
				<dict:fieldRef bean="file.expirationDate"/>
				<dict:fieldRef bean="file.attributes"/>
				<dict:fieldRef bean="file.metaInfo"/>
				<dict:fieldRef bean="file.type"/>
				<dict:fieldRef bean="file.state"/>
				<dict:fieldRef bean="file.internal.id"/>
			</dict:state>
			<dict:state key="Inactive">
			<!-- document is inactive -->
			<!-- TODO: Add to simple spec -->
				<dict:fieldRef bean="file.name"/>
				<dict:fieldRef bean="file.fileName"/>
				<dict:fieldRef bean="file.desc"/>
				<dict:fieldRef bean="file.effectiveDate"/>
				<dict:fieldRef bean="file.expirationDate"/>
				<dict:fieldRef bean="file.attributes"/>
				<dict:fieldRef bean="file.metaInfo"/>
				<dict:fieldRef bean="file.type"/>
				<dict:fieldRef bean="file.state"/>
				<dict:fieldRef bean="file.internal.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
	
	<dict:objectStructure key="commentInfo">
		<!-- Detailed information about a comment. -->
		<dict:type key="kuali.comment.type.proposal.public">
		<!-- Comments that are visible to anyone who can view the associated proposal -->
		<!-- not in SIMPLES -->
			<dict:state key="active">
			<!-- comment is active -->
			<!-- States have not been thought through for results, these are intial stakes - will need to ADD TO Simples -->
				<dict:fieldRef bean="public.comment.commentText"/>
				<dict:fieldRef bean="public.comment.referenceTypeKey"/>
				<dict:fieldRef bean="public.comment.referenceId"/>
				<dict:fieldRef bean="public.comment.effectiveDate"/>
				<dict:fieldRef bean="public.comment.expirationDate"/>
				<dict:fieldRef bean="public.comment.attributes"/>
				<dict:fieldRef bean="public.comment.metaInfo"/>
				<dict:fieldRef bean="public.comment.type"/>
				<dict:fieldRef bean="public.comment.state"/>
				<dict:fieldRef bean="public.comment.internal.id"/>
			</dict:state>
			<dict:state key="inactive">
			<!-- comment is inactive -->
			<!-- States have not been thought through for results, these are intial stakes - will need to ADD TO Simples -->
				<dict:fieldRef bean="public.comment.commentText"/>
				<dict:fieldRef bean="public.comment.referenceTypeKey"/>
				<dict:fieldRef bean="public.comment.referenceId"/>
				<dict:fieldRef bean="public.comment.effectiveDate"/>
				<dict:fieldRef bean="public.comment.expirationDate"/>
				<dict:fieldRef bean="public.comment.attributes"/>
				<dict:fieldRef bean="public.comment.metaInfo"/>
				<dict:fieldRef bean="public.comment.type"/>
				<dict:fieldRef bean="public.comment.state"/>
				<dict:fieldRef bean="public.comment.internal.id"/>
			</dict:state>
		</dict:type>
	</dict:objectStructure>
</beans>
