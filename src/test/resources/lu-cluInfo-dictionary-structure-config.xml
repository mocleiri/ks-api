<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/dictionary-extension dictionary-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
">
<!-- *** Automatically Generated ***
on: Tue Feb 16 13:05:30 EST 2010
by: org.kuali.student.dictionary.writer.DictionaryModelWriter
Using:Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls   and: Excel Spreadsheet src/test/resources/type-state configuration.xls, Excel Spreadsheet src/test/resources/services.xls
 -->
<import resource="constraints-dictionary-config.xml"/>

<!-- *********************************** -->
<!-- object structure for object.cluInfo -->
<!-- *********************************** -->
<!-- Detailed information about a single CLU. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluInfo" id="object.cluInfo.abstract" abstract="true">
	<dict:typeRef bean="type.cluInfo"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluInfo" id="object.cluInfo" parent="object.cluInfo.abstract"/>

<dict:type key="*" id="type.cluInfo.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.cluInfo"/>
</dict:type>
<dict:type key="*" id="type.cluInfo" parent="type.cluInfo.abstract"/>

<!-- ******************************************* -->
<!-- State for state.cluInfo.(default).(default) -->
<!-- ******************************************* -->

<dict:state key="*" id="state.cluInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.officialIdentifier"/>
	<dict:fieldRef bean="field.cluInfo.alternateIdentifiers"/>
	<dict:fieldRef bean="field.cluInfo.academicSubjectOrgs"/>
	<dict:fieldRef bean="field.cluInfo.studySubjectArea"/>
	<dict:fieldRef bean="field.cluInfo.desc"/>
	<dict:fieldRef bean="field.cluInfo.marketingDesc"/>
	<dict:fieldRef bean="field.cluInfo.campusLocationList"/>
	<dict:fieldRef bean="field.cluInfo.accreditation"/>
	<dict:fieldRef bean="field.cluInfo.primaryAdminOrg"/>
	<dict:fieldRef bean="field.cluInfo.alternateAdminOrgs"/>
	<dict:fieldRef bean="field.cluInfo.primaryInstructor"/>
	<dict:fieldRef bean="field.cluInfo.instructors"/>
	<dict:fieldRef bean="field.cluInfo.expectedFirstAtp"/>
	<dict:fieldRef bean="field.cluInfo.effectiveDate"/>
	<dict:fieldRef bean="field.cluInfo.expirationDate"/>
	<dict:fieldRef bean="field.cluInfo.intensity"/>
	<dict:fieldRef bean="field.cluInfo.stdDuration"/>
	<dict:fieldRef bean="field.cluInfo.canCreateLui"/>
	<dict:fieldRef bean="field.cluInfo.referenceURL"/>
	<dict:fieldRef bean="field.cluInfo.luCodes"/>
	<dict:fieldRef bean="field.cluInfo.publishingInfo"/>
	<dict:fieldRef bean="field.cluInfo.nextReviewPeriod"/>
	<dict:fieldRef bean="field.cluInfo.isEnrollable"/>
	<dict:fieldRef bean="field.cluInfo.offeredAtpTypes"/>
	<dict:fieldRef bean="field.cluInfo.hasEarlyDropDeadline"/>
	<dict:fieldRef bean="field.cluInfo.defaultEnrollmentEstimate"/>
	<dict:fieldRef bean="field.cluInfo.defaultMaximumEnrollment"/>
	<dict:fieldRef bean="field.cluInfo.isHazardousForDisabledStudents"/>
	<dict:fieldRef bean="field.cluInfo.feeInfo"/>
	<dict:fieldRef bean="field.cluInfo.accountingInfo"/>
	<dict:fieldRef bean="field.cluInfo.metaInfo"/>
	<dict:fieldRef bean="field.cluInfo.type"/>
	<dict:fieldRef bean="field.cluInfo.state"/>
	<dict:fieldRef bean="field.cluInfo.id"/>
</dict:state>
<dict:state key="*" id="state.cluInfo" parent="state.cluInfo.abstract"/>


<dict:field key="officialIdentifier" id="field.cluInfo.officialIdentifier.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.officialIdentifier.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.officialIdentifier.cd"/>
</dict:field>
<dict:field key="officialIdentifier" id="field.cluInfo.officialIdentifier" parent="field.cluInfo.officialIdentifier.abstract"/>
<dict:fieldDescriptor key="officialIdentifier" id="field.cluInfo.officialIdentifier.fd.abstract" abstract="true">
	<dict:name>Official Idenfifier</dict:name>
	<dict:desc>Information related to the official identification of the clu, typically in human readable form. Used to officially reference or publish.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.officialIdentifier"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="officialIdentifier" id="field.cluInfo.officialIdentifier.fd" parent="field.cluInfo.officialIdentifier.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.officialIdentifier.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="officialIdentifier" id="field.cluInfo.officialIdentifier.cd" parent="field.cluInfo.officialIdentifier.cd.abstract"/>

<!-- ******************************************************************************** -->
<!-- object structure for object.field.cluInfo.officialIdentifier.(default).(default) -->
<!-- ******************************************************************************** -->
<!-- Detailed information about the human readable form of a CLU Identifier -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluIdentifierInfo" id="object.field.cluInfo.officialIdentifier.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.officialIdentifier"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluIdentifierInfo" id="object.field.cluInfo.officialIdentifier" parent="object.field.cluInfo.officialIdentifier.abstract"/>

<dict:type key="*" id="type.field.cluInfo.officialIdentifier.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.officialIdentifier"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.officialIdentifier" parent="type.field.cluInfo.officialIdentifier.abstract"/>

<!-- **************************************************************************************** -->
<!-- State for state.field.cluInfo.officialIdentifier.(default).(default).(default).(default) -->
<!-- **************************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.officialIdentifier.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.officialIdentifier.code"/>
	<dict:fieldRef bean="field.cluInfo.officialIdentifier.shortName"/>
	<dict:fieldRef bean="field.cluInfo.officialIdentifier.longName"/>
	<dict:fieldRef bean="field.cluInfo.officialIdentifier.level"/>
	<dict:fieldRef bean="field.cluInfo.officialIdentifier.division"/>
	<dict:fieldRef bean="field.cluInfo.officialIdentifier.suffixCode"/>
	<dict:fieldRef bean="field.cluInfo.officialIdentifier.variation"/>
	<dict:fieldRef bean="field.cluInfo.officialIdentifier.orgId"/>
	<dict:fieldRef bean="field.cluInfo.officialIdentifier.type"/>
	<dict:fieldRef bean="field.cluInfo.officialIdentifier.state"/>
	<dict:fieldRef bean="field.cluInfo.officialIdentifier.id"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.officialIdentifier" parent="state.field.cluInfo.officialIdentifier.abstract"/>


<dict:field key="code" id="field.cluInfo.officialIdentifier.code.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.officialIdentifier.code.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.officialIdentifier.code.cd"/>
</dict:field>
<dict:field key="code" id="field.cluInfo.officialIdentifier.code" parent="field.cluInfo.officialIdentifier.code.abstract"/>
<dict:fieldDescriptor key="code" id="field.cluInfo.officialIdentifier.code.fd.abstract" abstract="true">
	<dict:name>Code</dict:name>
	<dict:desc>The composite string that is used to officially reference or publish the CLU. Note it may have an internal structure that each Institution may want to enforce. This structure may be composed from the other parts of the structure such as Level &amp; Division, but may include items such as cluType.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="code" id="field.cluInfo.officialIdentifier.code.fd" parent="field.cluInfo.officialIdentifier.code.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.officialIdentifier.code.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="code" id="field.cluInfo.officialIdentifier.code.cd" parent="field.cluInfo.officialIdentifier.code.cd.abstract"/>

<!-- services says this is mandatory but that might only be true if the type is "official" on other types of ID's such as cross-listed doesn't have any name associated with it -->
<dict:field key="shortName" id="field.cluInfo.officialIdentifier.shortName.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.officialIdentifier.shortName.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.officialIdentifier.shortName.cd"/>
</dict:field>
<dict:field key="shortName" id="field.cluInfo.officialIdentifier.shortName" parent="field.cluInfo.officialIdentifier.shortName.abstract"/>
<dict:fieldDescriptor key="shortName" id="field.cluInfo.officialIdentifier.shortName.fd.abstract" abstract="true">
	<dict:name>Short Name</dict:name>
	<dict:desc>Abbreviated name of the CLU, commonly used on transcripts</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="shortName" id="field.cluInfo.officialIdentifier.shortName.fd" parent="field.cluInfo.officialIdentifier.shortName.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); A basic single line of text, no embedded carraige returns or tabs limited to 255 -->
<dict:constraintDescriptor id="field.cluInfo.officialIdentifier.shortName.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.single.line.text"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="shortName" id="field.cluInfo.officialIdentifier.shortName.cd" parent="field.cluInfo.officialIdentifier.shortName.cd.abstract"/>

<!-- services says this is mandatory but that might only be true if the type is "official" on other types of ID's such as cross-listed doesn't have any name associated with it -->
<dict:field key="longName" id="field.cluInfo.officialIdentifier.longName.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.officialIdentifier.longName.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.officialIdentifier.longName.cd"/>
</dict:field>
<dict:field key="longName" id="field.cluInfo.officialIdentifier.longName" parent="field.cluInfo.officialIdentifier.longName.abstract"/>
<dict:fieldDescriptor key="longName" id="field.cluInfo.officialIdentifier.longName.fd.abstract" abstract="true">
	<dict:name>Long Name</dict:name>
	<dict:desc>Full name of the CLU, commonly used on catalogues</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="longName" id="field.cluInfo.officialIdentifier.longName.fd" parent="field.cluInfo.officialIdentifier.longName.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); A basic single line of text, no embedded carraige returns or tabs limited to 255 -->
<dict:constraintDescriptor id="field.cluInfo.officialIdentifier.longName.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.single.line.text"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="longName" id="field.cluInfo.officialIdentifier.longName.cd" parent="field.cluInfo.officialIdentifier.longName.cd.abstract"/>

<dict:field key="level" id="field.cluInfo.officialIdentifier.level.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.officialIdentifier.level.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.officialIdentifier.level.cd"/>
</dict:field>
<dict:field key="level" id="field.cluInfo.officialIdentifier.level" parent="field.cluInfo.officialIdentifier.level.abstract"/>
<dict:fieldDescriptor key="level" id="field.cluInfo.officialIdentifier.level.fd.abstract" abstract="true">
	<dict:name>Level</dict:name>
	<dict:desc>A code that indicates whether this is introductory, advanced, etc.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="level" id="field.cluInfo.officialIdentifier.level.fd" parent="field.cluInfo.officialIdentifier.level.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.officialIdentifier.level.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="level" id="field.cluInfo.officialIdentifier.level.cd" parent="field.cluInfo.officialIdentifier.level.cd.abstract"/>

<dict:field key="division" id="field.cluInfo.officialIdentifier.division.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.officialIdentifier.division.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.officialIdentifier.division.cd"/>
</dict:field>
<dict:field key="division" id="field.cluInfo.officialIdentifier.division" parent="field.cluInfo.officialIdentifier.division.abstract"/>
<dict:fieldDescriptor key="division" id="field.cluInfo.officialIdentifier.division.fd.abstract" abstract="true">
	<dict:name>Division</dict:name>
	<dict:desc>A code that indicates what school, program, major, subject area, etc. Examples: &quot;Chem&quot;, &quot;18&quot;</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="division" id="field.cluInfo.officialIdentifier.division.fd" parent="field.cluInfo.officialIdentifier.division.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.officialIdentifier.division.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="division" id="field.cluInfo.officialIdentifier.division.cd" parent="field.cluInfo.officialIdentifier.division.cd.abstract"/>

<dict:field key="suffixCode" id="field.cluInfo.officialIdentifier.suffixCode.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.officialIdentifier.suffixCode.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.officialIdentifier.suffixCode.cd"/>
</dict:field>
<dict:field key="suffixCode" id="field.cluInfo.officialIdentifier.suffixCode" parent="field.cluInfo.officialIdentifier.suffixCode.abstract"/>
<dict:fieldDescriptor key="suffixCode" id="field.cluInfo.officialIdentifier.suffixCode.fd.abstract" abstract="true">
	<dict:name>Suffix Code</dict:name>
	<dict:desc>The &quot;extra&quot; portion of the code, which usually corresponds with the most detailed part of the number. Ex. at MIT we might map Division to subject area(Ex:6) but overall we need to say the code is 6.120. This field would represent the 120 part.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="suffixCode" id="field.cluInfo.officialIdentifier.suffixCode.fd" parent="field.cluInfo.officialIdentifier.suffixCode.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.officialIdentifier.suffixCode.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="suffixCode" id="field.cluInfo.officialIdentifier.suffixCode.cd" parent="field.cluInfo.officialIdentifier.suffixCode.cd.abstract"/>

<dict:field key="variation" id="field.cluInfo.officialIdentifier.variation.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.officialIdentifier.variation.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.officialIdentifier.variation.cd"/>
</dict:field>
<dict:field key="variation" id="field.cluInfo.officialIdentifier.variation" parent="field.cluInfo.officialIdentifier.variation.abstract"/>
<dict:fieldDescriptor key="variation" id="field.cluInfo.officialIdentifier.variation.fd.abstract" abstract="true">
	<dict:name>Variation</dict:name>
	<dict:desc>A number that indicates the sequence or order of versions in cases where several different Clus have the same offical Identifier</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="variation" id="field.cluInfo.officialIdentifier.variation.fd" parent="field.cluInfo.officialIdentifier.variation.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.officialIdentifier.variation.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="variation" id="field.cluInfo.officialIdentifier.variation.cd" parent="field.cluInfo.officialIdentifier.variation.cd.abstract"/>

<dict:field key="orgId" id="field.cluInfo.officialIdentifier.orgId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.officialIdentifier.orgId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.officialIdentifier.orgId.cd"/>
</dict:field>
<dict:field key="orgId" id="field.cluInfo.officialIdentifier.orgId" parent="field.cluInfo.officialIdentifier.orgId.abstract"/>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.officialIdentifier.orgId.fd.abstract" abstract="true">
	<dict:name>Organization Identifier</dict:name>
	<dict:desc>The identifier of the organization associated with this cluIdentifier.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.officialIdentifier.orgId.fd" parent="field.cluInfo.officialIdentifier.orgId.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Id of an existing ORG -->
<dict:constraintDescriptor id="field.cluInfo.officialIdentifier.orgId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.orgId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="orgId" id="field.cluInfo.officialIdentifier.orgId.cd" parent="field.cluInfo.officialIdentifier.orgId.cd.abstract"/>

<!-- Required when first adding but read-only thereafter -->
<dict:field key="type" id="field.cluInfo.officialIdentifier.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.officialIdentifier.type.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.officialIdentifier.type.cd"/>
</dict:field>
<dict:field key="type" id="field.cluInfo.officialIdentifier.type" parent="field.cluInfo.officialIdentifier.type.abstract"/>
<dict:fieldDescriptor key="type" id="field.cluInfo.officialIdentifier.type.fd.abstract" abstract="true">
	<dict:name>CLU Identifier Type</dict:name>
	<dict:desc>Identifies the type of usage for the identifier. While most usages will have the same data constraints, this may provide some context around what the specific intent is for this identifier. (Ex. Why does this alternate identifier exist?)</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.cluInfo.officialIdentifier.type.fd" parent="field.cluInfo.officialIdentifier.type.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured clu identifier types -->
<dict:constraintDescriptor id="field.cluInfo.officialIdentifier.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.identifier.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.cluInfo.officialIdentifier.type.cd" parent="field.cluInfo.officialIdentifier.type.cd.abstract"/>

<dict:field key="state" id="field.cluInfo.officialIdentifier.state.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.officialIdentifier.state.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.officialIdentifier.state.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluInfo.officialIdentifier.state" parent="field.cluInfo.officialIdentifier.state.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluInfo.officialIdentifier.state.fd.abstract" abstract="true">
	<dict:name>CLU Identifier State</dict:name>
	<dict:desc>Identifies the state of the identifier. Values for this field are constrained to values present within the cluIdentifierState enumeration.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluInfo.officialIdentifier.state.fd" parent="field.cluInfo.officialIdentifier.state.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of configured clu identifier states -->
<dict:constraintDescriptor id="field.cluInfo.officialIdentifier.state.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.identifier.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluInfo.officialIdentifier.state.cd" parent="field.cluInfo.officialIdentifier.state.cd.abstract"/>

<!-- should be blank when first adding but required thereafter for updates -->
<dict:field key="id" id="field.cluInfo.officialIdentifier.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.officialIdentifier.id.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.officialIdentifier.id.cd"/>
</dict:field>
<dict:field key="id" id="field.cluInfo.officialIdentifier.id" parent="field.cluInfo.officialIdentifier.id.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluInfo.officialIdentifier.id.fd.abstract" abstract="true">
	<dict:name>CLU Identifier Identifier</dict:name>
	<dict:desc>Identifies the particular identifier structure. This is set by the service to be able to determine changes and alterations to the structure as well as provides a handle for searches. This structure is not accessible through unique operations, and it is strongly recommended that no external references to this particular identifier be maintained.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluInfo.officialIdentifier.id.fd" parent="field.cluInfo.officialIdentifier.id.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluInfo.officialIdentifier.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluInfo.officialIdentifier.id.cd" parent="field.cluInfo.officialIdentifier.id.cd.abstract"/>

<dict:field key="alternateIdentifiers" id="field.cluInfo.alternateIdentifiers.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.alternateIdentifiers.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.alternateIdentifiers.cd"/>
</dict:field>
<dict:field key="alternateIdentifiers" id="field.cluInfo.alternateIdentifiers" parent="field.cluInfo.alternateIdentifiers.abstract"/>
<dict:fieldDescriptor key="alternateIdentifiers" id="field.cluInfo.alternateIdentifiers.fd.abstract" abstract="true">
	<dict:name>Alternate Idenfifiers</dict:name>
	<dict:desc>Information related to alternate identifications of the clu, typically in human readable form. Used to reference or publish.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.alternateIdentifiers"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="alternateIdentifiers" id="field.cluInfo.alternateIdentifiers.fd" parent="field.cluInfo.alternateIdentifiers.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluInfo.alternateIdentifiers.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="alternateIdentifiers" id="field.cluInfo.alternateIdentifiers.cd" parent="field.cluInfo.alternateIdentifiers.cd.abstract"/>

<!-- ********************************************************************************** -->
<!-- object structure for object.field.cluInfo.alternateIdentifiers.(default).(default) -->
<!-- ********************************************************************************** -->
<!-- Detailed information about the human readable form of a CLU Identifier -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluIdentifierInfo" id="object.field.cluInfo.alternateIdentifiers.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.alternateIdentifiers"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluIdentifierInfo" id="object.field.cluInfo.alternateIdentifiers" parent="object.field.cluInfo.alternateIdentifiers.abstract"/>

<dict:type key="*" id="type.field.cluInfo.alternateIdentifiers.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.alternateIdentifiers"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.alternateIdentifiers" parent="type.field.cluInfo.alternateIdentifiers.abstract"/>

<!-- ****************************************************************************************** -->
<!-- State for state.field.cluInfo.alternateIdentifiers.(default).(default).(default).(default) -->
<!-- ****************************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.alternateIdentifiers.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.alternateIdentifiers.code"/>
	<dict:fieldRef bean="field.cluInfo.alternateIdentifiers.shortName"/>
	<dict:fieldRef bean="field.cluInfo.alternateIdentifiers.longName"/>
	<dict:fieldRef bean="field.cluInfo.alternateIdentifiers.level"/>
	<dict:fieldRef bean="field.cluInfo.alternateIdentifiers.division"/>
	<dict:fieldRef bean="field.cluInfo.alternateIdentifiers.suffixCode"/>
	<dict:fieldRef bean="field.cluInfo.alternateIdentifiers.variation"/>
	<dict:fieldRef bean="field.cluInfo.alternateIdentifiers.orgId"/>
	<dict:fieldRef bean="field.cluInfo.alternateIdentifiers.type"/>
	<dict:fieldRef bean="field.cluInfo.alternateIdentifiers.state"/>
	<dict:fieldRef bean="field.cluInfo.alternateIdentifiers.id"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.alternateIdentifiers" parent="state.field.cluInfo.alternateIdentifiers.abstract"/>


<dict:field key="code" id="field.cluInfo.alternateIdentifiers.code.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.alternateIdentifiers.code.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.alternateIdentifiers.code.cd"/>
</dict:field>
<dict:field key="code" id="field.cluInfo.alternateIdentifiers.code" parent="field.cluInfo.alternateIdentifiers.code.abstract"/>
<dict:fieldDescriptor key="code" id="field.cluInfo.alternateIdentifiers.code.fd.abstract" abstract="true">
	<dict:name>Code</dict:name>
	<dict:desc>The composite string that is used to officially reference or publish the CLU. Note it may have an internal structure that each Institution may want to enforce. This structure may be composed from the other parts of the structure such as Level &amp; Division, but may include items such as cluType.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="code" id="field.cluInfo.alternateIdentifiers.code.fd" parent="field.cluInfo.alternateIdentifiers.code.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.alternateIdentifiers.code.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="code" id="field.cluInfo.alternateIdentifiers.code.cd" parent="field.cluInfo.alternateIdentifiers.code.cd.abstract"/>

<!-- services says this is mandatory but that might only be true if the type is "official" on other types of ID's such as cross-listed doesn't have any name associated with it -->
<dict:field key="shortName" id="field.cluInfo.alternateIdentifiers.shortName.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.alternateIdentifiers.shortName.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.alternateIdentifiers.shortName.cd"/>
</dict:field>
<dict:field key="shortName" id="field.cluInfo.alternateIdentifiers.shortName" parent="field.cluInfo.alternateIdentifiers.shortName.abstract"/>
<dict:fieldDescriptor key="shortName" id="field.cluInfo.alternateIdentifiers.shortName.fd.abstract" abstract="true">
	<dict:name>Short Name</dict:name>
	<dict:desc>Abbreviated name of the CLU, commonly used on transcripts</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="shortName" id="field.cluInfo.alternateIdentifiers.shortName.fd" parent="field.cluInfo.alternateIdentifiers.shortName.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); A basic single line of text, no embedded carraige returns or tabs limited to 255 -->
<dict:constraintDescriptor id="field.cluInfo.alternateIdentifiers.shortName.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.single.line.text"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="shortName" id="field.cluInfo.alternateIdentifiers.shortName.cd" parent="field.cluInfo.alternateIdentifiers.shortName.cd.abstract"/>

<!-- services says this is mandatory but that might only be true if the type is "official" on other types of ID's such as cross-listed doesn't have any name associated with it -->
<dict:field key="longName" id="field.cluInfo.alternateIdentifiers.longName.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.alternateIdentifiers.longName.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.alternateIdentifiers.longName.cd"/>
</dict:field>
<dict:field key="longName" id="field.cluInfo.alternateIdentifiers.longName" parent="field.cluInfo.alternateIdentifiers.longName.abstract"/>
<dict:fieldDescriptor key="longName" id="field.cluInfo.alternateIdentifiers.longName.fd.abstract" abstract="true">
	<dict:name>Long Name</dict:name>
	<dict:desc>Full name of the CLU, commonly used on catalogues</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="longName" id="field.cluInfo.alternateIdentifiers.longName.fd" parent="field.cluInfo.alternateIdentifiers.longName.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); A basic single line of text, no embedded carraige returns or tabs limited to 255 -->
<dict:constraintDescriptor id="field.cluInfo.alternateIdentifiers.longName.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.single.line.text"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="longName" id="field.cluInfo.alternateIdentifiers.longName.cd" parent="field.cluInfo.alternateIdentifiers.longName.cd.abstract"/>

<dict:field key="level" id="field.cluInfo.alternateIdentifiers.level.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.alternateIdentifiers.level.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.alternateIdentifiers.level.cd"/>
</dict:field>
<dict:field key="level" id="field.cluInfo.alternateIdentifiers.level" parent="field.cluInfo.alternateIdentifiers.level.abstract"/>
<dict:fieldDescriptor key="level" id="field.cluInfo.alternateIdentifiers.level.fd.abstract" abstract="true">
	<dict:name>Level</dict:name>
	<dict:desc>A code that indicates whether this is introductory, advanced, etc.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="level" id="field.cluInfo.alternateIdentifiers.level.fd" parent="field.cluInfo.alternateIdentifiers.level.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.alternateIdentifiers.level.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="level" id="field.cluInfo.alternateIdentifiers.level.cd" parent="field.cluInfo.alternateIdentifiers.level.cd.abstract"/>

<dict:field key="division" id="field.cluInfo.alternateIdentifiers.division.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.alternateIdentifiers.division.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.alternateIdentifiers.division.cd"/>
</dict:field>
<dict:field key="division" id="field.cluInfo.alternateIdentifiers.division" parent="field.cluInfo.alternateIdentifiers.division.abstract"/>
<dict:fieldDescriptor key="division" id="field.cluInfo.alternateIdentifiers.division.fd.abstract" abstract="true">
	<dict:name>Division</dict:name>
	<dict:desc>A code that indicates what school, program, major, subject area, etc. Examples: &quot;Chem&quot;, &quot;18&quot;</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="division" id="field.cluInfo.alternateIdentifiers.division.fd" parent="field.cluInfo.alternateIdentifiers.division.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.alternateIdentifiers.division.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="division" id="field.cluInfo.alternateIdentifiers.division.cd" parent="field.cluInfo.alternateIdentifiers.division.cd.abstract"/>

<dict:field key="suffixCode" id="field.cluInfo.alternateIdentifiers.suffixCode.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.alternateIdentifiers.suffixCode.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.alternateIdentifiers.suffixCode.cd"/>
</dict:field>
<dict:field key="suffixCode" id="field.cluInfo.alternateIdentifiers.suffixCode" parent="field.cluInfo.alternateIdentifiers.suffixCode.abstract"/>
<dict:fieldDescriptor key="suffixCode" id="field.cluInfo.alternateIdentifiers.suffixCode.fd.abstract" abstract="true">
	<dict:name>Suffix Code</dict:name>
	<dict:desc>The &quot;extra&quot; portion of the code, which usually corresponds with the most detailed part of the number. Ex. at MIT we might map Division to subject area(Ex:6) but overall we need to say the code is 6.120. This field would represent the 120 part.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="suffixCode" id="field.cluInfo.alternateIdentifiers.suffixCode.fd" parent="field.cluInfo.alternateIdentifiers.suffixCode.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.alternateIdentifiers.suffixCode.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="suffixCode" id="field.cluInfo.alternateIdentifiers.suffixCode.cd" parent="field.cluInfo.alternateIdentifiers.suffixCode.cd.abstract"/>

<dict:field key="variation" id="field.cluInfo.alternateIdentifiers.variation.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.alternateIdentifiers.variation.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.alternateIdentifiers.variation.cd"/>
</dict:field>
<dict:field key="variation" id="field.cluInfo.alternateIdentifiers.variation" parent="field.cluInfo.alternateIdentifiers.variation.abstract"/>
<dict:fieldDescriptor key="variation" id="field.cluInfo.alternateIdentifiers.variation.fd.abstract" abstract="true">
	<dict:name>Variation</dict:name>
	<dict:desc>A number that indicates the sequence or order of versions in cases where several different Clus have the same offical Identifier</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="variation" id="field.cluInfo.alternateIdentifiers.variation.fd" parent="field.cluInfo.alternateIdentifiers.variation.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.alternateIdentifiers.variation.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="variation" id="field.cluInfo.alternateIdentifiers.variation.cd" parent="field.cluInfo.alternateIdentifiers.variation.cd.abstract"/>

<dict:field key="orgId" id="field.cluInfo.alternateIdentifiers.orgId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.alternateIdentifiers.orgId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.alternateIdentifiers.orgId.cd"/>
</dict:field>
<dict:field key="orgId" id="field.cluInfo.alternateIdentifiers.orgId" parent="field.cluInfo.alternateIdentifiers.orgId.abstract"/>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.alternateIdentifiers.orgId.fd.abstract" abstract="true">
	<dict:name>Organization Identifier</dict:name>
	<dict:desc>The identifier of the organization associated with this cluIdentifier.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.alternateIdentifiers.orgId.fd" parent="field.cluInfo.alternateIdentifiers.orgId.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Id of an existing ORG -->
<dict:constraintDescriptor id="field.cluInfo.alternateIdentifiers.orgId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.orgId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="orgId" id="field.cluInfo.alternateIdentifiers.orgId.cd" parent="field.cluInfo.alternateIdentifiers.orgId.cd.abstract"/>

<!-- Required when first adding but read-only thereafter -->
<dict:field key="type" id="field.cluInfo.alternateIdentifiers.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.alternateIdentifiers.type.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.alternateIdentifiers.type.cd"/>
</dict:field>
<dict:field key="type" id="field.cluInfo.alternateIdentifiers.type" parent="field.cluInfo.alternateIdentifiers.type.abstract"/>
<dict:fieldDescriptor key="type" id="field.cluInfo.alternateIdentifiers.type.fd.abstract" abstract="true">
	<dict:name>CLU Identifier Type</dict:name>
	<dict:desc>Identifies the type of usage for the identifier. While most usages will have the same data constraints, this may provide some context around what the specific intent is for this identifier. (Ex. Why does this alternate identifier exist?)</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.cluInfo.alternateIdentifiers.type.fd" parent="field.cluInfo.alternateIdentifiers.type.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured clu identifier types -->
<dict:constraintDescriptor id="field.cluInfo.alternateIdentifiers.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.identifier.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.cluInfo.alternateIdentifiers.type.cd" parent="field.cluInfo.alternateIdentifiers.type.cd.abstract"/>

<dict:field key="state" id="field.cluInfo.alternateIdentifiers.state.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.alternateIdentifiers.state.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.alternateIdentifiers.state.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluInfo.alternateIdentifiers.state" parent="field.cluInfo.alternateIdentifiers.state.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluInfo.alternateIdentifiers.state.fd.abstract" abstract="true">
	<dict:name>CLU Identifier State</dict:name>
	<dict:desc>Identifies the state of the identifier. Values for this field are constrained to values present within the cluIdentifierState enumeration.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluInfo.alternateIdentifiers.state.fd" parent="field.cluInfo.alternateIdentifiers.state.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of configured clu identifier states -->
<dict:constraintDescriptor id="field.cluInfo.alternateIdentifiers.state.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.identifier.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluInfo.alternateIdentifiers.state.cd" parent="field.cluInfo.alternateIdentifiers.state.cd.abstract"/>

<!-- should be blank when first adding but required thereafter for updates -->
<dict:field key="id" id="field.cluInfo.alternateIdentifiers.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.alternateIdentifiers.id.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.alternateIdentifiers.id.cd"/>
</dict:field>
<dict:field key="id" id="field.cluInfo.alternateIdentifiers.id" parent="field.cluInfo.alternateIdentifiers.id.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluInfo.alternateIdentifiers.id.fd.abstract" abstract="true">
	<dict:name>CLU Identifier Identifier</dict:name>
	<dict:desc>Identifies the particular identifier structure. This is set by the service to be able to determine changes and alterations to the structure as well as provides a handle for searches. This structure is not accessible through unique operations, and it is strongly recommended that no external references to this particular identifier be maintained.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluInfo.alternateIdentifiers.id.fd" parent="field.cluInfo.alternateIdentifiers.id.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluInfo.alternateIdentifiers.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluInfo.alternateIdentifiers.id.cd" parent="field.cluInfo.alternateIdentifiers.id.cd.abstract"/>

<dict:field key="academicSubjectOrgs" id="field.cluInfo.academicSubjectOrgs.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.academicSubjectOrgs.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.academicSubjectOrgs.cd"/>
</dict:field>
<dict:field key="academicSubjectOrgs" id="field.cluInfo.academicSubjectOrgs" parent="field.cluInfo.academicSubjectOrgs.abstract"/>
<dict:fieldDescriptor key="academicSubjectOrgs" id="field.cluInfo.academicSubjectOrgs.fd.abstract" abstract="true">
	<dict:name>Academic Subject Orgs</dict:name>
	<dict:desc>The organizations that represents the Subject area of the Clu, if different from the PrimaryAdminOrg?</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.academicSubjectOrgs"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="academicSubjectOrgs" id="field.cluInfo.academicSubjectOrgs.fd" parent="field.cluInfo.academicSubjectOrgs.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluInfo.academicSubjectOrgs.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="academicSubjectOrgs" id="field.cluInfo.academicSubjectOrgs.cd" parent="field.cluInfo.academicSubjectOrgs.cd.abstract"/>

<!-- ********************************************************************************* -->
<!-- object structure for object.field.cluInfo.academicSubjectOrgs.(default).(default) -->
<!-- ********************************************************************************* -->
<!-- Information about an organization that represents the Academic Subject for a learning unit. This often would be the same as the primaryAdminOrg. -->
<dict:objectStructure key=".AcademicSubjectOrgInfo" id="object.field.cluInfo.academicSubjectOrgs.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.academicSubjectOrgs"/>
</dict:objectStructure>
<dict:objectStructure key=".AcademicSubjectOrgInfo" id="object.field.cluInfo.academicSubjectOrgs" parent="object.field.cluInfo.academicSubjectOrgs.abstract"/>

<dict:type key="*" id="type.field.cluInfo.academicSubjectOrgs.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.academicSubjectOrgs"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.academicSubjectOrgs" parent="type.field.cluInfo.academicSubjectOrgs.abstract"/>

<!-- ***************************************************************************************** -->
<!-- State for state.field.cluInfo.academicSubjectOrgs.(default).(default).(default).(default) -->
<!-- ***************************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.academicSubjectOrgs.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.academicSubjectOrgs.orgId"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.academicSubjectOrgs" parent="state.field.cluInfo.academicSubjectOrgs.abstract"/>


<dict:field key="orgId" id="field.cluInfo.academicSubjectOrgs.orgId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.academicSubjectOrgs.orgId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.academicSubjectOrgs.orgId.cd"/>
</dict:field>
<dict:field key="orgId" id="field.cluInfo.academicSubjectOrgs.orgId" parent="field.cluInfo.academicSubjectOrgs.orgId.abstract"/>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.academicSubjectOrgs.orgId.fd.abstract" abstract="true">
	<dict:name>Organization Identifier</dict:name>
	<dict:desc>Unique identifier for an organization.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.academicSubjectOrgs.orgId.fd" parent="field.cluInfo.academicSubjectOrgs.orgId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing ORG -->
<dict:constraintDescriptor id="field.cluInfo.academicSubjectOrgs.orgId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.orgId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="orgId" id="field.cluInfo.academicSubjectOrgs.orgId.cd" parent="field.cluInfo.academicSubjectOrgs.orgId.cd.abstract"/>

<dict:field key="studySubjectArea" id="field.cluInfo.studySubjectArea.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.studySubjectArea.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.studySubjectArea.cd"/>
</dict:field>
<dict:field key="studySubjectArea" id="field.cluInfo.studySubjectArea" parent="field.cluInfo.studySubjectArea.abstract"/>
<dict:fieldDescriptor key="studySubjectArea" id="field.cluInfo.studySubjectArea.fd.abstract" abstract="true">
	<dict:name>Study Subject Area</dict:name>
	<dict:desc>The Study Subject Area is used to identify the area of study associated with the clu. It may be a general study area (e.g. Chemistry) or very specific (e.g. Naval Architecture) depending on the level of specificity of the clu.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="studySubjectArea" id="field.cluInfo.studySubjectArea.fd" parent="field.cluInfo.studySubjectArea.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.studySubjectArea.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="studySubjectArea" id="field.cluInfo.studySubjectArea.cd" parent="field.cluInfo.studySubjectArea.cd.abstract"/>

<dict:field key="desc" id="field.cluInfo.desc.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.desc.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.desc.cd"/>
</dict:field>
<dict:field key="desc" id="field.cluInfo.desc" parent="field.cluInfo.desc.abstract"/>
<dict:fieldDescriptor key="desc" id="field.cluInfo.desc.fd.abstract" abstract="true">
	<dict:name>Description</dict:name>
	<dict:desc>Narrative description of the CLU, used for the catalog.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.desc"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.cluInfo.desc.fd" parent="field.cluInfo.desc.fd.abstract"/>
<!-- Optional; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.desc.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.cluInfo.desc.cd" parent="field.cluInfo.desc.cd.abstract"/>

<!-- ****************************************************************** -->
<!-- object structure for object.field.cluInfo.desc.(default).(default) -->
<!-- ****************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="object.field.cluInfo.desc.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.desc"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="object.field.cluInfo.desc" parent="object.field.cluInfo.desc.abstract"/>

<dict:type key="*" id="type.field.cluInfo.desc.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.desc"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.desc" parent="type.field.cluInfo.desc.abstract"/>

<!-- ************************************************************************** -->
<!-- State for state.field.cluInfo.desc.(default).(default).(default).(default) -->
<!-- ************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.desc.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.desc.plain"/>
	<dict:fieldRef bean="field.cluInfo.desc.formatted"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.desc" parent="state.field.cluInfo.desc.abstract"/>


<dict:field key="plain" id="field.cluInfo.desc.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.desc.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.desc.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.cluInfo.desc.plain" parent="field.cluInfo.desc.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.cluInfo.desc.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.cluInfo.desc.plain.fd" parent="field.cluInfo.desc.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.cluInfo.desc.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.cluInfo.desc.plain.cd" parent="field.cluInfo.desc.plain.cd.abstract"/>

<dict:field key="formatted" id="field.cluInfo.desc.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.desc.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.desc.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.cluInfo.desc.formatted" parent="field.cluInfo.desc.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.cluInfo.desc.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.cluInfo.desc.formatted.fd" parent="field.cluInfo.desc.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.cluInfo.desc.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.cluInfo.desc.formatted.cd" parent="field.cluInfo.desc.formatted.cd.abstract"/>

<dict:field key="marketingDesc" id="field.cluInfo.marketingDesc.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.marketingDesc.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.marketingDesc.cd"/>
</dict:field>
<dict:field key="marketingDesc" id="field.cluInfo.marketingDesc" parent="field.cluInfo.marketingDesc.abstract"/>
<dict:fieldDescriptor key="marketingDesc" id="field.cluInfo.marketingDesc.fd.abstract" abstract="true">
	<dict:name>Marketing Description</dict:name>
	<dict:desc>A publishable description of the LU to be used for advertising or marketing purposes</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.marketingDesc"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="marketingDesc" id="field.cluInfo.marketingDesc.fd" parent="field.cluInfo.marketingDesc.fd.abstract"/>
<!-- Optional; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.marketingDesc.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="marketingDesc" id="field.cluInfo.marketingDesc.cd" parent="field.cluInfo.marketingDesc.cd.abstract"/>

<!-- *************************************************************************** -->
<!-- object structure for object.field.cluInfo.marketingDesc.(default).(default) -->
<!-- *************************************************************************** -->
<!-- Complex type supporting both a plain text and formatted version of a string. -->
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="object.field.cluInfo.marketingDesc.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.marketingDesc"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.RichTextInfo" id="object.field.cluInfo.marketingDesc" parent="object.field.cluInfo.marketingDesc.abstract"/>

<dict:type key="*" id="type.field.cluInfo.marketingDesc.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.marketingDesc"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.marketingDesc" parent="type.field.cluInfo.marketingDesc.abstract"/>

<!-- *********************************************************************************** -->
<!-- State for state.field.cluInfo.marketingDesc.(default).(default).(default).(default) -->
<!-- *********************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.marketingDesc.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.marketingDesc.plain"/>
	<dict:fieldRef bean="field.cluInfo.marketingDesc.formatted"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.marketingDesc" parent="state.field.cluInfo.marketingDesc.abstract"/>


<dict:field key="plain" id="field.cluInfo.marketingDesc.plain.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.marketingDesc.plain.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.marketingDesc.plain.cd"/>
</dict:field>
<dict:field key="plain" id="field.cluInfo.marketingDesc.plain" parent="field.cluInfo.marketingDesc.plain.abstract"/>
<dict:fieldDescriptor key="plain" id="field.cluInfo.marketingDesc.plain.fd.abstract" abstract="true">
	<dict:name>Plain Text</dict:name>
	<dict:desc>Plain version of the text. This may be used for searching.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="plain" id="field.cluInfo.marketingDesc.plain.fd" parent="field.cluInfo.marketingDesc.plain.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Multi-line text field that accepts all printable characters plus tab, carraige-return and linefeed. -->
<dict:constraintDescriptor id="field.cluInfo.marketingDesc.plain.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.multi.line.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.plain">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="plain" id="field.cluInfo.marketingDesc.plain.cd" parent="field.cluInfo.marketingDesc.plain.cd.abstract"/>

<dict:field key="formatted" id="field.cluInfo.marketingDesc.formatted.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.marketingDesc.formatted.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.marketingDesc.formatted.cd"/>
</dict:field>
<dict:field key="formatted" id="field.cluInfo.marketingDesc.formatted" parent="field.cluInfo.marketingDesc.formatted.abstract"/>
<dict:fieldDescriptor key="formatted" id="field.cluInfo.marketingDesc.formatted.fd.abstract" abstract="true">
	<dict:name>Formatted Text</dict:name>
	<dict:desc>Formatted version of the text.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="formatted" id="field.cluInfo.marketingDesc.formatted.fd" parent="field.cluInfo.marketingDesc.formatted.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Text field that accepts all types of characters using some sort of escaping convention along with the ability to specify bolding, font size, color etc. -->
<dict:constraintDescriptor id="field.cluInfo.marketingDesc.formatted.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.rich.text"/>
	<dict:constraint key="in-line.constraint.for.field.richTextInfo.formatted">
		<dict:maxLength>(unbounded)</dict:maxLength>
		</dict:constraint>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="formatted" id="field.cluInfo.marketingDesc.formatted.cd" parent="field.cluInfo.marketingDesc.formatted.cd.abstract"/>

<dict:field key="campusLocationList" id="field.cluInfo.campusLocationList.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.campusLocationList.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.campusLocationList.cd"/>
</dict:field>
<dict:field key="campusLocationList" id="field.cluInfo.campusLocationList" parent="field.cluInfo.campusLocationList.abstract"/>
<dict:fieldDescriptor key="campusLocationList" id="field.cluInfo.campusLocationList.fd.abstract" abstract="true">
	<dict:name>List of Campus Locations</dict:name>
	<dict:desc>Places where this clu might be offered</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="campusLocationList" id="field.cluInfo.campusLocationList.fd" parent="field.cluInfo.campusLocationList.fd.abstract"/>
<!-- Optional; Repeating; Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.campusLocationList.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="campusLocationList" id="field.cluInfo.campusLocationList.cd" parent="field.cluInfo.campusLocationList.cd.abstract"/>

<dict:field key="accreditation" id="field.cluInfo.accreditation.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accreditation.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accreditation.cd"/>
</dict:field>
<dict:field key="accreditation" id="field.cluInfo.accreditation" parent="field.cluInfo.accreditation.abstract"/>
<dict:fieldDescriptor key="accreditation" id="field.cluInfo.accreditation.fd.abstract" abstract="true">
	<dict:name>Accreditation</dict:name>
	<dict:desc>Information around the accreditation of the clu.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.accreditation"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="accreditation" id="field.cluInfo.accreditation.fd" parent="field.cluInfo.accreditation.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluInfo.accreditation.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="accreditation" id="field.cluInfo.accreditation.cd" parent="field.cluInfo.accreditation.cd.abstract"/>

<!-- *************************************************************************** -->
<!-- object structure for object.field.cluInfo.accreditation.(default).(default) -->
<!-- *************************************************************************** -->
<!-- Accreditation information about a learning unit. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.AccreditationInfo" id="object.field.cluInfo.accreditation.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.accreditation"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.AccreditationInfo" id="object.field.cluInfo.accreditation" parent="object.field.cluInfo.accreditation.abstract"/>

<dict:type key="*" id="type.field.cluInfo.accreditation.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.accreditation"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.accreditation" parent="type.field.cluInfo.accreditation.abstract"/>

<!-- *********************************************************************************** -->
<!-- State for state.field.cluInfo.accreditation.(default).(default).(default).(default) -->
<!-- *********************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.accreditation.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.accreditation.orgId"/>
	<dict:fieldRef bean="field.cluInfo.accreditation.effectiveDate"/>
	<dict:fieldRef bean="field.cluInfo.accreditation.expirationDate"/>
	<dict:fieldRef bean="field.cluInfo.accreditation.metaInfo"/>
	<dict:fieldRef bean="field.cluInfo.accreditation.id"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.accreditation" parent="state.field.cluInfo.accreditation.abstract"/>


<dict:field key="orgId" id="field.cluInfo.accreditation.orgId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accreditation.orgId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accreditation.orgId.cd"/>
</dict:field>
<dict:field key="orgId" id="field.cluInfo.accreditation.orgId" parent="field.cluInfo.accreditation.orgId.abstract"/>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.accreditation.orgId.fd.abstract" abstract="true">
	<dict:name>Organization Identifier</dict:name>
	<dict:desc>Unique identifier for an organization. This organization is the body behind the accreditation.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.accreditation.orgId.fd" parent="field.cluInfo.accreditation.orgId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing ORG -->
<dict:constraintDescriptor id="field.cluInfo.accreditation.orgId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.orgId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="orgId" id="field.cluInfo.accreditation.orgId.cd" parent="field.cluInfo.accreditation.orgId.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluInfo.accreditation.effectiveDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accreditation.effectiveDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accreditation.effectiveDate.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluInfo.accreditation.effectiveDate" parent="field.cluInfo.accreditation.effectiveDate.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluInfo.accreditation.effectiveDate.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time the accreditation became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluInfo.accreditation.effectiveDate.fd" parent="field.cluInfo.accreditation.effectiveDate.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluInfo.accreditation.effectiveDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluInfo.accreditation.effectiveDate.cd" parent="field.cluInfo.accreditation.effectiveDate.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluInfo.accreditation.expirationDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accreditation.expirationDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accreditation.expirationDate.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluInfo.accreditation.expirationDate" parent="field.cluInfo.accreditation.expirationDate.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluInfo.accreditation.expirationDate.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this accreditation expires. This is a similar concept to the expiration date on enumerated values. If specified, this should be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluInfo.accreditation.expirationDate.fd" parent="field.cluInfo.accreditation.expirationDate.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluInfo.accreditation.expirationDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluInfo.accreditation.expirationDate.cd" parent="field.cluInfo.accreditation.expirationDate.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluInfo.accreditation.metaInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accreditation.metaInfo.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accreditation.metaInfo.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluInfo.accreditation.metaInfo" parent="field.cluInfo.accreditation.metaInfo.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluInfo.accreditation.metaInfo.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.accreditation.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluInfo.accreditation.metaInfo.fd" parent="field.cluInfo.accreditation.metaInfo.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.accreditation.metaInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluInfo.accreditation.metaInfo.cd" parent="field.cluInfo.accreditation.metaInfo.cd.abstract"/>

<!-- ******************************************************************************************************** -->
<!-- object structure for object.field.cluInfo.accreditation.(default).(default).metaInfo.(default).(default) -->
<!-- ******************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="object.field.cluInfo.accreditation.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.accreditation.metaInfo"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="object.field.cluInfo.accreditation.metaInfo" parent="object.field.cluInfo.accreditation.metaInfo.abstract"/>

<dict:type key="*" id="type.field.cluInfo.accreditation.metaInfo.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.accreditation.metaInfo"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.accreditation.metaInfo" parent="type.field.cluInfo.accreditation.metaInfo.abstract"/>

<!-- **************************************************************************************************************** -->
<!-- State for state.field.cluInfo.accreditation.(default).(default).metaInfo.(default).(default).(default).(default) -->
<!-- **************************************************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.accreditation.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.accreditation.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluInfo.accreditation.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluInfo.accreditation.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluInfo.accreditation.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluInfo.accreditation.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.accreditation.metaInfo" parent="state.field.cluInfo.accreditation.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluInfo.accreditation.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accreditation.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accreditation.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluInfo.accreditation.metaInfo.versionInd" parent="field.cluInfo.accreditation.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluInfo.accreditation.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluInfo.accreditation.metaInfo.versionInd.fd" parent="field.cluInfo.accreditation.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluInfo.accreditation.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluInfo.accreditation.metaInfo.versionInd.cd" parent="field.cluInfo.accreditation.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluInfo.accreditation.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accreditation.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accreditation.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluInfo.accreditation.metaInfo.createTime" parent="field.cluInfo.accreditation.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluInfo.accreditation.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluInfo.accreditation.metaInfo.createTime.fd" parent="field.cluInfo.accreditation.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluInfo.accreditation.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluInfo.accreditation.metaInfo.createTime.cd" parent="field.cluInfo.accreditation.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluInfo.accreditation.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accreditation.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accreditation.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluInfo.accreditation.metaInfo.createId" parent="field.cluInfo.accreditation.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluInfo.accreditation.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluInfo.accreditation.metaInfo.createId.fd" parent="field.cluInfo.accreditation.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluInfo.accreditation.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluInfo.accreditation.metaInfo.createId.cd" parent="field.cluInfo.accreditation.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluInfo.accreditation.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accreditation.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accreditation.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluInfo.accreditation.metaInfo.updateTime" parent="field.cluInfo.accreditation.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluInfo.accreditation.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluInfo.accreditation.metaInfo.updateTime.fd" parent="field.cluInfo.accreditation.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluInfo.accreditation.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluInfo.accreditation.metaInfo.updateTime.cd" parent="field.cluInfo.accreditation.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluInfo.accreditation.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accreditation.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accreditation.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluInfo.accreditation.metaInfo.updateId" parent="field.cluInfo.accreditation.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluInfo.accreditation.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluInfo.accreditation.metaInfo.updateId.fd" parent="field.cluInfo.accreditation.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluInfo.accreditation.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluInfo.accreditation.metaInfo.updateId.cd" parent="field.cluInfo.accreditation.metaInfo.updateId.cd.abstract"/>

<dict:field key="id" id="field.cluInfo.accreditation.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accreditation.id.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accreditation.id.cd"/>
</dict:field>
<dict:field key="id" id="field.cluInfo.accreditation.id" parent="field.cluInfo.accreditation.id.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluInfo.accreditation.id.fd.abstract" abstract="true">
	<dict:name>Accreditation Identifier</dict:name>
	<dict:desc>Identifier for the accreditation.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluInfo.accreditation.id.fd" parent="field.cluInfo.accreditation.id.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluInfo.accreditation.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluInfo.accreditation.id.cd" parent="field.cluInfo.accreditation.id.cd.abstract"/>

<dict:field key="primaryAdminOrg" id="field.cluInfo.primaryAdminOrg.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.primaryAdminOrg.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.primaryAdminOrg.cd"/>
</dict:field>
<dict:field key="primaryAdminOrg" id="field.cluInfo.primaryAdminOrg" parent="field.cluInfo.primaryAdminOrg.abstract"/>
<dict:fieldDescriptor key="primaryAdminOrg" id="field.cluInfo.primaryAdminOrg.fd.abstract" abstract="true">
	<dict:name>Admin Org</dict:name>
	<dict:desc>The primary organization (typically, an academic department) with administrative oversight over the CLU. This will be used for Authorization and Workflow.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.primaryAdminOrg"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="primaryAdminOrg" id="field.cluInfo.primaryAdminOrg.fd" parent="field.cluInfo.primaryAdminOrg.fd.abstract"/>
<!-- Required; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.primaryAdminOrg.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="primaryAdminOrg" id="field.cluInfo.primaryAdminOrg.cd" parent="field.cluInfo.primaryAdminOrg.cd.abstract"/>

<!-- ***************************************************************************** -->
<!-- object structure for object.field.cluInfo.primaryAdminOrg.(default).(default) -->
<!-- ***************************************************************************** -->
<!-- Information about an organization acting in administrative capacity for a learning unit. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.AdminOrgInfo" id="object.field.cluInfo.primaryAdminOrg.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.primaryAdminOrg"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.AdminOrgInfo" id="object.field.cluInfo.primaryAdminOrg" parent="object.field.cluInfo.primaryAdminOrg.abstract"/>

<dict:type key="*" id="type.field.cluInfo.primaryAdminOrg.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.primaryAdminOrg"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.primaryAdminOrg" parent="type.field.cluInfo.primaryAdminOrg.abstract"/>

<!-- ************************************************************************************* -->
<!-- State for state.field.cluInfo.primaryAdminOrg.(default).(default).(default).(default) -->
<!-- ************************************************************************************* -->

<dict:state key="*" id="state.field.cluInfo.primaryAdminOrg.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.primaryAdminOrg.orgId"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.primaryAdminOrg" parent="state.field.cluInfo.primaryAdminOrg.abstract"/>


<dict:field key="orgId" id="field.cluInfo.primaryAdminOrg.orgId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.primaryAdminOrg.orgId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.primaryAdminOrg.orgId.cd"/>
</dict:field>
<dict:field key="orgId" id="field.cluInfo.primaryAdminOrg.orgId" parent="field.cluInfo.primaryAdminOrg.orgId.abstract"/>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.primaryAdminOrg.orgId.fd.abstract" abstract="true">
	<dict:name>Organization Identifier</dict:name>
	<dict:desc>Unique identifier for an organization.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.primaryAdminOrg.orgId.fd" parent="field.cluInfo.primaryAdminOrg.orgId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing ORG -->
<dict:constraintDescriptor id="field.cluInfo.primaryAdminOrg.orgId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.orgId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="orgId" id="field.cluInfo.primaryAdminOrg.orgId.cd" parent="field.cluInfo.primaryAdminOrg.orgId.cd.abstract"/>

<dict:field key="alternateAdminOrgs" id="field.cluInfo.alternateAdminOrgs.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.alternateAdminOrgs.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.alternateAdminOrgs.cd"/>
</dict:field>
<dict:field key="alternateAdminOrgs" id="field.cluInfo.alternateAdminOrgs" parent="field.cluInfo.alternateAdminOrgs.abstract"/>
<dict:fieldDescriptor key="alternateAdminOrgs" id="field.cluInfo.alternateAdminOrgs.fd.abstract" abstract="true">
	<dict:name>Alternate Admin Orgs</dict:name>
	<dict:desc>For situations where more than one Organization shares in the Administration of this clu. This will be used in Authorization and Workflow</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.alternateAdminOrgs"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="alternateAdminOrgs" id="field.cluInfo.alternateAdminOrgs.fd" parent="field.cluInfo.alternateAdminOrgs.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluInfo.alternateAdminOrgs.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="alternateAdminOrgs" id="field.cluInfo.alternateAdminOrgs.cd" parent="field.cluInfo.alternateAdminOrgs.cd.abstract"/>

<!-- ******************************************************************************** -->
<!-- object structure for object.field.cluInfo.alternateAdminOrgs.(default).(default) -->
<!-- ******************************************************************************** -->
<!-- Information about an organization acting in administrative capacity for a learning unit. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.AdminOrgInfo" id="object.field.cluInfo.alternateAdminOrgs.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.alternateAdminOrgs"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.AdminOrgInfo" id="object.field.cluInfo.alternateAdminOrgs" parent="object.field.cluInfo.alternateAdminOrgs.abstract"/>

<dict:type key="*" id="type.field.cluInfo.alternateAdminOrgs.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.alternateAdminOrgs"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.alternateAdminOrgs" parent="type.field.cluInfo.alternateAdminOrgs.abstract"/>

<!-- **************************************************************************************** -->
<!-- State for state.field.cluInfo.alternateAdminOrgs.(default).(default).(default).(default) -->
<!-- **************************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.alternateAdminOrgs.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.alternateAdminOrgs.orgId"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.alternateAdminOrgs" parent="state.field.cluInfo.alternateAdminOrgs.abstract"/>


<dict:field key="orgId" id="field.cluInfo.alternateAdminOrgs.orgId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.alternateAdminOrgs.orgId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.alternateAdminOrgs.orgId.cd"/>
</dict:field>
<dict:field key="orgId" id="field.cluInfo.alternateAdminOrgs.orgId" parent="field.cluInfo.alternateAdminOrgs.orgId.abstract"/>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.alternateAdminOrgs.orgId.fd.abstract" abstract="true">
	<dict:name>Organization Identifier</dict:name>
	<dict:desc>Unique identifier for an organization.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.alternateAdminOrgs.orgId.fd" parent="field.cluInfo.alternateAdminOrgs.orgId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing ORG -->
<dict:constraintDescriptor id="field.cluInfo.alternateAdminOrgs.orgId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.orgId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="orgId" id="field.cluInfo.alternateAdminOrgs.orgId.cd" parent="field.cluInfo.alternateAdminOrgs.orgId.cd.abstract"/>

<dict:field key="primaryInstructor" id="field.cluInfo.primaryInstructor.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.primaryInstructor.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.primaryInstructor.cd"/>
</dict:field>
<dict:field key="primaryInstructor" id="field.cluInfo.primaryInstructor" parent="field.cluInfo.primaryInstructor.abstract"/>
<dict:fieldDescriptor key="primaryInstructor" id="field.cluInfo.primaryInstructor.fd.abstract" abstract="true">
	<dict:name>Primary Instructor</dict:name>
	<dict:desc>Primary potential instructor for the clu. This is primarily for use in advertising the clu and may not be the actual instructor.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.primaryInstructor"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="primaryInstructor" id="field.cluInfo.primaryInstructor.fd" parent="field.cluInfo.primaryInstructor.fd.abstract"/>
<!-- Optional; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.primaryInstructor.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="primaryInstructor" id="field.cluInfo.primaryInstructor.cd" parent="field.cluInfo.primaryInstructor.cd.abstract"/>

<!-- ******************************************************************************* -->
<!-- object structure for object.field.cluInfo.primaryInstructor.(default).(default) -->
<!-- ******************************************************************************* -->
<!-- Information about a potential instructor for a clu. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluInstructorInfo" id="object.field.cluInfo.primaryInstructor.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.primaryInstructor"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluInstructorInfo" id="object.field.cluInfo.primaryInstructor" parent="object.field.cluInfo.primaryInstructor.abstract"/>

<dict:type key="*" id="type.field.cluInfo.primaryInstructor.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.primaryInstructor"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.primaryInstructor" parent="type.field.cluInfo.primaryInstructor.abstract"/>

<!-- *************************************************************************************** -->
<!-- State for state.field.cluInfo.primaryInstructor.(default).(default).(default).(default) -->
<!-- *************************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.primaryInstructor.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.primaryInstructor.orgId"/>
	<dict:fieldRef bean="field.cluInfo.primaryInstructor.personId"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.primaryInstructor" parent="state.field.cluInfo.primaryInstructor.abstract"/>


<dict:field key="orgId" id="field.cluInfo.primaryInstructor.orgId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.primaryInstructor.orgId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.primaryInstructor.orgId.cd"/>
</dict:field>
<dict:field key="orgId" id="field.cluInfo.primaryInstructor.orgId" parent="field.cluInfo.primaryInstructor.orgId.abstract"/>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.primaryInstructor.orgId.fd.abstract" abstract="true">
	<dict:name>Organization Identifier</dict:name>
	<dict:desc>Unique identifier for an organization. This indicates which organization this individual is associated with for the purposes of this clu.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.primaryInstructor.orgId.fd" parent="field.cluInfo.primaryInstructor.orgId.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Id of an existing ORG -->
<dict:constraintDescriptor id="field.cluInfo.primaryInstructor.orgId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.orgId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="orgId" id="field.cluInfo.primaryInstructor.orgId.cd" parent="field.cluInfo.primaryInstructor.orgId.cd.abstract"/>

<dict:field key="personId" id="field.cluInfo.primaryInstructor.personId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.primaryInstructor.personId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.primaryInstructor.personId.cd"/>
</dict:field>
<dict:field key="personId" id="field.cluInfo.primaryInstructor.personId" parent="field.cluInfo.primaryInstructor.personId.abstract"/>
<dict:fieldDescriptor key="personId" id="field.cluInfo.primaryInstructor.personId.fd.abstract" abstract="true">
	<dict:name>Person Identifier</dict:name>
	<dict:desc>Unique identifier for a person record.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="personId" id="field.cluInfo.primaryInstructor.personId.fd" parent="field.cluInfo.primaryInstructor.personId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing PERSON -->
<dict:constraintDescriptor id="field.cluInfo.primaryInstructor.personId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.personId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="personId" id="field.cluInfo.primaryInstructor.personId.cd" parent="field.cluInfo.primaryInstructor.personId.cd.abstract"/>

<dict:field key="instructors" id="field.cluInfo.instructors.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.instructors.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.instructors.cd"/>
</dict:field>
<dict:field key="instructors" id="field.cluInfo.instructors" parent="field.cluInfo.instructors.abstract"/>
<dict:fieldDescriptor key="instructors" id="field.cluInfo.instructors.fd.abstract" abstract="true">
	<dict:name>Instructors</dict:name>
	<dict:desc>Instructors associated with this clu. This may not be an exhaustive list, and instead may only be used to indicate potential instructors in publication.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.instructors"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="instructors" id="field.cluInfo.instructors.fd" parent="field.cluInfo.instructors.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluInfo.instructors.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="instructors" id="field.cluInfo.instructors.cd" parent="field.cluInfo.instructors.cd.abstract"/>

<!-- ************************************************************************* -->
<!-- object structure for object.field.cluInfo.instructors.(default).(default) -->
<!-- ************************************************************************* -->
<!-- Information about a potential instructor for a clu. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluInstructorInfo" id="object.field.cluInfo.instructors.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.instructors"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluInstructorInfo" id="object.field.cluInfo.instructors" parent="object.field.cluInfo.instructors.abstract"/>

<dict:type key="*" id="type.field.cluInfo.instructors.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.instructors"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.instructors" parent="type.field.cluInfo.instructors.abstract"/>

<!-- ********************************************************************************* -->
<!-- State for state.field.cluInfo.instructors.(default).(default).(default).(default) -->
<!-- ********************************************************************************* -->

<dict:state key="*" id="state.field.cluInfo.instructors.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.instructors.orgId"/>
	<dict:fieldRef bean="field.cluInfo.instructors.personId"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.instructors" parent="state.field.cluInfo.instructors.abstract"/>


<dict:field key="orgId" id="field.cluInfo.instructors.orgId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.instructors.orgId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.instructors.orgId.cd"/>
</dict:field>
<dict:field key="orgId" id="field.cluInfo.instructors.orgId" parent="field.cluInfo.instructors.orgId.abstract"/>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.instructors.orgId.fd.abstract" abstract="true">
	<dict:name>Organization Identifier</dict:name>
	<dict:desc>Unique identifier for an organization. This indicates which organization this individual is associated with for the purposes of this clu.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.instructors.orgId.fd" parent="field.cluInfo.instructors.orgId.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Id of an existing ORG -->
<dict:constraintDescriptor id="field.cluInfo.instructors.orgId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.orgId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="orgId" id="field.cluInfo.instructors.orgId.cd" parent="field.cluInfo.instructors.orgId.cd.abstract"/>

<dict:field key="personId" id="field.cluInfo.instructors.personId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.instructors.personId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.instructors.personId.cd"/>
</dict:field>
<dict:field key="personId" id="field.cluInfo.instructors.personId" parent="field.cluInfo.instructors.personId.abstract"/>
<dict:fieldDescriptor key="personId" id="field.cluInfo.instructors.personId.fd.abstract" abstract="true">
	<dict:name>Person Identifier</dict:name>
	<dict:desc>Unique identifier for a person record.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="personId" id="field.cluInfo.instructors.personId.fd" parent="field.cluInfo.instructors.personId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing PERSON -->
<dict:constraintDescriptor id="field.cluInfo.instructors.personId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.personId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="personId" id="field.cluInfo.instructors.personId.cd" parent="field.cluInfo.instructors.personId.cd.abstract"/>

<dict:field key="expectedFirstAtp" id="field.cluInfo.expectedFirstAtp.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.expectedFirstAtp.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.expectedFirstAtp.cd"/>
</dict:field>
<dict:field key="expectedFirstAtp" id="field.cluInfo.expectedFirstAtp" parent="field.cluInfo.expectedFirstAtp.abstract"/>
<dict:fieldDescriptor key="expectedFirstAtp" id="field.cluInfo.expectedFirstAtp.fd.abstract" abstract="true">
	<dict:name>Expected First ATP</dict:name>
	<dict:desc>The expected first academic time period that this clu would be effective. This may not reflect the first &quot;real&quot; academic time period for this clu.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expectedFirstAtp" id="field.cluInfo.expectedFirstAtp.fd" parent="field.cluInfo.expectedFirstAtp.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); In list of configured  time period types -->
<dict:constraintDescriptor id="field.cluInfo.expectedFirstAtp.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.atp.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expectedFirstAtp" id="field.cluInfo.expectedFirstAtp.cd" parent="field.cluInfo.expectedFirstAtp.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluInfo.effectiveDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.effectiveDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.effectiveDate.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluInfo.effectiveDate" parent="field.cluInfo.effectiveDate.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluInfo.effectiveDate.fd.abstract" abstract="true">
	<dict:name>Effective Date</dict:name>
	<dict:desc>Date and time the CLU became effective. This is a similar concept to the effective date on enumerated values. When an expiration date has been specified, this field must be less than or equal to the expiration date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluInfo.effectiveDate.fd" parent="field.cluInfo.effectiveDate.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluInfo.effectiveDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluInfo.effectiveDate.cd" parent="field.cluInfo.effectiveDate.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluInfo.expirationDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.expirationDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.expirationDate.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluInfo.expirationDate" parent="field.cluInfo.expirationDate.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluInfo.expirationDate.fd.abstract" abstract="true">
	<dict:name>Expiration Date</dict:name>
	<dict:desc>Date and time that this CLU expires. This is a similar concept to the expiration date on enumerated values. If specified, this should be greater than or equal to the effective date. If this field is not specified, then no expiration date has been currently defined and should automatically be considered greater than the effective date.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluInfo.expirationDate.fd" parent="field.cluInfo.expirationDate.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date-Time -->
<dict:constraintDescriptor id="field.cluInfo.expirationDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluInfo.expirationDate.cd" parent="field.cluInfo.expirationDate.cd.abstract"/>

<dict:field key="intensity" id="field.cluInfo.intensity.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.intensity.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.intensity.cd"/>
</dict:field>
<dict:field key="intensity" id="field.cluInfo.intensity" parent="field.cluInfo.intensity.abstract"/>
<dict:fieldDescriptor key="intensity" id="field.cluInfo.intensity.fd.abstract" abstract="true">
	<dict:name>Intensity</dict:name>
	<dict:desc>The expected level of time commitment between the student and the CLU meetings.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.intensity"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="intensity" id="field.cluInfo.intensity.fd" parent="field.cluInfo.intensity.fd.abstract"/>
<!-- Optional; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.intensity.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="intensity" id="field.cluInfo.intensity.cd" parent="field.cluInfo.intensity.cd.abstract"/>

<!-- *********************************************************************** -->
<!-- object structure for object.field.cluInfo.intensity.(default).(default) -->
<!-- *********************************************************************** -->
<!-- Detailed information about an amount including both the type of units and the quantity. -->
<dict:objectStructure key="org.kuali.student.core.dto.AmountInfo" id="object.field.cluInfo.intensity.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.intensity"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.AmountInfo" id="object.field.cluInfo.intensity" parent="object.field.cluInfo.intensity.abstract"/>

<dict:type key="*" id="type.field.cluInfo.intensity.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.intensity"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.intensity" parent="type.field.cluInfo.intensity.abstract"/>

<!-- ******************************************************************************* -->
<!-- State for state.field.cluInfo.intensity.(default).(default).(default).(default) -->
<!-- ******************************************************************************* -->

<dict:state key="*" id="state.field.cluInfo.intensity.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.intensity.unitType"/>
	<dict:fieldRef bean="field.cluInfo.intensity.unitQuantity"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.intensity" parent="state.field.cluInfo.intensity.abstract"/>


<!-- must be supplied when adding but read-only thereafter -->
<dict:field key="unitType" id="field.cluInfo.intensity.unitType.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.intensity.unitType.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.intensity.unitType.cd"/>
</dict:field>
<dict:field key="unitType" id="field.cluInfo.intensity.unitType" parent="field.cluInfo.intensity.unitType.abstract"/>
<dict:fieldDescriptor key="unitType" id="field.cluInfo.intensity.unitType.fd.abstract" abstract="true">
	<dict:name>Unit Type</dict:name>
	<dict:desc>The kind of units associated with the quantity, such as hours/week. It is expected that in usage in other structures, this value will always be enumerated based on that context.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="unitType" id="field.cluInfo.intensity.unitType.fd" parent="field.cluInfo.intensity.unitType.fd.abstract"/>
<!-- Required; Single valued (non-repeating); In list of configured unit types -->
<dict:constraintDescriptor id="field.cluInfo.intensity.unitType.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.unit.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="unitType" id="field.cluInfo.intensity.unitType.cd" parent="field.cluInfo.intensity.unitType.cd.abstract"/>

<dict:field key="unitQuantity" id="field.cluInfo.intensity.unitQuantity.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.intensity.unitQuantity.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.intensity.unitQuantity.cd"/>
</dict:field>
<dict:field key="unitQuantity" id="field.cluInfo.intensity.unitQuantity" parent="field.cluInfo.intensity.unitQuantity.abstract"/>
<dict:fieldDescriptor key="unitQuantity" id="field.cluInfo.intensity.unitQuantity.fd.abstract" abstract="true">
	<dict:name>Unit Quantity</dict:name>
	<dict:desc>The amount of units. Allowed values consist of numeric values as well as the string &quot;unbounded&quot;.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="unitQuantity" id="field.cluInfo.intensity.unitQuantity.fd" parent="field.cluInfo.intensity.unitQuantity.fd.abstract"/>
<!-- Required; Single valued (non-repeating); decimal number -->
<dict:constraintDescriptor id="field.cluInfo.intensity.unitQuantity.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.decimal"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="unitQuantity" id="field.cluInfo.intensity.unitQuantity.cd" parent="field.cluInfo.intensity.unitQuantity.cd.abstract"/>

<dict:field key="stdDuration" id="field.cluInfo.stdDuration.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.stdDuration.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.stdDuration.cd"/>
</dict:field>
<dict:field key="stdDuration" id="field.cluInfo.stdDuration" parent="field.cluInfo.stdDuration.abstract"/>
<dict:fieldDescriptor key="stdDuration" id="field.cluInfo.stdDuration.fd.abstract" abstract="true">
	<dict:name>Standard Duration</dict:name>
	<dict:desc>The standard duration of the learning unit.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.stdDuration"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="stdDuration" id="field.cluInfo.stdDuration.fd" parent="field.cluInfo.stdDuration.fd.abstract"/>
<!-- Optional; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.stdDuration.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="stdDuration" id="field.cluInfo.stdDuration.cd" parent="field.cluInfo.stdDuration.cd.abstract"/>

<!-- ************************************************************************* -->
<!-- object structure for object.field.cluInfo.stdDuration.(default).(default) -->
<!-- ************************************************************************* -->
<!-- Detailed information about an amount of time including both the type of units and the quantity. -->
<dict:objectStructure key="org.kuali.student.core.dto.TimeAmountInfo" id="object.field.cluInfo.stdDuration.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.stdDuration"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.TimeAmountInfo" id="object.field.cluInfo.stdDuration" parent="object.field.cluInfo.stdDuration.abstract"/>

<dict:type key="*" id="type.field.cluInfo.stdDuration.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.stdDuration"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.stdDuration" parent="type.field.cluInfo.stdDuration.abstract"/>

<!-- ********************************************************************************* -->
<!-- State for state.field.cluInfo.stdDuration.(default).(default).(default).(default) -->
<!-- ********************************************************************************* -->

<dict:state key="*" id="state.field.cluInfo.stdDuration.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.stdDuration.atpDurationTypeKey"/>
	<dict:fieldRef bean="field.cluInfo.stdDuration.timeQuantity"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.stdDuration" parent="state.field.cluInfo.stdDuration.abstract"/>


<!-- services has this flagged as mandatory but don't think it shoujld be because in a draft state a user may specify the units but not yet specify the amount -->
<dict:field key="atpDurationTypeKey" id="field.cluInfo.stdDuration.atpDurationTypeKey.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.stdDuration.atpDurationTypeKey.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.stdDuration.atpDurationTypeKey.cd"/>
</dict:field>
<dict:field key="atpDurationTypeKey" id="field.cluInfo.stdDuration.atpDurationTypeKey" parent="field.cluInfo.stdDuration.atpDurationTypeKey.abstract"/>
<dict:fieldDescriptor key="atpDurationTypeKey" id="field.cluInfo.stdDuration.atpDurationTypeKey.fd.abstract" abstract="true">
	<dict:name>Academic Time Period Duration Type Key</dict:name>
	<dict:desc>The kind of units associated with the quantity, such as Semesters</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="atpDurationTypeKey" id="field.cluInfo.stdDuration.atpDurationTypeKey.fd" parent="field.cluInfo.stdDuration.atpDurationTypeKey.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); In list of configured duration types -->
<dict:constraintDescriptor id="field.cluInfo.stdDuration.atpDurationTypeKey.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.duration.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="atpDurationTypeKey" id="field.cluInfo.stdDuration.atpDurationTypeKey.cd" parent="field.cluInfo.stdDuration.atpDurationTypeKey.cd.abstract"/>

<!-- services has this flagged as mandatory but don't think it shoujld be because in a draft state a user may specify the amount but not yet specify the units because they are unsure but we still need to save -->
<dict:field key="timeQuantity" id="field.cluInfo.stdDuration.timeQuantity.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.stdDuration.timeQuantity.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.stdDuration.timeQuantity.cd"/>
</dict:field>
<dict:field key="timeQuantity" id="field.cluInfo.stdDuration.timeQuantity" parent="field.cluInfo.stdDuration.timeQuantity.abstract"/>
<dict:fieldDescriptor key="timeQuantity" id="field.cluInfo.stdDuration.timeQuantity.fd.abstract" abstract="true">
	<dict:name>Time Quantity</dict:name>
	<dict:desc>The amount of time</dict:desc>
	<dict:dataType>integer</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="timeQuantity" id="field.cluInfo.stdDuration.timeQuantity.fd" parent="field.cluInfo.stdDuration.timeQuantity.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Integer -->
<dict:constraintDescriptor id="field.cluInfo.stdDuration.timeQuantity.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.integer"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="timeQuantity" id="field.cluInfo.stdDuration.timeQuantity.cd" parent="field.cluInfo.stdDuration.timeQuantity.cd.abstract"/>

<dict:field key="canCreateLui" id="field.cluInfo.canCreateLui.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.canCreateLui.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.canCreateLui.cd"/>
</dict:field>
<dict:field key="canCreateLui" id="field.cluInfo.canCreateLui" parent="field.cluInfo.canCreateLui.abstract"/>
<dict:fieldDescriptor key="canCreateLui" id="field.cluInfo.canCreateLui.fd.abstract" abstract="true">
	<dict:name>Can Create LUI</dict:name>
	<dict:desc>Indicates if the CLU can be used to instantiate LUIs (offerings).</dict:desc>
	<dict:dataType>boolean</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="canCreateLui" id="field.cluInfo.canCreateLui.fd" parent="field.cluInfo.canCreateLui.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); True or False -->
<dict:constraintDescriptor id="field.cluInfo.canCreateLui.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.boolean"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="canCreateLui" id="field.cluInfo.canCreateLui.cd" parent="field.cluInfo.canCreateLui.cd.abstract"/>

<dict:field key="referenceURL" id="field.cluInfo.referenceURL.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.referenceURL.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.referenceURL.cd"/>
</dict:field>
<dict:field key="referenceURL" id="field.cluInfo.referenceURL" parent="field.cluInfo.referenceURL.abstract"/>
<dict:fieldDescriptor key="referenceURL" id="field.cluInfo.referenceURL.fd.abstract" abstract="true">
	<dict:name>Reference URL</dict:name>
	<dict:desc>An URL for additional information about the CLU. This could be a reference to a document which might in turn have references to other documents (e.g. course syllabus provided by the faculty or department, standard schedule of classes, etc.).</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="referenceURL" id="field.cluInfo.referenceURL.fd" parent="field.cluInfo.referenceURL.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Uniform Resource Locator -->
<dict:constraintDescriptor id="field.cluInfo.referenceURL.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.url"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="referenceURL" id="field.cluInfo.referenceURL.cd" parent="field.cluInfo.referenceURL.cd.abstract"/>

<dict:field key="luCodes" id="field.cluInfo.luCodes.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.luCodes.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.luCodes.cd"/>
</dict:field>
<dict:field key="luCodes" id="field.cluInfo.luCodes" parent="field.cluInfo.luCodes.abstract"/>
<dict:fieldDescriptor key="luCodes" id="field.cluInfo.luCodes.fd.abstract" abstract="true">
	<dict:name>LU Code Info</dict:name>
	<dict:desc>List of LU code info structures. These are structures so that many different types of codes can be associated with the clu. This allows them to be put into categories.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.luCodes"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="luCodes" id="field.cluInfo.luCodes.fd" parent="field.cluInfo.luCodes.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluInfo.luCodes.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="luCodes" id="field.cluInfo.luCodes.cd" parent="field.cluInfo.luCodes.cd.abstract"/>

<!-- ********************************************************************* -->
<!-- object structure for object.field.cluInfo.luCodes.(default).(default) -->
<!-- ********************************************************************* -->
<!-- Detailed information about learning unit codes. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.LuCodeInfo" id="object.field.cluInfo.luCodes.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.luCodes"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.LuCodeInfo" id="object.field.cluInfo.luCodes" parent="object.field.cluInfo.luCodes.abstract"/>

<dict:type key="*" id="type.field.cluInfo.luCodes.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.luCodes"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.luCodes" parent="type.field.cluInfo.luCodes.abstract"/>

<!-- ***************************************************************************** -->
<!-- State for state.field.cluInfo.luCodes.(default).(default).(default).(default) -->
<!-- ***************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.luCodes.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.luCodes.desc"/>
	<dict:fieldRef bean="field.cluInfo.luCodes.value"/>
	<dict:fieldRef bean="field.cluInfo.luCodes.metaInfo"/>
	<dict:fieldRef bean="field.cluInfo.luCodes.type"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.luCodes" parent="state.field.cluInfo.luCodes.abstract"/>


<dict:field key="desc" id="field.cluInfo.luCodes.desc.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.luCodes.desc.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.luCodes.desc.cd"/>
</dict:field>
<dict:field key="desc" id="field.cluInfo.luCodes.desc" parent="field.cluInfo.luCodes.desc.abstract"/>
<dict:fieldDescriptor key="desc" id="field.cluInfo.luCodes.desc.fd.abstract" abstract="true">
	<dict:name>LU Code Description</dict:name>
	<dict:desc>The description of the code.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="desc" id="field.cluInfo.luCodes.desc.fd" parent="field.cluInfo.luCodes.desc.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); A basic single line of text, no embedded carraige returns or tabs limited to 255 -->
<dict:constraintDescriptor id="field.cluInfo.luCodes.desc.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.single.line.text"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="desc" id="field.cluInfo.luCodes.desc.cd" parent="field.cluInfo.luCodes.desc.cd.abstract"/>

<!-- services has this flagged as mandatory but there are cases where a person might want to store some dynamic attribute first and later the code value so the code value can't be required at this point. -->
<dict:field key="value" id="field.cluInfo.luCodes.value.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.luCodes.value.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.luCodes.value.cd"/>
</dict:field>
<dict:field key="value" id="field.cluInfo.luCodes.value" parent="field.cluInfo.luCodes.value.abstract"/>
<dict:fieldDescriptor key="value" id="field.cluInfo.luCodes.value.fd.abstract" abstract="true">
	<dict:name>LU Code Value</dict:name>
	<dict:desc>The code value.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="value" id="field.cluInfo.luCodes.value.fd" parent="field.cluInfo.luCodes.value.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.luCodes.value.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="value" id="field.cluInfo.luCodes.value.cd" parent="field.cluInfo.luCodes.value.cd.abstract"/>

<dict:field key="metaInfo" id="field.cluInfo.luCodes.metaInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.luCodes.metaInfo.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.luCodes.metaInfo.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluInfo.luCodes.metaInfo" parent="field.cluInfo.luCodes.metaInfo.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluInfo.luCodes.metaInfo.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.luCodes.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluInfo.luCodes.metaInfo.fd" parent="field.cluInfo.luCodes.metaInfo.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.luCodes.metaInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluInfo.luCodes.metaInfo.cd" parent="field.cluInfo.luCodes.metaInfo.cd.abstract"/>

<!-- ************************************************************************************************** -->
<!-- object structure for object.field.cluInfo.luCodes.(default).(default).metaInfo.(default).(default) -->
<!-- ************************************************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="object.field.cluInfo.luCodes.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.luCodes.metaInfo"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="object.field.cluInfo.luCodes.metaInfo" parent="object.field.cluInfo.luCodes.metaInfo.abstract"/>

<dict:type key="*" id="type.field.cluInfo.luCodes.metaInfo.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.luCodes.metaInfo"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.luCodes.metaInfo" parent="type.field.cluInfo.luCodes.metaInfo.abstract"/>

<!-- ********************************************************************************************************** -->
<!-- State for state.field.cluInfo.luCodes.(default).(default).metaInfo.(default).(default).(default).(default) -->
<!-- ********************************************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.luCodes.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.luCodes.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluInfo.luCodes.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluInfo.luCodes.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluInfo.luCodes.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluInfo.luCodes.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.luCodes.metaInfo" parent="state.field.cluInfo.luCodes.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluInfo.luCodes.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.luCodes.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.luCodes.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluInfo.luCodes.metaInfo.versionInd" parent="field.cluInfo.luCodes.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluInfo.luCodes.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluInfo.luCodes.metaInfo.versionInd.fd" parent="field.cluInfo.luCodes.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluInfo.luCodes.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluInfo.luCodes.metaInfo.versionInd.cd" parent="field.cluInfo.luCodes.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluInfo.luCodes.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.luCodes.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.luCodes.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluInfo.luCodes.metaInfo.createTime" parent="field.cluInfo.luCodes.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluInfo.luCodes.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluInfo.luCodes.metaInfo.createTime.fd" parent="field.cluInfo.luCodes.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluInfo.luCodes.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluInfo.luCodes.metaInfo.createTime.cd" parent="field.cluInfo.luCodes.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluInfo.luCodes.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.luCodes.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.luCodes.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluInfo.luCodes.metaInfo.createId" parent="field.cluInfo.luCodes.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluInfo.luCodes.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluInfo.luCodes.metaInfo.createId.fd" parent="field.cluInfo.luCodes.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluInfo.luCodes.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluInfo.luCodes.metaInfo.createId.cd" parent="field.cluInfo.luCodes.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluInfo.luCodes.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.luCodes.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.luCodes.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluInfo.luCodes.metaInfo.updateTime" parent="field.cluInfo.luCodes.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluInfo.luCodes.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluInfo.luCodes.metaInfo.updateTime.fd" parent="field.cluInfo.luCodes.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluInfo.luCodes.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluInfo.luCodes.metaInfo.updateTime.cd" parent="field.cluInfo.luCodes.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluInfo.luCodes.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.luCodes.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.luCodes.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluInfo.luCodes.metaInfo.updateId" parent="field.cluInfo.luCodes.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluInfo.luCodes.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluInfo.luCodes.metaInfo.updateId.fd" parent="field.cluInfo.luCodes.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluInfo.luCodes.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluInfo.luCodes.metaInfo.updateId.cd" parent="field.cluInfo.luCodes.metaInfo.updateId.cd.abstract"/>

<dict:field key="type" id="field.cluInfo.luCodes.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.luCodes.type.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.luCodes.type.cd"/>
</dict:field>
<dict:field key="type" id="field.cluInfo.luCodes.type" parent="field.cluInfo.luCodes.type.abstract"/>
<dict:fieldDescriptor key="type" id="field.cluInfo.luCodes.type.fd.abstract" abstract="true">
	<dict:name>LU Code Type</dict:name>
	<dict:desc>Unique identifier for a learning unit code type.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.cluInfo.luCodes.type.fd" parent="field.cluInfo.luCodes.type.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured classification codes used for LU -->
<dict:constraintDescriptor id="field.cluInfo.luCodes.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.code.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.cluInfo.luCodes.type.cd" parent="field.cluInfo.luCodes.type.cd.abstract"/>

<dict:field key="publishingInfo" id="field.cluInfo.publishingInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.publishingInfo.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.publishingInfo.cd"/>
</dict:field>
<dict:field key="publishingInfo" id="field.cluInfo.publishingInfo" parent="field.cluInfo.publishingInfo.abstract"/>
<dict:fieldDescriptor key="publishingInfo" id="field.cluInfo.publishingInfo.fd.abstract" abstract="true">
	<dict:name>publishingInfo</dict:name>
	<dict:desc>Publishing information associated with this CLU.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.publishingInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="publishingInfo" id="field.cluInfo.publishingInfo.fd" parent="field.cluInfo.publishingInfo.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluInfo.publishingInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="publishingInfo" id="field.cluInfo.publishingInfo.cd" parent="field.cluInfo.publishingInfo.cd.abstract"/>

<!-- **************************************************************************** -->
<!-- object structure for object.field.cluInfo.publishingInfo.(default).(default) -->
<!-- **************************************************************************** -->
<!-- Detailed information about publishing a clu. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluPublishingInfo" id="object.field.cluInfo.publishingInfo.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.publishingInfo"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluPublishingInfo" id="object.field.cluInfo.publishingInfo" parent="object.field.cluInfo.publishingInfo.abstract"/>

<dict:type key="*" id="type.field.cluInfo.publishingInfo.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.publishingInfo"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.publishingInfo" parent="type.field.cluInfo.publishingInfo.abstract"/>

<!-- ************************************************************************************ -->
<!-- State for state.field.cluInfo.publishingInfo.(default).(default).(default).(default) -->
<!-- ************************************************************************************ -->

<dict:state key="*" id="state.field.cluInfo.publishingInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.publishingInfo.startCycle"/>
	<dict:fieldRef bean="field.cluInfo.publishingInfo.endCycle"/>
	<dict:fieldRef bean="field.cluInfo.publishingInfo.primaryInstructor"/>
	<dict:fieldRef bean="field.cluInfo.publishingInfo.instructors"/>
	<dict:fieldRef bean="field.cluInfo.publishingInfo.type"/>
	<dict:fieldRef bean="field.cluInfo.publishingInfo.state"/>
	<dict:fieldRef bean="field.cluInfo.publishingInfo.id"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.publishingInfo" parent="state.field.cluInfo.publishingInfo.abstract"/>


<dict:field key="startCycle" id="field.cluInfo.publishingInfo.startCycle.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.publishingInfo.startCycle.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.publishingInfo.startCycle.cd"/>
</dict:field>
<dict:field key="startCycle" id="field.cluInfo.publishingInfo.startCycle" parent="field.cluInfo.publishingInfo.startCycle.abstract"/>
<dict:fieldDescriptor key="startCycle" id="field.cluInfo.publishingInfo.startCycle.fd.abstract" abstract="true">
	<dict:name>Publication Start Cycle</dict:name>
	<dict:desc>The start academic time period for when the CLU should be published in this type of usage. Should be less than or equal to endCycle.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="startCycle" id="field.cluInfo.publishingInfo.startCycle.fd" parent="field.cluInfo.publishingInfo.startCycle.fd.abstract"/>
<!-- Required; Single valued (non-repeating); In list of configured  time period types -->
<dict:constraintDescriptor id="field.cluInfo.publishingInfo.startCycle.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.atp.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="startCycle" id="field.cluInfo.publishingInfo.startCycle.cd" parent="field.cluInfo.publishingInfo.startCycle.cd.abstract"/>

<dict:field key="endCycle" id="field.cluInfo.publishingInfo.endCycle.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.publishingInfo.endCycle.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.publishingInfo.endCycle.cd"/>
</dict:field>
<dict:field key="endCycle" id="field.cluInfo.publishingInfo.endCycle" parent="field.cluInfo.publishingInfo.endCycle.abstract"/>
<dict:fieldDescriptor key="endCycle" id="field.cluInfo.publishingInfo.endCycle.fd.abstract" abstract="true">
	<dict:name>Publication End Cycle</dict:name>
	<dict:desc>The end academic time period for when the CLU should be published in this type of usage. If specified, should be greater than or equal to startCycle.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="endCycle" id="field.cluInfo.publishingInfo.endCycle.fd" parent="field.cluInfo.publishingInfo.endCycle.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); In list of configured  time period types -->
<dict:constraintDescriptor id="field.cluInfo.publishingInfo.endCycle.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.atp.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="endCycle" id="field.cluInfo.publishingInfo.endCycle.cd" parent="field.cluInfo.publishingInfo.endCycle.cd.abstract"/>

<dict:field key="primaryInstructor" id="field.cluInfo.publishingInfo.primaryInstructor.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.publishingInfo.primaryInstructor.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.publishingInfo.primaryInstructor.cd"/>
</dict:field>
<dict:field key="primaryInstructor" id="field.cluInfo.publishingInfo.primaryInstructor" parent="field.cluInfo.publishingInfo.primaryInstructor.abstract"/>
<dict:fieldDescriptor key="primaryInstructor" id="field.cluInfo.publishingInfo.primaryInstructor.fd.abstract" abstract="true">
	<dict:name>Primary Instructor</dict:name>
	<dict:desc>Primary potential instructor for the clu for the purpose of this publication.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.publishingInfo.primaryInstructor"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="primaryInstructor" id="field.cluInfo.publishingInfo.primaryInstructor.fd" parent="field.cluInfo.publishingInfo.primaryInstructor.fd.abstract"/>
<!-- Optional; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.publishingInfo.primaryInstructor.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="primaryInstructor" id="field.cluInfo.publishingInfo.primaryInstructor.cd" parent="field.cluInfo.publishingInfo.primaryInstructor.cd.abstract"/>

<!-- ****************************************************************************************************************** -->
<!-- object structure for object.field.cluInfo.publishingInfo.(default).(default).primaryInstructor.(default).(default) -->
<!-- ****************************************************************************************************************** -->
<!-- Information about a potential instructor for a clu. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluInstructorInfo" id="object.field.cluInfo.publishingInfo.primaryInstructor.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.publishingInfo.primaryInstructor"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluInstructorInfo" id="object.field.cluInfo.publishingInfo.primaryInstructor" parent="object.field.cluInfo.publishingInfo.primaryInstructor.abstract"/>

<dict:type key="*" id="type.field.cluInfo.publishingInfo.primaryInstructor.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.publishingInfo.primaryInstructor"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.publishingInfo.primaryInstructor" parent="type.field.cluInfo.publishingInfo.primaryInstructor.abstract"/>

<!-- ************************************************************************************************************************** -->
<!-- State for state.field.cluInfo.publishingInfo.(default).(default).primaryInstructor.(default).(default).(default).(default) -->
<!-- ************************************************************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.publishingInfo.primaryInstructor.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.publishingInfo.primaryInstructor.orgId"/>
	<dict:fieldRef bean="field.cluInfo.publishingInfo.primaryInstructor.personId"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.publishingInfo.primaryInstructor" parent="state.field.cluInfo.publishingInfo.primaryInstructor.abstract"/>


<dict:field key="orgId" id="field.cluInfo.publishingInfo.primaryInstructor.orgId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.publishingInfo.primaryInstructor.orgId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.publishingInfo.primaryInstructor.orgId.cd"/>
</dict:field>
<dict:field key="orgId" id="field.cluInfo.publishingInfo.primaryInstructor.orgId" parent="field.cluInfo.publishingInfo.primaryInstructor.orgId.abstract"/>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.publishingInfo.primaryInstructor.orgId.fd.abstract" abstract="true">
	<dict:name>Organization Identifier</dict:name>
	<dict:desc>Unique identifier for an organization. This indicates which organization this individual is associated with for the purposes of this clu.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.publishingInfo.primaryInstructor.orgId.fd" parent="field.cluInfo.publishingInfo.primaryInstructor.orgId.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Id of an existing ORG -->
<dict:constraintDescriptor id="field.cluInfo.publishingInfo.primaryInstructor.orgId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.orgId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="orgId" id="field.cluInfo.publishingInfo.primaryInstructor.orgId.cd" parent="field.cluInfo.publishingInfo.primaryInstructor.orgId.cd.abstract"/>

<dict:field key="personId" id="field.cluInfo.publishingInfo.primaryInstructor.personId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.publishingInfo.primaryInstructor.personId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.publishingInfo.primaryInstructor.personId.cd"/>
</dict:field>
<dict:field key="personId" id="field.cluInfo.publishingInfo.primaryInstructor.personId" parent="field.cluInfo.publishingInfo.primaryInstructor.personId.abstract"/>
<dict:fieldDescriptor key="personId" id="field.cluInfo.publishingInfo.primaryInstructor.personId.fd.abstract" abstract="true">
	<dict:name>Person Identifier</dict:name>
	<dict:desc>Unique identifier for a person record.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="personId" id="field.cluInfo.publishingInfo.primaryInstructor.personId.fd" parent="field.cluInfo.publishingInfo.primaryInstructor.personId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing PERSON -->
<dict:constraintDescriptor id="field.cluInfo.publishingInfo.primaryInstructor.personId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.personId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="personId" id="field.cluInfo.publishingInfo.primaryInstructor.personId.cd" parent="field.cluInfo.publishingInfo.primaryInstructor.personId.cd.abstract"/>

<dict:field key="instructors" id="field.cluInfo.publishingInfo.instructors.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.publishingInfo.instructors.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.publishingInfo.instructors.cd"/>
</dict:field>
<dict:field key="instructors" id="field.cluInfo.publishingInfo.instructors" parent="field.cluInfo.publishingInfo.instructors.abstract"/>
<dict:fieldDescriptor key="instructors" id="field.cluInfo.publishingInfo.instructors.fd.abstract" abstract="true">
	<dict:name>Instructors</dict:name>
	<dict:desc>Potential instructors associated with this clu for the purposes of this publication.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.publishingInfo.instructors"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="instructors" id="field.cluInfo.publishingInfo.instructors.fd" parent="field.cluInfo.publishingInfo.instructors.fd.abstract"/>
<!-- Optional; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.publishingInfo.instructors.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="instructors" id="field.cluInfo.publishingInfo.instructors.cd" parent="field.cluInfo.publishingInfo.instructors.cd.abstract"/>

<!-- ************************************************************************************************************ -->
<!-- object structure for object.field.cluInfo.publishingInfo.(default).(default).instructors.(default).(default) -->
<!-- ************************************************************************************************************ -->
<!-- Information about a potential instructor for a clu. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluInstructorInfo" id="object.field.cluInfo.publishingInfo.instructors.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.publishingInfo.instructors"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluInstructorInfo" id="object.field.cluInfo.publishingInfo.instructors" parent="object.field.cluInfo.publishingInfo.instructors.abstract"/>

<dict:type key="*" id="type.field.cluInfo.publishingInfo.instructors.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.publishingInfo.instructors"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.publishingInfo.instructors" parent="type.field.cluInfo.publishingInfo.instructors.abstract"/>

<!-- ******************************************************************************************************************** -->
<!-- State for state.field.cluInfo.publishingInfo.(default).(default).instructors.(default).(default).(default).(default) -->
<!-- ******************************************************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.publishingInfo.instructors.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.publishingInfo.instructors.orgId"/>
	<dict:fieldRef bean="field.cluInfo.publishingInfo.instructors.personId"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.publishingInfo.instructors" parent="state.field.cluInfo.publishingInfo.instructors.abstract"/>


<dict:field key="orgId" id="field.cluInfo.publishingInfo.instructors.orgId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.publishingInfo.instructors.orgId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.publishingInfo.instructors.orgId.cd"/>
</dict:field>
<dict:field key="orgId" id="field.cluInfo.publishingInfo.instructors.orgId" parent="field.cluInfo.publishingInfo.instructors.orgId.abstract"/>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.publishingInfo.instructors.orgId.fd.abstract" abstract="true">
	<dict:name>Organization Identifier</dict:name>
	<dict:desc>Unique identifier for an organization. This indicates which organization this individual is associated with for the purposes of this clu.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.publishingInfo.instructors.orgId.fd" parent="field.cluInfo.publishingInfo.instructors.orgId.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Id of an existing ORG -->
<dict:constraintDescriptor id="field.cluInfo.publishingInfo.instructors.orgId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.orgId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="orgId" id="field.cluInfo.publishingInfo.instructors.orgId.cd" parent="field.cluInfo.publishingInfo.instructors.orgId.cd.abstract"/>

<dict:field key="personId" id="field.cluInfo.publishingInfo.instructors.personId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.publishingInfo.instructors.personId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.publishingInfo.instructors.personId.cd"/>
</dict:field>
<dict:field key="personId" id="field.cluInfo.publishingInfo.instructors.personId" parent="field.cluInfo.publishingInfo.instructors.personId.abstract"/>
<dict:fieldDescriptor key="personId" id="field.cluInfo.publishingInfo.instructors.personId.fd.abstract" abstract="true">
	<dict:name>Person Identifier</dict:name>
	<dict:desc>Unique identifier for a person record.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="personId" id="field.cluInfo.publishingInfo.instructors.personId.fd" parent="field.cluInfo.publishingInfo.instructors.personId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing PERSON -->
<dict:constraintDescriptor id="field.cluInfo.publishingInfo.instructors.personId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.personId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="personId" id="field.cluInfo.publishingInfo.instructors.personId.cd" parent="field.cluInfo.publishingInfo.instructors.personId.cd.abstract"/>

<dict:field key="type" id="field.cluInfo.publishingInfo.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.publishingInfo.type.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.publishingInfo.type.cd"/>
</dict:field>
<dict:field key="type" id="field.cluInfo.publishingInfo.type" parent="field.cluInfo.publishingInfo.type.abstract"/>
<dict:fieldDescriptor key="type" id="field.cluInfo.publishingInfo.type.fd.abstract" abstract="true">
	<dict:name>Publication Type</dict:name>
	<dict:desc>Type of publication for which this information should be used. This type should correspond more with usage than media.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.cluInfo.publishingInfo.type.fd" parent="field.cluInfo.publishingInfo.type.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.publishingInfo.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.cluInfo.publishingInfo.type.cd" parent="field.cluInfo.publishingInfo.type.cd.abstract"/>

<dict:field key="state" id="field.cluInfo.publishingInfo.state.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.publishingInfo.state.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.publishingInfo.state.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluInfo.publishingInfo.state" parent="field.cluInfo.publishingInfo.state.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluInfo.publishingInfo.state.fd.abstract" abstract="true">
	<dict:name>Publication State</dict:name>
	<dict:desc>Current state of the information for this publication type. This value should be constrained to those within the cluPublishingState enumeration. In general, an &quot;active&quot; record for a type indicates that the clu should be published within that media, though that may be further constrained by the cycle information included.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluInfo.publishingInfo.state.fd" parent="field.cluInfo.publishingInfo.state.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE -->
<dict:constraintDescriptor id="field.cluInfo.publishingInfo.state.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluInfo.publishingInfo.state.cd" parent="field.cluInfo.publishingInfo.state.cd.abstract"/>

<dict:field key="id" id="field.cluInfo.publishingInfo.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.publishingInfo.id.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.publishingInfo.id.cd"/>
</dict:field>
<dict:field key="id" id="field.cluInfo.publishingInfo.id" parent="field.cluInfo.publishingInfo.id.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluInfo.publishingInfo.id.fd.abstract" abstract="true">
	<dict:name>Publishing Information Identifier</dict:name>
	<dict:desc>Identifier for the publishing information. This is set by the service to be able to determine changes and alterations to the structure as well as provides a handle for searches. This structure is not currently accessible through unique operations, and it is strongly recommended that no external references to this particular identifier be maintained.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluInfo.publishingInfo.id.fd" parent="field.cluInfo.publishingInfo.id.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluInfo.publishingInfo.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluInfo.publishingInfo.id.cd" parent="field.cluInfo.publishingInfo.id.cd.abstract"/>

<dict:field key="nextReviewPeriod" id="field.cluInfo.nextReviewPeriod.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.nextReviewPeriod.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.nextReviewPeriod.cd"/>
</dict:field>
<dict:field key="nextReviewPeriod" id="field.cluInfo.nextReviewPeriod" parent="field.cluInfo.nextReviewPeriod.abstract"/>
<dict:fieldDescriptor key="nextReviewPeriod" id="field.cluInfo.nextReviewPeriod.fd.abstract" abstract="true">
	<dict:name>Next Review Period</dict:name>
	<dict:desc>When the next review should be</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="nextReviewPeriod" id="field.cluInfo.nextReviewPeriod.fd" parent="field.cluInfo.nextReviewPeriod.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); In list of configured  time period types -->
<dict:constraintDescriptor id="field.cluInfo.nextReviewPeriod.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.atp.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="nextReviewPeriod" id="field.cluInfo.nextReviewPeriod.cd" parent="field.cluInfo.nextReviewPeriod.cd.abstract"/>

<!-- defaults to TRUE -->
<dict:field key="isEnrollable" id="field.cluInfo.isEnrollable.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.isEnrollable.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.isEnrollable.cd"/>
</dict:field>
<dict:field key="isEnrollable" id="field.cluInfo.isEnrollable" parent="field.cluInfo.isEnrollable.abstract"/>
<dict:fieldDescriptor key="isEnrollable" id="field.cluInfo.isEnrollable.fd.abstract" abstract="true">
	<dict:name>Is Enrollable</dict:name>
	<dict:desc>Indicates if Luis generated from this Clu are intended to be enrolled in by Students directly</dict:desc>
	<dict:dataType>boolean</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="isEnrollable" id="field.cluInfo.isEnrollable.fd" parent="field.cluInfo.isEnrollable.fd.abstract"/>
<!-- Required; Single valued (non-repeating); True or False; Defaults a boolean to TRUE -->
<dict:constraintDescriptor id="field.cluInfo.isEnrollable.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.boolean"/>
	<dict:constraintRef bean="constraint.default.true"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="isEnrollable" id="field.cluInfo.isEnrollable.cd" parent="field.cluInfo.isEnrollable.cd.abstract"/>

<!-- Services has this as an atpKeyList but that is just a list of Strings so I didn't create the sub-structure -->
<dict:field key="offeredAtpTypes" id="field.cluInfo.offeredAtpTypes.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.offeredAtpTypes.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.offeredAtpTypes.cd"/>
</dict:field>
<dict:field key="offeredAtpTypes" id="field.cluInfo.offeredAtpTypes" parent="field.cluInfo.offeredAtpTypes.abstract"/>
<dict:fieldDescriptor key="offeredAtpTypes" id="field.cluInfo.offeredAtpTypes.fd.abstract" abstract="true">
	<dict:name>Offered Academic Time Period Types</dict:name>
	<dict:desc>The academic time period types in which this CLU is typically offered. Standard usage would equate to terms. It can define a timeframe that a clu with of a certain stdDuration would fall in.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="offeredAtpTypes" id="field.cluInfo.offeredAtpTypes.fd" parent="field.cluInfo.offeredAtpTypes.fd.abstract"/>
<!-- Optional; Repeating; In list of configured  time period types -->
<dict:constraintDescriptor id="field.cluInfo.offeredAtpTypes.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
	<dict:constraintRef bean="constraint.atp.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="offeredAtpTypes" id="field.cluInfo.offeredAtpTypes.cd" parent="field.cluInfo.offeredAtpTypes.cd.abstract"/>

<dict:field key="hasEarlyDropDeadline" id="field.cluInfo.hasEarlyDropDeadline.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.hasEarlyDropDeadline.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.hasEarlyDropDeadline.cd"/>
</dict:field>
<dict:field key="hasEarlyDropDeadline" id="field.cluInfo.hasEarlyDropDeadline" parent="field.cluInfo.hasEarlyDropDeadline.abstract"/>
<dict:fieldDescriptor key="hasEarlyDropDeadline" id="field.cluInfo.hasEarlyDropDeadline.fd.abstract" abstract="true">
	<dict:name>Has Early Drop Deadline</dict:name>
	<dict:desc>Indicates if the CLU has an Early Drop Deadline (EDD). Certain courses are designated as such to maximize access to courses that have historically experienced high demand and high attrition. Default is &quot;false&quot;.</dict:desc>
	<dict:dataType>boolean</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="hasEarlyDropDeadline" id="field.cluInfo.hasEarlyDropDeadline.fd" parent="field.cluInfo.hasEarlyDropDeadline.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); True or False -->
<dict:constraintDescriptor id="field.cluInfo.hasEarlyDropDeadline.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.boolean"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="hasEarlyDropDeadline" id="field.cluInfo.hasEarlyDropDeadline.cd" parent="field.cluInfo.hasEarlyDropDeadline.cd.abstract"/>

<dict:field key="defaultEnrollmentEstimate" id="field.cluInfo.defaultEnrollmentEstimate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.defaultEnrollmentEstimate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.defaultEnrollmentEstimate.cd"/>
</dict:field>
<dict:field key="defaultEnrollmentEstimate" id="field.cluInfo.defaultEnrollmentEstimate" parent="field.cluInfo.defaultEnrollmentEstimate.abstract"/>
<dict:fieldDescriptor key="defaultEnrollmentEstimate" id="field.cluInfo.defaultEnrollmentEstimate.fd.abstract" abstract="true">
	<dict:name>Default Enrollment Estimate</dict:name>
	<dict:desc>Default enrollment estimate for this CLU.</dict:desc>
	<dict:dataType>integer</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="defaultEnrollmentEstimate" id="field.cluInfo.defaultEnrollmentEstimate.fd" parent="field.cluInfo.defaultEnrollmentEstimate.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Non-Negative Integer -->
<dict:constraintDescriptor id="field.cluInfo.defaultEnrollmentEstimate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.non-negative.integer"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="defaultEnrollmentEstimate" id="field.cluInfo.defaultEnrollmentEstimate.cd" parent="field.cluInfo.defaultEnrollmentEstimate.cd.abstract"/>

<dict:field key="defaultMaximumEnrollment" id="field.cluInfo.defaultMaximumEnrollment.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.defaultMaximumEnrollment.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.defaultMaximumEnrollment.cd"/>
</dict:field>
<dict:field key="defaultMaximumEnrollment" id="field.cluInfo.defaultMaximumEnrollment" parent="field.cluInfo.defaultMaximumEnrollment.abstract"/>
<dict:fieldDescriptor key="defaultMaximumEnrollment" id="field.cluInfo.defaultMaximumEnrollment.fd.abstract" abstract="true">
	<dict:name>Default Maximum Enrollment</dict:name>
	<dict:desc>Default maximum enrollment for this CLU.</dict:desc>
	<dict:dataType>integer</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="defaultMaximumEnrollment" id="field.cluInfo.defaultMaximumEnrollment.fd" parent="field.cluInfo.defaultMaximumEnrollment.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Non-Negative Integer -->
<dict:constraintDescriptor id="field.cluInfo.defaultMaximumEnrollment.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.non-negative.integer"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="defaultMaximumEnrollment" id="field.cluInfo.defaultMaximumEnrollment.cd" parent="field.cluInfo.defaultMaximumEnrollment.cd.abstract"/>

<dict:field key="isHazardousForDisabledStudents" id="field.cluInfo.isHazardousForDisabledStudents.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.isHazardousForDisabledStudents.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.isHazardousForDisabledStudents.cd"/>
</dict:field>
<dict:field key="isHazardousForDisabledStudents" id="field.cluInfo.isHazardousForDisabledStudents" parent="field.cluInfo.isHazardousForDisabledStudents.abstract"/>
<dict:fieldDescriptor key="isHazardousForDisabledStudents" id="field.cluInfo.isHazardousForDisabledStudents.fd.abstract" abstract="true">
	<dict:name>Is Hazardous For Disabled Students</dict:name>
	<dict:desc>Indicates if the CLU may be hazardous for students with disabilities. Would default to &quot;false&quot;.</dict:desc>
	<dict:dataType>boolean</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="isHazardousForDisabledStudents" id="field.cluInfo.isHazardousForDisabledStudents.fd" parent="field.cluInfo.isHazardousForDisabledStudents.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); True or False -->
<dict:constraintDescriptor id="field.cluInfo.isHazardousForDisabledStudents.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.boolean"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="isHazardousForDisabledStudents" id="field.cluInfo.isHazardousForDisabledStudents.cd" parent="field.cluInfo.isHazardousForDisabledStudents.cd.abstract"/>

<dict:field key="feeInfo" id="field.cluInfo.feeInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.feeInfo.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.feeInfo.cd"/>
</dict:field>
<dict:field key="feeInfo" id="field.cluInfo.feeInfo" parent="field.cluInfo.feeInfo.abstract"/>
<dict:fieldDescriptor key="feeInfo" id="field.cluInfo.feeInfo.fd.abstract" abstract="true">
	<dict:name>feeInfo</dict:name>
	<dict:desc>Fee information associated with this CLU.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.feeInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="feeInfo" id="field.cluInfo.feeInfo.fd" parent="field.cluInfo.feeInfo.fd.abstract"/>
<!-- Optional; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.feeInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="feeInfo" id="field.cluInfo.feeInfo.cd" parent="field.cluInfo.feeInfo.cd.abstract"/>

<!-- ********************************************************************* -->
<!-- object structure for object.field.cluInfo.feeInfo.(default).(default) -->
<!-- ********************************************************************* -->
<!-- Detailed information associated with this CLU related to the calculation of fees. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluFeeInfo" id="object.field.cluInfo.feeInfo.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.feeInfo"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluFeeInfo" id="object.field.cluInfo.feeInfo" parent="object.field.cluInfo.feeInfo.abstract"/>

<dict:type key="*" id="type.field.cluInfo.feeInfo.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.feeInfo"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.feeInfo" parent="type.field.cluInfo.feeInfo.abstract"/>

<!-- ***************************************************************************** -->
<!-- State for state.field.cluInfo.feeInfo.(default).(default).(default).(default) -->
<!-- ***************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.feeInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.feeInfo" parent="state.field.cluInfo.feeInfo.abstract"/>


<dict:field key="cluFeeRecordInfoList" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.cd"/>
</dict:field>
<dict:field key="cluFeeRecordInfoList" id="field.cluInfo.feeInfo.cluFeeRecordInfoList" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.abstract"/>
<dict:fieldDescriptor key="cluFeeRecordInfoList" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.fd.abstract" abstract="true">
	<dict:name>List of CLU Fee Records</dict:name>
	<dict:desc>List of clu fee records</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.feeInfo.cluFeeRecordInfoList"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="cluFeeRecordInfoList" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.fd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluInfo.feeInfo.cluFeeRecordInfoList.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="cluFeeRecordInfoList" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.cd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.cd.abstract"/>

<!-- ************************************************************************************************************** -->
<!-- object structure for object.field.cluInfo.feeInfo.(default).(default).cluFeeRecordInfoList.(default).(default) -->
<!-- ************************************************************************************************************** -->
<!-- Information about a fee related to a clu. -->
<dict:objectStructure key=".CluFeeRecordInfo" id="object.field.cluInfo.feeInfo.cluFeeRecordInfoList.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.feeInfo.cluFeeRecordInfoList"/>
</dict:objectStructure>
<dict:objectStructure key=".CluFeeRecordInfo" id="object.field.cluInfo.feeInfo.cluFeeRecordInfoList" parent="object.field.cluInfo.feeInfo.cluFeeRecordInfoList.abstract"/>

<dict:type key="*" id="type.field.cluInfo.feeInfo.cluFeeRecordInfoList.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.feeInfo.cluFeeRecordInfoList"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.feeInfo.cluFeeRecordInfoList" parent="type.field.cluInfo.feeInfo.cluFeeRecordInfoList.abstract"/>

<!-- ********************************************************************************************************************** -->
<!-- State for state.field.cluInfo.feeInfo.(default).(default).cluFeeRecordInfoList.(default).(default).(default).(default) -->
<!-- ********************************************************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.feeInfo.cluFeeRecordInfoList.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeType"/>
	<dict:fieldRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount"/>
	<dict:fieldRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList"/>
	<dict:fieldRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.id"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.feeInfo.cluFeeRecordInfoList" parent="state.field.cluInfo.feeInfo.cluFeeRecordInfoList.abstract"/>


<dict:field key="feeType" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeType.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeType.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeType.cd"/>
</dict:field>
<dict:field key="feeType" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeType" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeType.abstract"/>
<dict:fieldDescriptor key="feeType" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeType.fd.abstract" abstract="true">
	<dict:name>Fee Type</dict:name>
	<dict:desc>Any finite sequence of characters with letters, numerals, symbols and punctuation marks. The length can be any natural number between zero or any positive integer.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="feeType" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeType.fd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeType.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Alphanumeric code, hypen and period. -->
<dict:constraintDescriptor id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeType.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.code"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="feeType" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeType.cd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeType.cd.abstract"/>

<dict:field key="feeAmount" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.cd"/>
</dict:field>
<dict:field key="feeAmount" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.abstract"/>
<dict:fieldDescriptor key="feeAmount" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.fd.abstract" abstract="true">
	<dict:name>Fee Amount</dict:name>
	<dict:desc>The page currencyAmount Structure does not exist.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="feeAmount" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.fd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.fd.abstract"/>
<!-- Optional; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="feeAmount" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.cd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.cd.abstract"/>

<!-- ******************************************************************************************************************************************** -->
<!-- object structure for object.field.cluInfo.feeInfo.(default).(default).cluFeeRecordInfoList.(default).(default).feeAmount.(default).(default) -->
<!-- ******************************************************************************************************************************************** -->
<!-- Detailed information about an amount of currency including both the type of units and the quantity. -->
<dict:objectStructure key=".CurrencyAmountInfo" id="object.field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount"/>
</dict:objectStructure>
<dict:objectStructure key=".CurrencyAmountInfo" id="object.field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount" parent="object.field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.abstract"/>

<dict:type key="*" id="type.field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount" parent="type.field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.abstract"/>

<!-- **************************************************************************************************************************************************** -->
<!-- State for state.field.cluInfo.feeInfo.(default).(default).cluFeeRecordInfoList.(default).(default).feeAmount.(default).(default).(default).(default) -->
<!-- **************************************************************************************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyTypeKey"/>
	<dict:fieldRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyQuantity"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount" parent="state.field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.abstract"/>


<dict:field key="currencyTypeKey" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyTypeKey.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyTypeKey.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyTypeKey.cd"/>
</dict:field>
<dict:field key="currencyTypeKey" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyTypeKey" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyTypeKey.abstract"/>
<dict:fieldDescriptor key="currencyTypeKey" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyTypeKey.fd.abstract" abstract="true">
	<dict:name>currencyTypeKey</dict:name>
	<dict:desc>The kind of units associated with the quantity, such as US Dollars</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="currencyTypeKey" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyTypeKey.fd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyTypeKey.fd.abstract"/>
<!-- Required; Single valued (non-repeating); In list of configured currency types -->
<dict:constraintDescriptor id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyTypeKey.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.currency.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="currencyTypeKey" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyTypeKey.cd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyTypeKey.cd.abstract"/>

<!-- services has this flagged as mandatory but don't think it shoujld be because you may have picked the type of currency but not entered the amount yet.  Think of setting up a template where the type of currency is defaulted. -->
<dict:field key="currencyQuantity" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyQuantity.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyQuantity.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyQuantity.cd"/>
</dict:field>
<dict:field key="currencyQuantity" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyQuantity" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyQuantity.abstract"/>
<dict:fieldDescriptor key="currencyQuantity" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyQuantity.fd.abstract" abstract="true">
	<dict:name>currency Quantity</dict:name>
	<dict:desc>The amount of currency</dict:desc>
	<dict:dataType>integer</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="currencyQuantity" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyQuantity.fd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyQuantity.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Integer -->
<dict:constraintDescriptor id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyQuantity.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.integer"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="currencyQuantity" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyQuantity.cd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.feeAmount.currencyQuantity.cd.abstract"/>

<dict:field key="affiliatedOrgInfoList" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.cd"/>
</dict:field>
<dict:field key="affiliatedOrgInfoList" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.abstract"/>
<dict:fieldDescriptor key="affiliatedOrgInfoList" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.fd.abstract" abstract="true">
	<dict:name>List of Affiliated Orgs</dict:name>
	<dict:desc>List of affiliated organizations.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="affiliatedOrgInfoList" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.fd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.fd.abstract"/>
<!-- Optional; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="affiliatedOrgInfoList" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.cd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.cd.abstract"/>

<!-- ******************************************************************************************************************************************************** -->
<!-- object structure for object.field.cluInfo.feeInfo.(default).(default).cluFeeRecordInfoList.(default).(default).affiliatedOrgInfoList.(default).(default) -->
<!-- ******************************************************************************************************************************************************** -->
<!-- Information about an organization that is affiliated in some percentage with a learning unit. For when precision is needed to support counts or dollars. -->
<dict:objectStructure key=".AffiliatedOrgInfo" id="object.field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList"/>
</dict:objectStructure>
<dict:objectStructure key=".AffiliatedOrgInfo" id="object.field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList" parent="object.field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.abstract"/>

<dict:type key="*" id="type.field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList" parent="type.field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.abstract"/>

<!-- **************************************************************************************************************************************************************** -->
<!-- State for state.field.cluInfo.feeInfo.(default).(default).cluFeeRecordInfoList.(default).(default).affiliatedOrgInfoList.(default).(default).(default).(default) -->
<!-- **************************************************************************************************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.orgId"/>
	<dict:fieldRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.effectiveDate"/>
	<dict:fieldRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.expirationDate"/>
	<dict:fieldRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.percentage"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList" parent="state.field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.abstract"/>


<dict:field key="orgId" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.orgId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.orgId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.orgId.cd"/>
</dict:field>
<dict:field key="orgId" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.orgId" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.orgId.abstract"/>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.orgId.fd.abstract" abstract="true">
	<dict:name>Organization Identifier</dict:name>
	<dict:desc>Unique identifier for an organization.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.orgId.fd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.orgId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing ORG -->
<dict:constraintDescriptor id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.orgId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.orgId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="orgId" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.orgId.cd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.orgId.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.effectiveDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.effectiveDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.effectiveDate.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.effectiveDate" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.effectiveDate.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.effectiveDate.fd.abstract" abstract="true">
	<dict:name>effectiveDate</dict:name>
	<dict:desc>Specifies a date with no time component.</dict:desc>
	<dict:dataType>date</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.effectiveDate.fd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.effectiveDate.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date -->
<dict:constraintDescriptor id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.effectiveDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.effectiveDate.cd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.effectiveDate.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.expirationDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.expirationDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.expirationDate.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.expirationDate" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.expirationDate.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.expirationDate.fd.abstract" abstract="true">
	<dict:name>expirationDate</dict:name>
	<dict:desc>Specifies a date with no time component.</dict:desc>
	<dict:dataType>date</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.expirationDate.fd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.expirationDate.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date -->
<dict:constraintDescriptor id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.expirationDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.expirationDate.cd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.expirationDate.cd.abstract"/>

<!-- services has this as mandatory but I don't think it should be flagged as such so I didn't make it required -->
<dict:field key="percentage" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.percentage.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.percentage.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.percentage.cd"/>
</dict:field>
<dict:field key="percentage" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.percentage" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.percentage.abstract"/>
<dict:fieldDescriptor key="percentage" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.percentage.fd.abstract" abstract="true">
	<dict:name>percentage</dict:name>
	<dict:desc>A long numeric value without a fractional component.</dict:desc>
	<dict:dataType>long</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="percentage" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.percentage.fd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.percentage.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Integer -->
<dict:constraintDescriptor id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.percentage.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.integer"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="percentage" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.percentage.cd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.affiliatedOrgInfoList.percentage.cd.abstract"/>

<dict:field key="id" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.id.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.feeInfo.cluFeeRecordInfoList.id.cd"/>
</dict:field>
<dict:field key="id" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.id" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.id.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.id.fd.abstract" abstract="true">
	<dict:name>CLU Fee Record Identifier</dict:name>
	<dict:desc>Identifier for the clu fee record.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.id.fd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.id.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluInfo.feeInfo.cluFeeRecordInfoList.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluInfo.feeInfo.cluFeeRecordInfoList.id.cd" parent="field.cluInfo.feeInfo.cluFeeRecordInfoList.id.cd.abstract"/>

<dict:field key="accountingInfo" id="field.cluInfo.accountingInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accountingInfo.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accountingInfo.cd"/>
</dict:field>
<dict:field key="accountingInfo" id="field.cluInfo.accountingInfo" parent="field.cluInfo.accountingInfo.abstract"/>
<dict:fieldDescriptor key="accountingInfo" id="field.cluInfo.accountingInfo.fd.abstract" abstract="true">
	<dict:name>accountingInfo</dict:name>
	<dict:desc>Accounting information associated with this CLU.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.accountingInfo"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="accountingInfo" id="field.cluInfo.accountingInfo.fd" parent="field.cluInfo.accountingInfo.fd.abstract"/>
<!-- Optional; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.accountingInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="accountingInfo" id="field.cluInfo.accountingInfo.cd" parent="field.cluInfo.accountingInfo.cd.abstract"/>

<!-- **************************************************************************** -->
<!-- object structure for object.field.cluInfo.accountingInfo.(default).(default) -->
<!-- **************************************************************************** -->
<!-- Detailed information about accounting for a clu. -->
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluAccountingInfo" id="object.field.cluInfo.accountingInfo.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.accountingInfo"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.lum.lu.dto.CluAccountingInfo" id="object.field.cluInfo.accountingInfo" parent="object.field.cluInfo.accountingInfo.abstract"/>

<dict:type key="*" id="type.field.cluInfo.accountingInfo.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.accountingInfo"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.accountingInfo" parent="type.field.cluInfo.accountingInfo.abstract"/>

<!-- ************************************************************************************ -->
<!-- State for state.field.cluInfo.accountingInfo.(default).(default).(default).(default) -->
<!-- ************************************************************************************ -->

<dict:state key="*" id="state.field.cluInfo.accountingInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.accountingInfo" parent="state.field.cluInfo.accountingInfo.abstract"/>


<dict:field key="affiliatedOrgInfoList" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList.cd"/>
</dict:field>
<dict:field key="affiliatedOrgInfoList" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.abstract"/>
<dict:fieldDescriptor key="affiliatedOrgInfoList" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.fd.abstract" abstract="true">
	<dict:name>List of Affiliated Organizations</dict:name>
	<dict:desc>List of affiliated organizations.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.accountingInfo.affiliatedOrgInfoList"/>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="affiliatedOrgInfoList" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.fd" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.fd.abstract"/>
<!-- Optional; Repeating -->
<dict:constraintDescriptor id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.repeating"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="affiliatedOrgInfoList" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.cd" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.cd.abstract"/>

<!-- ********************************************************************************************************************** -->
<!-- object structure for object.field.cluInfo.accountingInfo.(default).(default).affiliatedOrgInfoList.(default).(default) -->
<!-- ********************************************************************************************************************** -->
<!-- Information about an organization that is affiliated in some percentage with a learning unit. For when precision is needed to support counts or dollars. -->
<dict:objectStructure key=".AffiliatedOrgInfo" id="object.field.cluInfo.accountingInfo.affiliatedOrgInfoList.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.accountingInfo.affiliatedOrgInfoList"/>
</dict:objectStructure>
<dict:objectStructure key=".AffiliatedOrgInfo" id="object.field.cluInfo.accountingInfo.affiliatedOrgInfoList" parent="object.field.cluInfo.accountingInfo.affiliatedOrgInfoList.abstract"/>

<dict:type key="*" id="type.field.cluInfo.accountingInfo.affiliatedOrgInfoList.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.accountingInfo.affiliatedOrgInfoList"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.accountingInfo.affiliatedOrgInfoList" parent="type.field.cluInfo.accountingInfo.affiliatedOrgInfoList.abstract"/>

<!-- ****************************************************************************************************************************** -->
<!-- State for state.field.cluInfo.accountingInfo.(default).(default).affiliatedOrgInfoList.(default).(default).(default).(default) -->
<!-- ****************************************************************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.accountingInfo.affiliatedOrgInfoList.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList.orgId"/>
	<dict:fieldRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList.effectiveDate"/>
	<dict:fieldRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList.expirationDate"/>
	<dict:fieldRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList.percentage"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.accountingInfo.affiliatedOrgInfoList" parent="state.field.cluInfo.accountingInfo.affiliatedOrgInfoList.abstract"/>


<dict:field key="orgId" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.orgId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList.orgId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList.orgId.cd"/>
</dict:field>
<dict:field key="orgId" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.orgId" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.orgId.abstract"/>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.orgId.fd.abstract" abstract="true">
	<dict:name>Organization Identifier</dict:name>
	<dict:desc>Unique identifier for an organization.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="orgId" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.orgId.fd" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.orgId.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Id of an existing ORG -->
<dict:constraintDescriptor id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.orgId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.orgId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="orgId" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.orgId.cd" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.orgId.cd.abstract"/>

<dict:field key="effectiveDate" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.effectiveDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList.effectiveDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList.effectiveDate.cd"/>
</dict:field>
<dict:field key="effectiveDate" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.effectiveDate" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.effectiveDate.abstract"/>
<dict:fieldDescriptor key="effectiveDate" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.effectiveDate.fd.abstract" abstract="true">
	<dict:name>effectiveDate</dict:name>
	<dict:desc>Specifies a date with no time component.</dict:desc>
	<dict:dataType>date</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="effectiveDate" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.effectiveDate.fd" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.effectiveDate.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date -->
<dict:constraintDescriptor id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.effectiveDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="effectiveDate" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.effectiveDate.cd" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.effectiveDate.cd.abstract"/>

<dict:field key="expirationDate" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.expirationDate.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList.expirationDate.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList.expirationDate.cd"/>
</dict:field>
<dict:field key="expirationDate" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.expirationDate" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.expirationDate.abstract"/>
<dict:fieldDescriptor key="expirationDate" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.expirationDate.fd.abstract" abstract="true">
	<dict:name>expirationDate</dict:name>
	<dict:desc>Specifies a date with no time component.</dict:desc>
	<dict:dataType>date</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="expirationDate" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.expirationDate.fd" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.expirationDate.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Date -->
<dict:constraintDescriptor id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.expirationDate.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="expirationDate" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.expirationDate.cd" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.expirationDate.cd.abstract"/>

<!-- services has this as mandatory but I don't think it should be flagged as such so I didn't make it required -->
<dict:field key="percentage" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.percentage.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList.percentage.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.accountingInfo.affiliatedOrgInfoList.percentage.cd"/>
</dict:field>
<dict:field key="percentage" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.percentage" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.percentage.abstract"/>
<dict:fieldDescriptor key="percentage" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.percentage.fd.abstract" abstract="true">
	<dict:name>percentage</dict:name>
	<dict:desc>A long numeric value without a fractional component.</dict:desc>
	<dict:dataType>long</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="percentage" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.percentage.fd" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.percentage.fd.abstract"/>
<!-- Optional; Single valued (non-repeating); Integer -->
<dict:constraintDescriptor id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.percentage.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.optional"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.integer"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="percentage" id="field.cluInfo.accountingInfo.affiliatedOrgInfoList.percentage.cd" parent="field.cluInfo.accountingInfo.affiliatedOrgInfoList.percentage.cd.abstract"/>

<!-- must be empty on create but required on update -->
<dict:field key="metaInfo" id="field.cluInfo.metaInfo.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.metaInfo.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.metaInfo.cd"/>
</dict:field>
<dict:field key="metaInfo" id="field.cluInfo.metaInfo" parent="field.cluInfo.metaInfo.abstract"/>
<dict:fieldDescriptor key="metaInfo" id="field.cluInfo.metaInfo.fd.abstract" abstract="true">
	<dict:name>Create/Update meta info</dict:name>
	<dict:desc>Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations.</dict:desc>
	<dict:dataType>Complex</dict:dataType>
		<dict:objectStructureRef bean="object.field.cluInfo.metaInfo"/>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="metaInfo" id="field.cluInfo.metaInfo.fd" parent="field.cluInfo.metaInfo.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating) -->
<dict:constraintDescriptor id="field.cluInfo.metaInfo.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="metaInfo" id="field.cluInfo.metaInfo.cd" parent="field.cluInfo.metaInfo.cd.abstract"/>

<!-- ********************************************************************** -->
<!-- object structure for object.field.cluInfo.metaInfo.(default).(default) -->
<!-- ********************************************************************** -->
<!-- Create and last update info for the structure. This is optional and treated as read only since the data is set by the internals of the service during maintenance operations. -->
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="object.field.cluInfo.metaInfo.abstract" abstract="true">
	<dict:typeRef bean="type.field.cluInfo.metaInfo"/>
</dict:objectStructure>
<dict:objectStructure key="org.kuali.student.core.dto.MetaInfo" id="object.field.cluInfo.metaInfo" parent="object.field.cluInfo.metaInfo.abstract"/>

<dict:type key="*" id="type.field.cluInfo.metaInfo.abstract" abstract="true">
	<dict:name>(default)</dict:name>
	<dict:desc>Default</dict:desc>
	<dict:effectiveDate>2010-01-01</dict:effectiveDate>
	<dict:stateRef bean="state.field.cluInfo.metaInfo"/>
</dict:type>
<dict:type key="*" id="type.field.cluInfo.metaInfo" parent="type.field.cluInfo.metaInfo.abstract"/>

<!-- ****************************************************************************** -->
<!-- State for state.field.cluInfo.metaInfo.(default).(default).(default).(default) -->
<!-- ****************************************************************************** -->

<dict:state key="*" id="state.field.cluInfo.metaInfo.abstract" abstract="true">
	<dict:fieldRef bean="field.cluInfo.metaInfo.versionInd"/>
	<dict:fieldRef bean="field.cluInfo.metaInfo.createTime"/>
	<dict:fieldRef bean="field.cluInfo.metaInfo.createId"/>
	<dict:fieldRef bean="field.cluInfo.metaInfo.updateTime"/>
	<dict:fieldRef bean="field.cluInfo.metaInfo.updateId"/>
</dict:state>
<dict:state key="*" id="state.field.cluInfo.metaInfo" parent="state.field.cluInfo.metaInfo.abstract"/>


<dict:field key="versionInd" id="field.cluInfo.metaInfo.versionInd.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.metaInfo.versionInd.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.metaInfo.versionInd.cd"/>
</dict:field>
<dict:field key="versionInd" id="field.cluInfo.metaInfo.versionInd" parent="field.cluInfo.metaInfo.versionInd.abstract"/>
<dict:fieldDescriptor key="versionInd" id="field.cluInfo.metaInfo.versionInd.fd.abstract" abstract="true">
	<dict:name>Version Indicator</dict:name>
	<dict:desc>An indicator of the version of the thing being described with this meta information. This is set by the service implementation and will be used to determine conflicts in updates.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="versionInd" id="field.cluInfo.metaInfo.versionInd.fd" parent="field.cluInfo.metaInfo.versionInd.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Calculates the version indicator that is used for optimistic locking; Read Only -->
<dict:constraintDescriptor id="field.cluInfo.metaInfo.versionInd.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.calc.meta.versionInd"/>
	<dict:constraintRef bean="constraint.read.only"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="versionInd" id="field.cluInfo.metaInfo.versionInd.cd" parent="field.cluInfo.metaInfo.versionInd.cd.abstract"/>

<dict:field key="createTime" id="field.cluInfo.metaInfo.createTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.metaInfo.createTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.metaInfo.createTime.cd"/>
</dict:field>
<dict:field key="createTime" id="field.cluInfo.metaInfo.createTime" parent="field.cluInfo.metaInfo.createTime.abstract"/>
<dict:fieldDescriptor key="createTime" id="field.cluInfo.metaInfo.createTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Created</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was created</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createTime" id="field.cluInfo.metaInfo.createTime.fd" parent="field.cluInfo.metaInfo.createTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Defaults to NOW, when the object is created -->
<dict:constraintDescriptor id="field.cluInfo.metaInfo.createTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.default.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createTime" id="field.cluInfo.metaInfo.createTime.cd" parent="field.cluInfo.metaInfo.createTime.cd.abstract"/>

<dict:field key="createId" id="field.cluInfo.metaInfo.createId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.metaInfo.createId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.metaInfo.createId.cd"/>
</dict:field>
<dict:field key="createId" id="field.cluInfo.metaInfo.createId" parent="field.cluInfo.metaInfo.createId.abstract"/>
<dict:fieldDescriptor key="createId" id="field.cluInfo.metaInfo.createId.fd.abstract" abstract="true">
	<dict:name>Created By Identifier</dict:name>
	<dict:desc>The principal who created the thing being described with this meta information</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="createId" id="field.cluInfo.metaInfo.createId.fd" parent="field.cluInfo.metaInfo.createId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Defaults to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluInfo.metaInfo.createId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.default.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="createId" id="field.cluInfo.metaInfo.createId.cd" parent="field.cluInfo.metaInfo.createId.cd.abstract"/>

<dict:field key="updateTime" id="field.cluInfo.metaInfo.updateTime.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.metaInfo.updateTime.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.metaInfo.updateTime.cd"/>
</dict:field>
<dict:field key="updateTime" id="field.cluInfo.metaInfo.updateTime" parent="field.cluInfo.metaInfo.updateTime.abstract"/>
<dict:fieldDescriptor key="updateTime" id="field.cluInfo.metaInfo.updateTime.fd.abstract" abstract="true">
	<dict:name>Date/Time Last Updated</dict:name>
	<dict:desc>The date and time the thing being described with this meta information was last updated. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>dateTime</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateTime" id="field.cluInfo.metaInfo.updateTime.fd" parent="field.cluInfo.metaInfo.updateTime.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Date-Time; Sets a field to the current time -->
<dict:constraintDescriptor id="field.cluInfo.metaInfo.updateTime.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.date.time"/>
	<dict:constraintRef bean="constraint.calc.now"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateTime" id="field.cluInfo.metaInfo.updateTime.cd" parent="field.cluInfo.metaInfo.updateTime.cd.abstract"/>

<dict:field key="updateId" id="field.cluInfo.metaInfo.updateId.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.metaInfo.updateId.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.metaInfo.updateId.cd"/>
</dict:field>
<dict:field key="updateId" id="field.cluInfo.metaInfo.updateId" parent="field.cluInfo.metaInfo.updateId.abstract"/>
<dict:fieldDescriptor key="updateId" id="field.cluInfo.metaInfo.updateId.fd.abstract" abstract="true">
	<dict:name>Updated By Identifier</dict:name>
	<dict:desc>The principal who last updated the thing being described with this meta information. This would be filled in on initial creation as well.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="updateId" id="field.cluInfo.metaInfo.updateId.fd" parent="field.cluInfo.metaInfo.updateId.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Id of an existing PRINCIPAL; Sets a field to the currently authenticated user -->
<dict:constraintDescriptor id="field.cluInfo.metaInfo.updateId.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.related.principalId"/>
	<dict:constraintRef bean="constraint.calc.authenicated.principalId"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="updateId" id="field.cluInfo.metaInfo.updateId.cd" parent="field.cluInfo.metaInfo.updateId.cd.abstract"/>

<!-- Requierd on the create but read-only after that -->
<dict:field key="type" id="field.cluInfo.type.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.type.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.type.cd"/>
</dict:field>
<dict:field key="type" id="field.cluInfo.type" parent="field.cluInfo.type.abstract"/>
<dict:fieldDescriptor key="type" id="field.cluInfo.type.fd.abstract" abstract="true">
	<dict:name>Learning Unit Type</dict:name>
	<dict:desc>Unique identifier for a learning unit type. Once set at create time, this field may not be updated.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="type" id="field.cluInfo.type.fd" parent="field.cluInfo.type.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali TYPE: required on add, then read-only; In list of configured learning unit types -->
<dict:constraintDescriptor id="field.cluInfo.type.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.type"/>
	<dict:constraintRef bean="constraint.lu.types"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="type" id="field.cluInfo.type.cd" parent="field.cluInfo.type.cd.abstract"/>

<dict:field key="state" id="field.cluInfo.state.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.state.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.state.cd"/>
<dict:selector>true</dict:selector>
</dict:field>
<dict:field key="state" id="field.cluInfo.state" parent="field.cluInfo.state.abstract"/>
<dict:fieldDescriptor key="state" id="field.cluInfo.state.fd.abstract" abstract="true">
	<dict:name>Learning Unit State</dict:name>
	<dict:desc>The current status of the clu. The values for this field are constrained to those in the luState enumeration. A separate setup operation does not exist for retrieval of the meta data around this value. This field may not be updated through updating this structure and must instead be updated through a dedicated operation.</dict:desc>
	<dict:dataType>string</dict:dataType>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="state" id="field.cluInfo.state.fd" parent="field.cluInfo.state.fd.abstract"/>
<!-- Required; Single valued (non-repeating); Kuali STATE; In list of configured learning unit states -->
<dict:constraintDescriptor id="field.cluInfo.state.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.required"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.state"/>
	<dict:constraintRef bean="constraint.lu.states"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="state" id="field.cluInfo.state.cd" parent="field.cluInfo.state.cd.abstract"/>

<!-- must be empty on create but required on update -->
<dict:field key="id" id="field.cluInfo.id.abstract" abstract="true">
	<dict:fieldDescriptorRef bean="field.cluInfo.id.fd"/>
	<dict:constraintDescriptorRef bean="field.cluInfo.id.cd"/>
</dict:field>
<dict:field key="id" id="field.cluInfo.id" parent="field.cluInfo.id.abstract"/>
<dict:fieldDescriptor key="id" id="field.cluInfo.id.fd.abstract" abstract="true">
	<dict:name>CLU Identifier</dict:name>
	<dict:desc>Unique identifier for a Canonical Learning Unit (CLU). This is optional, due to the identifier being set at the time of creation. Once the CLU has been created, this should be seen as required.</dict:desc>
	<dict:dataType>string</dict:dataType>
	<dict:readOnly>true</dict:readOnly>
</dict:fieldDescriptor>
<dict:fieldDescriptor key="id" id="field.cluInfo.id.fd" parent="field.cluInfo.id.fd.abstract"/>
<!-- Read Only; Single valued (non-repeating); Kuali ID; calculated by service on add, then read-only. -->
<dict:constraintDescriptor id="field.cluInfo.id.cd.abstract" abstract="true">
	<dict:constraintRef bean="constraint.read.only"/>
	<dict:constraintRef bean="constraint.single"/>
	<dict:constraintRef bean="constraint.kuali.id"/>
</dict:constraintDescriptor>
<dict:constraintDescriptor key="id" id="field.cluInfo.id.cd" parent="field.cluInfo.id.cd.abstract"/>
</beans>
