package org.kuali.student.wsdl.proposal;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.2.10
 * Wed Sep 08 11:26:41 EDT 2010
 * Generated source version: 2.2.10
 * 
 */
 
@WebService(targetNamespace = "http://student.kuali.org/wsdl/proposal", name = "ProposalService")
@XmlSeeAlso({org.kuali.student.wsdl.exceptions.ObjectFactory.class, org.kuali.student.wsdl.search.ObjectFactory.class, org.kuali.student.wsdl.dictionary.ObjectFactory.class, org.kuali.student.wsdl.organization.ObjectFactory.class, ObjectFactory.class})
public interface ProposalService {

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposalDocRelationType", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalDocRelationType")
    @WebMethod
    @ResponseWrapper(localName = "getProposalDocRelationTypeResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalDocRelationTypeResponse")
    public org.kuali.student.wsdl.proposal.ProposalDocRelationTypeInfo getProposalDocRelationType(
        @WebParam(name = "proposalDocRelationTypeKey", targetNamespace = "")
        java.lang.String proposalDocRelationTypeKey
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposalTypesForReferenceType", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalTypesForReferenceType")
    @WebMethod
    @ResponseWrapper(localName = "getProposalTypesForReferenceTypeResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalTypesForReferenceTypeResponse")
    public java.util.List<java.lang.Object> getProposalTypesForReferenceType(
        @WebParam(name = "referenceTypeKey", targetNamespace = "")
        java.lang.String referenceTypeKey
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "getSearchCriteriaTypeResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", partName = "parameters")
    @WebMethod
    public org.kuali.student.wsdl.search.GetSearchCriteriaTypeResponse getSearchCriteriaType(
        @WebParam(partName = "parameters", name = "getSearchCriteriaType", targetNamespace = "http://student.kuali.org/wsdl/proposal")
        org.kuali.student.wsdl.search.GetSearchCriteriaType parameters
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "createProposalDocRelation", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.CreateProposalDocRelation")
    @WebMethod
    @ResponseWrapper(localName = "createProposalDocRelationResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.CreateProposalDocRelationResponse")
    public org.kuali.student.wsdl.proposal.ProposalDocRelationInfo createProposalDocRelation(
        @WebParam(name = "proposalDocRelationType", targetNamespace = "")
        java.lang.String proposalDocRelationType,
        @WebParam(name = "documentId", targetNamespace = "")
        java.lang.String documentId,
        @WebParam(name = "proposalId", targetNamespace = "")
        java.lang.String proposalId,
        @WebParam(name = "proposalDocRelationInfo", targetNamespace = "")
        org.kuali.student.wsdl.proposal.ProposalDocRelationInfo proposalDocRelationInfo
    ) throws PermissionDeniedException, MissingParameterException, DataValidationErrorException, DoesNotExistException, InvalidParameterException, AlreadyExistsException, OperationFailedException;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "getSearchResultTypesResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", partName = "parameters")
    @WebMethod
    public org.kuali.student.wsdl.search.GetSearchResultTypesResponse getSearchResultTypes(
        @WebParam(partName = "parameters", name = "getSearchResultTypes", targetNamespace = "http://student.kuali.org/wsdl/proposal")
        org.kuali.student.wsdl.search.GetSearchResultTypes parameters
    ) throws OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposalDocRelationTypes", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalDocRelationTypes")
    @WebMethod
    @ResponseWrapper(localName = "getProposalDocRelationTypesResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalDocRelationTypesResponse")
    public java.util.List<java.lang.Object> getProposalDocRelationTypes() throws OperationFailedException;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "getSearchTypesResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", partName = "parameters")
    @WebMethod
    public org.kuali.student.wsdl.search.GetSearchTypesResponse getSearchTypes(
        @WebParam(partName = "parameters", name = "getSearchTypes", targetNamespace = "http://student.kuali.org/wsdl/proposal")
        org.kuali.student.wsdl.search.GetSearchTypes parameters
    ) throws OperationFailedException;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "getSearchCriteriaTypesResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", partName = "parameters")
    @WebMethod
    public org.kuali.student.wsdl.search.GetSearchCriteriaTypesResponse getSearchCriteriaTypes(
        @WebParam(partName = "parameters", name = "getSearchCriteriaTypes", targetNamespace = "http://student.kuali.org/wsdl/proposal")
        org.kuali.student.wsdl.search.GetSearchCriteriaTypes parameters
    ) throws OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposalsByState", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalsByState")
    @WebMethod
    @ResponseWrapper(localName = "getProposalsByStateResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalsByStateResponse")
    public java.util.List<java.lang.Object> getProposalsByState(
        @WebParam(name = "proposalState", targetNamespace = "")
        java.lang.String proposalState,
        @WebParam(name = "proposalTypeKey", targetNamespace = "")
        java.lang.String proposalTypeKey
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposalsByIdList", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalsByIdList")
    @WebMethod
    @ResponseWrapper(localName = "getProposalsByIdListResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalsByIdListResponse")
    public java.util.List<java.lang.Object> getProposalsByIdList(
        @WebParam(name = "proposalIdList", targetNamespace = "")
        java.util.List<java.lang.String> proposalIdList
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "getSearchResultTypeResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", partName = "parameters")
    @WebMethod
    public org.kuali.student.wsdl.search.GetSearchResultTypeResponse getSearchResultType(
        @WebParam(partName = "parameters", name = "getSearchResultType", targetNamespace = "http://student.kuali.org/wsdl/proposal")
        org.kuali.student.wsdl.search.GetSearchResultType parameters
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "getSearchTypesByResultResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", partName = "parameters")
    @WebMethod
    public org.kuali.student.wsdl.search.GetSearchTypesByResultResponse getSearchTypesByResult(
        @WebParam(partName = "parameters", name = "getSearchTypesByResult", targetNamespace = "http://student.kuali.org/wsdl/proposal")
        org.kuali.student.wsdl.search.GetSearchTypesByResult parameters
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposal", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposal")
    @WebMethod
    @ResponseWrapper(localName = "getProposalResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalResponse")
    public org.kuali.student.wsdl.proposal.ProposalInfo getProposal(
        @WebParam(name = "proposalId", targetNamespace = "")
        java.lang.String proposalId
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "createProposal", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.CreateProposal")
    @WebMethod
    @ResponseWrapper(localName = "createProposalResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.CreateProposalResponse")
    public org.kuali.student.wsdl.proposal.ProposalInfo createProposal(
        @WebParam(name = "proposalTypeKey", targetNamespace = "")
        java.lang.String proposalTypeKey,
        @WebParam(name = "proposalInfo", targetNamespace = "")
        org.kuali.student.wsdl.proposal.ProposalInfo proposalInfo
    ) throws PermissionDeniedException, MissingParameterException, DataValidationErrorException, DoesNotExistException, InvalidParameterException, AlreadyExistsException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposalTypes", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalTypes")
    @WebMethod
    @ResponseWrapper(localName = "getProposalTypesResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalTypesResponse")
    public java.util.List<java.lang.Object> getProposalTypes() throws OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getAllowedProposalDocRelationTypesForProposalType", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetAllowedProposalDocRelationTypesForProposalType")
    @WebMethod
    @ResponseWrapper(localName = "getAllowedProposalDocRelationTypesForProposalTypeResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetAllowedProposalDocRelationTypesForProposalTypeResponse")
    public java.util.List<java.lang.Object> getAllowedProposalDocRelationTypesForProposalType(
        @WebParam(name = "proposalTypeKey", targetNamespace = "")
        java.lang.String proposalTypeKey
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposalDocRelationsByDocument", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalDocRelationsByDocument")
    @WebMethod
    @ResponseWrapper(localName = "getProposalDocRelationsByDocumentResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalDocRelationsByDocumentResponse")
    public java.util.List<java.lang.Object> getProposalDocRelationsByDocument(
        @WebParam(name = "documentId", targetNamespace = "")
        java.lang.String documentId
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposalDocRelationsByProposal", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalDocRelationsByProposal")
    @WebMethod
    @ResponseWrapper(localName = "getProposalDocRelationsByProposalResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalDocRelationsByProposalResponse")
    public java.util.List<java.lang.Object> getProposalDocRelationsByProposal(
        @WebParam(name = "proposalId", targetNamespace = "")
        java.lang.String proposalId
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "searchResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", partName = "parameters")
    @WebMethod
    public org.kuali.student.wsdl.organization.SearchResponse search(
        @WebParam(partName = "parameters", name = "search", targetNamespace = "http://student.kuali.org/wsdl/proposal")
        org.kuali.student.wsdl.organization.Search parameters
    ) throws MissingParameterException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposalDocRelationsByType", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalDocRelationsByType")
    @WebMethod
    @ResponseWrapper(localName = "getProposalDocRelationsByTypeResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalDocRelationsByTypeResponse")
    public java.util.List<java.lang.Object> getProposalDocRelationsByType(
        @WebParam(name = "proposalDocRelationTypeKey", targetNamespace = "")
        java.lang.String proposalDocRelationTypeKey
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "validateProposalDocRelation", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.ValidateProposalDocRelation")
    @WebMethod
    @ResponseWrapper(localName = "validateProposalDocRelationResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.ValidateProposalDocRelationResponse")
    public java.util.List<java.lang.Object> validateProposalDocRelation(
        @WebParam(name = "validationType", targetNamespace = "")
        java.lang.String validationType,
        @WebParam(name = "proposalDocRelationInfo", targetNamespace = "")
        org.kuali.student.wsdl.proposal.ProposalDocRelationInfo proposalDocRelationInfo
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "deleteProposal", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.DeleteProposal")
    @WebMethod
    @ResponseWrapper(localName = "deleteProposalResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.DeleteProposalResponse")
    public org.kuali.student.wsdl.proposal.StatusInfo deleteProposal(
        @WebParam(name = "proposalId", targetNamespace = "")
        java.lang.String proposalId
    ) throws PermissionDeniedException, MissingParameterException, DoesNotExistException, InvalidParameterException, DependentObjectsExistException, OperationFailedException;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "getObjectStructureResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", partName = "parameters")
    @WebMethod
    public org.kuali.student.wsdl.dictionary.GetObjectStructureResponse getObjectStructure(
        @WebParam(partName = "parameters", name = "getObjectStructure", targetNamespace = "http://student.kuali.org/wsdl/proposal")
        org.kuali.student.wsdl.dictionary.GetObjectStructure parameters
    );

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "getSearchTypeResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", partName = "parameters")
    @WebMethod
    public org.kuali.student.wsdl.search.GetSearchTypeResponse getSearchType(
        @WebParam(partName = "parameters", name = "getSearchType", targetNamespace = "http://student.kuali.org/wsdl/proposal")
        org.kuali.student.wsdl.search.GetSearchType parameters
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "updateProposalDocRelation", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.UpdateProposalDocRelation")
    @WebMethod
    @ResponseWrapper(localName = "updateProposalDocRelationResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.UpdateProposalDocRelationResponse")
    public org.kuali.student.wsdl.proposal.ProposalDocRelationInfo updateProposalDocRelation(
        @WebParam(name = "proposalDocRelationId", targetNamespace = "")
        java.lang.String proposalDocRelationId,
        @WebParam(name = "proposalDocRelationInfo", targetNamespace = "")
        org.kuali.student.wsdl.proposal.ProposalDocRelationInfo proposalDocRelationInfo
    ) throws PermissionDeniedException, MissingParameterException, DataValidationErrorException, DoesNotExistException, VersionMismatchException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposalDocRelation", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalDocRelation")
    @WebMethod
    @ResponseWrapper(localName = "getProposalDocRelationResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalDocRelationResponse")
    public org.kuali.student.wsdl.proposal.ProposalDocRelationInfo getProposalDocRelation(
        @WebParam(name = "proposalDocRelationId", targetNamespace = "")
        java.lang.String proposalDocRelationId
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposalsByProposalType", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalsByProposalType")
    @WebMethod
    @ResponseWrapper(localName = "getProposalsByProposalTypeResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalsByProposalTypeResponse")
    public java.util.List<java.lang.Object> getProposalsByProposalType(
        @WebParam(name = "proposalTypeKey", targetNamespace = "")
        java.lang.String proposalTypeKey
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "validateProposal", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.ValidateProposal")
    @WebMethod
    @ResponseWrapper(localName = "validateProposalResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.ValidateProposalResponse")
    public java.util.List<java.lang.Object> validateProposal(
        @WebParam(name = "validationType", targetNamespace = "")
        java.lang.String validationType,
        @WebParam(name = "proposalInfo", targetNamespace = "")
        org.kuali.student.wsdl.proposal.ProposalInfo proposalInfo
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "updateProposal", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.UpdateProposal")
    @WebMethod
    @ResponseWrapper(localName = "updateProposalResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.UpdateProposalResponse")
    public org.kuali.student.wsdl.proposal.ProposalInfo updateProposal(
        @WebParam(name = "proposalId", targetNamespace = "")
        java.lang.String proposalId,
        @WebParam(name = "proposalInfo", targetNamespace = "")
        org.kuali.student.wsdl.proposal.ProposalInfo proposalInfo
    ) throws PermissionDeniedException, MissingParameterException, DataValidationErrorException, DoesNotExistException, VersionMismatchException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposalDocRelationsByIdList", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalDocRelationsByIdList")
    @WebMethod
    @ResponseWrapper(localName = "getProposalDocRelationsByIdListResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalDocRelationsByIdListResponse")
    public java.util.List<java.lang.Object> getProposalDocRelationsByIdList(
        @WebParam(name = "proposalDocRelationIdList", targetNamespace = "")
        java.util.List<java.lang.String> proposalDocRelationIdList
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "getSearchTypesByCriteriaResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", partName = "parameters")
    @WebMethod
    public org.kuali.student.wsdl.search.GetSearchTypesByCriteriaResponse getSearchTypesByCriteria(
        @WebParam(partName = "parameters", name = "getSearchTypesByCriteria", targetNamespace = "http://student.kuali.org/wsdl/proposal")
        org.kuali.student.wsdl.search.GetSearchTypesByCriteria parameters
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposalType", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalType")
    @WebMethod
    @ResponseWrapper(localName = "getProposalTypeResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalTypeResponse")
    public org.kuali.student.wsdl.proposal.ProposalTypeInfo getProposalType(
        @WebParam(name = "proposalTypeKey", targetNamespace = "")
        java.lang.String proposalTypeKey
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getReferenceTypes", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetReferenceTypes")
    @WebMethod
    @ResponseWrapper(localName = "getReferenceTypesResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetReferenceTypesResponse")
    public java.util.List<java.lang.Object> getReferenceTypes() throws OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "deleteProposalDocRelation", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.DeleteProposalDocRelation")
    @WebMethod
    @ResponseWrapper(localName = "deleteProposalDocRelationResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.DeleteProposalDocRelationResponse")
    public org.kuali.student.wsdl.proposal.StatusInfo deleteProposalDocRelation(
        @WebParam(name = "proposalDocRelationId", targetNamespace = "")
        java.lang.String proposalDocRelationId
    ) throws PermissionDeniedException, MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getProposalsByReference", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalsByReference")
    @WebMethod
    @ResponseWrapper(localName = "getProposalsByReferenceResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", className = "org.kuali.student.wsdl.proposal.GetProposalsByReferenceResponse")
    public java.util.List<java.lang.Object> getProposalsByReference(
        @WebParam(name = "referenceTypeKey", targetNamespace = "")
        java.lang.String referenceTypeKey,
        @WebParam(name = "referenceId", targetNamespace = "")
        java.lang.String referenceId
    ) throws MissingParameterException, DoesNotExistException, InvalidParameterException, OperationFailedException;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "getObjectTypesResponse", targetNamespace = "http://student.kuali.org/wsdl/proposal", partName = "parameters")
    @WebMethod
    public org.kuali.student.wsdl.dictionary.GetObjectTypesResponse getObjectTypes(
        @WebParam(partName = "parameters", name = "getObjectTypes", targetNamespace = "http://student.kuali.org/wsdl/proposal")
        org.kuali.student.wsdl.dictionary.GetObjectTypes parameters
    );
}
