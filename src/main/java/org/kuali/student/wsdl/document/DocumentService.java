package org.kuali.student.wsdl.document;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.2.3
 * Thu Aug 26 16:26:56 EDT 2010
 * Generated source version: 2.2.3
 * 
 */
 
@WebService(targetNamespace = "http://student.kuali.org/wsdl/document", name = "DocumentService")
@XmlSeeAlso({org.kuali.student.wsdl.exceptions.ObjectFactory.class,ObjectFactory.class})
public interface DocumentService {

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getDocumentsByIdList", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.GetDocumentsByIdList")
    @ResponseWrapper(localName = "getDocumentsByIdListResponse", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.GetDocumentsByIdListResponse")
    @WebMethod
    public java.util.List<org.kuali.student.wsdl.document.DocumentInfo> getDocumentsByIdList(
        @WebParam(name = "documentIdList", targetNamespace = "")
        java.util.List<java.lang.String> documentIdList
    ) throws MissingParameterException, PermissionDeniedException, OperationFailedException, InvalidParameterException, DoesNotExistException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "validateDocument", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.ValidateDocument")
    @ResponseWrapper(localName = "validateDocumentResponse", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.ValidateDocumentResponse")
    @WebMethod
    public java.util.List<org.kuali.student.wsdl.document.ValidationResultInfo> validateDocument(
        @WebParam(name = "validationType", targetNamespace = "")
        java.lang.String validationType,
        @WebParam(name = "documentInfo", targetNamespace = "")
        org.kuali.student.wsdl.document.DocumentInfo documentInfo
    ) throws MissingParameterException, OperationFailedException, InvalidParameterException, DoesNotExistException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getDocument", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.GetDocument")
    @ResponseWrapper(localName = "getDocumentResponse", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.GetDocumentResponse")
    @WebMethod
    public org.kuali.student.wsdl.document.DocumentInfo getDocument(
        @WebParam(name = "documentId", targetNamespace = "")
        java.lang.String documentId
    ) throws MissingParameterException, PermissionDeniedException, OperationFailedException, InvalidParameterException, DoesNotExistException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "updateDocument", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.UpdateDocument")
    @ResponseWrapper(localName = "updateDocumentResponse", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.UpdateDocumentResponse")
    @WebMethod
    public org.kuali.student.wsdl.document.DocumentInfo updateDocument(
        @WebParam(name = "documentId", targetNamespace = "")
        java.lang.String documentId,
        @WebParam(name = "documentInfo", targetNamespace = "")
        org.kuali.student.wsdl.document.DocumentInfo documentInfo
    ) throws MissingParameterException, PermissionDeniedException, OperationFailedException, InvalidParameterException, VersionMismatchException, DoesNotExistException, DataValidationErrorException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "deleteDocument", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.DeleteDocument")
    @ResponseWrapper(localName = "deleteDocumentResponse", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.DeleteDocumentResponse")
    @WebMethod
    public org.kuali.student.wsdl.document.StatusInfo deleteDocument(
        @WebParam(name = "documentId", targetNamespace = "")
        java.lang.String documentId
    ) throws MissingParameterException, PermissionDeniedException, OperationFailedException, InvalidParameterException, DoesNotExistException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getDocumentType", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.GetDocumentType")
    @ResponseWrapper(localName = "getDocumentTypeResponse", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.GetDocumentTypeResponse")
    @WebMethod
    public org.kuali.student.wsdl.document.DocumentTypeInfo getDocumentType(
        @WebParam(name = "documentTypeKey", targetNamespace = "")
        java.lang.String documentTypeKey
    ) throws MissingParameterException, OperationFailedException, InvalidParameterException, DoesNotExistException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getCategoriesByDocument", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.GetCategoriesByDocument")
    @ResponseWrapper(localName = "getCategoriesByDocumentResponse", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.GetCategoriesByDocumentResponse")
    @WebMethod
    public java.util.List<org.kuali.student.wsdl.document.DocumentCategoryInfo> getCategoriesByDocument(
        @WebParam(name = "documentId", targetNamespace = "")
        java.lang.String documentId
    ) throws MissingParameterException, PermissionDeniedException, OperationFailedException, InvalidParameterException, DoesNotExistException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "removeDocumentCategoryFromDocument", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.RemoveDocumentCategoryFromDocument")
    @ResponseWrapper(localName = "removeDocumentCategoryFromDocumentResponse", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.RemoveDocumentCategoryFromDocumentResponse")
    @WebMethod
    public org.kuali.student.wsdl.document.StatusInfo removeDocumentCategoryFromDocument(
        @WebParam(name = "documentId", targetNamespace = "")
        java.lang.String documentId,
        @WebParam(name = "documentCategoryKey", targetNamespace = "")
        java.lang.String documentCategoryKey
    ) throws MissingParameterException, PermissionDeniedException, OperationFailedException, InvalidParameterException, DoesNotExistException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getDocumentCategories", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.GetDocumentCategories")
    @ResponseWrapper(localName = "getDocumentCategoriesResponse", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.GetDocumentCategoriesResponse")
    @WebMethod
    public java.util.List<org.kuali.student.wsdl.document.DocumentCategoryInfo> getDocumentCategories() throws OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "addDocumentCategoryToDocument", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.AddDocumentCategoryToDocument")
    @ResponseWrapper(localName = "addDocumentCategoryToDocumentResponse", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.AddDocumentCategoryToDocumentResponse")
    @WebMethod
    public org.kuali.student.wsdl.document.StatusInfo addDocumentCategoryToDocument(
        @WebParam(name = "documentId", targetNamespace = "")
        java.lang.String documentId,
        @WebParam(name = "documentCategoryKey", targetNamespace = "")
        java.lang.String documentCategoryKey
    ) throws MissingParameterException, PermissionDeniedException, OperationFailedException, InvalidParameterException, VersionMismatchException, DoesNotExistException, DataValidationErrorException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "createDocument", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.CreateDocument")
    @ResponseWrapper(localName = "createDocumentResponse", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.CreateDocumentResponse")
    @WebMethod
    public org.kuali.student.wsdl.document.DocumentInfo createDocument(
        @WebParam(name = "documentTypeKey", targetNamespace = "")
        java.lang.String documentTypeKey,
        @WebParam(name = "documentCategoryKey", targetNamespace = "")
        java.lang.String documentCategoryKey,
        @WebParam(name = "documentInfo", targetNamespace = "")
        org.kuali.student.wsdl.document.DocumentInfo documentInfo
    ) throws MissingParameterException, PermissionDeniedException, OperationFailedException, InvalidParameterException, DoesNotExistException, DataValidationErrorException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getDocumentTypes", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.GetDocumentTypes")
    @ResponseWrapper(localName = "getDocumentTypesResponse", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.GetDocumentTypesResponse")
    @WebMethod
    public java.util.List<org.kuali.student.wsdl.document.DocumentTypeInfo> getDocumentTypes() throws OperationFailedException;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getDocumentCategory", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.GetDocumentCategory")
    @ResponseWrapper(localName = "getDocumentCategoryResponse", targetNamespace = "http://student.kuali.org/wsdl/document", className = "org.kuali.student.wsdl.document.GetDocumentCategoryResponse")
    @WebMethod
    public org.kuali.student.wsdl.document.DocumentCategoryInfo getDocumentCategory(
        @WebParam(name = "documentCategoryKey", targetNamespace = "")
        java.lang.String documentCategoryKey
    ) throws MissingParameterException, OperationFailedException, InvalidParameterException, DoesNotExistException;
}
