<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="ProposalService" targetNamespace="http://student.kuali.org/wsdl/proposal" xmlns:ns1="http://cxf.apache.org/bindings/xformat" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://student.kuali.org/wsdl/proposal" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/search" xmlns:ns1="http://student.kuali.org/wsdl/dictionary" xmlns:tns="http://student.kuali.org/wsdl/search" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://student.kuali.org/wsdl/dictionary"/>
<xs:element name="getSearchCriteriaType" type="tns:getSearchCriteriaType"/>
<xs:element name="getSearchCriteriaTypeResponse" type="tns:getSearchCriteriaTypeResponse"/>
<xs:element name="getSearchCriteriaTypes" type="tns:getSearchCriteriaTypes"/>
<xs:element name="getSearchCriteriaTypesResponse" type="tns:getSearchCriteriaTypesResponse"/>
<xs:element name="getSearchResultType" type="tns:getSearchResultType"/>
<xs:element name="getSearchResultTypeResponse" type="tns:getSearchResultTypeResponse"/>
<xs:element name="getSearchResultTypes" type="tns:getSearchResultTypes"/>
<xs:element name="getSearchResultTypesResponse" type="tns:getSearchResultTypesResponse"/>
<xs:element name="getSearchType" type="tns:getSearchType"/>
<xs:element name="getSearchTypeResponse" type="tns:getSearchTypeResponse"/>
<xs:element name="getSearchTypes" type="tns:getSearchTypes"/>
<xs:element name="getSearchTypesByCriteria" type="tns:getSearchTypesByCriteria"/>
<xs:element name="getSearchTypesByCriteriaResponse" type="tns:getSearchTypesByCriteriaResponse"/>
<xs:element name="getSearchTypesByResult" type="tns:getSearchTypesByResult"/>
<xs:element name="getSearchTypesByResultResponse" type="tns:getSearchTypesByResultResponse"/>
<xs:element name="getSearchTypesResponse" type="tns:getSearchTypesResponse"/>
<xs:complexType name="getSearchCriteriaType">
<xs:sequence>
<xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSearchCriteriaTypeResponse">
<xs:sequence>
<xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchCriteriaTypeInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="desc" type="xs:string"/>
<xs:element minOccurs="0" name="queryParams">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="queryParam" type="tns:queryParamInfo"/>
</xs:sequence>
</xs:complexType>
</xs:element>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
<xs:complexType name="queryParamInfo">
<xs:sequence>
<xs:element minOccurs="0" ref="ns1:fieldDescriptor"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
<xs:attribute name="optional" type="xs:boolean" use="required"/>
</xs:complexType>
<xs:complexType name="getSearchResultTypes">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSearchResultTypesResponse">
<xs:sequence>
<xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchResultTypeInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="desc" type="xs:string"/>
<xs:element minOccurs="0" name="resultColumns">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="resultColumn" type="tns:resultColumnInfo"/>
</xs:sequence>
</xs:complexType>
</xs:element>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
<xs:complexType name="resultColumnInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="desc" type="xs:string"/>
<xs:element minOccurs="0" name="dataType" type="xs:string"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
<xs:complexType name="getSearchTypes">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSearchTypesResponse">
<xs:sequence>
<xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchTypeInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="desc" type="xs:string"/>
<xs:element minOccurs="0" name="searchResultTypeInfo" type="tns:searchResultTypeInfo"/>
<xs:element minOccurs="0" name="searchCriteriaTypeInfo" type="tns:searchCriteriaTypeInfo"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
<xs:complexType name="getSearchCriteriaTypes">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSearchCriteriaTypesResponse">
<xs:sequence>
<xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchCriteriaTypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSearchTypesByResult">
<xs:sequence>
<xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSearchTypesByResultResponse">
<xs:sequence>
<xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSearchResultType">
<xs:sequence>
<xs:element form="unqualified" minOccurs="0" name="searchResultTypeKey" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSearchResultTypeResponse">
<xs:sequence>
<xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchResultTypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchRequest">
<xs:sequence>
<xs:element minOccurs="0" name="searchKey" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="params" nillable="true" type="tns:searchParam"/>
<xs:element minOccurs="0" name="sortColumn" type="xs:string"/>
<xs:element minOccurs="0" name="sortDirection" type="tns:sortDirection"/>
<xs:element minOccurs="0" name="startAt" type="xs:int"/>
<xs:element minOccurs="0" name="maxResults" type="xs:int"/>
<xs:element minOccurs="0" name="neededTotalResults" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchParam">
<xs:sequence>
<xs:element minOccurs="0" name="value" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="listValue" type="xs:string"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
<xs:complexType name="searchResult">
<xs:sequence>
<xs:element minOccurs="0" name="startAt" type="xs:int"/>
<xs:element minOccurs="0" name="totalResults" type="xs:int"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="rows" nillable="true" type="tns:searchResultRow"/>
<xs:element minOccurs="0" name="sortColumn" type="xs:string"/>
<xs:element minOccurs="0" name="sortDirection" type="tns:sortDirection"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchResultRow">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="cells" nillable="true" type="tns:searchResultCell"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchResultCell">
<xs:sequence>
<xs:element minOccurs="0" name="value" type="xs:string"/>
<xs:element minOccurs="0" name="key" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSearchType">
<xs:sequence>
<xs:element form="unqualified" minOccurs="0" name="searchTypeKey" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSearchTypeResponse">
<xs:sequence>
<xs:element form="unqualified" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSearchTypesByCriteria">
<xs:sequence>
<xs:element form="unqualified" minOccurs="0" name="searchCriteriaTypeKey" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSearchTypesByCriteriaResponse">
<xs:sequence>
<xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="tns:searchTypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchRelationship">
<xs:sequence>
<xs:element minOccurs="0" name="lhs" type="tns:typeAttribute"/>
<xs:element minOccurs="0" name="rhs" type="tns:typeAttribute"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="typeAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="parentType" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="alias" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="sortDirection">
<xs:restriction base="xs:string">
<xs:enumeration value="ASC"/>
<xs:enumeration value="DESC"/>
</xs:restriction>
</xs:simpleType>
</xs:schema>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/dictionary" xmlns:ns1="http://student.kuali.org/wsdl/proposal" xmlns:tns="http://student.kuali.org/wsdl/dictionary" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://student.kuali.org/wsdl/proposal"/>
<xs:element name="fieldDescriptor" type="tns:fieldDescriptor"/>
<xs:element name="getObjectStructure" type="tns:getObjectStructure"/>
<xs:element name="getObjectStructureResponse" type="tns:getObjectStructureResponse"/>
<xs:element name="getObjectTypes" type="tns:getObjectTypes"/>
<xs:element name="getObjectTypesResponse" type="tns:getObjectTypesResponse"/>
<xs:complexType name="fieldDescriptor">
<xs:sequence>
<xs:element name="name" type="xs:string"/>
<xs:element name="desc" type="xs:string"/>
<xs:element name="readOnly" type="xs:boolean"/>
<xs:element name="dataType" type="xs:string"/>
<xs:element minOccurs="0" name="search" type="tns:searchSelector"/>
<xs:element minOccurs="0" name="objectStructure" type="tns:objectStructure"/>
<xs:element minOccurs="0" name="objectStructureRef" type="xs:string"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
</xs:complexType>
<xs:complexType name="searchSelector">
<xs:sequence/>
<xs:attribute name="key" type="xs:string" use="required"/>
</xs:complexType>
<xs:complexType name="objectStructure">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="type" type="tns:type"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="desc" type="xs:string"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string" use="required"/>
<xs:attribute name="id" type="xs:string"/>
</xs:complexType>
<xs:complexType name="type">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="state" type="tns:state"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="desc" type="xs:string"/>
<xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
<xs:element name="modifiable" type="xs:boolean"/>
<xs:element minOccurs="0" name="attributes" type="ns1:jaxbAttributeList"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="key" type="xs:string" use="required"/>
</xs:complexType>
<xs:complexType name="state">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="field" type="tns:field"/>
<xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
</xs:sequence>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="key" type="xs:string" use="required"/>
</xs:complexType>
<xs:complexType name="field">
<xs:sequence>
<xs:element minOccurs="0" name="fieldDescriptor" type="tns:fieldDescriptor"/>
<xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
<xs:element name="selector" type="xs:boolean"/>
<xs:element name="dynamic" type="xs:boolean"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string" use="required"/>
<xs:attribute name="id" type="xs:string"/>
</xs:complexType>
<xs:complexType name="constraintDescriptor">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="constraint" type="tns:constraintSelector"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string" use="required"/>
<xs:attribute name="id" type="xs:string"/>
</xs:complexType>
<xs:complexType name="constraintSelector">
<xs:sequence>
<xs:element minOccurs="0" name="minValue" type="xs:string"/>
<xs:element minOccurs="0" name="maxValue" type="xs:string"/>
<xs:element minOccurs="0" name="minLength" type="xs:int"/>
<xs:element minOccurs="0" name="maxLength" type="xs:string"/>
<xs:element minOccurs="0" name="validChars" type="tns:validCharsConstraint"/>
<xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
<xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="case" type="tns:caseConstraint"/>
<xs:element minOccurs="0" name="typeStateCase" type="tns:typeStateCaseConstraint"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="lookup" type="tns:lookupConstraint"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
</xs:sequence>
<xs:attribute name="className" type="xs:string"/>
<xs:attribute name="key" type="xs:string" use="required"/>
<xs:attribute name="id" type="xs:string"/>
<xs:attribute name="serverSide" type="xs:boolean" use="required"/>
<xs:attribute name="locale" type="xs:string"/>
</xs:complexType>
<xs:complexType name="validCharsConstraint">
<xs:sequence>
<xs:element minOccurs="0" name="value" type="xs:string"/>
</xs:sequence>
<xs:attribute name="fields" type="xs:string"/>
<xs:attribute name="separator" type="xs:string"/>
</xs:complexType>
<xs:complexType name="requireConstraint">
<xs:sequence/>
<xs:attribute name="field" type="xs:string"/>
</xs:complexType>
<xs:complexType name="caseConstraint">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="when" type="tns:whenConstraint"/>
</xs:sequence>
<xs:attribute name="field" type="xs:string"/>
<xs:attribute name="operator" type="xs:string"/>
</xs:complexType>
<xs:complexType name="whenConstraint">
<xs:sequence>
<xs:element minOccurs="0" name="constraint" type="tns:constraintSelector"/>
</xs:sequence>
<xs:attribute name="value" type="xs:string"/>
</xs:complexType>
<xs:complexType name="typeStateCaseConstraint">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="typeStateWhen" type="tns:typeStateWhenConstraint"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="typeStateWhenConstraint">
<xs:sequence>
<xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
<xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
</xs:sequence>
<xs:attribute name="type" type="xs:string"/>
<xs:attribute name="state" type="xs:string"/>
</xs:complexType>
<xs:complexType name="lookupConstraint">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="lookupKey" type="tns:lookupKeyConstraint"/>
</xs:sequence>
<xs:attribute name="search" type="xs:string"/>
<xs:attribute name="searchField" type="xs:string"/>
</xs:complexType>
<xs:complexType name="lookupKeyConstraint">
<xs:sequence/>
<xs:attribute name="field" type="xs:string"/>
<xs:attribute name="mapsTo" type="xs:string"/>
</xs:complexType>
<xs:complexType name="occursConstraint">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
</xs:sequence>
<xs:attribute name="min" type="xs:int"/>
<xs:attribute name="max" type="xs:int"/>
</xs:complexType>
<xs:complexType name="getObjectStructure">
<xs:sequence>
<xs:element form="unqualified" minOccurs="0" name="objectTypeKey" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getObjectStructureResponse">
<xs:sequence>
<xs:element form="unqualified" minOccurs="0" name="return" type="ns1:objectStructureDefinitionWrapper"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getObjectTypes">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getObjectTypesResponse">
<xs:sequence>
<xs:element form="unqualified" maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/proposal" xmlns:ns0="http://student.kuali.org/wsdl/exceptions" xmlns:ns1="http://student.kuali.org/wsdl/search" xmlns:ns2="http://student.kuali.org/wsdl/organization" xmlns:ns3="http://student.kuali.org/wsdl/dictionary" xmlns:tns="http://student.kuali.org/wsdl/proposal" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:element name="createProposal" type="tns:createProposal"/>
<xs:element name="createProposalDocRelation" type="tns:createProposalDocRelation"/>
<xs:element name="createProposalDocRelationResponse" type="tns:createProposalDocRelationResponse"/>
<xs:element name="createProposalResponse" type="tns:createProposalResponse"/>
<xs:element name="deleteProposal" type="tns:deleteProposal"/>
<xs:element name="deleteProposalDocRelation" type="tns:deleteProposalDocRelation"/>
<xs:element name="deleteProposalDocRelationResponse" type="tns:deleteProposalDocRelationResponse"/>
<xs:element name="deleteProposalResponse" type="tns:deleteProposalResponse"/>
<xs:element name="getAllowedProposalDocRelationTypesForProposalType" type="tns:getAllowedProposalDocRelationTypesForProposalType"/>
<xs:element name="getAllowedProposalDocRelationTypesForProposalTypeResponse" type="tns:getAllowedProposalDocRelationTypesForProposalTypeResponse"/>
<xs:element name="getProposal" type="tns:getProposal"/>
<xs:element name="getProposalDocRelation" type="tns:getProposalDocRelation"/>
<xs:element name="getProposalDocRelationResponse" type="tns:getProposalDocRelationResponse"/>
<xs:element name="getProposalDocRelationType" type="tns:getProposalDocRelationType"/>
<xs:element name="getProposalDocRelationTypeResponse" type="tns:getProposalDocRelationTypeResponse"/>
<xs:element name="getProposalDocRelationTypes" type="tns:getProposalDocRelationTypes"/>
<xs:element name="getProposalDocRelationTypesResponse" type="tns:getProposalDocRelationTypesResponse"/>
<xs:element name="getProposalDocRelationsByDocument" type="tns:getProposalDocRelationsByDocument"/>
<xs:element name="getProposalDocRelationsByDocumentResponse" type="tns:getProposalDocRelationsByDocumentResponse"/>
<xs:element name="getProposalDocRelationsByIdList" type="tns:getProposalDocRelationsByIdList"/>
<xs:element name="getProposalDocRelationsByIdListResponse" type="tns:getProposalDocRelationsByIdListResponse"/>
<xs:element name="getProposalDocRelationsByProposal" type="tns:getProposalDocRelationsByProposal"/>
<xs:element name="getProposalDocRelationsByProposalResponse" type="tns:getProposalDocRelationsByProposalResponse"/>
<xs:element name="getProposalDocRelationsByType" type="tns:getProposalDocRelationsByType"/>
<xs:element name="getProposalDocRelationsByTypeResponse" type="tns:getProposalDocRelationsByTypeResponse"/>
<xs:element name="getProposalResponse" type="tns:getProposalResponse"/>
<xs:element name="getProposalType" type="tns:getProposalType"/>
<xs:element name="getProposalTypeResponse" type="tns:getProposalTypeResponse"/>
<xs:element name="getProposalTypes" type="tns:getProposalTypes"/>
<xs:element name="getProposalTypesForReferenceType" type="tns:getProposalTypesForReferenceType"/>
<xs:element name="getProposalTypesForReferenceTypeResponse" type="tns:getProposalTypesForReferenceTypeResponse"/>
<xs:element name="getProposalTypesResponse" type="tns:getProposalTypesResponse"/>
<xs:element name="getProposalsByIdList" type="tns:getProposalsByIdList"/>
<xs:element name="getProposalsByIdListResponse" type="tns:getProposalsByIdListResponse"/>
<xs:element name="getProposalsByProposalType" type="tns:getProposalsByProposalType"/>
<xs:element name="getProposalsByProposalTypeResponse" type="tns:getProposalsByProposalTypeResponse"/>
<xs:element name="getProposalsByReference" type="tns:getProposalsByReference"/>
<xs:element name="getProposalsByReferenceResponse" type="tns:getProposalsByReferenceResponse"/>
<xs:element name="getProposalsByState" type="tns:getProposalsByState"/>
<xs:element name="getProposalsByStateResponse" type="tns:getProposalsByStateResponse"/>
<xs:element name="getReferenceTypes" type="tns:getReferenceTypes"/>
<xs:element name="getReferenceTypesResponse" type="tns:getReferenceTypesResponse"/>
<xs:element name="updateProposal" type="tns:updateProposal"/>
<xs:element name="updateProposalDocRelation" type="tns:updateProposalDocRelation"/>
<xs:element name="updateProposalDocRelationResponse" type="tns:updateProposalDocRelationResponse"/>
<xs:element name="updateProposalResponse" type="tns:updateProposalResponse"/>
<xs:element name="validateProposal" type="tns:validateProposal"/>
<xs:element name="validateProposalDocRelation" type="tns:validateProposalDocRelation"/>
<xs:element name="validateProposalDocRelationResponse" type="tns:validateProposalDocRelationResponse"/>
<xs:element name="validateProposalResponse" type="tns:validateProposalResponse"/>
<xs:complexType name="getProposalDocRelationType">
<xs:sequence>
<xs:element minOccurs="0" name="proposalDocRelationTypeKey" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalDocRelationTypeResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:proposalDocRelationTypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="proposalDocRelationTypeInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="desc" type="xs:string"/>
<xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
<xs:complexType name="jaxbAttributeList">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="Attribute">
<xs:sequence>
<xs:element minOccurs="0" name="value" type="xs:string"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
<xs:complexType name="getProposalTypesForReferenceType">
<xs:sequence>
<xs:element minOccurs="0" name="referenceTypeKey" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalTypesForReferenceTypeResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createProposalDocRelation">
<xs:sequence>
<xs:element minOccurs="0" name="proposalDocRelationType" type="xs:string"/>
<xs:element minOccurs="0" name="documentId" type="xs:string"/>
<xs:element minOccurs="0" name="proposalId" type="xs:string"/>
<xs:element minOccurs="0" name="proposalDocRelationInfo" type="tns:proposalDocRelationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="proposalDocRelationInfo">
<xs:sequence>
<xs:element minOccurs="0" name="proposalId" type="xs:string"/>
<xs:element minOccurs="0" name="documentId" type="xs:string"/>
<xs:element minOccurs="0" name="title" type="xs:string"/>
<xs:element minOccurs="0" name="desc" type="tns:richTextInfo"/>
<xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
<xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
</xs:sequence>
<xs:attribute name="type" type="xs:string"/>
<xs:attribute name="state" type="xs:string"/>
<xs:attribute name="id" type="xs:string"/>
</xs:complexType>
<xs:complexType name="richTextInfo">
<xs:sequence>
<xs:element minOccurs="0" name="plain" type="xs:string"/>
<xs:element minOccurs="0" name="formatted" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="metaInfo">
<xs:sequence>
<xs:element minOccurs="0" name="versionInd" type="xs:string"/>
<xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createId" type="xs:string"/>
<xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
<xs:element minOccurs="0" name="updateId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createProposalDocRelationResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:proposalDocRelationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validationResultInfo">
<xs:sequence>
<xs:element minOccurs="0" name="element" type="xs:string"/>
<xs:element minOccurs="0" name="level" type="tns:errorLevel"/>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalDocRelationTypes">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getProposalDocRelationTypesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalsByState">
<xs:sequence>
<xs:element minOccurs="0" name="proposalState" type="xs:string"/>
<xs:element minOccurs="0" name="proposalTypeKey" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalsByStateResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalsByIdList">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="proposalIdList" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalsByIdListResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposal">
<xs:sequence>
<xs:element minOccurs="0" name="proposalId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:proposalInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="proposalInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="proposerPerson" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="proposerOrg" type="xs:string"/>
<xs:element minOccurs="0" name="proposalReferenceType" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="proposalReference" type="xs:string"/>
<xs:element minOccurs="0" name="rationale" type="xs:string"/>
<xs:element minOccurs="0" name="detailDesc" type="xs:string"/>
<xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="workflowId" type="xs:string"/>
<xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
<xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
</xs:sequence>
<xs:attribute name="type" type="xs:string"/>
<xs:attribute name="state" type="xs:string"/>
<xs:attribute name="id" type="xs:string"/>
</xs:complexType>
<xs:complexType name="getProposalTypes">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getProposalTypesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createProposal">
<xs:sequence>
<xs:element minOccurs="0" name="proposalTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="proposalInfo" type="tns:proposalInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createProposalResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:proposalInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllowedProposalDocRelationTypesForProposalType">
<xs:sequence>
<xs:element minOccurs="0" name="proposalTypeKey" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllowedProposalDocRelationTypesForProposalTypeResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalDocRelationsByDocument">
<xs:sequence>
<xs:element minOccurs="0" name="documentId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalDocRelationsByDocumentResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalDocRelationsByProposal">
<xs:sequence>
<xs:element minOccurs="0" name="proposalId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalDocRelationsByProposalResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateProposalDocRelation">
<xs:sequence>
<xs:element minOccurs="0" name="validationType" type="xs:string"/>
<xs:element minOccurs="0" name="proposalDocRelationInfo" type="tns:proposalDocRelationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateProposalDocRelationResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalDocRelationsByType">
<xs:sequence>
<xs:element minOccurs="0" name="proposalDocRelationTypeKey" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalDocRelationsByTypeResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteProposal">
<xs:sequence>
<xs:element minOccurs="0" name="proposalId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteProposalResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="statusInfo">
<xs:sequence>
<xs:element minOccurs="0" name="success" type="xs:boolean"/>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateProposalDocRelation">
<xs:sequence>
<xs:element minOccurs="0" name="proposalDocRelationId" type="xs:string"/>
<xs:element minOccurs="0" name="proposalDocRelationInfo" type="tns:proposalDocRelationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateProposalDocRelationResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:proposalDocRelationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="objectStructureDefinitionWrapper">
<xs:sequence>
<xs:element minOccurs="0" name="rootDefinitionName" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="definitions" nillable="true" type="tns:objectStructureDefinition"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="objectStructureDefinition">
<xs:sequence>
<xs:element name="name" type="xs:ID"/>
<xs:element minOccurs="0" name="businessObjectClass" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="attributes" type="tns:fieldDefinition"/>
<xs:element name="hasMetaData" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="fieldDefinition">
<xs:complexContent>
<xs:extension base="tns:constraint">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="dataType" type="tns:dataType"/>
<xs:element minOccurs="0" name="dataObjectStructure" type="xs:IDREF"/>
<xs:element name="dynamic" type="xs:boolean"/>
<xs:element minOccurs="0" name="defaultValue" type="xs:anyType"/>
<xs:element minOccurs="0" name="defaultValuePath" type="xs:string"/>
<xs:element name="readOnly" type="xs:boolean"/>
<xs:element name="hide" type="xs:boolean"/>
<xs:element name="mask" type="xs:boolean"/>
<xs:element name="partialMask" type="xs:boolean"/>
<xs:element minOccurs="0" name="partialMaskFormatter" type="xs:string"/>
<xs:element minOccurs="0" name="maskFormatter" type="xs:string"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="constraint">
<xs:complexContent>
<xs:extension base="tns:baseConstraint">
<xs:sequence>
<xs:element name="serverSide" type="xs:boolean"/>
<xs:element minOccurs="0" name="customValidatorClass" type="xs:string"/>
<xs:element minOccurs="0" name="locale" type="xs:string"/>
<xs:element minOccurs="0" name="exclusiveMin" type="xs:string"/>
<xs:element minOccurs="0" name="inclusiveMax" type="xs:string"/>
<xs:element minOccurs="0" name="minLength" type="xs:int"/>
<xs:element minOccurs="0" name="maxLength" type="xs:string"/>
<xs:element minOccurs="0" name="validChars" type="tns:validCharsConstraint"/>
<xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
<xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
<xs:element minOccurs="0" name="caseConstraint" type="tns:caseConstraint"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="requireConstraint" type="tns:requiredConstraint"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="occursConstraint" type="tns:mustOccurConstraint"/>
<xs:element minOccurs="0" name="lookupDefinition" type="tns:lookupConstraint"/>
<xs:element minOccurs="0" name="lookupContextPath" type="xs:string"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="baseConstraint">
<xs:sequence>
<xs:element minOccurs="0" name="labelKey" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validCharsConstraint">
<xs:complexContent>
<xs:extension base="tns:baseConstraint">
<xs:sequence>
<xs:element minOccurs="0" name="value" type="xs:string"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="caseConstraint">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="whenConstraint" type="tns:whenConstraint"/>
<xs:element minOccurs="0" name="fieldPath" type="xs:string"/>
<xs:element minOccurs="0" name="operator" type="xs:string"/>
<xs:element name="caseSensitive" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="whenConstraint">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="values" nillable="true" type="xs:anyType"/>
<xs:element minOccurs="0" name="valuePath" type="xs:string"/>
<xs:element minOccurs="0" name="constraint" type="tns:constraint"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="requiredConstraint">
<xs:sequence>
<xs:element minOccurs="0" name="fieldPath" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="mustOccurConstraint">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="requiredFields" type="tns:requiredConstraint"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:mustOccurConstraint"/>
<xs:element minOccurs="0" name="min" type="xs:int"/>
<xs:element minOccurs="0" name="max" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="lookupConstraint">
<xs:complexContent>
<xs:extension base="tns:commonLookup">
<xs:sequence/>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="commonLookup">
<xs:sequence>
<xs:element minOccurs="0" name="desc" type="xs:string"/>
<xs:element minOccurs="0" name="id" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="params" nillable="true" type="tns:commonLookupParam"/>
<xs:element minOccurs="0" name="resultReturnKey" type="xs:string"/>
<xs:element minOccurs="0" name="searchParamIdKey" type="xs:string"/>
<xs:element minOccurs="0" name="searchTypeId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="commonLookupParam">
<xs:sequence>
<xs:element name="caseSensitive" type="xs:boolean"/>
<xs:element minOccurs="0" name="childLookup" type="tns:commonLookup"/>
<xs:element minOccurs="0" name="dataType" type="tns:dataType"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="defaultValueList" nillable="true" type="xs:string"/>
<xs:element minOccurs="0" name="defaultValueString" type="xs:string"/>
<xs:element minOccurs="0" name="desc" type="xs:string"/>
<xs:element minOccurs="0" name="fieldPath" type="xs:string"/>
<xs:element minOccurs="0" name="key" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element name="optional" type="xs:boolean"/>
<xs:element minOccurs="0" name="usage" type="tns:usage"/>
<xs:element minOccurs="0" name="widget" type="tns:widget"/>
<xs:element minOccurs="0" name="writeAccess" type="tns:writeAccess"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalDocRelation">
<xs:sequence>
<xs:element minOccurs="0" name="proposalDocRelationId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalDocRelationResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:proposalDocRelationInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalsByProposalType">
<xs:sequence>
<xs:element minOccurs="0" name="proposalTypeKey" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalsByProposalTypeResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateProposal">
<xs:sequence>
<xs:element minOccurs="0" name="validationType" type="xs:string"/>
<xs:element minOccurs="0" name="proposalInfo" type="tns:proposalInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateProposalResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateProposal">
<xs:sequence>
<xs:element minOccurs="0" name="proposalId" type="xs:string"/>
<xs:element minOccurs="0" name="proposalInfo" type="tns:proposalInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateProposalResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:proposalInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalDocRelationsByIdList">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="proposalDocRelationIdList" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalDocRelationsByIdListResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalType">
<xs:sequence>
<xs:element minOccurs="0" name="proposalTypeKey" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalTypeResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:proposalTypeInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="proposalTypeInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="desc" type="xs:string"/>
<xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
<xs:complexType name="getReferenceTypes">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getReferenceTypesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalsByReference">
<xs:sequence>
<xs:element minOccurs="0" name="referenceTypeKey" type="xs:string"/>
<xs:element minOccurs="0" name="referenceId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProposalsByReferenceResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteProposalDocRelation">
<xs:sequence>
<xs:element minOccurs="0" name="proposalDocRelationId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteProposalDocRelationResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:statusInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="referenceTypeInfo">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="desc" type="xs:string"/>
<xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
<xs:simpleType name="errorLevel">
<xs:restriction base="xs:string">
<xs:enumeration value="OK"/>
<xs:enumeration value="WARN"/>
<xs:enumeration value="ERROR"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="dataType">
<xs:restriction base="xs:string">
<xs:enumeration value="STRING"/>
<xs:enumeration value="DATE"/>
<xs:enumeration value="TRUNCATED_DATE"/>
<xs:enumeration value="BOOLEAN"/>
<xs:enumeration value="INTEGER"/>
<xs:enumeration value="FLOAT"/>
<xs:enumeration value="DOUBLE"/>
<xs:enumeration value="LONG"/>
<xs:enumeration value="COMPLEX"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="usage">
<xs:restriction base="xs:string">
<xs:enumeration value="DEFAULT"/>
<xs:enumeration value="ADVANCED"/>
<xs:enumeration value="CUSTOM"/>
<xs:enumeration value="ADVANCED_CUSTOM"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="widget">
<xs:restriction base="xs:string">
<xs:enumeration value="SUGGEST_BOX"/>
<xs:enumeration value="DROPDOWN_LIST"/>
<xs:enumeration value="RADIO_BUTTONS"/>
<xs:enumeration value="CHECK_BOXES"/>
<xs:enumeration value="TEXT_BOX"/>
<xs:enumeration value="CALENDAR"/>
<xs:enumeration value="PICKER"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="writeAccess">
<xs:restriction base="xs:string">
<xs:enumeration value="ON_CREATE"/>
<xs:enumeration value="ALWAYS"/>
<xs:enumeration value="NEVER"/>
<xs:enumeration value="WHEN_NULL"/>
<xs:enumeration value="REQUIRED"/>
</xs:restriction>
</xs:simpleType>
<xs:element name="MissingParameterException" nillable="true" type="ns0:MissingParameterException"/>
<xs:element name="DoesNotExistException" nillable="true" type="ns0:DoesNotExistException"/>
<xs:element name="InvalidParameterException" nillable="true" type="ns0:InvalidParameterException"/>
<xs:element name="OperationFailedException" nillable="true" type="ns0:OperationFailedException"/>
<xs:element name="getSearchCriteriaType" nillable="true" type="ns1:getSearchCriteriaType"/>
<xs:element name="getSearchCriteriaTypeResponse" nillable="true" type="ns1:getSearchCriteriaTypeResponse"/>
<xs:element name="PermissionDeniedException" nillable="true" type="ns0:PermissionDeniedException"/>
<xs:element name="DataValidationErrorException" nillable="true" type="ns0:DataValidationErrorException"/>
<xs:element name="AlreadyExistsException" nillable="true" type="ns0:AlreadyExistsException"/>
<xs:element name="getSearchResultTypes" nillable="true" type="ns1:getSearchResultTypes"/>
<xs:element name="getSearchResultTypesResponse" nillable="true" type="ns1:getSearchResultTypesResponse"/>
<xs:element name="getSearchTypes" nillable="true" type="ns1:getSearchTypes"/>
<xs:element name="getSearchTypesResponse" nillable="true" type="ns1:getSearchTypesResponse"/>
<xs:element name="getSearchCriteriaTypes" nillable="true" type="ns1:getSearchCriteriaTypes"/>
<xs:element name="getSearchCriteriaTypesResponse" nillable="true" type="ns1:getSearchCriteriaTypesResponse"/>
<xs:element name="getSearchTypesByResult" nillable="true" type="ns1:getSearchTypesByResult"/>
<xs:element name="getSearchTypesByResultResponse" nillable="true" type="ns1:getSearchTypesByResultResponse"/>
<xs:element name="getSearchResultType" nillable="true" type="ns1:getSearchResultType"/>
<xs:element name="getSearchResultTypeResponse" nillable="true" type="ns1:getSearchResultTypeResponse"/>
<xs:element name="search" nillable="true" type="ns2:search"/>
<xs:element name="searchResponse" nillable="true" type="ns2:searchResponse"/>
<xs:element name="DependentObjectsExistException" nillable="true" type="ns0:DependentObjectsExistException"/>
<xs:element name="VersionMismatchException" nillable="true" type="ns0:VersionMismatchException"/>
<xs:element name="getSearchType" nillable="true" type="ns1:getSearchType"/>
<xs:element name="getSearchTypeResponse" nillable="true" type="ns1:getSearchTypeResponse"/>
<xs:element name="getObjectStructure" nillable="true" type="ns3:getObjectStructure"/>
<xs:element name="getObjectStructureResponse" nillable="true" type="ns3:getObjectStructureResponse"/>
<xs:element name="getSearchTypesByCriteria" nillable="true" type="ns1:getSearchTypesByCriteria"/>
<xs:element name="getSearchTypesByCriteriaResponse" nillable="true" type="ns1:getSearchTypesByCriteriaResponse"/>
<xs:element name="getObjectTypes" nillable="true" type="ns3:getObjectTypes"/>
<xs:element name="getObjectTypesResponse" nillable="true" type="ns3:getObjectTypesResponse"/>
</xs:schema>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/organization" xmlns:ns1="http://student.kuali.org/wsdl/search" xmlns:tns="http://student.kuali.org/wsdl/organization" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://student.kuali.org/wsdl/search"/>
<xs:element name="search" type="tns:search"/>
<xs:element name="searchResponse" type="tns:searchResponse"/>
<xs:complexType name="search">
<xs:sequence>
<xs:element minOccurs="0" name="arg0" type="ns1:searchRequest"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="ns1:searchResult"/>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/exceptions" xmlns:ns1="http://student.kuali.org/wsdl/proposal" xmlns:tns="http://student.kuali.org/wsdl/exceptions" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://student.kuali.org/wsdl/proposal"/>
<xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
<xs:element name="DataValidationErrorException" type="tns:DataValidationErrorException"/>
<xs:element name="DependentObjectsExistException" type="tns:DependentObjectsExistException"/>
<xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
<xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
<xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
<xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
<xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
<xs:element name="VersionMismatchException" type="tns:VersionMismatchException"/>
<xs:complexType name="MissingParameterException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DoesNotExistException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="InvalidParameterException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="OperationFailedException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="PermissionDeniedException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DataValidationErrorException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="validationResults" nillable="true" type="ns1:validationResultInfo"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="AlreadyExistsException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DependentObjectsExistException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="VersionMismatchException">
<xs:sequence>
<xs:element minOccurs="0" name="message" type="xs:string"/>
</xs:sequence>
</xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="getSearchResultTypeResponse">
    <wsdl:part element="tns:getSearchResultTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultType">
    <wsdl:part element="tns:getSearchResultType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReferenceTypesResponse">
    <wsdl:part element="tns:getReferenceTypesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part element="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypesResponse">
    <wsdl:part element="tns:getSearchResultTypesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypeResponse">
    <wsdl:part element="tns:getSearchCriteriaTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedProposalDocRelationTypesForProposalTypeResponse">
    <wsdl:part element="tns:getAllowedProposalDocRelationTypesForProposalTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteProposalDocRelationResponse">
    <wsdl:part element="tns:deleteProposalDocRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part element="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalTypesForReferenceTypeResponse">
    <wsdl:part element="tns:getProposalTypesForReferenceTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="search">
    <wsdl:part element="tns:search" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalTypesResponse">
    <wsdl:part element="tns:getProposalTypesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByIdList">
    <wsdl:part element="tns:getProposalDocRelationsByIdList" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationTypes">
    <wsdl:part element="tns:getProposalDocRelationTypes" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposal">
    <wsdl:part element="tns:getProposal" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypesResponse">
    <wsdl:part element="tns:getSearchCriteriaTypesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByProposalType">
    <wsdl:part element="tns:getProposalsByProposalType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalResponse">
    <wsdl:part element="tns:getProposalResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByIdListResponse">
    <wsdl:part element="tns:getProposalsByIdListResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteProposalResponse">
    <wsdl:part element="tns:deleteProposalResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelation">
    <wsdl:part element="tns:getProposalDocRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createProposalDocRelation">
    <wsdl:part element="tns:createProposalDocRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchResultTypes">
    <wsdl:part element="tns:getSearchResultTypes" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByProposal">
    <wsdl:part element="tns:getProposalDocRelationsByProposal" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByType">
    <wsdl:part element="tns:getProposalDocRelationsByType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateProposal">
    <wsdl:part element="tns:validateProposal" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateProposalResponse">
    <wsdl:part element="tns:updateProposalResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateProposalDocRelation">
    <wsdl:part element="tns:updateProposalDocRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationTypesResponse">
    <wsdl:part element="tns:getProposalDocRelationTypesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createProposal">
    <wsdl:part element="tns:createProposal" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createProposalResponse">
    <wsdl:part element="tns:createProposalResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateProposalDocRelationResponse">
    <wsdl:part element="tns:updateProposalDocRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByProposalResponse">
    <wsdl:part element="tns:getProposalDocRelationsByProposalResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByDocumentResponse">
    <wsdl:part element="tns:getProposalDocRelationsByDocumentResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteProposalDocRelation">
    <wsdl:part element="tns:deleteProposalDocRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteria">
    <wsdl:part element="tns:getSearchTypesByCriteria" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResult">
    <wsdl:part element="tns:getSearchTypesByResult" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypeResponse">
    <wsdl:part element="tns:getSearchTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByResultResponse">
    <wsdl:part element="tns:getSearchTypesByResultResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateProposal">
    <wsdl:part element="tns:updateProposal" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByProposalTypeResponse">
    <wsdl:part element="tns:getProposalsByProposalTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part element="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypes">
    <wsdl:part element="tns:getObjectTypes" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateProposalDocRelationResponse">
    <wsdl:part element="tns:validateProposalDocRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllowedProposalDocRelationTypesForProposalType">
    <wsdl:part element="tns:getAllowedProposalDocRelationTypesForProposalType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByIdListResponse">
    <wsdl:part element="tns:getProposalDocRelationsByIdListResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part element="tns:AlreadyExistsException" name="AlreadyExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalTypes">
    <wsdl:part element="tns:getProposalTypes" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchType">
    <wsdl:part element="tns:getSearchType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="VersionMismatchException">
    <wsdl:part element="tns:VersionMismatchException" name="VersionMismatchException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getReferenceTypes">
    <wsdl:part element="tns:getReferenceTypes" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part element="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part element="tns:PermissionDeniedException" name="PermissionDeniedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DataValidationErrorException">
    <wsdl:part element="tns:DataValidationErrorException" name="DataValidationErrorException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructure">
    <wsdl:part element="tns:getObjectStructure" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaTypes">
    <wsdl:part element="tns:getSearchCriteriaTypes" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchCriteriaType">
    <wsdl:part element="tns:getSearchCriteriaType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectStructureResponse">
    <wsdl:part element="tns:getObjectStructureResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getObjectTypesResponse">
    <wsdl:part element="tns:getObjectTypesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalTypeResponse">
    <wsdl:part element="tns:getProposalTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalType">
    <wsdl:part element="tns:getProposalType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteProposal">
    <wsdl:part element="tns:deleteProposal" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DependentObjectsExistException">
    <wsdl:part element="tns:DependentObjectsExistException" name="DependentObjectsExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByTypeResponse">
    <wsdl:part element="tns:getProposalDocRelationsByTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByState">
    <wsdl:part element="tns:getProposalsByState" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationType">
    <wsdl:part element="tns:getProposalDocRelationType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createProposalDocRelationResponse">
    <wsdl:part element="tns:createProposalDocRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByStateResponse">
    <wsdl:part element="tns:getProposalsByStateResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalTypesForReferenceType">
    <wsdl:part element="tns:getProposalTypesForReferenceType" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesByCriteriaResponse">
    <wsdl:part element="tns:getSearchTypesByCriteriaResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationsByDocument">
    <wsdl:part element="tns:getProposalDocRelationsByDocument" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypesResponse">
    <wsdl:part element="tns:getSearchTypesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationTypeResponse">
    <wsdl:part element="tns:getProposalDocRelationTypeResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByIdList">
    <wsdl:part element="tns:getProposalsByIdList" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByReferenceResponse">
    <wsdl:part element="tns:getProposalsByReferenceResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateProposalResponse">
    <wsdl:part element="tns:validateProposalResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalsByReference">
    <wsdl:part element="tns:getProposalsByReference" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProposalDocRelationResponse">
    <wsdl:part element="tns:getProposalDocRelationResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateProposalDocRelation">
    <wsdl:part element="tns:validateProposalDocRelation" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSearchTypes">
    <wsdl:part element="tns:getSearchTypes" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchResponse">
    <wsdl:part element="tns:searchResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ProposalService">
    <wsdl:operation name="getProposalDocRelationType">
      <wsdl:input message="tns:getProposalDocRelationType" name="getProposalDocRelationType">
    </wsdl:input>
      <wsdl:output message="tns:getProposalDocRelationTypeResponse" name="getProposalDocRelationTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalTypesForReferenceType">
      <wsdl:input message="tns:getProposalTypesForReferenceType" name="getProposalTypesForReferenceType">
    </wsdl:input>
      <wsdl:output message="tns:getProposalTypesForReferenceTypeResponse" name="getProposalTypesForReferenceTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <wsdl:input message="tns:getSearchCriteriaType" name="getSearchCriteriaType">
    </wsdl:input>
      <wsdl:output message="tns:getSearchCriteriaTypeResponse" name="getSearchCriteriaTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createProposalDocRelation">
      <wsdl:input message="tns:createProposalDocRelation" name="createProposalDocRelation">
    </wsdl:input>
      <wsdl:output message="tns:createProposalDocRelationResponse" name="createProposalDocRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <wsdl:input message="tns:getSearchResultTypes" name="getSearchResultTypes">
    </wsdl:input>
      <wsdl:output message="tns:getSearchResultTypesResponse" name="getSearchResultTypesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationTypes">
      <wsdl:input message="tns:getProposalDocRelationTypes" name="getProposalDocRelationTypes">
    </wsdl:input>
      <wsdl:output message="tns:getProposalDocRelationTypesResponse" name="getProposalDocRelationTypesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <wsdl:input message="tns:getSearchTypes" name="getSearchTypes">
    </wsdl:input>
      <wsdl:output message="tns:getSearchTypesResponse" name="getSearchTypesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaTypes">
      <wsdl:input message="tns:getSearchCriteriaTypes" name="getSearchCriteriaTypes">
    </wsdl:input>
      <wsdl:output message="tns:getSearchCriteriaTypesResponse" name="getSearchCriteriaTypesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByState">
      <wsdl:input message="tns:getProposalsByState" name="getProposalsByState">
    </wsdl:input>
      <wsdl:output message="tns:getProposalsByStateResponse" name="getProposalsByStateResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByIdList">
      <wsdl:input message="tns:getProposalsByIdList" name="getProposalsByIdList">
    </wsdl:input>
      <wsdl:output message="tns:getProposalsByIdListResponse" name="getProposalsByIdListResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <wsdl:input message="tns:getSearchTypesByResult" name="getSearchTypesByResult">
    </wsdl:input>
      <wsdl:output message="tns:getSearchTypesByResultResponse" name="getSearchTypesByResultResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <wsdl:input message="tns:getSearchResultType" name="getSearchResultType">
    </wsdl:input>
      <wsdl:output message="tns:getSearchResultTypeResponse" name="getSearchResultTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposal">
      <wsdl:input message="tns:getProposal" name="getProposal">
    </wsdl:input>
      <wsdl:output message="tns:getProposalResponse" name="getProposalResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalTypes">
      <wsdl:input message="tns:getProposalTypes" name="getProposalTypes">
    </wsdl:input>
      <wsdl:output message="tns:getProposalTypesResponse" name="getProposalTypesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createProposal">
      <wsdl:input message="tns:createProposal" name="createProposal">
    </wsdl:input>
      <wsdl:output message="tns:createProposalResponse" name="createProposalResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:AlreadyExistsException" name="AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedProposalDocRelationTypesForProposalType">
      <wsdl:input message="tns:getAllowedProposalDocRelationTypesForProposalType" name="getAllowedProposalDocRelationTypesForProposalType">
    </wsdl:input>
      <wsdl:output message="tns:getAllowedProposalDocRelationTypesForProposalTypeResponse" name="getAllowedProposalDocRelationTypesForProposalTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByDocument">
      <wsdl:input message="tns:getProposalDocRelationsByDocument" name="getProposalDocRelationsByDocument">
    </wsdl:input>
      <wsdl:output message="tns:getProposalDocRelationsByDocumentResponse" name="getProposalDocRelationsByDocumentResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByProposal">
      <wsdl:input message="tns:getProposalDocRelationsByProposal" name="getProposalDocRelationsByProposal">
    </wsdl:input>
      <wsdl:output message="tns:getProposalDocRelationsByProposalResponse" name="getProposalDocRelationsByProposalResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="search">
      <wsdl:input message="tns:search" name="search">
    </wsdl:input>
      <wsdl:output message="tns:searchResponse" name="searchResponse">
    </wsdl:output>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateProposalDocRelation">
      <wsdl:input message="tns:validateProposalDocRelation" name="validateProposalDocRelation">
    </wsdl:input>
      <wsdl:output message="tns:validateProposalDocRelationResponse" name="validateProposalDocRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByType">
      <wsdl:input message="tns:getProposalDocRelationsByType" name="getProposalDocRelationsByType">
    </wsdl:input>
      <wsdl:output message="tns:getProposalDocRelationsByTypeResponse" name="getProposalDocRelationsByTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteProposal">
      <wsdl:input message="tns:deleteProposal" name="deleteProposal">
    </wsdl:input>
      <wsdl:output message="tns:deleteProposalResponse" name="deleteProposalResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DependentObjectsExistException" name="DependentObjectsExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProposalDocRelation">
      <wsdl:input message="tns:updateProposalDocRelation" name="updateProposalDocRelation">
    </wsdl:input>
      <wsdl:output message="tns:updateProposalDocRelationResponse" name="updateProposalDocRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <wsdl:input message="tns:getSearchType" name="getSearchType">
    </wsdl:input>
      <wsdl:output message="tns:getSearchTypeResponse" name="getSearchTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectStructure">
      <wsdl:input message="tns:getObjectStructure" name="getObjectStructure">
    </wsdl:input>
      <wsdl:output message="tns:getObjectStructureResponse" name="getObjectStructureResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelation">
      <wsdl:input message="tns:getProposalDocRelation" name="getProposalDocRelation">
    </wsdl:input>
      <wsdl:output message="tns:getProposalDocRelationResponse" name="getProposalDocRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByProposalType">
      <wsdl:input message="tns:getProposalsByProposalType" name="getProposalsByProposalType">
    </wsdl:input>
      <wsdl:output message="tns:getProposalsByProposalTypeResponse" name="getProposalsByProposalTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateProposal">
      <wsdl:input message="tns:validateProposal" name="validateProposal">
    </wsdl:input>
      <wsdl:output message="tns:validateProposalResponse" name="validateProposalResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProposal">
      <wsdl:input message="tns:updateProposal" name="updateProposal">
    </wsdl:input>
      <wsdl:output message="tns:updateProposalResponse" name="updateProposalResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DataValidationErrorException" name="DataValidationErrorException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:VersionMismatchException" name="VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <wsdl:input message="tns:getSearchTypesByCriteria" name="getSearchTypesByCriteria">
    </wsdl:input>
      <wsdl:output message="tns:getSearchTypesByCriteriaResponse" name="getSearchTypesByCriteriaResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByIdList">
      <wsdl:input message="tns:getProposalDocRelationsByIdList" name="getProposalDocRelationsByIdList">
    </wsdl:input>
      <wsdl:output message="tns:getProposalDocRelationsByIdListResponse" name="getProposalDocRelationsByIdListResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalType">
      <wsdl:input message="tns:getProposalType" name="getProposalType">
    </wsdl:input>
      <wsdl:output message="tns:getProposalTypeResponse" name="getProposalTypeResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferenceTypes">
      <wsdl:input message="tns:getReferenceTypes" name="getReferenceTypes">
    </wsdl:input>
      <wsdl:output message="tns:getReferenceTypesResponse" name="getReferenceTypesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByReference">
      <wsdl:input message="tns:getProposalsByReference" name="getProposalsByReference">
    </wsdl:input>
      <wsdl:output message="tns:getProposalsByReferenceResponse" name="getProposalsByReferenceResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteProposalDocRelation">
      <wsdl:input message="tns:deleteProposalDocRelation" name="deleteProposalDocRelation">
    </wsdl:input>
      <wsdl:output message="tns:deleteProposalDocRelationResponse" name="deleteProposalDocRelationResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidParameterException" name="InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingParameterException" name="MissingParameterException">
    </wsdl:fault>
      <wsdl:fault message="tns:DoesNotExistException" name="DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault message="tns:OperationFailedException" name="OperationFailedException">
    </wsdl:fault>
      <wsdl:fault message="tns:PermissionDeniedException" name="PermissionDeniedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <wsdl:input message="tns:getObjectTypes" name="getObjectTypes">
    </wsdl:input>
      <wsdl:output message="tns:getObjectTypesResponse" name="getObjectTypesResponse">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ProposalServiceSoapBinding" type="tns:ProposalService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getProposalDocRelationType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalDocRelationType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalDocRelationTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalTypesForReferenceType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalTypesForReferenceType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalTypesForReferenceTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createProposalDocRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createProposalDocRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createProposalDocRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalDocRelationTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalDocRelationTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchCriteriaTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchCriteriaTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchCriteriaTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByState">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalsByState">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalsByStateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalsByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalsByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchResultType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchResultType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchResultTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByResult">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByResult">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByResultResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createProposal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createProposal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createProposalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllowedProposalDocRelationTypesForProposalType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllowedProposalDocRelationTypesForProposalType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllowedProposalDocRelationTypesForProposalTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByDocument">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalDocRelationsByDocument">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalDocRelationsByDocumentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByProposal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalDocRelationsByProposal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalDocRelationsByProposalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="search">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="search">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalDocRelationsByType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalDocRelationsByTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateProposalDocRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateProposalDocRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateProposalDocRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteProposal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteProposal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteProposalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectStructure">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectStructure">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectStructureResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getSearchType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProposalDocRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateProposalDocRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateProposalDocRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalDocRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalDocRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByProposalType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalsByProposalType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalsByProposalTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateProposal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateProposal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateProposalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProposal">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateProposal">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateProposalResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DataValidationErrorException">
        <soap:fault name="DataValidationErrorException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalDocRelationsByIdList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalDocRelationsByIdList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalDocRelationsByIdListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSearchTypesByCriteria">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSearchTypesByCriteria">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSearchTypesByCriteriaResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getReferenceTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getReferenceTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getReferenceTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteProposalDocRelation">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteProposalDocRelation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteProposalDocRelationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProposalsByReference">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getProposalsByReference">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProposalsByReferenceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getObjectTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getObjectTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getObjectTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ProposalService">
    <wsdl:port binding="tns:ProposalServiceSoapBinding" name="ProposalServicePort">
      <soap:address location="http://localhost:9393/ks-embedded-dev/services/ProposalService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>