<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<import resource="classpath:rice-ksb-context.xml" />

	<bean id="propertyConfigurer"
		class="org.kuali.student.common.util.ModPropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:core-web.properties</value>
			</list>
		</property>
		<property name="customConfigSystemProperty" value="ks.config.location"/>
		<property name="order" value="0" />
        <property name="properties">
            <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                <property name="targetObject" ref="riceConfig" />
                <property name="targetMethod" value="getProperties" />
            </bean>
        </property>
	</bean>

	<!-- Datasources -->

	<bean id="orgDataSource"
		class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init"
		destroy-method="close">
		<property name="uniqueResourceName" value="orgDataSource" />
		<property name="xaDataSourceClassName"
			value="${jdbc.xaDataSourceClassName}" />
		<property name="xaProperties" value="${propertiesPrefix.org.jdbc.xaDataSourceProperties}"/>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
	</bean>

	<bean id="emDataSource"
		class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init"
		destroy-method="close">
		<property name="uniqueResourceName" value="emDataSource" />
		<property name="xaDataSourceClassName"
			value="${jdbc.xaDataSourceClassName}" />
		<property name="xaProperties" value="${propertiesPrefix.em.jdbc.xaDataSourceProperties}"/>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
	</bean>

	<bean id="messageDataSource"
		class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init"
		destroy-method="close">
		<property name="uniqueResourceName" value="messageDataSource" />
		<property name="xaDataSourceClassName"
			value="${jdbc.xaDataSourceClassName}" />
		<property name="xaProperties" value="${propertiesPrefix.message.jdbc.xaDataSourceProperties}"/>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
	</bean>

	<!-- JPA EntityManagerFactory -->
	<bean id="orgEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="Organization"/>
		<property name="jpaVendorAdapter">
			<bean class="${jpa.vendorAdapter}">
				<property name="databasePlatform"
					value="${jpa.databasePlatform}" />
				<property name="showSql" value="${jpa.showSql}" />
				<property name="generateDdl" value="${jpa.generateDdl}" />
			</bean>
		</property>
		<property name="persistenceXmlLocation"
			value="classpath:META-INF/organization-persistence.xml" />
		<property name="dataSource" ref="orgDataSource" />
		<property name="jpaPropertyMap" value="${propertiesPrefix.jpa.properties}"/>
	</bean>

	<bean id="emEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="EnumerationManagement"/>
		<property name="jpaVendorAdapter">
			<bean class="${jpa.vendorAdapter}">
				<property name="databasePlatform"
					value="${jpa.databasePlatform}" />
				<property name="showSql" value="${jpa.showSql}" />
				<property name="generateDdl" value="${jpa.generateDdl}" />
			</bean>
		</property>
		<property name="persistenceXmlLocation"
			value="classpath:META-INF/enumeration-persistence.xml" />
		<property name="dataSource" ref="emDataSource" />
		<property name="jpaPropertyMap" value="${propertiesPrefix.jpa.properties}"/>
	</bean>

	<bean id="messageEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="MessageManagement"/>
		<property name="jpaVendorAdapter">
			<bean class="${jpa.vendorAdapter}">
				<property name="databasePlatform"
					value="${jpa.databasePlatform}" />
				<property name="showSql" value="${jpa.showSql}" />
				<property name="generateDdl" value="${jpa.generateDdl}" />
			</bean>
		</property>
		<property name="persistenceXmlLocation"
			value="classpath:META-INF/messages-persistence.xml" />
		<property name="dataSource" ref="messageDataSource" />
		<property name="jpaPropertyMap" value="${propertiesPrefix.jpa.properties}"/>
	</bean>

	<!-- JTA Configuration -->
    <!--  Atomikos Configurations -->
    <bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
        init-method="init" destroy-method="shutdownForce">
        <constructor-arg value="${propertiesPrefix.atomikos.properties}"/>
    </bean>

    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
        depends-on="userTransactionService">
        <property name="startupTransactionService" value="true" />
        <property name="forceShutdown" value="true" />
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"
        depends-on="userTransactionService">
        <property name="transactionTimeout" value="3500" />
    </bean>

    <bean id="JtaTxManager"
        class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager" />
        <property name="userTransaction" ref="atomikosUserTransaction" />
        <property name="transactionSynchronizationName" value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION" />
    </bean>

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<tx:annotation-driven transaction-manager="JtaTxManager" />

	<!-- JPA PostProcessing -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- Enumeration Service Config -->
	<bean id="emDao"
		class="org.kuali.student.core.enumerationmanagement.dao.impl.EnumerationManagementDAOImpl">
	</bean>
	
	<bean id="emServiceImpl"
		class="org.kuali.student.core.enumerationmanagement.service.impl.EnumerationManagementServiceImpl">
		<property name="enumDAO" ref="emDao" />
	</bean>

	<!-- Organization Service Config -->
	<bean id="orgDao"
		class="org.kuali.student.core.organization.dao.impl.OrganizationDaoImpl">
	</bean>

	<bean id="orgServiceImpl"
		class="org.kuali.student.core.organization.service.impl.OrganizationServiceImpl">
		<property name="organizationDao" ref="orgDao" />
		<property name="searchManager" ref="orgSearchManager" />
		<property name="dictionaryServiceDelegate" ref="dictionaryServiceDelegate"/>
	</bean>

	<bean id="dictionaryServiceDelegate" 
		class="org.kuali.student.core.dictionary.service.impl.DictionaryServiceSpringImpl">
		<constructor-arg index="0" value="classpath:organization-dictionary-config.xml" />
	</bean>
	
	<bean id="orgSearchManager"
		class="org.kuali.student.core.search.service.impl.SearchManagerImpl"
		autowire="byType">
		<constructor-arg index="0" value="classpath:organization-search-config.xml" />
	</bean>

	<!-- Message Service Config -->
	<bean id="messageDao"
		class="org.kuali.student.core.messages.dao.impl.MessageManagementDAOImpl">
	</bean>
	
	<bean id="messageServiceImpl"
		class="org.kuali.student.core.messages.service.impl.MessageServiceImpl">
		<property name="messageDAO" ref="messageDao" />
	</bean>
	
	<!-- Preloaded data -->

	<bean id="dataLoadListener" class="org.kuali.student.common.util.jpa.LoadSqlListener">
		<property name="jtaTxManager" ref="JtaTxManager"/>
		<property name="preloadMap">
			<map>
				<entry key="Organization">
					<value>classpath:ks-org.sql</value>
				</entry>
			</map>
		</property>
	</bean>

    <bean id="mapExceptionAdvisor"
        class="org.kuali.student.common.util.ExceptionMappingAdvice">
        <property name="defaultException"
            value="org.kuali.student.core.exceptions.OperationFailedException" />
        <property name="exceptionMapping">
            <map>
                <entry key="javax.persistence.EntityExistsException"
                    value="org.kuali.student.core.exceptions.AlreadyExistsException" />
                <entry
                    key="org.hibernate.exception.ConstraintViolationException"
                    value="org.kuali.student.core.exceptions.AlreadyExistsException" />
            </map>
        </property>
    </bean>
    <aop:config>
        <aop:aspect id="dataAccessToBusinessException"
            ref="mapExceptionAdvisor">
            <aop:after-throwing
                pointcut="execution(* org.kuali.student.core.organization.service.*.*(..))"
                method="afterThrowing" throwing="ex" />
            <aop:after-throwing
                pointcut="execution(* org.kuali.student.core.person.service.*.*(..))"
                method="afterThrowing" throwing="ex" />
            <aop:after-throwing
                pointcut="execution(* org.kuali.student.core.atp.service.*.*(..))"
                method="afterThrowing" throwing="ex" />
            <aop:after-throwing
                pointcut="execution(* org.kuali.student.core.messages.service.*.*(..))"
                method="afterThrowing" throwing="ex" />
        </aop:aspect>
    </aop:config>

</beans>
