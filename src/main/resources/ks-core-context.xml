<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<bean class="org.kuali.student.common.util.ModPropertyPlaceholderConfigurer">
		<property name="properties" ref="configProperties" />
	</bean>

	<bean id="config" class="org.kuali.student.rice.config.spring.NestedConfigFactoryBean">
		<property name="configLocations">
			<list>
				<value>classpath:org/kuali/rice/standalone/config/standalone-config.xml</value>
			</list>
		</property>
	</bean>

	<bean id="configProperties" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="config" />
		<property name="targetMethod" value="getProperties" />
	</bean>
	<!-- Datasources -->
	<!--	<bean id="defaultDataSource" abstract="true"-->
	<!--
		class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init"
	-->
	<!--		destroy-method="close">-->
	<!--
		<property name="xaDataSourceClassName"
		value="${jdbc.xaDataSourceClassName}" />
	-->
	<!--		<property name="xaProperties">-->
	<!--			<props>-->
	<!--				<prop key="user">org</prop>-->
	<!--				<prop key="password">org</prop>-->
	<!--				<prop key="databaseName">target/orgDB</prop>-->
	<!--				<prop key="createDatabase">create</prop>-->
	<!--			</props>-->
	<!--		</property>-->
	<!--		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />-->
	<!--		<property name="testQuery" value="${jdbc.validationQuery}" />-->
	<!--	</bean>-->

	<bean id="orgDataSource" class="org.kuali.rice.core.database.XAPoolDataSource">
		<property name="transactionManager" ref="jotm" />
		<property name="driverClassName" value="${jdbc.ClassName}" />
		<property name="url" value="${jdbc.URL}" />
		<property name="maxSize" value="10" />
		<property name="minSize" value="10" />
		<property name="maxWait" value="600" />
		<property name="validationQuery" value="values(1)" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!--	<bean id="orgDataSource" parent="defaultDataSource">-->
	<!--		<property name="uniqueResourceName" value="orgDataSource" />-->
	<!--	</bean>-->

	<!--	<bean id="emDataSource" parent="defaultDataSource">-->
	<!--		<property name="uniqueResourceName" value="emDataSource" />-->
	<!--		<property name="xaProperties">-->
	<!--			<props>-->
	<!--				<prop key="user">em</prop>-->
	<!--				<prop key="password">em</prop>-->
	<!--				<prop key="databaseName">target/emDB</prop>-->
	<!--				<prop key="createDatabase">create</prop>-->
	<!--			</props>-->
	<!--		</property>-->
	<!--	</bean>-->
<!---->
	<!--	<bean id="messageDataSource" parent="defaultDataSource">-->
	<!--
		<property name="uniqueResourceName" value="messageDataSource" />
	-->
	<!--		<property name="xaProperties">-->
	<!--			<props>-->
	<!--				<prop key="user">message</prop>-->
	<!--				<prop key="password">message</prop>-->
	<!--				<prop key="databaseName">target/messageDB</prop>-->
	<!--				<prop key="createDatabase">create</prop>-->
	<!--			</props>-->
	<!--		</property>-->
	<!--	</bean>-->
<!---->
	<!--	<bean id="commentDataSource" parent="defaultDataSource">-->
	<!--
		<property name="uniqueResourceName" value="commentDataSource" />
	-->
	<!--	</bean>-->

	<!-- JPA EntityManagerFactory -->
	<bean id="defaultEntityManagerFactory" abstract="true"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jpaVendorAdapter">
			<bean class="${jpa.vendorAdapter}">
				<property name="databasePlatform" value="${jpa.databasePlatform}" />
				<property name="showSql" value="${jpa.showSql}" />
				<property name="generateDdl" value="${jpa.generateDdl}" />
			</bean>
		</property>
		<property name="jpaPropertyMap" value="${jpa.properties}"/>

	</bean>

	<bean id="orgEntityManagerFactory" parent="defaultEntityManagerFactory">
		<property name="persistenceUnitName" value="Organization" />
		<property name="persistenceXmlLocation"
			value="classpath:META-INF/organization-persistence.xml" />
		<property name="dataSource" ref="orgDataSource" />
	</bean>
	<bean id="orgEntityManager"
		class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
		<property name="entityManagerFactory" ref="orgEntityManagerFactory" />
	</bean>

	<bean id="emEntityManagerFactory" parent="defaultEntityManagerFactory">
		<property name="persistenceUnitName" value="EnumerationManagement" />
		<property name="persistenceXmlLocation"
			value="classpath:META-INF/enumeration-persistence.xml" />
		<property name="dataSource" ref="orgDataSource" />
	</bean>
	<bean id="emEntityManager"
		class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
		<property name="entityManagerFactory" ref="emEntityManagerFactory" />
	</bean>

	<bean id="messageEntityManagerFactory" parent="defaultEntityManagerFactory">
		<property name="persistenceUnitName" value="MessageManagement" />
		<property name="persistenceXmlLocation" value="classpath:META-INF/messages-persistence.xml" />
		<property name="dataSource" ref="orgDataSource" />
	</bean>

	<bean id="messageEntityManager"
		class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
		<property name="entityManagerFactory" ref="messageEntityManagerFactory" />
	</bean>

	<bean id="commentEntityManagerFactory" parent="defaultEntityManagerFactory">
		<property name="persistenceUnitName" value="Comment" />
		<property name="persistenceXmlLocation" value="classpath:META-INF/comment-persistence.xml" />
		<property name="dataSource" ref="orgDataSource" />
	</bean>

	<bean id="commentEntityManager"
		class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
		<property name="entityManagerFactory" ref="commentEntityManagerFactory" />
	</bean>

	<!-- JTA Configuration -->
	<!--  Atomikos Configurations -->

<!--	<bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"-->
<!--		init-method="init" destroy-method="shutdownForce">-->
<!--		<constructor-arg>-->
<!--			<props>-->
<!--				<prop key="com.atomikos.icatch.service">-->
<!--					com.atomikos.icatch.standalone.UserTransactionServiceFactory</prop>-->
<!--				<prop key="com.atomikos.icatch.output_dir">target</prop>-->
<!--				<prop key="com.atomikos.icatch.log_base_dir">target</prop>-->
<!--				<prop key="com.atomikos.icatch.console_log_level">WARN</prop>-->
<!--				<prop key="com.atomikos.icatch.enable_logging">true</prop>-->
<!--			</props>-->
<!--		</constructor-arg>-->
<!--	</bean>-->
<!---->
<!--	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"-->
<!--		depends-on="userTransactionService">-->
<!--		<property name="startupTransactionService" value="true" />-->
<!--		<property name="forceShutdown" value="true" />-->
<!--	</bean>-->
<!---->
<!--	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"-->
<!--		depends-on="userTransactionService">-->
<!--		<property name="transactionTimeout" value="3500" />-->
<!--	</bean>-->

	<bean id="jotm" class="org.springframework.transaction.jta.JotmFactoryBean">
		<property name="defaultTimeout" value="${transaction.timeout}" />
	</bean>

	<bean id="userTransaction" class="org.kuali.rice.core.jta.UserTransactionFactoryBean">
		<property name="defaultUserTransaction">
			<ref local="jotm" />
		</property>
	</bean>
	<bean id="jtaTransactionManager" class="org.kuali.rice.core.jta.TransactionManagerFactoryBean">
		<property name="defaultTransactionManager">
			<ref local="jotm" />
		</property>
	</bean>

	<bean id="JtaTxManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="jtaTransactionManager" />
		<property name="userTransaction" ref="userTransaction" />
		<property name="transactionSynchronizationName" value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION" />
	</bean>

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<tx:annotation-driven transaction-manager="JtaTxManager" />

	<!-- JPA PostProcessing -->
	<!--	<bean-->
	<!--
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"
		/>
	-->


	<!-- Enumeration Service Config -->
	<bean id="emDao"
		class="org.kuali.student.core.enumerationmanagement.dao.impl.EnumerationManagementDAOImpl">
		<property name="entityManager" ref="emEntityManager" />
	</bean>

	<bean id="emServiceImpl"
		class="org.kuali.student.core.enumerationmanagement.service.impl.EnumerationManagementServiceImpl">
		<property name="enumDAO" ref="emDao" />
	</bean>


	<!-- Organization Service Config -->
	<bean id="orgDao"
		class="org.kuali.student.core.organization.dao.impl.OrganizationDaoImpl">
		<property name="em" ref="orgEntityManager" />
	</bean>

	<bean id="orgServiceImpl"
		class="org.kuali.student.core.organization.service.impl.OrganizationServiceImpl">
		<property name="organizationDao" ref="orgDao" />
		<property name="searchManager" ref="orgSearchManager" />
		<property name="dictionaryServiceDelegate" ref="dictionaryServiceDelegate" />
	</bean>

	<bean id="dictionaryServiceDelegate"
		class="org.kuali.student.core.dictionary.service.impl.DictionaryServiceSpringImpl">
		<constructor-arg index="0"
			value="classpath:organization-dictionary-config.xml" />
	</bean>

	<bean id="orgSearchManager"
		class="org.kuali.student.core.search.service.impl.SearchManagerImpl"
		autowire="byType">
		<constructor-arg index="0"
			value="classpath:organization-search-config.xml" />
	</bean>

	<!-- Message Service Config -->
	<bean id="messageDao"
		class="org.kuali.student.core.messages.dao.impl.MessageManagementDAOImpl">
		<property name="entityManager" ref="messageEntityManager" />
	</bean>

	<bean id="messageServiceImpl"
		class="org.kuali.student.core.messages.service.impl.MessageServiceImpl">
		<property name="messageDAO" ref="messageDao" />
	</bean>

	<!-- Comment Service -->
	<bean id="commentDao" class="org.kuali.student.core.comment.dao.impl.CommentDaoImpl">
		<property name="em" ref="commentEntityManager" />
	</bean>

	<bean id="commentDictionaryServiceDelegate"
		class="org.kuali.student.core.dictionary.service.impl.DictionaryServiceSpringImpl">
		<constructor-arg index="0"
			value="classpath:comment-dictionary-config.xml" />
	</bean>

	<bean id="commentSearchManager"
		class="org.kuali.student.core.search.service.impl.SearchManagerImpl"
		autowire="byType">
		<constructor-arg index="0"
			value="classpath:comment-search-config.xml" />
	</bean>

	<bean id="commentServiceImpl"
		class="org.kuali.student.core.comment.service.impl.CommentServiceImpl">
		<property name="commentDao" ref="commentDao" />
		<property name="dictionaryServiceDelegate" ref="commentDictionaryServiceDelegate" />
		<property name="searchManager" ref="commentSearchManager" />
	</bean>

	<!-- Preloaded data -->
	<!--	-->
<!--	<bean id="dataLoadListener" class="org.kuali.student.common.util.jpa.LoadSqlListener">-->
<!---->
<!--		<property name="jtaTxManager" ref="JtaTxManager" />-->
<!--		<property name="preloadMap">-->
<!--			<map>-->
<!--				<entry key="Organization">-->
<!--					<value>classpath:ks-org.sql</value>-->
<!--				</entry>-->
<!--			</map>-->
<!--		</property>-->
<!--	</bean>-->

	<bean id="mapExceptionAdvisor" class="org.kuali.student.common.util.ExceptionMappingAdvice">
		<property name="defaultException"
			value="org.kuali.student.core.exceptions.OperationFailedException" />
		<property name="exceptionMapping">
			<map>
				<entry key="javax.persistence.EntityExistsException"
					value="org.kuali.student.core.exceptions.AlreadyExistsException" />
				<entry key="org.hibernate.exception.ConstraintViolationException"
					value="org.kuali.student.core.exceptions.AlreadyExistsException" />
			</map>
		</property>
	</bean>
	<aop:config>
		<aop:aspect id="dataAccessToBusinessException" ref="mapExceptionAdvisor">
			<aop:after-throwing
				pointcut="execution(* org.kuali.student.core.organization.service.*.*(..))"
				method="afterThrowing" throwing="ex" />
			<aop:after-throwing
				pointcut="execution(* org.kuali.student.core.person.service.*.*(..))"
				method="afterThrowing" throwing="ex" />
			<aop:after-throwing
				pointcut="execution(* org.kuali.student.core.atp.service.*.*(..))"
				method="afterThrowing" throwing="ex" />
			<aop:after-throwing
				pointcut="execution(* org.kuali.student.core.messages.service.*.*(..))"
				method="afterThrowing" throwing="ex" />
		</aop:aspect>
	</aop:config>

</beans>
