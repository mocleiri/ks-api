<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
	
	<!--
	<import resource="nl-additional-context.xml"/>
	-->
	
	<bean id="searchManager"
		class="org.kuali.student.core.search.service.impl.SearchManagerImpl"
		autowire="byType">
		<constructor-arg index="0" value="classpath:lo-search-config.xml" />
	</bean>

	<bean id="dictionaryServiceDelegate" 
	   class="org.kuali.student.core.dictionary.service.impl.DictionaryServiceSpringImpl">
		<constructor-arg index="0" value="classpath:lo-dictionary-config.xml" />
	</bean>

	<bean id="ks.messageServiceMock" class="org.kuali.student.core.messages.service.impl.MessageServiceMock">
		<property name="messageFiles">
			<list>
 				<value>classpath:gwt-messages.xml</value>				
			</list>
		</property>
	</bean>
	
	<bean id="validator" class="org.kuali.student.common.validator.Validator">
 		<property name="messageService" ref="ks.messageServiceMock"/> 		
	</bean>

    <bean id="mapExceptionAdvisor"
        class="org.kuali.student.common.util.ExceptionMappingAdvice">
        <property name="defaultException"
            value="org.kuali.student.core.exceptions.OperationFailedException" />
        <property name="exceptionMapping">
            <map>
                <entry key="javax.persistence.EntityExistsException"
                    value="org.kuali.student.core.exceptions.AlreadyExistsException" />
                <entry
                    key="org.hibernate.exception.ConstraintViolationException"
                    value="org.kuali.student.core.exceptions.AlreadyExistsException" />
            </map>
        </property>
    </bean>
    <aop:config>
        <aop:aspect id="dataAccessToBusinessException"
            ref="mapExceptionAdvisor">
            <aop:after-throwing
                pointcut="execution(* org.kuali.student.lum.lo.service.*.*(..))"
                method="afterThrowing" throwing="ex" />
        </aop:aspect>
    </aop:config>

</beans>
