<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="TranslationService" targetNamespace="http://student.kuali.org/wsdl/nlt" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://student.kuali.org/wsdl/nlt" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://student.kuali.org/wsdl/exceptions" xmlns:ns1="http://student.kuali.org/wsdl/dictionary" xmlns:tns="http://student.kuali.org/wsdl/nlt" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/nlt">
    <xs:import namespace="http://student.kuali.org/wsdl/dictionary"/>
    <xs:element name="getNaturalLanguageForLuStatement" type="tns:getNaturalLanguageForLuStatement"/>
    <xs:element name="getNaturalLanguageForLuStatementInfo" type="tns:getNaturalLanguageForLuStatementInfo"/>
    <xs:element name="getNaturalLanguageForLuStatementInfoResponse" type="tns:getNaturalLanguageForLuStatementInfoResponse"/>
    <xs:element name="getNaturalLanguageForLuStatementResponse" type="tns:getNaturalLanguageForLuStatementResponse"/>
    <xs:element name="getNaturalLanguageForReqComponent" type="tns:getNaturalLanguageForReqComponent"/>
    <xs:element name="getNaturalLanguageForReqComponentInfo" type="tns:getNaturalLanguageForReqComponentInfo"/>
    <xs:element name="getNaturalLanguageForReqComponentInfoResponse" type="tns:getNaturalLanguageForReqComponentInfoResponse"/>
    <xs:element name="getNaturalLanguageForReqComponentResponse" type="tns:getNaturalLanguageForReqComponentResponse"/>
    <xs:element name="getNaturalLanguageForStatementAsTree" type="tns:getNaturalLanguageForStatementAsTree"/>
    <xs:element name="getNaturalLanguageForStatementAsTreeResponse" type="tns:getNaturalLanguageForStatementAsTreeResponse"/>
    <xs:element name="getNaturalLanguageForStatementInfoAsTree" type="tns:getNaturalLanguageForStatementInfoAsTree"/>
    <xs:element name="getNaturalLanguageForStatementInfoAsTreeResponse" type="tns:getNaturalLanguageForStatementInfoAsTreeResponse"/>
    <xs:complexType name="getNaturalLanguageForReqComponentInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="reqComponent" type="tns:reqComponentInfo"/>
            <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="reqComponentInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="reqCompFields" type="tns:reqCompFieldInfo"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
            <xs:element minOccurs="0" name="requiredComponentType" type="tns:reqComponentTypeInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="reqCompFieldInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="metaInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="versionInd" type="xs:string"/>
            <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="createId" type="xs:string"/>
            <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="updateId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="reqComponentTypeInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="reqCompFieldTypes">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element maxOccurs="unbounded" minOccurs="0" name="reqCompFieldType" type="tns:reqCompFieldTypeInfo"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="nlUsageTemplates" type="tns:reqComponentTypeNLTemplateInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType abstract="true" name="typeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="reqCompFieldTypeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" ref="ns1:fieldDescriptor"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="reqComponentTypeNLTemplateInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="template" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="nlUsageTypeKey" type="xs:string"/>
        <xs:attribute name="language" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="Attribute">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForReqComponentInfoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForStatementInfoAsTree">
        <xs:sequence>
            <xs:element minOccurs="0" name="cluId" type="xs:string"/>
            <xs:element minOccurs="0" name="statementInfo" type="tns:luStatementInfo"/>
            <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="luStatementInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="operator" type="tns:statementOperatorTypeKey"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="luStatementIds" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="reqComponentIds" type="xs:string"/>
            <xs:element minOccurs="0" name="attributes" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfo"/>
            <xs:element minOccurs="0" name="luStatementType" type="tns:luStatementTypeInfo"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="parentId" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="luStatementTypeInfo">
        <xs:complexContent>
            <xs:extension base="tns:typeInfo">
                <xs:sequence>
                    <xs:element minOccurs="0" name="allowedReqComponentTypes">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element maxOccurs="unbounded" minOccurs="0" name="reqComponentTypeKey" type="xs:string"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element minOccurs="0" name="allowedLuStatementTypes">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element maxOccurs="unbounded" minOccurs="0" name="luStatementTypeKey" type="xs:string"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="statementHeader" type="tns:luStatementTypeHeaderTemplateInfo"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="luStatementTypeHeaderTemplateInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="template" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="nlUsageTypeKey" type="xs:string"/>
        <xs:attribute name="language" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForStatementInfoAsTreeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:nlTranslationNodeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="nlTranslationNodeInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="booleanExpression" type="xs:string"/>
            <xs:element minOccurs="0" name="nlTranslation" type="xs:string"/>
            <xs:element minOccurs="0" name="parentNode" type="tns:nlTranslationNodeInfo"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="childNodeList" type="tns:nlTranslationNodeInfo"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="referenceId" type="xs:string"/>
        <xs:attribute name="operator" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForStatementAsTree">
        <xs:sequence>
            <xs:element minOccurs="0" name="cluId" type="xs:string"/>
            <xs:element minOccurs="0" name="statementId" type="xs:string"/>
            <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForStatementAsTreeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:nlTranslationNodeInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForLuStatement">
        <xs:sequence>
            <xs:element minOccurs="0" name="cluId" type="xs:string"/>
            <xs:element minOccurs="0" name="luStatementId" type="xs:string"/>
            <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForLuStatementResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForReqComponent">
        <xs:sequence>
            <xs:element minOccurs="0" name="reqComponentId" type="xs:string"/>
            <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForReqComponentResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForLuStatementInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="cluId" type="xs:string"/>
            <xs:element minOccurs="0" name="statementInfo" type="tns:luNlStatementInfo"/>
            <xs:element minOccurs="0" name="nlUsageTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="language" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="luNlStatementInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="statementTypeId" type="xs:string"/>
            <xs:element minOccurs="0" name="operator" type="tns:statementOperatorTypeKey"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="luStatementList" type="tns:luNlStatementInfo"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="reqComponentList" type="tns:reqComponentInfo"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="getNaturalLanguageForLuStatementInfoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="statementOperatorTypeKey">
        <xs:restriction base="xs:string">
            <xs:enumeration value="AND"/>
            <xs:enumeration value="OR"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="MissingParameterException" nillable="true" type="ns0:MissingParameterException"/>
    <xs:element name="InvalidParameterException" nillable="true" type="ns0:InvalidParameterException"/>
    <xs:element name="VersionMismatchException" nillable="true" type="ns0:VersionMismatchException"/>
    <xs:element name="OperationFailedException" nillable="true" type="ns0:OperationFailedException"/>
    <xs:element name="DoesNotExistException" nillable="true" type="ns0:DoesNotExistException"/>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://student.kuali.org/wsdl/dictionary" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://student.kuali.org/wsdl/dictionary">
    <xs:element name="fieldDescriptor" type="tns:fieldDescriptor"/>
    <xs:complexType name="fieldDescriptor">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="desc" type="xs:string"/>
            <xs:element name="readOnly" type="xs:boolean"/>
            <xs:element name="dataType" type="xs:string"/>
            <xs:element minOccurs="0" name="search" type="tns:searchSelector"/>
            <xs:element minOccurs="0" name="objectStructure" type="tns:objectStructure"/>
            <xs:element minOccurs="0" name="objectStructureRef" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="searchSelector">
        <xs:sequence/>
        <xs:attribute name="key" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="objectStructure">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="type" type="tns:type"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="type">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="state" type="tns:state"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="state">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="field" type="tns:field"/>
            <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="field">
        <xs:sequence>
            <xs:element minOccurs="0" name="fieldDescriptor" type="tns:fieldDescriptor"/>
            <xs:element minOccurs="0" name="constraintDescriptor" type="tns:constraintDescriptor"/>
            <xs:element name="selector" type="xs:boolean"/>
            <xs:element name="dynamic" type="xs:boolean"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="constraintDescriptor">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="constraintSelector">
        <xs:sequence>
            <xs:element minOccurs="0" name="minValue" type="xs:string"/>
            <xs:element minOccurs="0" name="maxValue" type="xs:string"/>
            <xs:element minOccurs="0" name="minLength" type="xs:int"/>
            <xs:element minOccurs="0" name="maxLength" type="xs:string"/>
            <xs:element minOccurs="0" name="validChars" type="tns:validCharsConstraint"/>
            <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="case" type="tns:caseConstraint"/>
            <xs:element minOccurs="0" name="typeStateCase" type="tns:typeStateCaseConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="lookup" type="tns:lookupConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="className" type="xs:string"/>
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="serverSide" type="xs:boolean" use="required"/>
        <xs:attribute name="locale" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="validCharsConstraint">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="fields" type="xs:string"/>
        <xs:attribute name="separator" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="requireConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="caseConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="when" type="tns:whenConstraint"/>
        </xs:sequence>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="operator" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="whenConstraint">
        <xs:sequence>
            <xs:element minOccurs="0" name="constraint" type="tns:constraintSelector"/>
        </xs:sequence>
        <xs:attribute name="value" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="typeStateCaseConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="typeStateWhen" type="tns:typeStateWhenConstraint"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="typeStateWhenConstraint">
        <xs:sequence>
            <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="maxOccurs" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="state" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="lookupConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="lookupKey" type="tns:lookupKeyConstraint"/>
        </xs:sequence>
        <xs:attribute name="search" type="xs:string"/>
        <xs:attribute name="searchField" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="lookupKeyConstraint">
        <xs:sequence/>
        <xs:attribute name="field" type="xs:string"/>
        <xs:attribute name="mapsTo" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="occursConstraint">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="require" type="tns:requireConstraint"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="occurs" type="tns:occursConstraint"/>
        </xs:sequence>
        <xs:attribute name="min" type="xs:int"/>
        <xs:attribute name="max" type="xs:int"/>
    </xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://student.kuali.org/wsdl/exceptions" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/exceptions">
    <xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
    <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
    <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
    <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
    <xs:element name="VersionMismatchException" type="tns:VersionMismatchException"/>
    <xs:complexType name="MissingParameterException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="InvalidParameterException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="VersionMismatchException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="OperationFailedException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DoesNotExistException">
        <xs:sequence>
            <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="getNaturalLanguageForLuStatementInfoResponse">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForLuStatementInfoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForLuStatementResponse">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForLuStatementResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForLuStatementInfo">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForLuStatementInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForStatementAsTreeResponse">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForStatementAsTreeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForStatementInfoAsTreeResponse">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForStatementInfoAsTreeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForReqComponentResponse">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForReqComponentResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part name="InvalidParameterException" element="tns:InvalidParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="VersionMismatchException">
    <wsdl:part name="VersionMismatchException" element="tns:VersionMismatchException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part name="OperationFailedException" element="tns:OperationFailedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part name="DoesNotExistException" element="tns:DoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForReqComponentInfo">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForReqComponentInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForLuStatement">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForLuStatement">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForStatementInfoAsTree">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForStatementInfoAsTree">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForReqComponent">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForReqComponent">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForStatementAsTree">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForStatementAsTree">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part name="MissingParameterException" element="tns:MissingParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getNaturalLanguageForReqComponentInfoResponse">
    <wsdl:part name="parameters" element="tns:getNaturalLanguageForReqComponentInfoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="TranslationService">
    <wsdl:operation name="getNaturalLanguageForReqComponentInfo">
      <wsdl:input name="getNaturalLanguageForReqComponentInfo" message="tns:getNaturalLanguageForReqComponentInfo">
    </wsdl:input>
      <wsdl:output name="getNaturalLanguageForReqComponentInfoResponse" message="tns:getNaturalLanguageForReqComponentInfoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForStatementInfoAsTree">
      <wsdl:input name="getNaturalLanguageForStatementInfoAsTree" message="tns:getNaturalLanguageForStatementInfoAsTree">
    </wsdl:input>
      <wsdl:output name="getNaturalLanguageForStatementInfoAsTreeResponse" message="tns:getNaturalLanguageForStatementInfoAsTreeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForStatementAsTree">
      <wsdl:input name="getNaturalLanguageForStatementAsTree" message="tns:getNaturalLanguageForStatementAsTree">
    </wsdl:input>
      <wsdl:output name="getNaturalLanguageForStatementAsTreeResponse" message="tns:getNaturalLanguageForStatementAsTreeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForLuStatement">
      <wsdl:input name="getNaturalLanguageForLuStatement" message="tns:getNaturalLanguageForLuStatement">
    </wsdl:input>
      <wsdl:output name="getNaturalLanguageForLuStatementResponse" message="tns:getNaturalLanguageForLuStatementResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForReqComponent">
      <wsdl:input name="getNaturalLanguageForReqComponent" message="tns:getNaturalLanguageForReqComponent">
    </wsdl:input>
      <wsdl:output name="getNaturalLanguageForReqComponentResponse" message="tns:getNaturalLanguageForReqComponentResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForLuStatementInfo">
      <wsdl:input name="getNaturalLanguageForLuStatementInfo" message="tns:getNaturalLanguageForLuStatementInfo">
    </wsdl:input>
      <wsdl:output name="getNaturalLanguageForLuStatementInfoResponse" message="tns:getNaturalLanguageForLuStatementInfoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="VersionMismatchException" message="tns:VersionMismatchException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="TranslationServiceServiceSoapBinding" type="tns:TranslationService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getNaturalLanguageForReqComponentInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNaturalLanguageForReqComponentInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNaturalLanguageForReqComponentInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForStatementInfoAsTree">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNaturalLanguageForStatementInfoAsTree">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNaturalLanguageForStatementInfoAsTreeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForStatementAsTree">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNaturalLanguageForStatementAsTree">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNaturalLanguageForStatementAsTreeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForLuStatement">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNaturalLanguageForLuStatement">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNaturalLanguageForLuStatementResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForLuStatementInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNaturalLanguageForLuStatementInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNaturalLanguageForLuStatementInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="VersionMismatchException">
        <soap:fault name="VersionMismatchException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getNaturalLanguageForReqComponent">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getNaturalLanguageForReqComponent">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getNaturalLanguageForReqComponentResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="TranslationService">
    <wsdl:port name="TranslationServicePort" binding="tns:TranslationServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/TranslationServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
