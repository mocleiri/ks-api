<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:search="http://student.kuali.org/xsd/search-extension"
xmlns:dict="http://student.kuali.org/xsd/dictionary-extension"
xsi:schemaLocation="
http://student.kuali.org/xsd/search-extension http://student.kuali.org/xsd/search-extension/search-extension.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
">
<!-- *** Automatically Generated ***
on: Mon Jan 11 23:04:04 EST 2010
by: org.kuali.student.dictionary.writer.SearchModelWriter
using: Excel Spreadsheet src/test/resources/type-state configuration.xlsExcel Spreadsheet src/test/resources/orchestration-dictionary.xls, 
 -->

<!-- Search Types -->

	<search:searchType id="org.search.NameAndDescription">
		<search:name>Search by name and/or related person</search:name>
		<search:desc>Returns a list of organizations with the specified name and with a specified person related to it</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.NameAndDescription" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="org.criteria.NameAndDescription" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="org.search.ByRelatedPerson">
		<search:name>Search by name and/or related person</search:name>
		<search:desc>Returns a list of organizations with the specified name and with a specified person related to it</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.Name" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="org.criteria.RelatedPerson" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="org.search.all.active.org.types">
		<search:name>All org hierarchies</search:name>
		<search:desc>Returns all org hierarchies, name and id</search:desc>
		<search:searchResultTypeInfo><ref bean="org.result.org.type.info" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="kuali.criteria.none" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="person.search.personQuickViewByGivenName">
		<search:name>All org hierarchies</search:name>
		<search:desc>Returns all org hierarchies, name and id</search:desc>
		<search:searchResultTypeInfo><ref bean="person.results.GivenName" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="person.criteria.personGivenName" /></search:searchCriteriaTypeInfo>
		</search:searchType>

	<search:searchType id="lu.search.generic">
		<search:name>Basic and Advanced Search</search:name>
		<search:desc>Query with multiple optional elements to satisfy most advanced pickers</search:desc>
		<search:searchResultTypeInfo><ref bean="lu.result.FullView" /></search:searchResultTypeInfo>
		<search:searchCriteriaTypeInfo><ref bean="lu.criteria.luAdvancedCriteria" /></search:searchCriteriaTypeInfo>
		</search:searchType>

<!-- Search Criteria -->

	<search:searchCriteriaTypeInfo id="org.criteria.NameAndDescription">
		<search:name>Search by name and/or related person</search:name>
		<search:desc>Search by name and/or related person</search:desc>
		<search:queryParams>
			<ref bean="org.queryParam.Name" />
			<ref bean="org.queryParam.Description" />
			<ref bean="org.queryParam.OrganizationTypes" />
			<ref bean="org.queryParam.OrganizationStates" />
			<ref bean="kuali.queryParam.MaximumResults" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="org.criteria.RelatedPerson">
		<search:name>Search by name and/or related person</search:name>
		<search:desc>Search by name and/or related person</search:desc>
		<search:queryParams>
			<ref bean="org.queryParam.personIds" />
			<ref bean="org.queryParam.orgPersonRelationTypes" />
			<ref bean="org.queryParam.OrganizationTypes" />
			<ref bean="org.queryParam.OrganizationStates" />
			<ref bean="kuali.queryParam.MaximumResults" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="kuali.criteria.none">
		<search:name>Search by name and/or related person</search:name>
		<search:desc>Search by name and/or related person</search:desc>
		<search:queryParams>
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="person.criteria.personGivenName">
		<!-- TODO: Add a criteria to retrict to a particular set of departments? -->
		<search:name>No criteria</search:name>
		<search:desc>No criteria needed</search:desc>
		<search:queryParams>
			<ref bean="person.queryParam.personGivenName" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

	<search:searchCriteriaTypeInfo id="lu.criteria.luAdvancedCriteria">
		<search:name>LuAdvancedCriteria</search:name>
		<search:desc>Advanced criteria</search:desc>
		<search:queryParams>
			<ref bean="lu.queryParam.luOptionalId" />
			<ref bean="lu.queryParam.luOptionalLongName" />
			<ref bean="lu.queryParam.luOptionalType" />
			<ref bean="lu.queryParam.luOptionalCode" />
			<ref bean="lu.queryParam.luOptionalLevel" />
		</search:queryParams>
		</search:searchCriteriaTypeInfo>

<!-- Search Criteria Parameters -->

	<search:queryParam id="org.queryParam.Name">
			<dict:fieldDescriptor>
			<dict:name>Name of organization</dict:name>
			<dict:desc>Substring to use to search in name fields</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="org.queryParam.Description">
			<dict:fieldDescriptor>
			<dict:name>Description</dict:name>
			<dict:desc>Substring to use to search in the short or long description fields</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="org.queryParam.OrganizationTypes">
			<dict:fieldDescriptor>
			<dict:name>Organization Types</dict:name>
			<dict:desc>List of organization types to search</dict:desc>
			<dict:dataType>List&lt;String&gt;</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="org.queryParam.OrganizationStates">
			<dict:fieldDescriptor>
			<dict:name>Organization States</dict:name>
			<dict:desc>List of organization states to search</dict:desc>
			<dict:dataType>List&lt;String&gt;</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="kuali.queryParam.MaximumResults">
			<dict:fieldDescriptor>
			<dict:name>Maximum Results</dict:name>
			<dict:desc>Special parameter that limits the number of result rows that this query will return.</dict:desc>
			<dict:dataType>integer</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="org.queryParam.personIds">
			<!-- if a person id is specified then the relation type must be specified as well -->
			<dict:fieldDescriptor>
			<dict:name>Ids of a person who must be related to this org</dict:name>
			<dict:desc>The internal identifier of the person or peope</dict:desc>
			<dict:dataType>List&lt;String&gt;</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="org.queryParam.orgPersonRelationTypes">
			<!-- if a person id is specified then the relation type must be specified as well -->
			<dict:fieldDescriptor>
			<dict:name>Org person relation types to use to match the person</dict:name>
			<dict:desc>Type or types defining the relationship of the person to the org</dict:desc>
			<dict:dataType>List&lt;String&gt;</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="person.queryParam.personGivenName">
			<dict:fieldDescriptor>
			<dict:name>Name Lookup Field</dict:name>
			<dict:desc>Name of organization</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="lu.queryParam.luOptionalId">
			<dict:fieldDescriptor>
			<dict:name>Id</dict:name>
			<dict:desc>Unique identifier for a lu.</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="lu.queryParam.luOptionalLongName">
			<dict:fieldDescriptor>
			<dict:name>Name</dict:name>
			<dict:desc>Long name</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="lu.queryParam.luOptionalType">
			<dict:fieldDescriptor>
			<dict:name>Type</dict:name>
			<dict:desc>Lu type (course, program etc.)</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="lu.queryParam.luOptionalCode">
			<dict:fieldDescriptor>
			<dict:name>Code</dict:name>
			<dict:desc>Lu code</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

	<search:queryParam id="lu.queryParam.luOptionalLevel">
			<dict:fieldDescriptor>
			<dict:name>Level</dict:name>
			<dict:desc>Lu level grad/undergrad</dict:desc>
			<dict:dataType>string</dict:dataType>
			</dict:fieldDescriptor>
		</search:queryParam>

<!-- Search Results -->

	<search:searchResultTypeInfo id="org.result.NameAndDescription">
		<search:name>Name (long and short)</search:name>
		<search:desc>Search that returns all the known campus locations</search:desc>
		<search:resultColumns>
			<ref bean="org.resultColumn.orgId" />
			<ref bean="org.resultColumn.orgType" />
			<ref bean="org.resultColumn.orgState" />
			<ref bean="org.resultColumn.orgShortName" />
			<ref bean="org.resultColumn.orgLongName" />
			<ref bean="org.resultColumn.orgSortName" />
			<ref bean="org.resultColumn.orgShortDesc" />
			<ref bean="org.resultColumn.orgLongDesc" />
		</search:resultColumns>
		</search:searchResultTypeInfo>

	<search:searchResultTypeInfo id="org.result.Name">
		<search:name>Name (long and short)</search:name>
		<search:desc>Search that returns all the known campus locations</search:desc>
		<search:resultColumns>
			<ref bean="org.resultColumn.orgId" />
			<ref bean="org.resultColumn.orgType" />
			<ref bean="org.resultColumn.orgState" />
			<ref bean="org.resultColumn.orgShortName" />
			<ref bean="org.resultColumn.orgLongName" />
			<ref bean="org.resultColumn.orgSortName" />
		</search:resultColumns>
		</search:searchResultTypeInfo>

	<search:searchResultTypeInfo id="org.result.org.type.info">
		<search:name>ID and Given name of person</search:name>
		<search:desc>Search that returns all the known campus locations</search:desc>
		<search:resultColumns>
			<ref bean="org.resultColumn.key" />
			<ref bean="org.resultColumn.name" />
			<ref bean="org.resultColumn.desc" />
			<ref bean="org.resultColumn.effective_date" />
			<ref bean="org.resultColumn.expiration_date" />
		</search:resultColumns>
		</search:searchResultTypeInfo>

	<search:searchResultTypeInfo id="person.results.GivenName">
		<search:name>ID and Given name of person</search:name>
		<search:desc>Search that returns all the known campus locations</search:desc>
		<search:resultColumns>
			<ref bean="person.resultColumn.PersonId" />
			<ref bean="person.resultColumn.GivenName" />
		</search:resultColumns>
		</search:searchResultTypeInfo>

	<search:searchResultTypeInfo id="lu.result.FullView">
		<search:name>Lu Full View</search:name>
		<search:desc>Full view of clus</search:desc>
		<search:resultColumns>
			<ref bean="lu.resultColumn.cluId" />
			<ref bean="lu.resultColumn.luOptionalLongName" />
			<ref bean="lu.resultColumn.luOptionalCode" />
			<ref bean="lu.resultColumn.luOptionalLevel" />
		</search:resultColumns>
		</search:searchResultTypeInfo>

<!-- Search Result Columns -->

	<search:resultColumn id="org.resultColumn.orgId">
		<search:name>Organization Identifier</search:name>
		<search:desc>Identifier for the organization</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgType">
		<search:name>Organization Type</search:name>
		<search:desc>Organization Type</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgState">
		<search:name>Organization State</search:name>
		<search:desc>Organization State</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgShortName">
		<search:name>Organization Short Name</search:name>
		<search:desc>Short name for the organization, recorded as the default listing</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgLongName">
		<search:name>Organization Long Name</search:name>
		<search:desc>Long name for the organization, recorded as the default listing</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgSortName">
		<search:name>Organization Sort Name</search:name>
		<search:desc>Sort name for the organization, recorded as the default listing</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgShortDesc">
		<search:name>Organization short description</search:name>
		<search:desc>Short description for the organization</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.orgLongDesc">
		<search:name>Organization Long description</search:name>
		<search:desc>Long description of the organization</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.key">
		<search:name>Given name of person</search:name>
		<search:desc>Internal id</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.name">
		<search:name>Given name of person</search:name>
		<search:desc>Internal id</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.desc">
		<search:name>Internal person id</search:name>
		<search:desc>Internal id</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.effective_date">
		<search:name>Given name of person</search:name>
		<search:desc>Internal id</search:desc>
		<search:dataType>date</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="org.resultColumn.expiration_date">
		<search:name>Given name of person</search:name>
		<search:desc>Internal id</search:desc>
		<search:dataType>date</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="person.resultColumn.PersonId">
		<search:name>Internal person id</search:name>
		<search:desc>Internal id</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="person.resultColumn.GivenName">
		<search:name>Given name of person</search:name>
		<search:desc>Internal id</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="lu.resultColumn.cluId">
		<search:name>Clu Id</search:name>
		<search:desc>Identifier of a Clu</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="lu.resultColumn.luOptionalLongName">
		<search:name>Name</search:name>
		<search:desc>Long name for the lu, recorded as the default listing.</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="lu.resultColumn.luOptionalCode">
		<search:name>Code</search:name>
		<search:desc>Lu code</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<search:resultColumn id="lu.resultColumn.luOptionalLevel">
		<search:name>Level</search:name>
		<search:desc>Level of Lu</search:desc>
		<search:dataType>string</search:dataType>
		</search:resultColumn>

	<!-- Query Map -->
	<bean id="queryMap" class="org.springframework.beans.factory.config.MapFactoryBean">
	<property name="sourceMap">
	<map>
		
		<entry
 key="org.search.NameAndDescription"		>
			<value>
select id, type, state, shortName, longName, sortName
from org
where type in PARAM_LIST_OF_TYPES
and state in PARAM_LIST_OF_STATES
and OPTIONALLY 
shortName like &apos;%PARAM_NAME%: or longName like &apos;%PARAM_NAME%&apos; or sortName like &apos;%PARAM_NAME%&apos;
and OPTIONALLY 
shortDesc like &apos;%PARAM_DESC%: or longDesc like &apos;%PARAM_DESC%&apos;
</value>
		</entry>
		
		<entry
 key="org.search.ByRelatedPerson"		>
			<value>
select id, type, state, shortName, longName, sortName
from org
where type in PARAM_LIST_OF_TYPES
and state in PARAM_LIST_OF_STATES
and OPTIONALLY
exists (select person_id from org.person.relation
where org.person.relation.org.id = org_d
and org.person.relation.type in LOF_ORG_PERSON_TYPES
and org.persson.relation.person_id in LIST OF_ORG_PERSON_IDS)
</value>
		</entry>
		
		<entry
 key="org.search.all.active.org.types"		>
			<value>
select key, name, desc, effective_date, expiration_date
from OrgType
where expiration_date is null
</value>
		</entry>
		
		<entry
 key="lu.search.generic"		>
			<value>
TBD already in xml
</value>
		</entry>
	</map>
	</property>
	</bean>
</beans>
