package org.kuali.student.brms.runtime.ast.failure
 
import org.kuali.student.brms.internal.common.runtime.ast.BooleanNode;
 
rule "OR"
	#salience 1
	#no-loop true
	when
		n : BooleanNode( label == "+", leftNode.value == false, rightNode.value == false, leftNode.nodeMessage != "null", rightNode.nodeMessage != "null" )
	then
		String logMessage = n.getLeftNode().getNodeMessage() + " OR " + n.getRightNode().getNodeMessage();
		n.setNodeMessage(logMessage);
		//System.out.println( n.getNodeMessage() + " (rule=\"OR\")");
		
		BooleanNode parent = n.getParent();
		if (parent != null){
			update(parent);
		}
end


rule "AND2"
	#no-loop true
	when
		n : BooleanNode( label == "*", leftNode.value == false, rightNode.value == false, leftNode.nodeMessage != "null", rightNode.nodeMessage != "null" )
	then
		String logMessage = n.getLeftNode().getNodeMessage() + " AND " + n.getRightNode().getNodeMessage();
		n.setNodeMessage(logMessage);
		#System.out.println( logMessage + " (rule=\"AND2\")");
		
		BooleanNode parent = n.getParent();
		if (parent != null){
			update(parent);
		}
end

rule "AND1"
	#no-loop true
	when
		n : BooleanNode( label == "*", (leftNode.value == false && rightNode.value == true && leftNode.nodeMessage != "null" ) || 
		(leftNode.value == true && rightNode.value == false && rightNode.nodeMessage != "null") )
	then
		String logMessage = "test";
		
		if (n.getLeftNode().getValue() == false)
			logMessage = n.getLeftNode().getNodeMessage();
		else if (n.getRightNode().getValue() == false)
			logMessage = n.getRightNode().getNodeMessage();
		
		n.setNodeMessage(logMessage);
		#System.out.println( logMessage + " (rule=\"AND1\")");
		
		BooleanNode parent = n.getParent();
		if (parent != null){
			update(parent);
		}
end
