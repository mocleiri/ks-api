<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jaxws="http://cxf.apache.org/jaxws"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd
  	http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">
  	
	<bean id="proxyTicketRetrieverFilter" class="org.kuali.student.security.filter.ProxyTicketRetrieverFilter">
    	<security:custom-filter before="AUTHENTICATION_PROCESSING_FILTER"/>
    	<property name="proxyTargetService" value="${ks.default.security.saml.proxyTicket.serviceAddress}"/>
    	<property name="samlIssuerService" ref="proxyTicketValidationClient"/>
  	</bean>
  	
  	<bean id="serviceProperties" class="org.springframework.security.ui.cas.ServiceProperties">
		<property name="service" value="${ks.default.security.cas.webapp.service.context}/j_spring_cas_security_check"/>
		<property name="sendRenew" value="false"/>
	</bean>

	<security:authentication-manager alias="authenticationManager"/>
	<bean id="proxyGrantingTicketStorage" class="org.jasig.cas.client.proxy.ProxyGrantingTicketStorageImpl"/>
	<bean id="proxyRetriever" class="org.jasig.cas.client.proxy.Cas20ProxyRetriever">
		<constructor-arg index="0" value="${ks.default.security.cas.serverAddress}"/>
	</bean>

	<bean id="casProcessingFilter" class="org.springframework.security.ui.cas.CasProcessingFilter">
		<security:custom-filter position="CAS_PROCESSING_FILTER"/>
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="authenticationFailureUrl" value="/logout.html"/>
		<property name="defaultTargetUrl" value="/"/>
		<property name="proxyGrantingTicketStorage" ref="proxyGrantingTicketStorage" />
        <property name="proxyReceptorUrl" value="/secure/receptor"/>
	</bean>
	
	<bean id="casProcessingFilterEntryPoint" class="org.springframework.security.ui.cas.CasProcessingFilterEntryPoint">
		<property name="loginUrl" value="${ks.default.security.cas.serverAddress}/login"/>
		<property name="serviceProperties" ref="serviceProperties"/>
	</bean>
	
	<bean id="casAuthenticationProvider" class="org.springframework.security.providers.cas.CasAuthenticationProvider">
		<security:custom-authentication-provider />
		<property name="userDetailsService" ref="ksUserDetailsService"/>
		<property name="serviceProperties" ref="serviceProperties"/>
		<property name="ticketValidator">
			<bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<constructor-arg index="0" value="${ks.default.security.cas.serverAddress}"/>
				<property name="proxyGrantingTicketStorage" ref="proxyGrantingTicketStorage"/>
        		<property name="proxyCallbackUrl" value="${ks.default.security.cas.webapp.service.context}/secure/receptor"/>
        		<property name="proxyRetriever" ref="proxyRetriever"/>
			</bean>
		</property>
		<property name="key" value="an_id_for_this_auth_provider_only"/>
	</bean>

	<!-- Service and Client for proxy ticket validation and SAML -->
	<bean id="proxyTicketValidationServiceImpl"
		class="org.kuali.student.security.saml.service.ProxyTicketValidationServiceImpl">
		<property name="casServerUrl" value="${ks.default.security.cas.serverAddress}"/>
		<!-- I need to set the saml properties inside this service, have not figured out 
		     how to pass the properties without injection, don't even know if cxf provides a hook -->
		<property name="samlTokenCxfOutInterceptor" ref="wss4jOutInterceptor"/>
		<property name="samlIssuerForUser" value="org.kuali.student.principal"/>
	</bean>

	<bean id="proxyTicketValidationClient"
		class="org.kuali.student.common.ws.beans.CxfJaxWsProxyClientFactory">
		<property name="wsdlLocation"
			value="classpath:META-INF/wsdl/ProxyTicketValidationService.wsdl"/>
		<property name="serviceEndpointInterface"
			value="org.kuali.student.security.saml.service.ProxyTicketValidationService"/>
		<property name="serviceQNameString"
			value="{http://org.kuali.student/security/saml}ProxyTicketValidationService"/>
		<property name="address" value="${ks.default.security.saml.proxyTicket.serviceAddress}"/>
		<property name="samlTokenInInterceptor" ref="wss4jInInterceptor"/>
	</bean>
	
	<bean id="wss4jInInterceptor" class="org.kuali.student.security.cxf.interceptors.SamlTokenCxfInInterceptor">
		<constructor-arg>
			<map>
	           	<entry key="action" value="Signature SAMLTokenSigned"/>
	           	<entry key="signaturePropFile" value="crypto.properties"/>
	        </map>
		</constructor-arg>
		<property name="samlIssuerForUser" value="org.kuali.student.principal"/>
		<property name="ignoreActions" value="true"/>
	</bean>
	
	<bean id="wss4jOutInterceptor" class="org.kuali.student.security.cxf.interceptors.SamlTokenCxfOutInterceptor">
		<constructor-arg>
			<map>
				<!-- <entry key="action" value="SAMLTokenUnsigned"/> -->
	           	<entry key="action" value="SAMLTokenSigned"/>
	           	<entry key="signatureKeyIdentifier" value="DirectReference"/>
	           	<entry key="samlPropFile" value="saml.properties"/>
	           			
	           	<!--   experimenting with holder-of-key confirmation method
	           	<entry key="signaturePropFile" value="crypto.properties"/>
	           	<entry key="user" value="tomcat"/>
	           	-->
	        </map>
		</constructor-arg>
	</bean>
      	 	
    <jaxws:endpoint id="proxyTicketValidationService"
        implementorClass="org.kuali.student.security.saml.service.ProxyTicketValidationServiceImpl"
        implementor="#proxyTicketValidationServiceImpl" address="/ProxyTicketValidationService">
       	<jaxws:outInterceptors>
       		<ref bean="wss4jOutInterceptor"/>
	    </jaxws:outInterceptors>
	</jaxws:endpoint>
</beans>