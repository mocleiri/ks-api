<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="RuleManagementService" targetNamespace="http://student.kuali.org/wsdl/brms/RuleManagement" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://student.kuali.org/wsdl/brms/RuleManagement" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://student.kuali.org/wsdl/brms/RuleManagement" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/brms/RuleManagement">
    <xs:element name="createBusinessRule" type="tns:createBusinessRule"/>
    <xs:element name="createBusinessRuleResponse" type="tns:createBusinessRuleResponse"/>
    <xs:element name="createNewVersion" type="tns:createNewVersion"/>
    <xs:element name="createNewVersionResponse" type="tns:createNewVersionResponse"/>
    <xs:element name="deleteBusinessRule" type="tns:deleteBusinessRule"/>
    <xs:element name="deleteBusinessRuleResponse" type="tns:deleteBusinessRuleResponse"/>
    <xs:element name="fetchAgendaInfo" type="tns:fetchAgendaInfo"/>
    <xs:element name="fetchAgendaInfoDeterminationStructure" type="tns:fetchAgendaInfoDeterminationStructure"/>
    <xs:element name="fetchAgendaInfoDeterminationStructureResponse" type="tns:fetchAgendaInfoDeterminationStructureResponse"/>
    <xs:element name="fetchAgendaInfoResponse" type="tns:fetchAgendaInfoResponse"/>
    <xs:element name="fetchBriefBusinessRuleInfo" type="tns:fetchBriefBusinessRuleInfo"/>
    <xs:element name="fetchBriefBusinessRuleInfoResponse" type="tns:fetchBriefBusinessRuleInfoResponse"/>
    <xs:element name="fetchBusinessRuleByAnchor" type="tns:fetchBusinessRuleByAnchor"/>
    <xs:element name="fetchBusinessRuleByAnchorList" type="tns:fetchBusinessRuleByAnchorList"/>
    <xs:element name="fetchBusinessRuleByAnchorListResponse" type="tns:fetchBusinessRuleByAnchorListResponse"/>
    <xs:element name="fetchBusinessRuleByAnchorResponse" type="tns:fetchBusinessRuleByAnchorResponse"/>
    <xs:element name="fetchBusinessRuleEnglish" type="tns:fetchBusinessRuleEnglish"/>
    <xs:element name="fetchBusinessRuleEnglishResponse" type="tns:fetchBusinessRuleEnglishResponse"/>
    <xs:element name="fetchBusinessRuleInfo" type="tns:fetchBusinessRuleInfo"/>
    <xs:element name="fetchBusinessRuleInfoResponse" type="tns:fetchBusinessRuleInfoResponse"/>
    <xs:element name="fetchBusinessRuleType" type="tns:fetchBusinessRuleType"/>
    <xs:element name="fetchBusinessRuleTypeResponse" type="tns:fetchBusinessRuleTypeResponse"/>
    <xs:element name="fetchDetailedBusinessRuleInfo" type="tns:fetchDetailedBusinessRuleInfo"/>
    <xs:element name="fetchDetailedBusinessRuleInfoResponse" type="tns:fetchDetailedBusinessRuleInfoResponse"/>
    <xs:element name="findAgendaTypes" type="tns:findAgendaTypes"/>
    <xs:element name="findAgendaTypesResponse" type="tns:findAgendaTypesResponse"/>
    <xs:element name="findAnchorTypes" type="tns:findAnchorTypes"/>
    <xs:element name="findAnchorTypesResponse" type="tns:findAnchorTypesResponse"/>
    <xs:element name="findAnchorsByAnchorType" type="tns:findAnchorsByAnchorType"/>
    <xs:element name="findAnchorsByAnchorTypeResponse" type="tns:findAnchorsByAnchorTypeResponse"/>
    <xs:element name="findBusinessRuleIdsByBusinessRuleType" type="tns:findBusinessRuleIdsByBusinessRuleType"/>
    <xs:element name="findBusinessRuleIdsByBusinessRuleTypeResponse" type="tns:findBusinessRuleIdsByBusinessRuleTypeResponse"/>
    <xs:element name="findBusinessRuleTypes" type="tns:findBusinessRuleTypes"/>
    <xs:element name="findBusinessRuleTypesByAgendaType" type="tns:findBusinessRuleTypesByAgendaType"/>
    <xs:element name="findBusinessRuleTypesByAgendaTypeResponse" type="tns:findBusinessRuleTypesByAgendaTypeResponse"/>
    <xs:element name="findBusinessRuleTypesResponse" type="tns:findBusinessRuleTypesResponse"/>
    <xs:element name="updateBusinessRule" type="tns:updateBusinessRule"/>
    <xs:element name="updateBusinessRuleResponse" type="tns:updateBusinessRuleResponse"/>
    <xs:element name="updateBusinessRuleState" type="tns:updateBusinessRuleState"/>
    <xs:element name="updateBusinessRuleStateResponse" type="tns:updateBusinessRuleStateResponse"/>
    <xs:complexType name="findBusinessRuleIdsByBusinessRuleType">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findBusinessRuleIdsByBusinessRuleTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchBriefBusinessRuleInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchBriefBusinessRuleInfoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="businessRuleInfoDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="originalRuleId" type="xs:string"/>
            <xs:element minOccurs="0" name="type" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorValue" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="desc" type="xs:string"/>
            <xs:element minOccurs="0" name="successMessage" type="xs:string"/>
            <xs:element minOccurs="0" name="failureMessage" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="expirationDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="state" type="xs:string"/>
            <xs:element minOccurs="0" name="compiledId" type="xs:string"/>
            <xs:element minOccurs="0" name="repositorySnapshotName" type="xs:string"/>
            <xs:element minOccurs="0" name="businessRuleElementList">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="businessRuleElement" type="tns:ruleElementDTO"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="attribute" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfoDTO"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="ruleElementDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleElemnetTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="ordinalPosition" type="xs:int"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element minOccurs="0" name="businessRuleProposition" type="tns:rulePropositionDTO"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="rulePropositionDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element minOccurs="0" name="failureMessage" type="xs:string"/>
            <xs:element minOccurs="0" name="comparisonDataTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="leftHandSide" type="tns:leftHandSideDTO"/>
            <xs:element minOccurs="0" name="comparisonOperatorTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="rightHandSide" type="tns:rightHandSideDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="leftHandSideDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="yieldValueFunction" type="tns:yieldValueFunctionDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="yieldValueFunctionDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="yieldValueFunctionType" type="xs:string"/>
            <xs:element minOccurs="0" name="factStructureList">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="factStructure" type="tns:factStructureDTO"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="factStructureDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="criteriaTypeInfo" type="tns:factCriteriaTypeInfoDTO"/>
            <xs:element minOccurs="0" name="anchorFlag" type="xs:boolean"/>
            <xs:element minOccurs="0" name="resultColumnKeyTranslations" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="paramValueMap" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="staticValueDataType" type="xs:string"/>
            <xs:element minOccurs="0" name="staticValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="factStructureId" type="xs:string"/>
        <xs:attribute name="factTypeKey" type="xs:string"/>
        <xs:attribute name="staticFact" type="xs:boolean"/>
    </xs:complexType>
    <xs:complexType name="factCriteriaTypeInfoDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element minOccurs="0" name="factParamMap" type="tns:factParamList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="factParamList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="tns:factParamMapEntry"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="factParamMapEntry">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="tns:factParamDTO"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="factParamDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element minOccurs="0" name="dataType" type="xs:string"/>
            <xs:element minOccurs="0" name="minLength" type="xs:int"/>
            <xs:element minOccurs="0" name="maxLength" type="xs:int"/>
            <xs:element minOccurs="0" name="validCharacters" type="xs:string"/>
            <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="maxOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="defTime" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="Attribute">
        <xs:sequence/>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="value" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="rightHandSideDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="expectedValue" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="metaInfoDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="createID" type="xs:string"/>
            <xs:element minOccurs="0" name="createComment" type="xs:string"/>
            <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="updateID" type="xs:string"/>
            <xs:element minOccurs="0" name="updateComment" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateBusinessRuleState">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
            <xs:element minOccurs="0" name="brState" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateBusinessRuleStateResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createBusinessRule">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleInfo" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createBusinessRuleResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteBusinessRule">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="deleteBusinessRuleResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:statusDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="statusDTO">
        <xs:sequence>
            <xs:element name="success" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchBusinessRuleInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchBusinessRuleInfoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findAnchorTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="findAnchorTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateBusinessRule">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
            <xs:element minOccurs="0" name="businessRuleInfo" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateBusinessRuleResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findBusinessRuleTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="findBusinessRuleTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchBusinessRuleEnglish">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchBusinessRuleEnglishResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findBusinessRuleTypesByAgendaType">
        <xs:sequence>
            <xs:element minOccurs="0" name="agendaTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findBusinessRuleTypesByAgendaTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findAnchorsByAnchorType">
        <xs:sequence>
            <xs:element minOccurs="0" name="anchorTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findAnchorsByAnchorTypeResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchBusinessRuleType">
        <xs:sequence>
            <xs:element minOccurs="0" name="arg0" type="xs:string"/>
            <xs:element minOccurs="0" name="arg1" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchBusinessRuleTypeResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleTypeInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="businessRuleTypeInfoDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="bussinessRuleTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="factStructureList">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="factStructure" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchDetailedBusinessRuleInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleId" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchDetailedBusinessRuleInfoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchBusinessRuleByAnchorList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="arg0" type="tns:businessRuleAnchorInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="businessRuleAnchorInfoDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorValue" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchBusinessRuleByAnchorListResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchAgendaInfo">
        <xs:sequence>
            <xs:element minOccurs="0" name="agendaTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="agendaDeterminationInfo" type="tns:agendaDeterminationInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="agendaDeterminationInfoDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="agendaDeterminationKey" type="tns:jaxbAttributeList"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchAgendaInfoResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:agendaInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="agendaInfoDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="agendaTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="agendaDeterminationInfo" type="tns:agendaDeterminationInfoDTO"/>
            <xs:element minOccurs="0" name="businessRuleTypeInfoList">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="businessRuletype" type="tns:businessRuleTypeInfoDTO"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="agendaOrchestration" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchBusinessRuleByAnchor">
        <xs:sequence>
            <xs:element minOccurs="0" name="arg0" type="tns:businessRuleAnchorInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchBusinessRuleByAnchorResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createNewVersion">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleInfo" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createNewVersionResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchAgendaInfoDeterminationStructure">
        <xs:sequence>
            <xs:element minOccurs="0" name="agendaTypeKey" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchAgendaInfoDeterminationStructureResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:agendaDeterminationInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="findAgendaTypes">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="findAgendaTypesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="DoesNotExistException" type="tns:DoesNotExistException"/>
    <xs:complexType name="DoesNotExistException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
    <xs:complexType name="InvalidParameterException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
    <xs:complexType name="OperationFailedException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
    <xs:complexType name="MissingParameterException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="PermissionDeniedException" type="tns:PermissionDeniedException"/>
    <xs:complexType name="PermissionDeniedException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="ReadOnlyException" type="tns:ReadOnlyException"/>
    <xs:complexType name="ReadOnlyException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
    <xs:complexType name="AlreadyExistsException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="DependentObjectsExistException" type="tns:DependentObjectsExistException"/>
    <xs:complexType name="DependentObjectsExistException">
        <xs:sequence/>
    </xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="findBusinessRuleTypesByAgendaTypeResponse">
    <wsdl:part name="parameters" element="tns:findBusinessRuleTypesByAgendaTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findBusinessRuleTypesByAgendaType">
    <wsdl:part name="parameters" element="tns:findBusinessRuleTypesByAgendaType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part name="AlreadyExistsException" element="tns:AlreadyExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleTypeResponse">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DoesNotExistException">
    <wsdl:part name="DoesNotExistException" element="tns:DoesNotExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAnchorTypes">
    <wsdl:part name="parameters" element="tns:findAnchorTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findBusinessRuleIdsByBusinessRuleType">
    <wsdl:part name="parameters" element="tns:findBusinessRuleIdsByBusinessRuleType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAnchorsByAnchorType">
    <wsdl:part name="parameters" element="tns:findAnchorsByAnchorType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="PermissionDeniedException">
    <wsdl:part name="PermissionDeniedException" element="tns:PermissionDeniedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part name="OperationFailedException" element="tns:OperationFailedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findBusinessRuleTypes">
    <wsdl:part name="parameters" element="tns:findBusinessRuleTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createBusinessRuleResponse">
    <wsdl:part name="parameters" element="tns:createBusinessRuleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleInfoResponse">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleInfoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part name="MissingParameterException" element="tns:MissingParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteBusinessRuleResponse">
    <wsdl:part name="parameters" element="tns:deleteBusinessRuleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchDetailedBusinessRuleInfo">
    <wsdl:part name="parameters" element="tns:fetchDetailedBusinessRuleInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateBusinessRuleState">
    <wsdl:part name="parameters" element="tns:updateBusinessRuleState">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAgendaInfoDeterminationStructure">
    <wsdl:part name="parameters" element="tns:fetchAgendaInfoDeterminationStructure">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findBusinessRuleIdsByBusinessRuleTypeResponse">
    <wsdl:part name="parameters" element="tns:findBusinessRuleIdsByBusinessRuleTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateBusinessRule">
    <wsdl:part name="parameters" element="tns:updateBusinessRule">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleByAnchorResponse">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleByAnchorResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ReadOnlyException">
    <wsdl:part name="ReadOnlyException" element="tns:ReadOnlyException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DependentObjectsExistException">
    <wsdl:part name="DependentObjectsExistException" element="tns:DependentObjectsExistException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAgendaTypes">
    <wsdl:part name="parameters" element="tns:findAgendaTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateBusinessRuleStateResponse">
    <wsdl:part name="parameters" element="tns:updateBusinessRuleStateResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAgendaInfoDeterminationStructureResponse">
    <wsdl:part name="parameters" element="tns:fetchAgendaInfoDeterminationStructureResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAgendaTypesResponse">
    <wsdl:part name="parameters" element="tns:findAgendaTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createNewVersionResponse">
    <wsdl:part name="parameters" element="tns:createNewVersionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleByAnchorListResponse">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleByAnchorListResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAnchorTypesResponse">
    <wsdl:part name="parameters" element="tns:findAnchorTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchDetailedBusinessRuleInfoResponse">
    <wsdl:part name="parameters" element="tns:fetchDetailedBusinessRuleInfoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleEnglishResponse">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleEnglishResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleByAnchor">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleByAnchor">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAgendaInfo">
    <wsdl:part name="parameters" element="tns:fetchAgendaInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createNewVersion">
    <wsdl:part name="parameters" element="tns:createNewVersion">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBriefBusinessRuleInfoResponse">
    <wsdl:part name="parameters" element="tns:fetchBriefBusinessRuleInfoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteBusinessRule">
    <wsdl:part name="parameters" element="tns:deleteBusinessRule">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findAnchorsByAnchorTypeResponse">
    <wsdl:part name="parameters" element="tns:findAnchorsByAnchorTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchAgendaInfoResponse">
    <wsdl:part name="parameters" element="tns:fetchAgendaInfoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findBusinessRuleTypesResponse">
    <wsdl:part name="parameters" element="tns:findBusinessRuleTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleByAnchorList">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleByAnchorList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleType">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBriefBusinessRuleInfo">
    <wsdl:part name="parameters" element="tns:fetchBriefBusinessRuleInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part name="InvalidParameterException" element="tns:InvalidParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleEnglish">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleEnglish">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createBusinessRule">
    <wsdl:part name="parameters" element="tns:createBusinessRule">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateBusinessRuleResponse">
    <wsdl:part name="parameters" element="tns:updateBusinessRuleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchBusinessRuleInfo">
    <wsdl:part name="parameters" element="tns:fetchBusinessRuleInfo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="RuleManagementService">
    <wsdl:operation name="findBusinessRuleIdsByBusinessRuleType">
      <wsdl:input name="findBusinessRuleIdsByBusinessRuleType" message="tns:findBusinessRuleIdsByBusinessRuleType">
    </wsdl:input>
      <wsdl:output name="findBusinessRuleIdsByBusinessRuleTypeResponse" message="tns:findBusinessRuleIdsByBusinessRuleTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBriefBusinessRuleInfo">
      <wsdl:input name="fetchBriefBusinessRuleInfo" message="tns:fetchBriefBusinessRuleInfo">
    </wsdl:input>
      <wsdl:output name="fetchBriefBusinessRuleInfoResponse" message="tns:fetchBriefBusinessRuleInfoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBusinessRuleState">
      <wsdl:input name="updateBusinessRuleState" message="tns:updateBusinessRuleState">
    </wsdl:input>
      <wsdl:output name="updateBusinessRuleStateResponse" message="tns:updateBusinessRuleStateResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createBusinessRule">
      <wsdl:input name="createBusinessRule" message="tns:createBusinessRule">
    </wsdl:input>
      <wsdl:output name="createBusinessRuleResponse" message="tns:createBusinessRuleResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteBusinessRule">
      <wsdl:input name="deleteBusinessRule" message="tns:deleteBusinessRule">
    </wsdl:input>
      <wsdl:output name="deleteBusinessRuleResponse" message="tns:deleteBusinessRuleResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException" message="tns:DependentObjectsExistException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleInfo">
      <wsdl:input name="fetchBusinessRuleInfo" message="tns:fetchBusinessRuleInfo">
    </wsdl:input>
      <wsdl:output name="fetchBusinessRuleInfoResponse" message="tns:fetchBusinessRuleInfoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAnchorTypes">
      <wsdl:input name="findAnchorTypes" message="tns:findAnchorTypes">
    </wsdl:input>
      <wsdl:output name="findAnchorTypesResponse" message="tns:findAnchorTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBusinessRule">
      <wsdl:input name="updateBusinessRule" message="tns:updateBusinessRule">
    </wsdl:input>
      <wsdl:output name="updateBusinessRuleResponse" message="tns:updateBusinessRuleResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="ReadOnlyException" message="tns:ReadOnlyException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findBusinessRuleTypes">
      <wsdl:input name="findBusinessRuleTypes" message="tns:findBusinessRuleTypes">
    </wsdl:input>
      <wsdl:output name="findBusinessRuleTypesResponse" message="tns:findBusinessRuleTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleEnglish">
      <wsdl:input name="fetchBusinessRuleEnglish" message="tns:fetchBusinessRuleEnglish">
    </wsdl:input>
      <wsdl:output name="fetchBusinessRuleEnglishResponse" message="tns:fetchBusinessRuleEnglishResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findBusinessRuleTypesByAgendaType">
      <wsdl:input name="findBusinessRuleTypesByAgendaType" message="tns:findBusinessRuleTypesByAgendaType">
    </wsdl:input>
      <wsdl:output name="findBusinessRuleTypesByAgendaTypeResponse" message="tns:findBusinessRuleTypesByAgendaTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAnchorsByAnchorType">
      <wsdl:input name="findAnchorsByAnchorType" message="tns:findAnchorsByAnchorType">
    </wsdl:input>
      <wsdl:output name="findAnchorsByAnchorTypeResponse" message="tns:findAnchorsByAnchorTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleType">
      <wsdl:input name="fetchBusinessRuleType" message="tns:fetchBusinessRuleType">
    </wsdl:input>
      <wsdl:output name="fetchBusinessRuleTypeResponse" message="tns:fetchBusinessRuleTypeResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchDetailedBusinessRuleInfo">
      <wsdl:input name="fetchDetailedBusinessRuleInfo" message="tns:fetchDetailedBusinessRuleInfo">
    </wsdl:input>
      <wsdl:output name="fetchDetailedBusinessRuleInfoResponse" message="tns:fetchDetailedBusinessRuleInfoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleByAnchorList">
      <wsdl:input name="fetchBusinessRuleByAnchorList" message="tns:fetchBusinessRuleByAnchorList">
    </wsdl:input>
      <wsdl:output name="fetchBusinessRuleByAnchorListResponse" message="tns:fetchBusinessRuleByAnchorListResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAgendaInfo">
      <wsdl:input name="fetchAgendaInfo" message="tns:fetchAgendaInfo">
    </wsdl:input>
      <wsdl:output name="fetchAgendaInfoResponse" message="tns:fetchAgendaInfoResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleByAnchor">
      <wsdl:input name="fetchBusinessRuleByAnchor" message="tns:fetchBusinessRuleByAnchor">
    </wsdl:input>
      <wsdl:output name="fetchBusinessRuleByAnchorResponse" message="tns:fetchBusinessRuleByAnchorResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createNewVersion">
      <wsdl:input name="createNewVersion" message="tns:createNewVersion">
    </wsdl:input>
      <wsdl:output name="createNewVersionResponse" message="tns:createNewVersionResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException" message="tns:DependentObjectsExistException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException" message="tns:PermissionDeniedException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAgendaInfoDeterminationStructure">
      <wsdl:input name="fetchAgendaInfoDeterminationStructure" message="tns:fetchAgendaInfoDeterminationStructure">
    </wsdl:input>
      <wsdl:output name="fetchAgendaInfoDeterminationStructureResponse" message="tns:fetchAgendaInfoDeterminationStructureResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="DoesNotExistException" message="tns:DoesNotExistException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAgendaTypes">
      <wsdl:input name="findAgendaTypes" message="tns:findAgendaTypes">
    </wsdl:input>
      <wsdl:output name="findAgendaTypesResponse" message="tns:findAgendaTypesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RuleManagementServiceServiceSoapBinding" type="tns:RuleManagementService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="findBusinessRuleIdsByBusinessRuleType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findBusinessRuleIdsByBusinessRuleType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findBusinessRuleIdsByBusinessRuleTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBriefBusinessRuleInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchBriefBusinessRuleInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchBriefBusinessRuleInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createBusinessRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createBusinessRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createBusinessRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBusinessRuleState">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateBusinessRuleState">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateBusinessRuleStateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteBusinessRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="deleteBusinessRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteBusinessRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchBusinessRuleInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchBusinessRuleInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAnchorTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findAnchorTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAnchorTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateBusinessRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateBusinessRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateBusinessRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ReadOnlyException">
        <soap:fault name="ReadOnlyException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleEnglish">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchBusinessRuleEnglish">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchBusinessRuleEnglishResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findBusinessRuleTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findBusinessRuleTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findBusinessRuleTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAnchorsByAnchorType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findAnchorsByAnchorType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAnchorsByAnchorTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findBusinessRuleTypesByAgendaType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findBusinessRuleTypesByAgendaType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findBusinessRuleTypesByAgendaTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchBusinessRuleType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchBusinessRuleTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchDetailedBusinessRuleInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchDetailedBusinessRuleInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchDetailedBusinessRuleInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleByAnchorList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchBusinessRuleByAnchorList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchBusinessRuleByAnchorListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAgendaInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchAgendaInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchAgendaInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchBusinessRuleByAnchor">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchBusinessRuleByAnchor">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchBusinessRuleByAnchorResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createNewVersion">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createNewVersion">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createNewVersionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DependentObjectsExistException">
        <soap:fault name="DependentObjectsExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="PermissionDeniedException">
        <soap:fault name="PermissionDeniedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchAgendaInfoDeterminationStructure">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchAgendaInfoDeterminationStructure">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchAgendaInfoDeterminationStructureResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DoesNotExistException">
        <soap:fault name="DoesNotExistException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findAgendaTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="findAgendaTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findAgendaTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RuleManagementService">
    <wsdl:port name="RuleManagementServicePort" binding="tns:RuleManagementServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/RuleManagementServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
