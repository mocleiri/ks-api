<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="RuleRepositoryService" targetNamespace="http://student.kuali.org/wsdl/brms/RuleRepository" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://student.kuali.org/wsdl/brms/RuleRepository" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://student.kuali.org/wsdl/brms/RuleRepository" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/brms/RuleRepository">
    <xs:element name="categoryDTO" type="tns:categoryDTO"/>
    <xs:element name="changeRuleSetState" type="tns:changeRuleSetState"/>
    <xs:element name="checkinRuleSet" type="tns:checkinRuleSet"/>
    <xs:element name="checkinRuleSetResponse" type="tns:checkinRuleSetResponse"/>
    <xs:element name="createCategory" type="tns:createCategory"/>
    <xs:element name="createCategoryResponse" type="tns:createCategoryResponse"/>
    <xs:element name="createRuleSet" type="tns:createRuleSet"/>
    <xs:element name="createRuleSetResponse" type="tns:createRuleSetResponse"/>
    <xs:element name="createRuleSetSnapshot" type="tns:createRuleSetSnapshot"/>
    <xs:element name="createRuleSetSnapshotResponse" type="tns:createRuleSetSnapshotResponse"/>
    <xs:element name="createState" type="tns:createState"/>
    <xs:element name="createStateResponse" type="tns:createStateResponse"/>
    <xs:element name="fetchCategories" type="tns:fetchCategories"/>
    <xs:element name="fetchCategoriesResponse" type="tns:fetchCategoriesResponse"/>
    <xs:element name="fetchRuleSet" type="tns:fetchRuleSet"/>
    <xs:element name="fetchRuleSetResponse" type="tns:fetchRuleSetResponse"/>
    <xs:element name="fetchRuleSetSnapshot" type="tns:fetchRuleSetSnapshot"/>
    <xs:element name="fetchRuleSetSnapshotResponse" type="tns:fetchRuleSetSnapshotResponse"/>
    <xs:element name="fetchRuleSetSnapshotsByCategory" type="tns:fetchRuleSetSnapshotsByCategory"/>
    <xs:element name="fetchRuleSetSnapshotsByCategoryResponse" type="tns:fetchRuleSetSnapshotsByCategoryResponse"/>
    <xs:element name="fetchRuleSetsByCategory" type="tns:fetchRuleSetsByCategory"/>
    <xs:element name="fetchRuleSetsByCategoryResponse" type="tns:fetchRuleSetsByCategoryResponse"/>
    <xs:element name="fetchStates" type="tns:fetchStates"/>
    <xs:element name="fetchStatesResponse" type="tns:fetchStatesResponse"/>
    <xs:element name="generateRuleSetForBusinessRule" type="tns:generateRuleSetForBusinessRule"/>
    <xs:element name="generateRuleSetForBusinessRuleContainer" type="tns:generateRuleSetForBusinessRuleContainer"/>
    <xs:element name="generateRuleSetForBusinessRuleContainerResponse" type="tns:generateRuleSetForBusinessRuleContainerResponse"/>
    <xs:element name="generateRuleSetForBusinessRuleResponse" type="tns:generateRuleSetForBusinessRuleResponse"/>
    <xs:element name="rebuildRuleSetSnapshot" type="tns:rebuildRuleSetSnapshot"/>
    <xs:element name="rebuildRuleSetSnapshotResponse" type="tns:rebuildRuleSetSnapshotResponse"/>
    <xs:element name="removeCategory" type="tns:removeCategory"/>
    <xs:element name="removeRuleSet" type="tns:removeRuleSet"/>
    <xs:element name="removeRuleSetSnapshot" type="tns:removeRuleSetSnapshot"/>
    <xs:element name="removeState" type="tns:removeState"/>
    <xs:element name="replaceRuleSetSnapshot" type="tns:replaceRuleSetSnapshot"/>
    <xs:element name="replaceRuleSetSnapshotResponse" type="tns:replaceRuleSetSnapshotResponse"/>
    <xs:element name="ruleDTO" type="tns:ruleDTO"/>
    <xs:element name="translateBusinessRule" type="tns:translateBusinessRule"/>
    <xs:element name="translateBusinessRuleResponse" type="tns:translateBusinessRuleResponse"/>
    <xs:element name="validateBusinessRule" type="tns:validateBusinessRule"/>
    <xs:element name="validateBusinessRuleResponse" type="tns:validateBusinessRuleResponse"/>
    <xs:complexType name="translateBusinessRule">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRule" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="businessRuleInfoDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorValue" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element minOccurs="0" name="successMessage" type="xs:string"/>
            <xs:element minOccurs="0" name="failureMessage" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveStartTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="effectiveEndTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="status" type="xs:string"/>
            <xs:element minOccurs="0" name="compiledId" type="xs:string"/>
            <xs:element minOccurs="0" name="repositorySnapshotName" type="xs:string"/>
            <xs:element minOccurs="0" name="ruleElementList">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="ruleElement" type="tns:ruleElementDTO"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfoDTO"/>
        </xs:sequence>
        <xs:attribute name="businessRuleId" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="ruleElementDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="operation" type="xs:string"/>
            <xs:element minOccurs="0" name="ordinalPosition" type="xs:int"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element minOccurs="0" name="ruleProposition" type="tns:rulePropositionDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="rulePropositionDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element minOccurs="0" name="failureMessage" type="xs:string"/>
            <xs:element minOccurs="0" name="comparisonDataType" type="xs:string"/>
            <xs:element minOccurs="0" name="leftHandSide" type="tns:leftHandSideDTO"/>
            <xs:element minOccurs="0" name="comparisonOperatorType" type="xs:string"/>
            <xs:element minOccurs="0" name="rightHandSide" type="tns:rightHandSideDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="leftHandSideDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="yieldValueFunction" type="tns:yieldValueFunctionDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="yieldValueFunctionDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="yieldValueFunctionType" type="xs:string"/>
            <xs:element minOccurs="0" name="factStructureList">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="factStructure" type="tns:factStructureDTO"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="factStructureDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="criteriaTypeInfo" type="tns:factCriteriaTypeInfoDTO"/>
            <xs:element minOccurs="0" name="anchorFlag" type="xs:boolean"/>
            <xs:element minOccurs="0" name="paramValueMap" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="staticValueDataType" type="xs:string"/>
            <xs:element minOccurs="0" name="staticValue" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="factStructureId" type="xs:string"/>
        <xs:attribute name="factTypeKey" type="xs:string"/>
        <xs:attribute name="staticFact" type="xs:boolean"/>
    </xs:complexType>
    <xs:complexType name="factCriteriaTypeInfoDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element minOccurs="0" name="factParamMap" type="tns:factParamList"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="factParamList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="tns:factParamMapEntry"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="factParamMapEntry">
        <xs:sequence>
            <xs:element minOccurs="0" name="value" type="tns:factParamDTO"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="factParamDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element minOccurs="0" name="dataType" type="xs:string"/>
            <xs:element minOccurs="0" name="minLength" type="xs:int"/>
            <xs:element minOccurs="0" name="maxLength" type="xs:int"/>
            <xs:element minOccurs="0" name="validCharacters" type="xs:string"/>
            <xs:element minOccurs="0" name="minOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="maxOccurs" type="xs:int"/>
            <xs:element minOccurs="0" name="defTime" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="key" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="Attribute">
        <xs:sequence/>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="value" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="rightHandSideDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="expectedValue" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="metaInfoDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="createID" type="xs:string"/>
            <xs:element minOccurs="0" name="createComment" type="xs:string"/>
            <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="updateID" type="xs:string"/>
            <xs:element minOccurs="0" name="updateComment" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="translateBusinessRuleResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ruleSetDTO">
        <xs:complexContent>
            <xs:extension base="tns:abstractItemDTO">
                <xs:sequence>
                    <xs:element minOccurs="0" name="rules" type="tns:ruleMapType"/>
                    <xs:element minOccurs="0" name="compiledRuleSet" type="xs:base64Binary"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="header" type="xs:string"/>
                    <xs:element name="snapshot" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="categoryList" type="tns:categoryDTO"/>
                    <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="expiryDate" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="sourceContent" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType abstract="true" name="abstractItemDTO">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="description" type="xs:string"/>
            <xs:element name="format" type="xs:string"/>
            <xs:element name="versionNumber" type="xs:long"/>
            <xs:element minOccurs="0" name="status" type="xs:string"/>
            <xs:element minOccurs="0" name="versionSnapshotUUID" type="xs:string"/>
            <xs:element minOccurs="0" name="createdDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="lastModifiedDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="checkinComment" type="xs:string"/>
            <xs:element name="archived" type="xs:boolean"/>
            <xs:element name="historical" type="xs:boolean"/>
        </xs:sequence>
        <xs:attribute name="uuid" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="ruleMapType">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="entry" type="tns:ruleMapEntryType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ruleMapEntryType">
        <xs:sequence>
            <xs:element minOccurs="0" name="rule" type="tns:ruleDTO"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="ruleDTO">
        <xs:complexContent>
            <xs:extension base="tns:abstractItemDTO">
                <xs:sequence>
                    <xs:element minOccurs="0" name="binaryContent" type="xs:base64Binary"/>
                    <xs:element minOccurs="0" name="content" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="categoryNameList" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="categoryList" type="tns:categoryDTO"/>
                    <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="expiryDate" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
                    <xs:element minOccurs="0" name="ruleSetName" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="categoryDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="path" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="replaceRuleSetSnapshot">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
            <xs:element minOccurs="0" name="comment" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="replaceRuleSetSnapshotResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeCategory">
        <xs:sequence>
            <xs:element minOccurs="0" name="arg0" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchRuleSetsByCategory">
        <xs:sequence>
            <xs:element minOccurs="0" name="category" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchRuleSetsByCategoryResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createRuleSetSnapshot">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
            <xs:element minOccurs="0" name="comment" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createRuleSetSnapshotResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="changeRuleSetState">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
            <xs:element minOccurs="0" name="newState" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="rebuildRuleSetSnapshot">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="rebuildRuleSetSnapshotResponse">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="fetchCategories">
        <xs:sequence>
            <xs:element minOccurs="0" name="arg0" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchCategoriesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="generateRuleSetForBusinessRuleContainer">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleContainer" type="tns:businessRuleContainerDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="businessRuleContainerDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="namespace" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="businessRuleList" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="generateRuleSetForBusinessRuleContainerResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetContainerDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ruleSetContainerDTO">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="ruleSetList" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchStates">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="fetchStatesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="generateRuleSetForBusinessRule">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRule" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="generateRuleSetForBusinessRuleResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchRuleSetResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="checkinRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
            <xs:element minOccurs="0" name="comment" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="checkinRuleSetResponse">
        <xs:sequence>
            <xs:element name="return" type="xs:long"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createCategory">
        <xs:sequence>
            <xs:element minOccurs="0" name="arg0" type="xs:string"/>
            <xs:element minOccurs="0" name="arg1" type="xs:string"/>
            <xs:element minOccurs="0" name="arg2" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createCategoryResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeRuleSetSnapshot">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateBusinessRule">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRule" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="validateBusinessRuleResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetVerificationResultDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ruleSetVerificationResultDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetValid" type="xs:boolean"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="messageList" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSet" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createRuleSetResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="uuid" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchRuleSetSnapshotsByCategory">
        <xs:sequence>
            <xs:element minOccurs="0" name="category" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchRuleSetSnapshotsByCategoryResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchRuleSetSnapshot">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchRuleSetSnapshotResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeState">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createState">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createStateResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="OperationFailedException" type="tns:OperationFailedException"/>
    <xs:complexType name="OperationFailedException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="InvalidParameterException" type="tns:InvalidParameterException"/>
    <xs:complexType name="InvalidParameterException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="MissingParameterException" type="tns:MissingParameterException"/>
    <xs:complexType name="MissingParameterException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="AlreadyExistsException" type="tns:AlreadyExistsException"/>
    <xs:complexType name="AlreadyExistsException">
        <xs:sequence/>
    </xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="replaceRuleSetSnapshot">
    <wsdl:part name="parameters" element="tns:replaceRuleSetSnapshot">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="rebuildRuleSetSnapshotResponse">
    <wsdl:part name="parameters" element="tns:rebuildRuleSetSnapshotResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRuleSet">
    <wsdl:part name="parameters" element="tns:createRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="rebuildRuleSetSnapshot">
    <wsdl:part name="parameters" element="tns:rebuildRuleSetSnapshot">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateRuleSetForBusinessRule">
    <wsdl:part name="parameters" element="tns:generateRuleSetForBusinessRule">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchCategories">
    <wsdl:part name="parameters" element="tns:fetchCategories">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchRuleSetSnapshotsByCategoryResponse">
    <wsdl:part name="parameters" element="tns:fetchRuleSetSnapshotsByCategoryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingParameterException">
    <wsdl:part name="MissingParameterException" element="tns:MissingParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRuleSet">
    <wsdl:part name="parameters" element="tns:removeRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AlreadyExistsException">
    <wsdl:part name="AlreadyExistsException" element="tns:AlreadyExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createState">
    <wsdl:part name="parameters" element="tns:createState">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchRuleSetsByCategory">
    <wsdl:part name="parameters" element="tns:fetchRuleSetsByCategory">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateBusinessRule">
    <wsdl:part name="parameters" element="tns:validateBusinessRule">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="OperationFailedException">
    <wsdl:part name="OperationFailedException" element="tns:OperationFailedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCategoryResponse">
    <wsdl:part name="parameters" element="tns:createCategoryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateRuleSetForBusinessRuleContainerResponse">
    <wsdl:part name="parameters" element="tns:generateRuleSetForBusinessRuleContainerResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchRuleSetSnapshotsByCategory">
    <wsdl:part name="parameters" element="tns:fetchRuleSetSnapshotsByCategory">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateBusinessRuleResponse">
    <wsdl:part name="parameters" element="tns:validateBusinessRuleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchCategoriesResponse">
    <wsdl:part name="parameters" element="tns:fetchCategoriesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchRuleSetResponse">
    <wsdl:part name="parameters" element="tns:fetchRuleSetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="changeRuleSetState">
    <wsdl:part name="parameters" element="tns:changeRuleSetState">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeCategory">
    <wsdl:part name="parameters" element="tns:removeCategory">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchStatesResponse">
    <wsdl:part name="parameters" element="tns:fetchStatesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchRuleSetSnapshot">
    <wsdl:part name="parameters" element="tns:fetchRuleSetSnapshot">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRuleSetSnapshot">
    <wsdl:part name="parameters" element="tns:createRuleSetSnapshot">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchRuleSet">
    <wsdl:part name="parameters" element="tns:fetchRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRuleSetResponse">
    <wsdl:part name="parameters" element="tns:createRuleSetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="translateBusinessRuleResponse">
    <wsdl:part name="parameters" element="tns:translateBusinessRuleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRuleSetSnapshotResponse">
    <wsdl:part name="parameters" element="tns:createRuleSetSnapshotResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="translateBusinessRule">
    <wsdl:part name="parameters" element="tns:translateBusinessRule">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidParameterException">
    <wsdl:part name="InvalidParameterException" element="tns:InvalidParameterException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createStateResponse">
    <wsdl:part name="parameters" element="tns:createStateResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchRuleSetSnapshotResponse">
    <wsdl:part name="parameters" element="tns:fetchRuleSetSnapshotResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchRuleSetsByCategoryResponse">
    <wsdl:part name="parameters" element="tns:fetchRuleSetsByCategoryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCategory">
    <wsdl:part name="parameters" element="tns:createCategory">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchStates">
    <wsdl:part name="parameters" element="tns:fetchStates">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRuleSetSnapshot">
    <wsdl:part name="parameters" element="tns:removeRuleSetSnapshot">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="replaceRuleSetSnapshotResponse">
    <wsdl:part name="parameters" element="tns:replaceRuleSetSnapshotResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkinRuleSetResponse">
    <wsdl:part name="parameters" element="tns:checkinRuleSetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkinRuleSet">
    <wsdl:part name="parameters" element="tns:checkinRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateRuleSetForBusinessRuleResponse">
    <wsdl:part name="parameters" element="tns:generateRuleSetForBusinessRuleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeState">
    <wsdl:part name="parameters" element="tns:removeState">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateRuleSetForBusinessRuleContainer">
    <wsdl:part name="parameters" element="tns:generateRuleSetForBusinessRuleContainer">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="RuleRepositoryService">
    <wsdl:operation name="translateBusinessRule">
      <wsdl:input name="translateBusinessRule" message="tns:translateBusinessRule">
    </wsdl:input>
      <wsdl:output name="translateBusinessRuleResponse" message="tns:translateBusinessRuleResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="replaceRuleSetSnapshot">
      <wsdl:input name="replaceRuleSetSnapshot" message="tns:replaceRuleSetSnapshot">
    </wsdl:input>
      <wsdl:output name="replaceRuleSetSnapshotResponse" message="tns:replaceRuleSetSnapshotResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeCategory">
      <wsdl:input name="removeCategory" message="tns:removeCategory">
    </wsdl:input>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchRuleSetsByCategory">
      <wsdl:input name="fetchRuleSetsByCategory" message="tns:fetchRuleSetsByCategory">
    </wsdl:input>
      <wsdl:output name="fetchRuleSetsByCategoryResponse" message="tns:fetchRuleSetsByCategoryResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRuleSetSnapshot">
      <wsdl:input name="createRuleSetSnapshot" message="tns:createRuleSetSnapshot">
    </wsdl:input>
      <wsdl:output name="createRuleSetSnapshotResponse" message="tns:createRuleSetSnapshotResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeRuleSetState">
      <wsdl:input name="changeRuleSetState" message="tns:changeRuleSetState">
    </wsdl:input>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rebuildRuleSetSnapshot">
      <wsdl:input name="rebuildRuleSetSnapshot" message="tns:rebuildRuleSetSnapshot">
    </wsdl:input>
      <wsdl:output name="rebuildRuleSetSnapshotResponse" message="tns:rebuildRuleSetSnapshotResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchCategories">
      <wsdl:input name="fetchCategories" message="tns:fetchCategories">
    </wsdl:input>
      <wsdl:output name="fetchCategoriesResponse" message="tns:fetchCategoriesResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateRuleSetForBusinessRuleContainer">
      <wsdl:input name="generateRuleSetForBusinessRuleContainer" message="tns:generateRuleSetForBusinessRuleContainer">
    </wsdl:input>
      <wsdl:output name="generateRuleSetForBusinessRuleContainerResponse" message="tns:generateRuleSetForBusinessRuleContainerResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchStates">
      <wsdl:input name="fetchStates" message="tns:fetchStates">
    </wsdl:input>
      <wsdl:output name="fetchStatesResponse" message="tns:fetchStatesResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateRuleSetForBusinessRule">
      <wsdl:input name="generateRuleSetForBusinessRule" message="tns:generateRuleSetForBusinessRule">
    </wsdl:input>
      <wsdl:output name="generateRuleSetForBusinessRuleResponse" message="tns:generateRuleSetForBusinessRuleResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchRuleSet">
      <wsdl:input name="fetchRuleSet" message="tns:fetchRuleSet">
    </wsdl:input>
      <wsdl:output name="fetchRuleSetResponse" message="tns:fetchRuleSetResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkinRuleSet">
      <wsdl:input name="checkinRuleSet" message="tns:checkinRuleSet">
    </wsdl:input>
      <wsdl:output name="checkinRuleSetResponse" message="tns:checkinRuleSetResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCategory">
      <wsdl:input name="createCategory" message="tns:createCategory">
    </wsdl:input>
      <wsdl:output name="createCategoryResponse" message="tns:createCategoryResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRuleSetSnapshot">
      <wsdl:input name="removeRuleSetSnapshot" message="tns:removeRuleSetSnapshot">
    </wsdl:input>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateBusinessRule">
      <wsdl:input name="validateBusinessRule" message="tns:validateBusinessRule">
    </wsdl:input>
      <wsdl:output name="validateBusinessRuleResponse" message="tns:validateBusinessRuleResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="MissingParameterException" message="tns:MissingParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRuleSet">
      <wsdl:input name="createRuleSet" message="tns:createRuleSet">
    </wsdl:input>
      <wsdl:output name="createRuleSetResponse" message="tns:createRuleSetResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException" message="tns:AlreadyExistsException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRuleSet">
      <wsdl:input name="removeRuleSet" message="tns:removeRuleSet">
    </wsdl:input>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchRuleSetSnapshotsByCategory">
      <wsdl:input name="fetchRuleSetSnapshotsByCategory" message="tns:fetchRuleSetSnapshotsByCategory">
    </wsdl:input>
      <wsdl:output name="fetchRuleSetSnapshotsByCategoryResponse" message="tns:fetchRuleSetSnapshotsByCategoryResponse">
    </wsdl:output>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchRuleSetSnapshot">
      <wsdl:input name="fetchRuleSetSnapshot" message="tns:fetchRuleSetSnapshot">
    </wsdl:input>
      <wsdl:output name="fetchRuleSetSnapshotResponse" message="tns:fetchRuleSetSnapshotResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeState">
      <wsdl:input name="removeState" message="tns:removeState">
    </wsdl:input>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createState">
      <wsdl:input name="createState" message="tns:createState">
    </wsdl:input>
      <wsdl:output name="createStateResponse" message="tns:createStateResponse">
    </wsdl:output>
      <wsdl:fault name="InvalidParameterException" message="tns:InvalidParameterException">
    </wsdl:fault>
      <wsdl:fault name="OperationFailedException" message="tns:OperationFailedException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RuleRepositoryServiceServiceSoapBinding" type="tns:RuleRepositoryService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="replaceRuleSetSnapshot">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="replaceRuleSetSnapshot">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="replaceRuleSetSnapshotResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="translateBusinessRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="translateBusinessRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="translateBusinessRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeCategory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeCategory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchRuleSetsByCategory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchRuleSetsByCategory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchRuleSetsByCategoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeRuleSetState">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="changeRuleSetState">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRuleSetSnapshot">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRuleSetSnapshot">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createRuleSetSnapshotResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchCategories">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchCategories">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchCategoriesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="rebuildRuleSetSnapshot">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="rebuildRuleSetSnapshot">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="rebuildRuleSetSnapshotResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateRuleSetForBusinessRuleContainer">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="generateRuleSetForBusinessRuleContainer">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="generateRuleSetForBusinessRuleContainerResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchStates">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchStates">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchStatesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateRuleSetForBusinessRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="generateRuleSetForBusinessRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="generateRuleSetForBusinessRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkinRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkinRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkinRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCategory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createCategory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createCategoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRuleSetSnapshot">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeRuleSetSnapshot">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AlreadyExistsException">
        <soap:fault name="AlreadyExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateBusinessRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateBusinessRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateBusinessRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingParameterException">
        <soap:fault name="MissingParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchRuleSetSnapshotsByCategory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchRuleSetSnapshotsByCategory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchRuleSetSnapshotsByCategoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchRuleSetSnapshot">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchRuleSetSnapshot">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchRuleSetSnapshotResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeState">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeState">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createState">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createState">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createStateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidParameterException">
        <soap:fault name="InvalidParameterException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="OperationFailedException">
        <soap:fault name="OperationFailedException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RuleRepositoryService">
    <wsdl:port name="RuleRepositoryServicePort" binding="tns:RuleRepositoryServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/RuleRepositoryServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
