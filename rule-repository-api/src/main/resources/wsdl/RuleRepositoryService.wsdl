<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="RuleRepositoryService" targetNamespace="http://student.kuali.org/wsdl/brms/RuleRepository" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://student.kuali.org/wsdl/brms/RuleRepository" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://student.kuali.org/wsdl/brms/RuleRepository" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://student.kuali.org/wsdl/brms/RuleRepository">
    <xs:element name="categoryDTO" type="tns:categoryDTO"/>
    <xs:element name="changeRuleSetState" type="tns:changeRuleSetState"/>
    <xs:element name="createCategory" type="tns:createCategory"/>
    <xs:element name="createCategoryResponse" type="tns:createCategoryResponse"/>
    <xs:element name="createRuleSet" type="tns:createRuleSet"/>
    <xs:element name="createRuleSetResponse" type="tns:createRuleSetResponse"/>
    <xs:element name="createRuleSetSnapshot" type="tns:createRuleSetSnapshot"/>
    <xs:element name="createState" type="tns:createState"/>
    <xs:element name="createStateResponse" type="tns:createStateResponse"/>
    <xs:element name="fetchChildCategories" type="tns:fetchChildCategories"/>
    <xs:element name="fetchChildCategoriesResponse" type="tns:fetchChildCategoriesResponse"/>
    <xs:element name="fetchCompiledRuleSet" type="tns:fetchCompiledRuleSet"/>
    <xs:element name="fetchCompiledRuleSetResponse" type="tns:fetchCompiledRuleSetResponse"/>
    <xs:element name="fetchCompiledRuleSetSnapshot" type="tns:fetchCompiledRuleSetSnapshot"/>
    <xs:element name="fetchCompiledRuleSetSnapshotResponse" type="tns:fetchCompiledRuleSetSnapshotResponse"/>
    <xs:element name="fetchRule" type="tns:fetchRule"/>
    <xs:element name="fetchRuleResponse" type="tns:fetchRuleResponse"/>
    <xs:element name="fetchRuleSet" type="tns:fetchRuleSet"/>
    <xs:element name="fetchRuleSetResponse" type="tns:fetchRuleSetResponse"/>
    <xs:element name="fetchRuleSetSnapshot" type="tns:fetchRuleSetSnapshot"/>
    <xs:element name="fetchRuleSetSnapshotResponse" type="tns:fetchRuleSetSnapshotResponse"/>
    <xs:element name="fetchStates" type="tns:fetchStates"/>
    <xs:element name="fetchStatesResponse" type="tns:fetchStatesResponse"/>
    <xs:element name="generateRuleSet" type="tns:generateRuleSet"/>
    <xs:element name="generateRuleSetResponse" type="tns:generateRuleSetResponse"/>
    <xs:element name="removeCategory" type="tns:removeCategory"/>
    <xs:element name="removeRuleSet" type="tns:removeRuleSet"/>
    <xs:element name="removeRuleSetSnapshot" type="tns:removeRuleSetSnapshot"/>
    <xs:element name="replaceRuleSetSnapshot" type="tns:replaceRuleSetSnapshot"/>
    <xs:element name="ruleDTO" type="tns:ruleDTO"/>
    <xs:element name="updateRuleSet" type="tns:updateRuleSet"/>
    <xs:element name="updateRuleSetResponse" type="tns:updateRuleSetResponse"/>
    <xs:complexType name="replaceRuleSetSnapshot">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetName" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
            <xs:element minOccurs="0" name="comment" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeCategory">
        <xs:sequence>
            <xs:element minOccurs="0" name="path" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createRuleSetSnapshot">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetName" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
            <xs:element minOccurs="0" name="comment" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="changeRuleSetState">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
            <xs:element minOccurs="0" name="newState" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="updateRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSet" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ruleSetDTO">
        <xs:complexContent>
            <xs:extension base="tns:abstractItemDTO">
                <xs:sequence>
                    <xs:element minOccurs="0" name="rules" type="tns:ruleMapType"/>
                    <xs:element minOccurs="0" name="compiledRuleSet" type="xs:base64Binary"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="header" type="xs:string"/>
                    <xs:element name="snapshot" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
                    <xs:element minOccurs="0" name="sourceContent" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType abstract="true" name="abstractItemDTO">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="description" type="xs:string"/>
            <xs:element name="format" type="xs:string"/>
            <xs:element name="versionNumber" type="xs:long"/>
            <xs:element minOccurs="0" name="status" type="xs:string"/>
            <xs:element minOccurs="0" name="versionSnapshotUUID" type="xs:string"/>
            <xs:element minOccurs="0" name="createdDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="lastModifiedDate" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="checkinComment" type="xs:string"/>
            <xs:element name="archived" type="xs:boolean"/>
            <xs:element name="historical" type="xs:boolean"/>
        </xs:sequence>
        <xs:attribute name="uuid" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="ruleMapType">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="updateRuleSetResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchStates">
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="fetchStatesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchRuleSetResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchCompiledRuleSetSnapshot">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetName" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchCompiledRuleSetSnapshotResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:base64Binary"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createCategory">
        <xs:sequence>
            <xs:element minOccurs="0" name="path" type="xs:string"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createCategoryResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeRuleSetSnapshot">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetName" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchCompiledRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchCompiledRuleSetResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:base64Binary"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchChildCategories">
        <xs:sequence>
            <xs:element minOccurs="0" name="path" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchChildCategoriesResponse">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSet" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createRuleSetResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="removeRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="uuid" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchRuleSetSnapshot">
        <xs:sequence>
            <xs:element minOccurs="0" name="ruleSetName" type="xs:string"/>
            <xs:element minOccurs="0" name="snapshotName" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchRuleSetSnapshotResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="generateRuleSet">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleContainer" type="tns:businessRuleContainerDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="businessRuleContainerDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="namespace" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="businessRuleList" type="tns:businessRuleInfoDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="businessRuleInfoDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="businessRuleTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorValue" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorTypeKey" type="xs:string"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element minOccurs="0" name="successMessage" type="xs:string"/>
            <xs:element minOccurs="0" name="failureMessage" type="xs:string"/>
            <xs:element minOccurs="0" name="effectiveStartTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="effectiveEndTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="status" type="xs:string"/>
            <xs:element minOccurs="0" name="compiledId" type="xs:string"/>
            <xs:element minOccurs="0" name="ruleElementList">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="ruleElement" type="tns:ruleElementDTO"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="metaInfo" type="tns:metaInfoDTO"/>
        </xs:sequence>
        <xs:attribute name="businessRuleId" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="ruleElementDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="operation" type="xs:string"/>
            <xs:element minOccurs="0" name="ordinalPosition" type="xs:int"/>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element minOccurs="0" name="ruleProposition" type="tns:rulePropositionDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="rulePropositionDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="description" type="xs:string"/>
            <xs:element minOccurs="0" name="failureMessage" type="xs:string"/>
            <xs:element minOccurs="0" name="comparisonDataType" type="xs:string"/>
            <xs:element minOccurs="0" name="leftHandSide" type="tns:leftHandSideDTO"/>
            <xs:element minOccurs="0" name="comparisonOperatorType" type="xs:string"/>
            <xs:element minOccurs="0" name="rightHandSide" type="tns:rightHandSideDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="leftHandSideDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="yieldValueFunction" type="tns:yieldValueFunctionDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="yieldValueFunctionDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="yieldValueFunctionType" type="xs:string"/>
            <xs:element minOccurs="0" name="factStructureList">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="0" name="factStructure" type="tns:factStructureDTO"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="factStructureDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="dataType" type="xs:string"/>
            <xs:element minOccurs="0" name="anchorFlag" type="xs:boolean"/>
            <xs:element minOccurs="0" name="executionVariableList" type="tns:jaxbAttributeList"/>
            <xs:element minOccurs="0" name="definitionVariableList" type="tns:jaxbAttributeList"/>
        </xs:sequence>
        <xs:attribute name="factStructureId" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="jaxbAttributeList">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="attribute" type="tns:Attribute"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="Attribute">
        <xs:sequence/>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="value" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="rightHandSideDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="expectedValue" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="metaInfoDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="createID" type="xs:string"/>
            <xs:element minOccurs="0" name="createComment" type="xs:string"/>
            <xs:element minOccurs="0" name="updateTime" type="xs:dateTime"/>
            <xs:element minOccurs="0" name="updateID" type="xs:string"/>
            <xs:element minOccurs="0" name="updateComment" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="generateRuleSetResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleSetDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createState">
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="createStateResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchRule">
        <xs:sequence>
            <xs:element minOccurs="0" name="uuid" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fetchRuleResponse">
        <xs:sequence>
            <xs:element minOccurs="0" name="return" type="tns:ruleDTO"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ruleDTO">
        <xs:complexContent>
            <xs:extension base="tns:abstractItemDTO">
                <xs:sequence>
                    <xs:element minOccurs="0" name="binaryContent" type="xs:base64Binary"/>
                    <xs:element minOccurs="0" name="content" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="categoryNameList" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="categoryList" type="tns:categoryDTO"/>
                    <xs:element minOccurs="0" name="effectiveDate" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="expiryDate" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="ruleSetUUID" type="xs:string"/>
                    <xs:element minOccurs="0" name="ruleSetName" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="categoryDTO">
        <xs:sequence>
            <xs:element minOccurs="0" name="path" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
    <xs:element name="RuleEngineRepositoryException" type="tns:RuleEngineRepositoryException"/>
    <xs:complexType name="RuleEngineRepositoryException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="CategoryExistsException" type="tns:CategoryExistsException"/>
    <xs:complexType name="CategoryExistsException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="RuleExistsException" type="tns:RuleExistsException"/>
    <xs:complexType name="RuleExistsException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="RuleSetExistsException" type="tns:RuleSetExistsException"/>
    <xs:complexType name="RuleSetExistsException">
        <xs:sequence/>
    </xs:complexType>
    <xs:element name="GenerateRuleSetException" type="tns:GenerateRuleSetException"/>
    <xs:complexType name="GenerateRuleSetException">
        <xs:sequence/>
    </xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="replaceRuleSetSnapshot">
    <wsdl:part name="parameters" element="tns:replaceRuleSetSnapshot">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchCompiledRuleSet">
    <wsdl:part name="parameters" element="tns:fetchCompiledRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRuleSet">
    <wsdl:part name="parameters" element="tns:createRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRuleSet">
    <wsdl:part name="parameters" element="tns:removeRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateRuleSetResponse">
    <wsdl:part name="parameters" element="tns:generateRuleSetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchChildCategoriesResponse">
    <wsdl:part name="parameters" element="tns:fetchChildCategoriesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createState">
    <wsdl:part name="parameters" element="tns:createState">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCategoryResponse">
    <wsdl:part name="parameters" element="tns:createCategoryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchChildCategories">
    <wsdl:part name="parameters" element="tns:fetchChildCategories">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RuleEngineRepositoryException">
    <wsdl:part name="RuleEngineRepositoryException" element="tns:RuleEngineRepositoryException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchRule">
    <wsdl:part name="parameters" element="tns:fetchRule">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="CategoryExistsException">
    <wsdl:part name="CategoryExistsException" element="tns:CategoryExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchRuleSetResponse">
    <wsdl:part name="parameters" element="tns:fetchRuleSetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRuleSet">
    <wsdl:part name="parameters" element="tns:updateRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchCompiledRuleSetResponse">
    <wsdl:part name="parameters" element="tns:fetchCompiledRuleSetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchStatesResponse">
    <wsdl:part name="parameters" element="tns:fetchStatesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="changeRuleSetState">
    <wsdl:part name="parameters" element="tns:changeRuleSetState">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeCategory">
    <wsdl:part name="parameters" element="tns:removeCategory">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchRuleSetSnapshot">
    <wsdl:part name="parameters" element="tns:fetchRuleSetSnapshot">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRuleSetSnapshot">
    <wsdl:part name="parameters" element="tns:createRuleSetSnapshot">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchRuleSet">
    <wsdl:part name="parameters" element="tns:fetchRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="generateRuleSet">
    <wsdl:part name="parameters" element="tns:generateRuleSet">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRuleSetResponse">
    <wsdl:part name="parameters" element="tns:createRuleSetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RuleExistsException">
    <wsdl:part name="RuleExistsException" element="tns:RuleExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RuleSetExistsException">
    <wsdl:part name="RuleSetExistsException" element="tns:RuleSetExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchCompiledRuleSetSnapshotResponse">
    <wsdl:part name="parameters" element="tns:fetchCompiledRuleSetSnapshotResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createStateResponse">
    <wsdl:part name="parameters" element="tns:createStateResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchRuleSetSnapshotResponse">
    <wsdl:part name="parameters" element="tns:fetchRuleSetSnapshotResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchStates">
    <wsdl:part name="parameters" element="tns:fetchStates">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createCategory">
    <wsdl:part name="parameters" element="tns:createCategory">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GenerateRuleSetException">
    <wsdl:part name="GenerateRuleSetException" element="tns:GenerateRuleSetException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchCompiledRuleSetSnapshot">
    <wsdl:part name="parameters" element="tns:fetchCompiledRuleSetSnapshot">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRuleSetResponse">
    <wsdl:part name="parameters" element="tns:updateRuleSetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="fetchRuleResponse">
    <wsdl:part name="parameters" element="tns:fetchRuleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRuleSetSnapshot">
    <wsdl:part name="parameters" element="tns:removeRuleSetSnapshot">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="RuleRepositoryService">
    <wsdl:operation name="replaceRuleSetSnapshot">
      <wsdl:input name="replaceRuleSetSnapshot" message="tns:replaceRuleSetSnapshot">
    </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeCategory">
      <wsdl:input name="removeCategory" message="tns:removeCategory">
    </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="createRuleSetSnapshot">
      <wsdl:input name="createRuleSetSnapshot" message="tns:createRuleSetSnapshot">
    </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="changeRuleSetState">
      <wsdl:input name="changeRuleSetState" message="tns:changeRuleSetState">
    </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="updateRuleSet">
      <wsdl:input name="updateRuleSet" message="tns:updateRuleSet">
    </wsdl:input>
      <wsdl:output name="updateRuleSetResponse" message="tns:updateRuleSetResponse">
    </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException" message="tns:RuleEngineRepositoryException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchStates">
      <wsdl:input name="fetchStates" message="tns:fetchStates">
    </wsdl:input>
      <wsdl:output name="fetchStatesResponse" message="tns:fetchStatesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchRuleSet">
      <wsdl:input name="fetchRuleSet" message="tns:fetchRuleSet">
    </wsdl:input>
      <wsdl:output name="fetchRuleSetResponse" message="tns:fetchRuleSetResponse">
    </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException" message="tns:RuleEngineRepositoryException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchCompiledRuleSetSnapshot">
      <wsdl:input name="fetchCompiledRuleSetSnapshot" message="tns:fetchCompiledRuleSetSnapshot">
    </wsdl:input>
      <wsdl:output name="fetchCompiledRuleSetSnapshotResponse" message="tns:fetchCompiledRuleSetSnapshotResponse">
    </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException" message="tns:RuleEngineRepositoryException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCategory">
      <wsdl:input name="createCategory" message="tns:createCategory">
    </wsdl:input>
      <wsdl:output name="createCategoryResponse" message="tns:createCategoryResponse">
    </wsdl:output>
      <wsdl:fault name="CategoryExistsException" message="tns:CategoryExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRuleSetSnapshot">
      <wsdl:input name="removeRuleSetSnapshot" message="tns:removeRuleSetSnapshot">
    </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="fetchCompiledRuleSet">
      <wsdl:input name="fetchCompiledRuleSet" message="tns:fetchCompiledRuleSet">
    </wsdl:input>
      <wsdl:output name="fetchCompiledRuleSetResponse" message="tns:fetchCompiledRuleSetResponse">
    </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException" message="tns:RuleEngineRepositoryException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchChildCategories">
      <wsdl:input name="fetchChildCategories" message="tns:fetchChildCategories">
    </wsdl:input>
      <wsdl:output name="fetchChildCategoriesResponse" message="tns:fetchChildCategoriesResponse">
    </wsdl:output>
      <wsdl:fault name="CategoryExistsException" message="tns:CategoryExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRuleSet">
      <wsdl:input name="createRuleSet" message="tns:createRuleSet">
    </wsdl:input>
      <wsdl:output name="createRuleSetResponse" message="tns:createRuleSetResponse">
    </wsdl:output>
      <wsdl:fault name="RuleExistsException" message="tns:RuleExistsException">
    </wsdl:fault>
      <wsdl:fault name="RuleSetExistsException" message="tns:RuleSetExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRuleSet">
      <wsdl:input name="removeRuleSet" message="tns:removeRuleSet">
    </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="fetchRuleSetSnapshot">
      <wsdl:input name="fetchRuleSetSnapshot" message="tns:fetchRuleSetSnapshot">
    </wsdl:input>
      <wsdl:output name="fetchRuleSetSnapshotResponse" message="tns:fetchRuleSetSnapshotResponse">
    </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException" message="tns:RuleEngineRepositoryException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateRuleSet">
      <wsdl:input name="generateRuleSet" message="tns:generateRuleSet">
    </wsdl:input>
      <wsdl:output name="generateRuleSetResponse" message="tns:generateRuleSetResponse">
    </wsdl:output>
      <wsdl:fault name="GenerateRuleSetException" message="tns:GenerateRuleSetException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createState">
      <wsdl:input name="createState" message="tns:createState">
    </wsdl:input>
      <wsdl:output name="createStateResponse" message="tns:createStateResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchRule">
      <wsdl:input name="fetchRule" message="tns:fetchRule">
    </wsdl:input>
      <wsdl:output name="fetchRuleResponse" message="tns:fetchRuleResponse">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RuleRepositoryServiceServiceSoapBinding" type="tns:RuleRepositoryService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="replaceRuleSetSnapshot">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="replaceRuleSetSnapshot">
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="removeCategory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeCategory">
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="changeRuleSetState">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="changeRuleSetState">
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="createRuleSetSnapshot">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRuleSetSnapshot">
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="updateRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException">
        <soap:fault name="RuleEngineRepositoryException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchStates">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchStates">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchStatesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException">
        <soap:fault name="RuleEngineRepositoryException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchCompiledRuleSetSnapshot">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchCompiledRuleSetSnapshot">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchCompiledRuleSetSnapshotResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException">
        <soap:fault name="RuleEngineRepositoryException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createCategory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createCategory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createCategoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CategoryExistsException">
        <soap:fault name="CategoryExistsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRuleSetSnapshot">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeRuleSetSnapshot">
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="fetchChildCategories">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchChildCategories">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchChildCategoriesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="CategoryExistsException">
        <soap:fault name="CategoryExistsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="fetchCompiledRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchCompiledRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchCompiledRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException">
        <soap:fault name="RuleEngineRepositoryException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RuleExistsException">
        <soap:fault name="RuleExistsException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RuleSetExistsException">
        <soap:fault name="RuleSetExistsException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
    </wsdl:operation>
    <wsdl:operation name="fetchRuleSetSnapshot">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchRuleSetSnapshot">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchRuleSetSnapshotResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="RuleEngineRepositoryException">
        <soap:fault name="RuleEngineRepositoryException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="generateRuleSet">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="generateRuleSet">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="generateRuleSetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GenerateRuleSetException">
        <soap:fault name="GenerateRuleSetException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createState">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createState">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createStateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="fetchRule">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="fetchRule">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="fetchRuleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RuleRepositoryService">
    <wsdl:port name="RuleRepositoryServicePort" binding="tns:RuleRepositoryServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/RuleRepositoryServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
